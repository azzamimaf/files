import{I as I18nBehavior,D as DeepLinkingBehavior,P as PrefsBehavior,R as RouteObserverBehavior,W as WebUIListenerBehavior,r as routes,a as Router,F as FocusRowBehavior,b as assert,C as CrScrollableBehavior,L as ListPropertyUpdateBehavior,c as recordSettingChange,d as assertInstanceof,g as getDisplayApi,e as IronResizableBehavior,f as DevicePageBrowserProxyImpl,h as PaperRippleBehavior,i as focusWithoutInk,j as LidClosedBehavior,k as IdleBehavior,l as assertNotReached$1,m as RouteOriginBehavior,n as RouteOriginBehaviorImpl,S as StorageSpaceState,o as CrPolicyIndicatorType,N as NoteAppLockScreenSupport,p as CrPolicyPrefBehavior,q as PrefControlBehavior,s as NetworkListenerBehavior,t as getEuicc,u as getPendingESimProfiles,v as getESimProfile,O as OncMojo,w as CrPolicyIndicatorBehavior,H as HTMLEscape,x as getESimProfileProperties,y as getNumESimProfiles,z as CrRadioButtonBehavior,A as IronSelectableBehavior,G as GlobalScrollTargetBehavior,B as BrowserChannel,E as AboutPageBrowserProxyImpl,J as isTargetChannelMoreStable,K as browserChannelToI18nId,U as UpdateStatus,M as LifetimeBrowserProxyImpl,Q as parseHtmlSubset,T as PromiseResolver,V as FingerprintBrowserProxyImpl,X as FingerprintResultType,Y as LockStateBehavior,Z as findAncestor,_ as listenOnce,$ as CrSearchFieldBehavior,a0 as recordSearch,a1 as CrContainerShadowBehavior,a2 as FindShortcutBehavior,a3 as setGlobalScrollTarget,a4 as recordPageFocus,a5 as recordPageBlur,a6 as recordClick,a7 as recordNavigation}from"./shared.rollup.js";export{E as AboutPageBrowserProxyImpl,B as BrowserChannel,a9 as CrSettingsPrefs,ab as DevicePageBrowserProxy,f as DevicePageBrowserProxyImpl,V as FingerprintBrowserProxyImpl,X as FingerprintResultType,k as IdleBehavior,j as LidClosedBehavior,a8 as LifetimeBrowserProxy,M as LifetimeBrowserProxyImpl,ae as ManageA11yPageBrowserProxy,af as ManageA11yPageBrowserProxyImpl,N as NoteAppLockScreenSupport,ag as OsA11yPageBrowserProxy,ah as OsA11yPageBrowserProxyImpl,ao as OsResetBrowserProxyImpl,am as PeripheralDataAccessBrowserProxy,an as PeripheralDataAccessBrowserProxyImpl,aa as Route,a as Router,S as StorageSpaceState,ai as SwitchAccessSubpageBrowserProxy,aj as SwitchAccessSubpageBrowserProxyImpl,ak as TtsSubpageBrowserProxy,al as TtsSubpageBrowserProxyImpl,U as UpdateStatus,a6 as recordClick,a7 as recordNavigation,a5 as recordPageBlur,a4 as recordPageFocus,a0 as recordSearch,c as recordSettingChange,r as routes,ac as setDisplayApiForTesting,ad as setUserActionRecorderForTesting}from"./shared.rollup.js";import{Polymer,html,afterNextRender,flush,Base,dom,beforeNextRender,Templatizer,DomIf,templatize,mixinBehaviors,PolymerElement}from"chrome://resources/polymer/v3_0/polymer/polymer_bundled.min.js";import{addSingletonGetter,addWebUIListener,sendWithPromise,isIOS,isAndroid}from"chrome://resources/js/cr.m.js";import{loadTimeData as loadTimeData$1}from"chrome://resources/js/load_time_data.m.js";import"chrome://resources/mojo/mojo/public/js/mojo_bindings_lite.js";import"chrome://os-settings/strings.m.js";import{getCellularSetupRemote,getESimManagerRemote,observeESimManager}from"chrome://resources/cr_components/chromeos/cellular_setup/mojo_interface_provider.m.js";import{MojoInterfaceProviderImpl}from"chrome://resources/cr_components/chromeos/network/mojo_interface_provider.m.js";import"chrome://resources/mojo/services/network/public/mojom/ip_address.mojom-lite.js";import"chrome://resources/mojo/chromeos/services/network_config/public/mojom/network_types.mojom-lite.js";import"chrome://resources/mojo/mojo/public/mojom/base/time.mojom-lite.js";import"chrome://resources/mojo/chromeos/services/network_config/public/mojom/cros_network_config.mojom-lite.js";import"chrome://resources/mojo/url/mojom/url.mojom-lite.js";import"../../../../../../../../../../../../../../../mojo/nearby_share_settings.mojom-lite.js";import"chrome://resources/mojo/mojo/public/mojom/base/unguessable_token.mojom-lite.js";import"../../../../../../../../../../../../../../../mojo/nearby_share_target_types.mojom-lite.js";import"../../../../../../../../../../../../../../../mojo/nearby_share_share_type.mojom-lite.js";import"../../../../../../../../../../../../../../../mojo/nearby_share.mojom-lite.js";import"chrome://resources/mojo/skia/public/mojom/image_info.mojom-lite.js";import"chrome://resources/mojo/skia/public/mojom/bitmap.mojom-lite.js";import"../../../../../../../../../../../../../../../app-management/file_path.mojom-lite.js";import"../../../../../../../../../../../../../../../app-management/image.mojom-lite.js";import"../../../../../../../../../../../../../../../app-management/types.mojom-lite.js";import"../../../../../../../../../../../../../../../app-management/app_management.mojom-lite.js";import"chrome://resources/mojo/mojo/public/mojom/base/string16.mojom-lite.js";// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const AmbientModeTopicSource={UNKNOWN:-1,GOOGLE_PHOTOS:0,ART_GALLERY:1};const AmbientModeTemperatureUnit={UNKNOWN:"unknown",FAHRENHEIT:"fahrenheit",CELSIUS:"celsius"};let AmbientModeAlbum;// Copyright 2020 The Chromium Authors. All rights reserved.
class AmbientModeBrowserProxyImpl{requestSettings(){chrome.send("requestSettings")}requestAlbums(topicSource){chrome.send("requestAlbums",[topicSource])}setSelectedTemperatureUnit(temperatureUnit){chrome.send("setSelectedTemperatureUnit",[temperatureUnit])}setSelectedAlbums(settings){chrome.send("setSelectedAlbums",[settings])}}addSingletonGetter(AmbientModeBrowserProxyImpl);// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared cr-shared-style iron-flex
        cr-radio-button-style" scope="topic-source-item">:host {
  display: inline-flex;
}

#rowContainer {
  height: 100%;
        padding-inline-end: var(--cr-icon-ripple-padding);
        padding-inline-start: var(--cr-section-padding);
}

</style>

    <div id="rowContainer" class="layout horizontal center flex" on-click="onItemClick_">
      <!-- This item behaviors similar to a radio button and reuses disc and
           label style in cr-radio-button-style. -->
      <div class="disc-wrapper" aria-hidden="true">
        <div class="disc-border"></div>
        <div class="disc"></div>
      </div>

      <div id="labelWrapper" aria-hidden="true">
        <div>[[getItemName_(item)]]</div>
        <div class="cr-secondary-text">
          [[getItemDescription_(item, hasGooglePhotosAlbums)]]
        </div>
      </div>

      <cr-icon-button class="subpage-arrow" id="subpage-button" on-click="onSubpageArrowClick_" tabindex$="[[tabindex]]" aria-label$="[[buttonLabel]]" disabled$="[[disabled]]">
      </cr-icon-button>
    </div>
<!--_html_template_end_-->`,is:"topic-source-item",behaviors:[I18nBehavior],properties:{checked:{type:Boolean,value:false,reflectToAttribute:true},hasGooglePhotosAlbums:{type:Boolean,value:false},item:Object,buttonLabel:{type:String,computed:"getButtonLabel_(item)"},ariaLabel:{type:String,computed:"computeAriaLabel_(item, checked)",reflectToAttribute:true}},attached(){this.listen(this,"keydown","onKeydown_")},detached(){this.unlisten(this,"keydown","onKeydown_")},getItemName_(){if(this.item===AmbientModeTopicSource.GOOGLE_PHOTOS){return this.i18n("ambientModeTopicSourceGooglePhotos")}else if(this.item===AmbientModeTopicSource.ART_GALLERY){return this.i18n("ambientModeTopicSourceArtGallery")}else{return""}},getItemDescription_(){if(this.item===AmbientModeTopicSource.GOOGLE_PHOTOS){if(this.hasGooglePhotosAlbums){return this.i18n("ambientModeTopicSourceGooglePhotosDescription")}else{return this.i18n("ambientModeTopicSourceGooglePhotosDescriptionNoAlbum")}}else if(this.item===AmbientModeTopicSource.ART_GALLERY){return this.i18n("ambientModeTopicSourceArtGalleryDescription")}else{return""}},getButtonLabel_(){return this.i18n("ambientModeTopicSourceSubpage",this.getItemName_())},computeAriaLabel_(){if(this.checked){return this.i18n("ambientModeTopicSourceSelectedRow",this.getItemName_(),this.getItemDescription_())}return this.i18n("ambientModeTopicSourceUnselectedRow",this.getItemName_(),this.getItemDescription_())},onKeydown_(event){if(event.key!=="Enter"){return}this.fireShowAlbums_();event.preventDefault();event.stopPropagation()},onItemClick_(event){this.fireShowAlbums_();event.stopPropagation()},onSubpageArrowClick_(event){this.fireShowAlbums_();event.stopPropagation()},fireShowAlbums_(){this.fire("show-albums",this.item)}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared cr-shared-style iron-flex" scope="topic-source-list">#topicSourceTitle {
  padding-bottom: 16px;
        padding-top: 16px;
}

topic-source-item {
  align-items: center;
        height: 64px;
}

iron-list > *:not(:first-of-type) {
  border-top: var(--cr-separator-line);
}

iron-list > :focus {
  background-color: var(--cr-focused-item-color);
}

</style>
    <h2 id="topicSourceTitle" aria-hidden="true">
      Background
    </h2>

    <iron-list id="topicSourceList" items="[[topicSources]]">
      <template>
        <topic-source-item item="[[item]]" disabled$="[[disabled]]" tabindex$="[[computeTabIndex_(tabIndex, disabled)]]" has-google-photos-albums="[[hasGooglePhotosAlbums]]" checked="[[isSelected_(item, selectedTopicSource)]]">
        </topic-source-item>
      </template>
    </iron-list>
<!--_html_template_end_-->`,is:"topic-source-list",properties:{topicSources:{type:Array,value:[]},selectedTopicSource:{type:AmbientModeTopicSource,value:AmbientModeTopicSource.UNKNOWN},hasGooglePhotosAlbums:Boolean,disabled:Boolean},isSelected_(topic_source){return this.selectedTopicSource===topic_source},computeTabIndex_(tabIndex,disabled){if(disabled){return-1}return tabIndex}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared iron-flex" scope="settings-ambient-mode-page">#ambientModeEnable {
  border-bottom: var(--cr-separator-line);
        border-top: var(--cr-separator-line);
}

#pageDescription {
  padding-inline-end: var(--cr-section-padding);
        padding-inline-start: var(--cr-section-padding);
        padding-top: 0;
}

#topicSourceListDiv {
  border-bottom: var(--cr-separator-line);
}

#topicSourceListDiv > *, #weatherDiv > * {
  padding-inline-end: calc(var(--cr-section-padding) -
            var(--cr-icon-ripple-padding));
        padding-inline-start: var(--cr-section-padding);
}

#weatherTitle {
  padding-bottom: 16px;
        padding-top: 16px;
}

.list-item {
  padding-inline-start: var(--cr-section-padding);
}

paper-spinner-lite {
  display: block;
        height: 28px;
        margin: 100px auto;
        width: 28px;
}

</style>
    <h2 id="pageDescription">
      When your screen is idle, show photos, time, weather, and media info. Enabling screen saver will keep your display on while charging.
    </h2>

    <settings-toggle-button id="ambientModeEnable" class="primary-toggle" pref="{{prefs.settings.ambient_mode.enabled}}" label="[[getAmbientModeOnOffLabel_(
            prefs.settings.ambient_mode.enabled.value)]]" deep-link-focus-id$="[[Setting.kAmbientModeOnOff]]">
    </settings-toggle-button>

    <paper-spinner-lite active="[[!showSettings_]]" hidden="[[showSettings_]]">
    </paper-spinner-lite>

    <template is="dom-if" if="[[showSettings_]]">
      <div id="topicSourceListDiv" class="layout vertical flex" aria-hidden="[[disableSettings_]]">
        <topic-source-list topic-sources="[[topicSources_]]" selected-topic-source="[[selectedTopicSource_]]" has-google-photos-albums="[[hasGooglePhotosAlbums_]]" disabled="[[disableSettings_]]">
        </topic-source-list>
      </div>
      <div id="weatherDiv" class="layout vertical flex" aria-hidden="[[disableSettings_]]">
        <h2 id="weatherTitle" aria-hidden="true">
          Weather
        </h2>
        <div class="list-frame">
          <cr-radio-group id="ambientTemperatureUnit" selected="{{selectedTemperatureUnit_}}" disabled$="[[disableSettings_]]" aria-labelledby="weatherTitle">
            <cr-radio-button name="[[AmbientModeTemperatureUnit_.FAHRENHEIT]]" class="list-item underbar" label="Fahrenheit">
            </cr-radio-button>
            <cr-radio-button name="[[AmbientModeTemperatureUnit_.CELSIUS]]" class="list-item" label="Celsius">
            </cr-radio-button>
          </cr-radio-group>
        </div>
      </div>
    </template>
<!--_html_template_end_-->`,is:"settings-ambient-mode-page",behaviors:[DeepLinkingBehavior,I18nBehavior,PrefsBehavior,RouteObserverBehavior,WebUIListenerBehavior],properties:{prefs:Object,AmbientModeTopicSource:{type:Object,value:AmbientModeTopicSource},AmbientModeTemperatureUnit_:{type:Object,value:AmbientModeTemperatureUnit},topicSources_:{type:Array,value:[AmbientModeTopicSource.GOOGLE_PHOTOS,AmbientModeTopicSource.ART_GALLERY]},selectedTopicSource_:{type:AmbientModeTopicSource,value:AmbientModeTopicSource.UNKNOWN},hasGooglePhotosAlbums_:Boolean,selectedTemperatureUnit_:{type:AmbientModeTemperatureUnit,value:AmbientModeTemperatureUnit.UNKNOWN,observer:"onSelectedTemperatureUnitChanged_"},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kAmbientModeOnOff,chromeos.settings.mojom.Setting.kAmbientModeSource])},showSettings_:{type:Boolean,computed:"computeShowSettings_("+"selectedTopicSource_, selectedTemperatureUnit_)"},disableSettings_:{type:Boolean,computed:"computeDisableSettings_(prefs.settings.ambient_mode.*)"}},listeners:{"show-albums":"onShowAlbums_"},browserProxy_:null,created(){this.browserProxy_=AmbientModeBrowserProxyImpl.getInstance()},ready(){this.addWebUIListener("topic-source-changed",(topicSourceItem=>{this.selectedTopicSource_=topicSourceItem.topicSource;this.hasGooglePhotosAlbums_=topicSourceItem.hasGooglePhotosAlbums}));this.addWebUIListener("temperature-unit-changed",(temperatureUnit=>{this.selectedTemperatureUnit_=temperatureUnit}))},beforeDeepLinkAttempt(settingId){if(settingId!==chromeos.settings.mojom.Setting.kAmbientModeSource){return true}afterNextRender(this,(()=>{flush();const topicList=this.$$("topic-source-list");const listItem=topicList&&topicList.$$("topic-source-item");if(listItem){this.showDeepLinkElement(listItem);return}console.warn(`Element with deep link id ${settingId} not focusable.`)}));return false},currentRouteChanged(currentRoute){if(currentRoute!==routes.AMBIENT_MODE){return}this.browserProxy_.requestSettings();this.attemptDeepLink()},getAmbientModeOnOffLabel_(toggleValue){return this.i18n(toggleValue?"ambientModeOn":"ambientModeOff")},isValidTemperatureUnit_(temperatureUnit){return temperatureUnit===AmbientModeTemperatureUnit.FAHRENHEIT||temperatureUnit===AmbientModeTemperatureUnit.CELSIUS},isValidTopicSource_(topicSource){return topicSource!==AmbientModeTopicSource.UNKNOWN},onSelectedTemperatureUnitChanged_(newValue,oldValue){if(newValue&&newValue!==AmbientModeTemperatureUnit.UNKNOWN&&newValue!==oldValue){this.browserProxy_.setSelectedTemperatureUnit(newValue)}},onShowAlbums_(event){const params=new URLSearchParams;params.append("topicSource",JSON.stringify(event.detail));Router.getInstance().navigateTo(routes.AMBIENT_MODE_PHOTOS,params)},computeShowSettings_(){return this.isValidTopicSource_(this.selectedTopicSource_)&&this.isValidTemperatureUnit_(this.selectedTemperatureUnit_)},computeDisableSettings_(){return!this.getPref("settings.ambient_mode.enabled").value}});// Copyright 2015 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="bluetooth-device-list-item">.name[connected] {
  font-weight: 500;
}

.state[connected] {
  color: var(--google-green-500);
}

</style>
<div focus-row-container="">
  <div class="list-item" focus-row-control="" focus-type="rowWrapper" aria-label$="[[ariaLabel]]" role="button" selectable="" on-keydown="onKeyDown_" on-click="onClick_">
    <iron-icon id="deviceIcon" icon="[[getDeviceIcon_(device)]]">
    </iron-icon>
    <div class="middle">
      <div class="name" connected$="[[device.connected]]" aria-hidden="true">
        [[getDeviceName_(device)]]
      </div>
      <div class="state secondary" connected$="[[device.connected]]" hidden$="[[!hasConnectionStatusText_(device)]]">
        [[getConnectionStatusText_(device)]]
      </div>
    </div>
    <div hidden$="[[!device.paired]]">
      <cr-icon-button id="menuButton" class="icon-more-vert" focus-row-control="" focus-type="menuButton" on-click="onMenuButtonTap_" tabindex$="[[tabindex]]" title="More actions" on-keydown="ignoreEnterKey_"></cr-icon-button>
    </div>
  </div>
</div>
<cr-action-menu id="dotsMenu" role-description="Menu">
  <button class="dropdown-item" on-click="onConnectActionTap_">
    [[getConnectActionText_(device.connected)]]
  </button>
  <button class="dropdown-item" on-click="onRemoveTap_">
    Remove from list
  </button>
</cr-action-menu>
<!--_html_template_end_-->`,is:"bluetooth-device-list-item",behaviors:[I18nBehavior,FocusRowBehavior],properties:{device:{type:Object},ariaLabel:{type:String,notify:true,computed:"getAriaLabel_(device)"}},hostAttributes:{role:"button"},ignoreEnterKey_(event){if(event.key==="Enter"){event.stopPropagation()}},tryConnect_(){if(!this.isDisconnected_(this.device)){return}this.fire("device-event",{action:"connect",device:this.device})},onClick_(){this.tryConnect_()},onKeyDown_(e){if(e.key==="Enter"||e.key===" "){this.tryConnect_();e.preventDefault()}},onMenuButtonTap_(event){const button=event.target;const menu=this.$.dotsMenu;menu.showAt(button);event.stopPropagation()},onConnectActionTap_(){const action=this.isDisconnected_(this.device)?"connect":"disconnect";this.fire("device-event",{action:action,device:this.device});this.$.dotsMenu.close()},onRemoveTap_(){this.fire("device-event",{action:"remove",device:this.device});this.$.dotsMenu.close()},getConnectActionText_(connected){return this.i18n(connected?"bluetoothDisconnect":"bluetoothConnect")},getDeviceName_(device){return device.name||device.address},getAriaLabel_(device){const deviceName=this.getDeviceName_(device);const deviceStatus=this.getConnectionStatusText_(device);const a11ydeviceNameAndType=device.type?this.i18n("bluetoothDeviceType_"+device.type,deviceName):this.i18n("bluetoothDeviceType_unknown",deviceName);return this.i18n("bluetoothDeviceWithConnectionStatus",a11ydeviceNameAndType,deviceStatus)},getConnectionStatusText_(device){if(!this.hasConnectionStatusText_(device)){return""}if(device.connecting){return this.i18n("bluetoothConnecting")}if(!device.connected){return this.i18n("bluetoothNotConnected")}return device.batteryPercentage!==undefined?this.i18n("bluetoothConnectedWithBattery",device.batteryPercentage):this.i18n("bluetoothConnected")},hasConnectionStatusText_(device){return!!(device.paired||device.connecting)},isDisconnected_(device){return!device.connected&&!device.connecting},getDeviceIcon_(device){switch(device.type){case"computer":return"cr:computer";case"phone":return"os-settings:smartphone";case"audio":case"carAudio":return"os-settings:headset";case"video":return"cr:videocam";case"joystick":case"gamepad":return"os-settings:gamepad";case"keyboard":case"keyboardMouseCombo":return"os-settings:keyboard";case"tablet":return"os-settings:tablet";case"mouse":return"os-settings:mouse";default:return device.connected?"os-settings:bluetooth-connected":"cr:bluetooth"}}});// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const PairingEventType=chrome.bluetoothPrivate.PairingEventType;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-hidden-style iron-flex" scope="bluetooth-dialog">#pairing {
  margin-bottom: 10px;
}

#pairing cr-input {
  text-align: center;
}

#pinDiv {
  margin-top: 10px;
}

.dialog-message {
  margin-bottom: 10px;
}

div.contents {
  height: 250px;
}

span.display {
  border: 1px solid #ccc;
        border-radius: 4px;
        box-shadow: 0 0 0 1px #222;
        color: #222;
        font-size: 123.08%;  
        height: 38px;
        line-height: 38px;
        margin: 0 5px;
        padding: 0 15px;
        text-align: center;
        text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
}

span.display.next {
  background: rgb(77, 144, 254);
        border: 2px solid rgb(77, 144, 254);
        box-shadow: none;
        color: #fff;
}

span.display.untyped {
  border: 1px solid #d4d4d4;
        box-shadow: 0 0 0 1px #888;
        color: #666;
}

span.confirm {
  color: #999;
        font-size: 153.85%;  
        font-weight: 600;  
        margin: 0 20px;
}

cr-button.cancel-button {
  margin: 0;
}

cr-button.action-button {
  margin-inline-start: 8px;
}

</style>
    <!-- TODO(stevenjb/dschuyler): Find a solution to support i18n{} here -->
    <cr-dialog id="dialog" no-cancel="[[noCancel]]" close-text="[[i18n('close')]]" on-cancel="onDialogCanceled_" on-closed="onDialogCanceled_" exportparts="dialog">
      <div slot="title">[[dialogTitle]]</div>
      <div slot="body">
        <div class="contents layout vertical center center-justified" role="alert">
          <template is="dom-if" if="[[!errorMessage_]]">
            <div id="pairing" class="layout vertical center center-justified">
              <div class="dialog-message">
                [[getMessage_(pairingDevice, pairingEvent_)]]
              </div>
              <div hidden$="[[!showEnterPincode_(pairingEvent_)]]">
                <cr-input id="pincode" minlength="1" maxlength="16" type="text" auto-validate="" value="{{pinOrPass_}}">
                </cr-input>
              </div>
              <div hidden$="[[!showEnterPasskey_(pairingEvent_)]]">
                <cr-input id="passkey" minlength="6" maxlength="6" type="text" auto-validate="" value="{{pinOrPass_}}">
                </cr-input>
              </div>
              <div id="pinDiv" class="layout horizontal center center-justified" hidden="[[!showDisplayPassOrPin_(pairingEvent_)]]">
                <template is="dom-repeat" items="[[digits_]]">
                  <span class$="[[getPinClass_(index, pairingEvent_)]]">
                    [[getPinDigit_(index, pairingEvent_)]]
                  </span>
                </template>
                <span class$="[[getPinClass_(-1, pairingEvent_)]]" hidden="[[showAcceptReject_(pairingEvent_)]]">
                  [[i18n('bluetoothEnterKey')]]
                </span>
              </div>
            </div>
          </template>
          <template is="dom-if" if="[[errorMessage_]]">
            <div class="layout vertical center center-justified">
              <div class="dialog-message">[[errorMessage_]]</div>
            </div>
          </template>
        </div>
      </div>
      <div slot="button-container">
        <template is="dom-if" if="[[!errorMessage_]]">
          <cr-button hidden$="[[showDismiss_(pairingDevice, pairingEvent_)]]" class="cancel-button" on-click="onCancelTap_">
           [[i18n('cancel')]]
          </cr-button>
          <cr-button hidden$="[[!showAcceptReject_(pairingEvent_)]]" id="accept-button" class="action-button" on-click="onAcceptTap_">
            [[i18n('bluetoothAccept')]]
          </cr-button>
          <cr-button hidden$="[[!showAcceptReject_(pairingEvent_)]]" class="action-button" on-click="onRejectTap_">
            [[i18n('bluetoothReject')]]
          </cr-button>
          <cr-button hidden$="[[!showConnect_(pairingEvent_)]]" disabled="[[!enableConnect_(pairingEvent_, pinOrPass_)]]" class="action-button" on-click="onConnectTap_">
            [[i18n('bluetoothPair')]]
          </cr-button>
          <cr-button hidden$="[[!showDismiss_(pairingDevice, pairingEvent_)]]" class="action-button" on-click="close">
            [[i18n('ok')]]
          </cr-button>
        </template>
        <template is="dom-if" if="[[errorMessage_]]">
          <cr-button on-click="close">[[i18n('ok')]]</cr-button>
        </template>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"bluetooth-dialog",behaviors:[I18nBehavior],properties:{bluetooth:{type:Object,value:chrome.bluetooth},bluetoothPrivate:{type:Object,value:chrome.bluetoothPrivate},noCancel:Boolean,dialogTitle:String,pairingDevice:Object,pairingEvent_:{type:Object,value:null},errorMessage_:String,pinOrPass_:String,digits_:{type:Array,readOnly:true,value:[0,1,2,3,4,5]},connectionAttemptStartTimestampMs_:{type:Number,value:null},pairingUserAuthAttemptStartTimestampMs_:{type:Number,value:null},pairingUserAuthAttemptFinishTimestampMs_:{type:Number,value:null}},observers:["dialogUpdated_(errorMessage_, pairingEvent_)","pairingChanged_(pairingDevice, pairingEvent_)"],bluetoothPrivateOnPairingListener_:null,bluetoothPrivateDeviceAddressChangedListener_:null,bluetoothDeviceChangedListener_:null,open(){this.startPairing();this.pinOrPass_="";this.getDialog_().showModal();this.itemWasFocused_=false},close(){this.endPairing();const dialog=this.getDialog_();if(dialog.open){dialog.close()}},endConnectionAttempt(device,wasPairing,lastError,result){if(wasPairing){const transport=device.transport?device.transport:chrome.bluetooth.Transport.INVALID;const connectResult=lastError?undefined:result;const pairingDurationMs=this.getPairingDurationMs_();if(pairingDurationMs){chrome.bluetoothPrivate.recordPairing(transport,pairingDurationMs,connectResult)}}let error;if(lastError){error=lastError.message}else{switch(result){case chrome.bluetoothPrivate.ConnectResultType.IN_PROGRESS:case chrome.bluetoothPrivate.ConnectResultType.ALREADY_CONNECTED:case chrome.bluetoothPrivate.ConnectResultType.AUTH_CANCELED:case chrome.bluetoothPrivate.ConnectResultType.SUCCESS:this.errorMessage_="";return false;default:error=result}}this.endPairing();if(!wasPairing&&!this.getDialog_().open&&result===chrome.bluetoothPrivate.ConnectResultType.FAILED){return false}const name=device.name||device.address;let id="bluetooth_connect_"+error;if(!this.i18nExists(id)){console.error("Unexpected error connecting to:",name,"error:",error,"result:",result);id="bluetooth_connect_failed"}this.errorMessage_=this.i18n(id,name);return true},dialogUpdated_(){if(this.showEnterPincode_()){this.$$("#pincode").focus()}else if(this.showEnterPasskey_()){this.$$("#passkey").focus()}else if(this.showAcceptReject_()){this.$$("#accept-button").focus()}},getDialog_(){return this.$.dialog},onCancelTap_(){this.getDialog_().cancel()},onDialogCanceled_(){if(!this.errorMessage_){this.sendResponse_(chrome.bluetoothPrivate.PairingResponse.CANCEL)}this.endPairing()},startPairing(){if(!this.bluetoothPrivateOnPairingListener_){this.bluetoothPrivateOnPairingListener_=this.onBluetoothPrivateOnPairing_.bind(this);this.bluetoothPrivate.onPairing.addListener(this.bluetoothPrivateOnPairingListener_);this.connectionAttemptStartTimestampMs_=Date.now()}if(!this.bluetoothPrivateDeviceAddressChangedListener_){this.bluetoothPrivateDeviceAddressChangedListener_=this.onBluetoothPrivateDeviceAddressChanged_.bind(this);this.bluetoothPrivate.onDeviceAddressChanged.addListener(this.bluetoothPrivateDeviceAddressChangedListener_)}if(!this.bluetoothDeviceChangedListener_){this.bluetoothDeviceChangedListener_=this.onBluetoothDeviceChanged_.bind(this);this.bluetooth.onDeviceChanged.addListener(this.bluetoothDeviceChangedListener_)}},endPairing(){if(this.bluetoothPrivateOnPairingListener_){this.bluetoothPrivate.onPairing.removeListener(this.bluetoothPrivateOnPairingListener_);this.bluetoothPrivateOnPairingListener_=null}if(this.bluetoothPrivateDeviceAddressChangedListener_){this.bluetoothPrivate.onDeviceAddressChanged.removeListener(this.bluetoothPrivateDeviceAddressChangedListener_);this.bluetoothPrivateDeviceAddressChangedListener_=null}if(this.bluetoothDeviceChangedListener_){this.bluetooth.onDeviceChanged.removeListener(this.bluetoothDeviceChangedListener_);this.bluetoothDeviceChangedListener_=null}this.pairingEvent_=null},onBluetoothPrivateOnPairing_(event){if(!this.pairingDevice||event.device.address!==this.pairingDevice.address){return}if(event.pairing===PairingEventType.KEYS_ENTERED&&event.passkey===undefined&&this.pairingEvent_){event.passkey=this.pairingEvent_.passkey}this.pairingEvent_=event},onBluetoothPrivateDeviceAddressChanged_(device,oldAddress){if(!this.pairingDevice||oldAddress!==this.pairingDevice.address){return}this.pairingDevice=device},onBluetoothDeviceChanged_(device){if(!this.pairingDevice||device.address!==this.pairingDevice.address){return}this.pairingDevice=device},pairingChanged_(){if(this.pairingDevice===undefined){return}if(!this.pairingUserAuthAttemptStartTimestampMs_&&!!this.pairingEvent_&&(this.pairingEvent_.pairing===PairingEventType.REQUEST_PINCODE||this.pairingEvent_.pairing===PairingEventType.REQUEST_PASSKEY||this.pairingEvent_.pairing===PairingEventType.DISPLAY_PINCODE||this.pairingEvent_.pairing===PairingEventType.DISPLAY_PASSKEY||this.pairingEvent_.pairing===PairingEventType.CONFIRM_PASSKEY||this.pairingEvent_.pairing===PairingEventType.KEYS_ENTERED)){this.pairingUserAuthAttemptStartTimestampMs_=Date.now()}if(this.pairingDevice.paired&&!this.pairingDevice.connecting&&this.pairingDevice.connected){if(this.pairingUserAuthAttemptStartTimestampMs_){this.pairingUserAuthAttemptFinishTimestampMs_=Date.now()}this.close();return}this.errorMessage_="";this.pinOrPass_=""},getMessage_(){let message;if(!this.pairingEvent_){message="bluetoothStartConnecting"}else{message=this.getEventDesc_(this.pairingEvent_.pairing)}let pairingDeviceName="";if(this.pairingDevice&&this.pairingDevice.name){pairingDeviceName=this.pairingDevice.name}return this.i18n(message,pairingDeviceName)},showEnterPincode_(){return!!this.pairingEvent_&&this.pairingEvent_.pairing===PairingEventType.REQUEST_PINCODE},showEnterPasskey_(){return!!this.pairingEvent_&&this.pairingEvent_.pairing===PairingEventType.REQUEST_PASSKEY},showDisplayPassOrPin_(){if(!this.pairingEvent_){return false}const pairing=this.pairingEvent_.pairing;return pairing===PairingEventType.DISPLAY_PINCODE||pairing===PairingEventType.DISPLAY_PASSKEY||pairing===PairingEventType.CONFIRM_PASSKEY||pairing===PairingEventType.KEYS_ENTERED},showAcceptReject_(){return!!this.pairingEvent_&&this.pairingEvent_.pairing===PairingEventType.CONFIRM_PASSKEY},showConnect_(){if(!this.pairingEvent_){return false}const pairing=this.pairingEvent_.pairing;return pairing===PairingEventType.REQUEST_PINCODE||pairing===PairingEventType.REQUEST_PASSKEY},enableConnect_(){if(!this.showConnect_()){return false}const inputId=this.pairingEvent_.pairing===PairingEventType.REQUEST_PINCODE?"#pincode":"#passkey";const crInput=this.$$(inputId);assert(crInput);const value=crInput.value;return!!value&&crInput.validate()},showDismiss_(){return!!this.pairingDevice&&this.pairingDevice.paired||!!this.pairingEvent_&&this.pairingEvent_.pairing===PairingEventType.COMPLETE},onAcceptTap_(){this.sendResponse_(chrome.bluetoothPrivate.PairingResponse.CONFIRM)},onConnectTap_(){this.sendResponse_(chrome.bluetoothPrivate.PairingResponse.CONFIRM)},onRejectTap_(){this.sendResponse_(chrome.bluetoothPrivate.PairingResponse.REJECT)},sendResponse_(response){if(!this.pairingDevice){return}const options={device:this.pairingDevice,response:response};if(response===chrome.bluetoothPrivate.PairingResponse.CONFIRM){const pairing=this.pairingEvent_.pairing;if(pairing===PairingEventType.REQUEST_PINCODE){options.pincode=this.$$("#pincode").value}else if(pairing===PairingEventType.REQUEST_PASSKEY){options.passkey=parseInt(this.$$("#passkey").value,10)}}this.bluetoothPrivate.setPairingResponse(options,(()=>{if(chrome.runtime.lastError){console.error("Error setting pairing response: "+options.device.name+": Response: "+options.response+": Error: "+chrome.runtime.lastError.message)}this.close()}));this.fire("response",options)},getEventDesc_(eventType){assert(eventType);if(eventType===PairingEventType.COMPLETE||eventType===PairingEventType.REQUEST_AUTHORIZATION){return"bluetoothStartConnecting"}return"bluetooth_"+eventType},getPinDigit_(index){if(!this.pairingEvent_){return""}let digit="0";const pairing=this.pairingEvent_.pairing;if(pairing===PairingEventType.DISPLAY_PINCODE&&this.pairingEvent_.pincode&&index<this.pairingEvent_.pincode.length){digit=this.pairingEvent_.pincode[index]}else if(this.pairingEvent_.passkey&&(pairing===PairingEventType.DISPLAY_PASSKEY||pairing===PairingEventType.KEYS_ENTERED||pairing===PairingEventType.CONFIRM_PASSKEY)){const passkeyString=String(this.pairingEvent_.passkey).padStart(this.digits_.length,"0");digit=passkeyString[index]}return digit},getPinClass_(index){if(!this.pairingEvent_){return""}if(this.pairingEvent_.pairing===PairingEventType.CONFIRM_PASSKEY){return"confirm"}let cssClass="display";if(this.pairingEvent_.pairing===PairingEventType.DISPLAY_PASSKEY){if(index===0){cssClass+=" next"}else{cssClass+=" untyped"}}else if(this.pairingEvent_.pairing===PairingEventType.KEYS_ENTERED&&this.pairingEvent_.enteredKey){const enteredKey=this.pairingEvent_.enteredKey;const lastKey=this.digits_.length;if(index===-1&&enteredKey>lastKey||index+1===enteredKey){cssClass+=" next"}else if(index>enteredKey){cssClass+=" untyped"}}return cssClass},getPairingDurationMs_(){let unadjustedPairingDurationMs=0;if(this.connectionAttemptStartTimestampMs_){unadjustedPairingDurationMs=Date.now()-this.connectionAttemptStartTimestampMs_}else{console.error("No connection start timestamp present.")}let userAuthActionDurationMs=0;if(this.pairingUserAuthAttemptStartTimestampMs_){if(this.pairingUserAuthAttemptFinishTimestampMs_){userAuthActionDurationMs=this.pairingUserAuthAttemptFinishTimestampMs_-this.pairingUserAuthAttemptStartTimestampMs_}else{console.warn("No auth attempt finish timestamp present to"+" complement start timestamp.");return null}}this.connectionAttemptStartTimestampMs_=null;this.pairingUserAuthAttemptStartTimestampMs_=null;this.pairingUserAuthAttemptFinishTimestampMs_=null;return unadjustedPairingDurationMs-userAuthActionDurationMs}});// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const MAX_NUMBER_DEVICE_SHOWN=50;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared iron-flex" scope="settings-bluetooth-subpage">.container {
  display: flex;
    flex-direction: column;
    min-height: 10px;
    overflow-y: auto;
}

paper-spinner-lite {
  height: var(--cr-icon-size);
    margin-block-start: 18px; 
    width: var(--cr-icon-size);
}

#onOff {
  font-weight: 500;
}

#onOff[on] {
  color: var(--cr-toggle-color);
}

:host([state-change-in-progress]) #enableBluetooth {
  cursor: initial;
    opacity: var(--cr-disabled-opacity);
    pointer-events: none;
}

</style>
<div id="enableBluetooth" class="cr-row first" on-click="onEnableTap_" actionable="">
  <div id="onOff" class="flex cr-padded-text" on$="[[bluetoothToggleState]]" aria-hidden="true">
    [[getOnOffString_(bluetoothToggleState,
      'On', 'Off')]]
  </div>
  <cr-toggle id="enableToggle" checked="{{bluetoothToggleState}}" disabled$="[[!isAdapterAvailable_(adapterState)]]" aria-label="Bluetooth enable" deep-link-focus-id$="[[Setting.kBluetoothOnOff]]">
  </cr-toggle>
</div>
<!-- Paired device list -->
<div class="cr-row first" hidden="[[!bluetoothToggleState]]">
  <h2 class="flex">Paired devices</h2>
</div>
<div id="noPairedDevices" class="list-frame cr-padded-text" hidden="[[!showNoDevices_(bluetoothToggleState, pairedDeviceList_,
        pairedDeviceList_.splices)]]">
  No paired devices
</div>
<div id="pairedContainer" class="container list-frame" scrollable="" on-device-event="onDeviceEvent_" hidden="[[!showDevices_(bluetoothToggleState, pairedDeviceList_,
        pairedDeviceList_.splices)]]">
  <iron-list id="pairedDevices" items="[[pairedDeviceList_]]" scroll-target="pairedContainer" class="cr-separators" preserve-focus="">
    <template>
      <bluetooth-device-list-item actionable="" device="[[item]]" first$="[[!index]]" tabindex$="[[tabIndex]]" focus-row-index="[[index]]" iron-list-tab-index="[[tabIndex]]" last-focused="{{lastFocused_}}" list-blurred="{{listBlurred_}}" deep-link-focus-id$="[[Setting.kBluetoothConnectToDevice]]
              [[Setting.kBluetoothDisconnectFromDevice]]
              [[Setting.kBluetoothUnpairDevice]]">
      </bluetooth-device-list-item>
    </template>
  </iron-list>
</div>
<!-- Unpaired device list -->
<div class="cr-row first" hidden="[[!bluetoothToggleState]]">
  <h2 class="flex">Unpaired devices</h2>
  <paper-spinner-lite active="[[showSpinner_]]">
  </paper-spinner-lite>
</div>
<div id="noUnpairedDevices" class="list-frame cr-padded-text" hidden="[[!showNoDevices_(bluetoothToggleState, unpairedDeviceList_,
        unpairedDeviceList_.splices)]]">
  No Bluetooth devices found
</div>
<div id="unpairedContainer" class="container list-frame" scrollable="" on-device-event="onDeviceEvent_" hidden="[[!showDevices_(bluetoothToggleState, unpairedDeviceList_,
        unpairedDeviceList_.splices)]]">
  <iron-list id="unpairedDevices" class="cr-separators" preserve-focus="" items="[[unpairedDeviceList_]]" scroll-target="unpairedContainer">
    <template>
      <bluetooth-device-list-item actionable="" device="[[item]]" first$="[[!index]]" tabindex$="[[tabIndex]]" deep-link-focus-id$="[[Setting.kBluetoothPairDevice]]">
      </bluetooth-device-list-item>
    </template>
  </iron-list>
</div>
<bluetooth-dialog id="deviceDialog" bluetooth="[[bluetooth]]" bluetooth-private="[[bluetoothPrivate]]" dialog-title="Connect to Bluetooth device" on-close="onDialogClose_" pairing-device="[[pairingDevice_]]">
</bluetooth-dialog>
<!--_html_template_end_-->`,is:"settings-bluetooth-subpage",behaviors:[I18nBehavior,CrScrollableBehavior,DeepLinkingBehavior,ListPropertyUpdateBehavior,RouteObserverBehavior],properties:{bluetoothToggleState:{type:Boolean,notify:true},stateChangeInProgress:{type:Boolean,reflectToAttribute:true},adapterState:Object,showSpinner_:{type:Boolean,notify:true,computed:"computeShowSpinner_(adapterState.*, dialogShown_)"},deviceList_:{type:Array,value(){return[]}},pairedDeviceList_:{type:Array,value:function(){return[]}},unpairedDeviceList_:{type:Array,value:function(){return[]}},dialogShown_:{type:Boolean,value:false},pairingDevice_:Object,bluetooth:{type:Object,value:chrome.bluetooth},bluetoothPrivate:{type:Object,value:chrome.bluetoothPrivate},listUpdateFrequencyMs:{type:Number,value:1e3},discoveryStartTimestampMs_:{type:Number,value:null},lastFocused_:Object,listBlurred_:Boolean,pendingSettingId_:{type:Number,value:null},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kBluetoothOnOff,chromeos.settings.mojom.Setting.kBluetoothConnectToDevice,chromeos.settings.mojom.Setting.kBluetoothDisconnectFromDevice,chromeos.settings.mojom.Setting.kBluetoothPairDevice,chromeos.settings.mojom.Setting.kBluetoothUnpairDevice])}},observers:["adapterStateChanged_(adapterState.*)","deviceListChanged_(deviceList_.*)","listUpdateFrequencyMsChanged_(listUpdateFrequencyMs)"],updateTimerId_:undefined,beforeDeepLinkAttempt(settingId){if(settingId===chromeos.settings.mojom.Setting.kBluetoothConnectToDevice||settingId===chromeos.settings.mojom.Setting.kBluetoothDisconnectFromDevice||settingId===chromeos.settings.mojom.Setting.kBluetoothPairDevice||settingId===chromeos.settings.mojom.Setting.kBluetoothUnpairDevice){this.lastFocused_=null}return true},detached(){if(this.updateTimerId_!==undefined){window.clearInterval(this.updateTimerId_);this.updateTimerId_=undefined;this.deviceList_=[]}},currentRouteChanged(route){this.pendingSettingId_=null;this.updateDiscovery_();this.startOrStopRefreshingDeviceList_();if(route!==routes.BLUETOOTH_DEVICES){return}this.attemptDeepLink().then((result=>{if(!result.deepLinkShown&&result.pendingSettingId){this.pendingSettingId_=result.pendingSettingId}}))},computeShowSpinner_(){return!this.dialogShown_&&this.get("adapterState.discovering")},adapterStateChanged_(){this.updateDiscovery_();this.startOrStopRefreshingDeviceList_()},deviceListChanged_(){this.updateList("pairedDeviceList_",(item=>item.address),this.getUpdatedDeviceList_(this.pairedDeviceList_,this.deviceList_.filter((d=>d.paired||d.connecting))));this.updateList("unpairedDeviceList_",(item=>item.address),this.getUpdatedDeviceList_(this.unpairedDeviceList_,this.deviceList_.filter((d=>!(d.paired||d.connecting)))));this.updateScrollableContents()},getUpdatedDeviceList_(oldDeviceList,newDeviceList){const newDeviceMap=new Map(newDeviceList.map((d=>[d.address,d])));const updatedDeviceList=[];for(const oldDevice of oldDeviceList){const newDevice=newDeviceMap.get(oldDevice.address);if(newDevice===undefined){continue}updatedDeviceList.push(newDevice);newDeviceMap.delete(newDevice.address)}for(const newDevice of newDeviceMap.values()){updatedDeviceList.push(newDevice)}return updatedDeviceList},updateDiscovery_(){if(!this.adapterState||!this.adapterState.powered){return}if(Router.getInstance().getCurrentRoute()===routes.BLUETOOTH_DEVICES){this.startDiscovery_()}else{this.stopDiscovery_()}},startDiscovery_(){if(!this.adapterState||this.adapterState.discovering){return}this.bluetooth.startDiscovery((function(){const lastError=chrome.runtime.lastError;if(lastError){if(lastError.message==="Starting discovery failed"){return}console.error("startDiscovery Error: "+lastError.message)}}))},stopDiscovery_(){if(!this.get("adapterState.discovering")){return}this.bluetooth.stopDiscovery((function(){const lastError=chrome.runtime.lastError;if(lastError){if(lastError.message==="Failed to stop discovery"){return}console.error("stopDiscovery Error: "+lastError.message)}}))},onDeviceEvent_(e){const action=e.detail.action;const device=e.detail.device;if(action==="connect"){this.connectDevice_(device)}else if(action==="disconnect"){this.disconnectDevice_(device)}else if(action==="remove"){this.forgetDevice_(device)}else{console.error("Unexected action: "+action)}},onEnableTap_(event){if(this.isAdapterAvailable_()&&!this.stateChangeInProgress){this.bluetoothToggleState=!this.bluetoothToggleState}event.stopPropagation()},getOnOffString_(enabled,onstr,offstr){return enabled?onstr:offstr},isAdapterAvailable_(){return!!this.adapterState&&this.adapterState.available},showDevices_(bluetoothToggleState,deviceList){return bluetoothToggleState&&deviceList.length>0},showNoDevices_(bluetoothToggleState,deviceList){return bluetoothToggleState&&deviceList.length===0},connectDevice_(device){if(device.connecting||device.connected){return}const isPaired=device.paired;if(!isPaired){this.pairingDevice_=device;this.openDialog_()}if(isPaired!==undefined&&device.transport!==undefined){this.recordDeviceSelectionDuration_(isPaired,device.transport)}const address=device.address;this.bluetoothPrivate.connect(address,(result=>{if(isPaired){const connectResult=chrome.runtime.lastError?undefined:result;chrome.bluetoothPrivate.recordReconnection(connectResult)}if(this.pairingDevice_&&address!==this.pairingDevice_.address){return}const dialog=this.$.deviceDialog;if(dialog.endConnectionAttempt(device,!isPaired,chrome.runtime.lastError,result)){this.openDialog_()}else if(result!==chrome.bluetoothPrivate.ConnectResultType.IN_PROGRESS){this.$.deviceDialog.close()}}));recordSettingChange()},disconnectDevice_(device){this.bluetoothPrivate.disconnectAll(device.address,(function(){if(chrome.runtime.lastError){console.error("Error disconnecting: "+device.address+chrome.runtime.lastError.message)}}));recordSettingChange()},forgetDevice_(device){this.bluetoothPrivate.forgetDevice(device.address,(()=>{if(chrome.runtime.lastError){console.error("Error forgetting: "+device.name+": "+chrome.runtime.lastError.message)}}));recordSettingChange()},openDialog_(){if(this.dialogShown_){return}flush();this.$.deviceDialog.open();this.dialogShown_=true},onDialogClose_(){this.dialogShown_=false;this.pairingDevice_=undefined;const device=this.$$("#unpairedContainer bluetooth-device-list-item");if(device){device.focus()}},sortDevices_(devices){return devices.sort(((a,b)=>a.connected?-1:b.connected?1:0))},refreshBluetoothList_(){const filter={filterType:chrome.bluetooth.FilterType.KNOWN,limit:MAX_NUMBER_DEVICE_SHOWN};this.bluetooth.getDevices(filter,(devices=>{this.deviceList_=this.sortDevices_(devices);if(!this.pendingSettingId_){return}this.beforeDeepLinkAttempt(this.pendingSettingId_);this.showDeepLink(this.pendingSettingId_).then((result=>{if(result.deepLinkShown){this.pendingSettingId_=null}}))}))},startOrStopRefreshingDeviceList_(){if(this.adapterState&&this.adapterState.powered){if(this.updateTimerId_!==undefined){return}this.refreshBluetoothList_();this.updateTimerId_=window.setInterval(this.refreshBluetoothList_.bind(this),this.listUpdateFrequencyMs);this.discoveryStartTimestampMs_=Date.now();return}window.clearInterval(this.updateTimerId_);this.updateTimerId_=undefined;this.discoveryStartTimestampMs_=null;this.deviceList_=[]},listUpdateFrequencyMsChanged_(){if(this.updateTimerId_===undefined){return}window.clearInterval(this.updateTimerId_);this.updateTimerId_=undefined;this.startOrStopRefreshingDeviceList_()},recordDeviceSelectionDuration_(wasPaired,transport){if(!this.discoveryStartTimestampMs_){return}chrome.bluetoothPrivate.recordDeviceSelection(Date.now()-this.discoveryStartTimestampMs_,wasPaired,transport);this.discoveryStartTimestampMs_=null}});// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const bluetoothApis=window["bluetoothApis"]||{bluetoothApiForTest:null,bluetoothPrivateApiForTest:null};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-bluetooth-page"></style>
<settings-animated-pages id="pages" section="bluetooth" focus-config="[[focusConfig_]]">
  <div route-path="default">
    <template is="dom-if" if="[[!isSecondaryUser_]]">
      <div id="bluetoothDevices" class="settings-box two-line first no-padding">
        <div class="link-wrapper" actionable="" on-click="onTap_">
          <iron-icon icon="[[getIcon_(bluetoothToggleState_)]]"></iron-icon>
          <div class="middle settings-box-text" aria-hidden="true">
            Bluetooth
            <div class="secondary" id="bluetoothSecondary">
              [[getOnOffString_(bluetoothToggleState_,
              'On', 'Off')]]
            </div>
          </div>
          <cr-policy-pref-indicator icon-aria-label="Bluetooth" pref="[[prefs.cros.device.allow_bluetooth]]" hidden="[[prefs.cros.device.allow_bluetooth.value]]">
          </cr-policy-pref-indicator>
          <template is="dom-if" if="[[bluetoothToggleState_]]">
            <cr-icon-button class="subpage-arrow" on-click="onSubpageArrowTap_" aria-label="Bluetooth" aria-describedby="bluetoothSecondary" aria-roledescription="Subpage button">
            </cr-icon-button>
          </template>
        </div>
        <div class="separator"></div>
        <cr-toggle id="enableBluetooth" class="margin-matches-padding" checked="{{bluetoothToggleState_}}" disabled$="[[!isToggleEnabled_(
                adapterState_, stateChangeInProgress_)]]" aria-label="Bluetooth enable" deep-link-focus-id$="[[Setting.kBluetoothOnOff]]" on-change="onBluetoothToggledByUser_">
        </cr-toggle>
      </div>
    </template>
    <template is="dom-if" if="[[isSecondaryUser_]]">
      <div id="bluetoothDevices" class="settings-box two-line">
        <iron-icon class="policy" icon="cr:group"></iron-icon>
        <div class="middle settings-box-text">
          [[i18n('bluetoothPrimaryUserControlled', primaryUserEmail_)]]
        </div>
      </div>
    </template>
  </div>
  <template is="dom-if" route-path="/bluetoothDevices">
    <settings-subpage associated-control="[[$$('#bluetoothDevices')]]" page-title="Bluetooth">
      <settings-bluetooth-subpage adapter-state="[[adapterState_]]" bluetooth-toggle-state="{{bluetoothToggleState_}}" state-change-in-progress="[[stateChangeInProgress_]]" bluetooth="[[bluetooth]]" bluetooth-private="[[bluetoothPrivate]]">
      </settings-bluetooth-subpage>
    </settings-subpage>
  </template>
</settings-animated-pages>
<!--_html_template_end_-->`,is:"settings-bluetooth-page",behaviors:[I18nBehavior,DeepLinkingBehavior,PrefsBehavior,RouteObserverBehavior],properties:{prefs:{type:Object,notify:true},bluetoothToggleState_:{type:Boolean,observer:"bluetoothToggleStateChanged_"},stateChangeInProgress_:{type:Boolean,value:false},adapterState_:{type:Object,notify:true},focusConfig_:{type:Object,value(){const map=new Map;if(routes.BLUETOOTH_DEVICES){map.set(routes.BLUETOOTH_DEVICES.path,"#bluetoothDevices .subpage-arrow")}return map}},bluetooth:{type:Object,value:chrome.bluetooth},bluetoothPrivate:{type:Object,value:chrome.bluetoothPrivate},isSecondaryUser_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isSecondaryUser")},readOnly:true},primaryUserEmail_:{type:String,value(){return loadTimeData$1.getString("primaryUserEmail")},readOnly:true},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kBluetoothOnOff])}},observers:["deviceListChanged_(deviceList_.*)"],bluetoothAdapterStateChangedListener_:undefined,ready(){if(bluetoothApis.bluetoothApiForTest){this.bluetooth=bluetoothApis.bluetoothApiForTest}if(bluetoothApis.bluetoothPrivateApiForTest){this.bluetoothPrivate=bluetoothApis.bluetoothPrivateApiForTest}},attached(){this.bluetoothAdapterStateChangedListener_=this.onBluetoothAdapterStateChanged_.bind(this);this.bluetooth.onAdapterStateChanged.addListener(this.bluetoothAdapterStateChangedListener_);this.bluetooth.getAdapterState(this.bluetoothAdapterStateChangedListener_)},detached(){if(this.bluetoothAdapterStateChangedListener_){this.bluetooth.onAdapterStateChanged.removeListener(this.bluetoothAdapterStateChangedListener_)}},currentRouteChanged(newRoute,oldRoute){if(newRoute!==routes.BLUETOOTH){return}this.attemptDeepLink()},getIcon_(bluetoothToggleState){if(!bluetoothToggleState){return"os-settings:bluetooth-disabled"}return"cr:bluetooth"},getOnOffString_(enabled,onstr,offstr){return enabled?onstr:offstr},isToggleEnabled_(){return this.adapterState_!==undefined&&this.adapterState_.available&&!this.stateChangeInProgress_},onBluetoothAdapterStateChanged_(state){this.adapterState_=state;if(this.isToggleEnabled_()){this.bluetoothToggleState_=state.powered}},onBluetoothToggledByUser_(){recordSettingChange(chromeos.settings.mojom.Setting.kBluetoothOnOff,{boolValue:this.bluetoothToggleState_})},onTap_(){if(!this.isToggleEnabled_()){return}if(!this.bluetoothToggleState_){this.bluetoothToggleState_=true}else{this.openSubpage_()}},onSubpageArrowTap_(e){this.openSubpage_();e.stopPropagation()},bluetoothToggleStateChanged_(){if(!this.adapterState_||!this.isToggleEnabled_()||this.bluetoothToggleState_===this.adapterState_.powered){return}this.stateChangeInProgress_=true;this.bluetoothPrivate.setAdapterState({powered:this.bluetoothToggleState_},(()=>{this.stateChangeInProgress_=false;const error=chrome.runtime.lastError;if(error&&error!=="Error setting adapter properties: powered"){console.error("Error enabling bluetooth: "+error.message);return}this.setPrefValue("ash.user.bluetooth.adapter_enabled",this.bluetoothToggleState_)}))},openSubpage_(){Router.getInstance().navigateTo(routes.BLUETOOTH_DEVICES)}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({is:"cr-tabs",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-hidden-style" scope="cr-tabs">:host {
  --cr-tabs-height: 48px;
        cursor: pointer;
        display: flex;
        flex-direction: row;
        font-size: var(--cr-tabs-font-size, 14px);
        font-weight: 500;
        height: var(--cr-tabs-height);
        position: relative;
        user-select: none;
}

:host([new-material]) {
  cursor: auto;
        justify-content: space-around;
}

.tab {
  align-items: center;
        color: var(--cr-secondary-text-color);
        display: flex;
        flex: auto;
        height: 100%;
        justify-content: center;
        opacity: .8;
        transition: opacity 100ms cubic-bezier(.4, 0, 1, 1);
}

:host([new-material]) .tab {
  cursor: pointer;
        flex: 0;
        white-space: nowrap;
}

:host(:not(.keyboard-focus)) .tab {
  outline: none;
}

.selected {
  color: var(--google-blue-600);
        opacity: 1;
}

@media (prefers-color-scheme: dark) {
.selected {
  color: var(--google-blue-refresh-300);
}

}

.selected:focus {
  font-weight: 700;
}

#selectionBar {
  --cr-tabs-selection-bar-width: 2px;
        border-bottom-color: var(--google-blue-600);
        border-bottom-style: solid;
        border-bottom-width: var(--cr-tabs-selection-bar-width);
        height: 0;
        left: 0;
        position: absolute;
        right: 0;
        top: calc(var(--cr-tabs-height) - var(--cr-tabs-selection-bar-width));
        transform: scale(0);
        transform-origin: left center;
        transition: transform;
}

:host([new-material]) #selectionBar {
  background: var(--google-blue-600);
        border: none;
        border-radius: 3px 3px 0 0;
        height: 3px;
        opacity: 0;
        overflow: hidden;
        transform: none;
}

:host([new-material]) #selectionBar.initiated {
  opacity: 1;
        transition: transform 250ms cubic-bezier(.4, 0, .2, 1),
            width 250ms cubic-bezier(.4, 0, .2, 1);
}

@media (prefers-color-scheme: dark) {
#selectionBar {
  border-bottom-color: var(--google-blue-refresh-300);
}

}

#selectionBar.expand {
  transition-duration: 150ms;
        transition-timing-function: cubic-bezier(.4, 0, 1, 1);
}

#selectionBar.contract {
  transition-duration: 180ms;
        transition-timing-function: cubic-bezier(0, 0, .2, 1);
}

</style>
    <template is="dom-repeat" items="[[tabNames]]" on-dom-change="updateUi_">
      <div class="tab" role="tab" on-click="onTabClick_">[[item]]</div>
    </template>
    <div id="selectionBar"></div>
<!--_html_template_end_-->`,properties:{tabNames:{type:Array,value:()=>[]},selected:{type:Number,notify:true,observer:"updateUi_"}},hostAttributes:{role:"tablist"},listeners:{keydown:"onKeyDown_",mousedown:"onMouseDown_"},isRtl_:false,lastSelected_:null,attached(){this.isRtl_=this.matches(":host-context([dir=rtl]) cr-tabs")},onMouseDown_(){this.classList.remove("keyboard-focus")},onKeyDown_(e){this.classList.add("keyboard-focus");const count=this.tabNames.length;let newSelection;if(e.key==="Home"){newSelection=0}else if(e.key==="End"){newSelection=count-1}else if(e.key==="ArrowLeft"||e.key==="ArrowRight"){const delta=e.key==="ArrowLeft"?this.isRtl_?1:-1:this.isRtl_?-1:1;newSelection=(count+this.selected+delta)%count}else{return}e.preventDefault();e.stopPropagation();this.selected=newSelection},onSelectionBarTransitionEnd_(){this.$.selectionBar.classList.replace("expand","contract");const tab=this.$$(`.tab:nth-of-type(${this.selected+1})`);if(!tab){this.$.selectionBar.style.transform="scaleX(0)";return}this.updateSelectionBar_(tab.offsetLeft,tab.offsetWidth)},onTabClick_({model:{index:index}}){this.selected=index},updateSelectionBar_(left,width){const containerWidth=this.offsetWidth;const leftPercent=100*left/containerWidth;const widthRatio=width/containerWidth;if(this.hasAttribute("new-material")){this.$.selectionBar.style.transform=`translateX(${left}px)`;this.$.selectionBar.style.width=`${width}px`;setTimeout((()=>{this.$.selectionBar.classList.add("initiated")}));return}if(this.$.selectionBar.style.transform==="translateX(0%) scaleX(1)"&&leftPercent===0&&widthRatio===1){this.onSelectionBarTransitionEnd_();return}this.$.selectionBar.style.transform=`translateX(${leftPercent}%) scaleX(${widthRatio})`},updateUi_(){const tabs=this.shadowRoot.querySelectorAll(".tab");if(tabs.length===0){return}tabs.forEach(((tab,i)=>{const isSelected=this.selected===i;if(isSelected){tab.focus()}tab.classList.toggle("selected",isSelected);tab.setAttribute("aria-selected",isSelected);tab.setAttribute("tabindex",isSelected?0:-1)}));if(this.selected===undefined){return}this.$.selectionBar.classList.remove("expand","contract");const oldValue=this.lastSelected_;this.lastSelected_=this.selected;if(oldValue===null||oldValue===this.selected){setTimeout((()=>{const{offsetLeft:offsetLeft,offsetWidth:offsetWidth}=tabs[this.selected];this.updateSelectionBar_(offsetLeft,offsetWidth)}));return}if(this.hasAttribute("new-material")){const selectedTab=tabs[this.selected];this.updateSelectionBar_(selectedTab.offsetLeft,selectedTab.offsetWidth);return}this.$.selectionBar.classList.add("expand");this.$.selectionBar.addEventListener("transitionend",(()=>this.onSelectionBarTransitionEnd_()),{once:true});const{offsetLeft:newLeft,offsetWidth:newWidth}=tabs[this.selected];const{offsetLeft:oldLeft,offsetWidth:oldWidth}=tabs[oldValue];const left=Math.min(newLeft,oldLeft);const right=Math.max(newLeft+newWidth,oldLeft+oldWidth);this.updateSelectionBar_(left,right-left)}});
/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/const template=html`<custom-style>
  <style is="custom-style" css-build="shadow">html {
  --shadow-transition_-_transition:  box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);;

      --shadow-none_-_box-shadow:  none;;

      

      --shadow-elevation-2dp_-_box-shadow:  0 2px 2px 0 rgba(0, 0, 0, 0.14),
                    0 1px 5px 0 rgba(0, 0, 0, 0.12),
                    0 3px 1px -2px rgba(0, 0, 0, 0.2);;

      --shadow-elevation-3dp_-_box-shadow:  0 3px 4px 0 rgba(0, 0, 0, 0.14),
                    0 1px 8px 0 rgba(0, 0, 0, 0.12),
                    0 3px 3px -2px rgba(0, 0, 0, 0.4);;

      --shadow-elevation-4dp_-_box-shadow:  0 4px 5px 0 rgba(0, 0, 0, 0.14),
                    0 1px 10px 0 rgba(0, 0, 0, 0.12),
                    0 2px 4px -1px rgba(0, 0, 0, 0.4);;

      --shadow-elevation-6dp_-_box-shadow:  0 6px 10px 0 rgba(0, 0, 0, 0.14),
                    0 1px 18px 0 rgba(0, 0, 0, 0.12),
                    0 3px 5px -1px rgba(0, 0, 0, 0.4);;

      --shadow-elevation-8dp_-_box-shadow:  0 8px 10px 1px rgba(0, 0, 0, 0.14),
                    0 3px 14px 2px rgba(0, 0, 0, 0.12),
                    0 5px 5px -3px rgba(0, 0, 0, 0.4);;

      --shadow-elevation-12dp_-_box-shadow:  0 12px 16px 1px rgba(0, 0, 0, 0.14),
                    0 4px 22px 3px rgba(0, 0, 0, 0.12),
                    0 6px 7px -4px rgba(0, 0, 0, 0.4);;

      --shadow-elevation-16dp_-_box-shadow:  0 16px 24px 2px rgba(0, 0, 0, 0.14),
                    0  6px 30px 5px rgba(0, 0, 0, 0.12),
                    0  8px 10px -5px rgba(0, 0, 0, 0.4);;

      --shadow-elevation-24dp_-_box-shadow:  0 24px 38px 3px rgba(0, 0, 0, 0.14),
                    0 9px 46px 8px rgba(0, 0, 0, 0.12),
                    0 11px 15px -7px rgba(0, 0, 0, 0.4);;
}

</style>
</custom-style>`;template.setAttribute("style","display: none;");document.head.appendChild(template.content);// Copyright 2016 The Chromium Authors. All rights reserved.
const DragType={NONE:0,CURSOR:1,KEYBOARD:2};const DragBehavior={properties:{dragEnabled:Boolean,keyboardDragEnabled:{type:Boolean,value:false},keyboardDragStepSize:{type:Number,value:20}},dragType_:DragType.NONE,dragId:"",container_:undefined,callback_:null,dragStartLocation_:{x:0,y:0},lastTouchLocation_:null,mouseDownListener_:null,mouseMoveListener_:null,touchStartListener_:null,touchMoveListener_:null,endDragListener_:null,keyDownListener_:null,initializeDrag(enabled,opt_container,opt_callback){this.dragEnabled=enabled;if(!enabled){this.removeListeners_();return}if(opt_container!==undefined){this.container_=opt_container}this.addListeners_();if(opt_callback!==undefined){this.callback_=opt_callback}},addListeners_(){const container=this.container_;if(!container||this.mouseDownListener_){return}this.mouseDownListener_=this.onMouseDown_.bind(this);container.addEventListener("mousedown",this.mouseDownListener_);this.mouseMoveListener_=this.onMouseMove_.bind(this);container.addEventListener("mousemove",this.mouseMoveListener_);this.touchStartListener_=this.onTouchStart_.bind(this);container.addEventListener("touchstart",this.touchStartListener_);this.touchMoveListener_=this.onTouchMove_.bind(this);container.addEventListener("touchmove",this.touchMoveListener_);this.keyDownListener_=this.onKeyDown_.bind(this);container.addEventListener("keydown",this.keyDownListener_);this.endDragListener_=this.endCursorDrag_.bind(this);window.addEventListener("mouseup",this.endDragListener_);container.addEventListener("touchend",this.endDragListener_)},removeListeners_(){const container=this.container_;if(!container||!this.mouseDownListener_){return}container.removeEventListener("mousedown",this.mouseDownListener_);this.mouseDownListener_=null;container.removeEventListener("mousemove",this.mouseMoveListener_);this.mouseMoveListener_=null;container.removeEventListener("touchstart",this.touchStartListener_);this.touchStartListener_=null;container.removeEventListener("touchmove",this.touchMoveListener_);this.touchMoveListener_=null;container.removeEventListener("touchend",this.endDragListener_);this.keyDownListener_=null;container.removeEventListener("keydown",this.keyDownListener_);if(this.endDragListener_){window.removeEventListener("mouseup",this.endDragListener_)}this.endDragListener_=null},onMouseDown_(e){if(e.button!==0||!e.target.getAttribute("draggable")){return true}e.preventDefault();const target=assertInstanceof(e.target,HTMLElement);return this.startCursorDrag_(target,{x:e.pageX,y:e.pageY})},onMouseMove_(e){e.preventDefault();return this.processCursorDrag_(e,{x:e.pageX,y:e.pageY})},onTouchStart_(e){if(e.touches.length!==1){return false}e.preventDefault();const touch=e.touches[0];this.lastTouchLocation_={x:touch.pageX,y:touch.pageY};const target=assertInstanceof(e.target,HTMLElement);return this.startCursorDrag_(target,this.lastTouchLocation_)},onTouchMove_(e){if(e.touches.length!==1){return true}const touchLocation={x:e.touches[0].pageX,y:e.touches[0].pageY};if(this.lastTouchLocation_){const IGNORABLE_TOUCH_MOVE_PX=1;const xDiff=Math.abs(touchLocation.x-this.lastTouchLocation_.x);const yDiff=Math.abs(touchLocation.y-this.lastTouchLocation_.y);if(xDiff<=IGNORABLE_TOUCH_MOVE_PX&&yDiff<=IGNORABLE_TOUCH_MOVE_PX){return true}}this.lastTouchLocation_=touchLocation;e.preventDefault();return this.processCursorDrag_(e,touchLocation)},onKeyDown_(e){if(this.keyboardDragEnabled===false){return true}if(!e.target.getAttribute("draggable")){return true}if(this.dragType_===DragType.CURSOR){return true}let delta;switch(e.key){case"ArrowUp":delta={x:0,y:-this.keyboardDragStepSize};break;case"ArrowDown":delta={x:0,y:this.keyboardDragStepSize};break;case"ArrowLeft":delta={x:-this.keyboardDragStepSize,y:0};break;case"ArrowRight":delta={x:this.keyboardDragStepSize,y:0};break;case"Enter":e.preventDefault();this.endKeyboardDrag_();return false;default:return true}e.preventDefault();if(this.dragType_===DragType.NONE){const target=assertInstanceof(e.target,HTMLElement);this.startKeyboardDrag_(target)}this.dragOffset_.x+=delta.x;this.dragOffset_.y+=delta.y;this.processKeyboardDrag_(this.dragOffset_);return false},startCursorDrag_(target,eventLocation){assert(this.dragEnabled);if(this.dragType_===DragType.KEYBOARD){this.endKeyboardDrag_()}this.dragId=target.id;this.dragStartLocation_=eventLocation;this.dragType_=DragType.CURSOR;return false},endCursorDrag_(){assert(this.dragEnabled);if(this.dragType_===DragType.CURSOR&&this.callback_){this.callback_(this.dragId,null)}this.cleanupDrag_();return false},processCursorDrag_(e,eventLocation){assert(this.dragEnabled);if(this.dragType_!==DragType.CURSOR){return true}this.executeCallback_(eventLocation);return false},startKeyboardDrag_(target){assert(this.dragEnabled);if(this.dragType_===DragType.CURSOR){this.endCursorDrag_()}this.dragId=target.id;this.dragStartLocation_={x:0,y:0};this.dragOffset_={x:0,y:0};this.dragType_=DragType.KEYBOARD},endKeyboardDrag_(){assert(this.dragEnabled);if(this.dragType_===DragType.KEYBOARD&&this.callback_){this.callback_(this.dragId,null)}this.cleanupDrag_()},processKeyboardDrag_(dragPosition){assert(this.dragEnabled);if(this.dragType_!==DragType.KEYBOARD){return true}this.executeCallback_(dragPosition);return false},cleanupDrag_(){this.dragId="";this.dragStartLocation_={x:0,y:0};this.lastTouchLocation_=null;this.dragType_=DragType.NONE},executeCallback_(dragPosition){if(this.callback_){const delta={x:dragPosition.x-this.dragStartLocation_.x,y:dragPosition.y-this.dragStartLocation_.y};this.callback_(this.dragId,delta)}}};// Copyright 2016 The Chromium Authors. All rights reserved.
const LayoutBehavior={properties:{layouts:Array,mirroring:{type:Boolean,value:false}},displayBoundsMap_:new Map,displayLayoutMap_:new Map,calculatedBoundsMap_:new Map,dragLayoutId_:"",dragParentId_:"",dragBounds_:undefined,dragLayoutPosition_:undefined,initializeDisplayLayout(displays,layouts){this.dragLayoutId_="";this.dragParentId_="";this.mirroring=displays.length>0&&!!displays[0].mirroringSourceId;this.displayBoundsMap_.clear();for(const display of displays){this.displayBoundsMap_.set(display.id,display.bounds)}this.displayLayoutMap_.clear();for(const layout of layouts){this.displayLayoutMap_.set(layout.id,layout)}this.calculatedBoundsMap_.clear();for(const display of displays){if(!this.calculatedBoundsMap_.has(display.id)){const bounds=display.bounds;this.calculateBounds_(display.id,bounds.width,bounds.height)}}},updateDisplayBounds(id,newBounds){this.dragLayoutId_=id;const closestId=this.findClosest_(id,newBounds);assert(closestId);const closestBounds=this.getCalculatedDisplayBounds(closestId);const layoutPosition=this.getLayoutPositionForBounds_(newBounds,closestBounds);const snapPos=this.snapBounds_(newBounds,closestId,layoutPosition);newBounds.left=snapPos.x;newBounds.top=snapPos.y;const oldBounds=this.dragBounds_||this.getCalculatedDisplayBounds(id);const deltaPos={x:newBounds.left-oldBounds.left,y:newBounds.top-oldBounds.top};this.collideAndModifyDelta_(id,oldBounds,deltaPos);if(layoutPosition!==this.dragLayoutPosition_||closestId!==this.dragParentId_){this.dragLayoutPosition_=layoutPosition;this.dragParentId_=closestId;this.highlightEdge_(closestId,layoutPosition)}newBounds.left=oldBounds.left+deltaPos.x;newBounds.top=oldBounds.top+deltaPos.y;this.dragBounds_=newBounds;return newBounds},finishUpdateDisplayBounds(id){this.highlightEdge_("",undefined);if(id!==this.dragLayoutId_||!this.dragBounds_||!this.dragLayoutPosition_){return}const layout=this.displayLayoutMap_.get(id);let orphanIds;if(!layout||layout.parentId===""){this.setCalculatedDisplayBounds_(id,this.dragBounds_);orphanIds=this.findChildren_(id,true);this.reparentOrphan_(this.dragParentId_,orphanIds);orphanIds.splice(orphanIds.indexOf(this.dragParentId_),1)}else{orphanIds=this.findChildren_(id,false);let topLayout=this.displayLayoutMap_.get(this.dragParentId_);while(topLayout&&topLayout.parentId!==""){if(topLayout.parentId===id){topLayout.parentId=layout.parentId;break}topLayout=this.displayLayoutMap_.get(topLayout.parentId)}layout.parentId=this.dragParentId_;this.updateOffsetAndPosition_(this.dragBounds_,this.dragLayoutPosition_,layout)}this.updateOrphans_(orphanIds);getDisplayApi().setDisplayLayout(this.layouts,(function(){if(chrome.runtime.lastError){console.error("setDisplayLayout Error: "+chrome.runtime.lastError.message)}}))},getCalculatedDisplayBounds(displayId,opt_notest){const bounds=this.calculatedBoundsMap_.get(displayId);assert(opt_notest||bounds);return bounds},setCalculatedDisplayBounds_(displayId,bounds){assert(bounds);this.calculatedBoundsMap_.set(displayId,Object.assign({},bounds))},updateOrphans_(orphanIds){const orphans=orphanIds.slice();for(let i=0;i<orphanIds.length;++i){const orphan=orphanIds[i];const newOrphans=this.findChildren_(orphan,true);for(let ii=0;ii<newOrphans.length;++ii){const o=newOrphans[ii];if(!orphans.includes(o)){orphans.push(o)}}}while(orphans.length){const orphanId=orphans.shift();this.reparentOrphan_(orphanId,orphans)}},reparentOrphan_(orphanId,otherOrphanIds){const layout=this.displayLayoutMap_.get(orphanId);assert(layout);if(orphanId===this.dragId&&layout.parentId!==""){this.setCalculatedDisplayBounds_(orphanId,this.dragBounds_);return}const bounds=this.getCalculatedDisplayBounds(orphanId);const newParentId=this.findClosest_(orphanId,bounds,otherOrphanIds);assert(newParentId!=="");layout.parentId=newParentId;const parentBounds=this.getCalculatedDisplayBounds(newParentId);const layoutPosition=this.getLayoutPositionForBounds_(bounds,parentBounds);const cornerBounds=this.getCornerBounds_(bounds,parentBounds);const desiredPos=this.snapBounds_(bounds,newParentId,layoutPosition);const deltaPos={x:desiredPos.x-cornerBounds.left,y:desiredPos.y-cornerBounds.top};this.collideAndModifyDelta_(orphanId,cornerBounds,deltaPos);const desiredBounds={left:cornerBounds.left+deltaPos.x,top:cornerBounds.top+deltaPos.y,width:bounds.width,height:bounds.height};this.updateOffsetAndPosition_(desiredBounds,layoutPosition,layout)},findChildren_(parentId,recurse){let children=[];this.displayLayoutMap_.forEach(((value,key)=>{const childId=key;if(childId!==parentId&&value.parentId===parentId){children.unshift(childId);if(recurse){children=children.concat(this.findChildren_(childId,true))}}}));return children},calculateBounds_(id,width,height){let left,top;const layout=this.displayLayoutMap_.get(id);if(this.mirroring||!layout||!layout.parentId){left=-width/2;top=-height/2}else{if(!this.calculatedBoundsMap_.has(layout.parentId)){const pbounds=this.displayBoundsMap_.get(layout.parentId);this.calculateBounds_(layout.parentId,pbounds.width,pbounds.height)}const parentBounds=this.getCalculatedDisplayBounds(layout.parentId);left=parentBounds.left;top=parentBounds.top;switch(layout.position){case chrome.system.display.LayoutPosition.TOP:left+=layout.offset;top-=height;break;case chrome.system.display.LayoutPosition.RIGHT:left+=parentBounds.width;top+=layout.offset;break;case chrome.system.display.LayoutPosition.BOTTOM:left+=layout.offset;top+=parentBounds.height;break;case chrome.system.display.LayoutPosition.LEFT:left-=width;top+=layout.offset;break}}const result={left:left,top:top,width:width,height:height};this.setCalculatedDisplayBounds_(id,result)},findClosest_(displayId,bounds,opt_ignoreIds){const x=bounds.left+bounds.width/2;const y=bounds.top+bounds.height/2;let closestId="";let closestDelta2=0;const keys=this.calculatedBoundsMap_.keys();for(let iter=keys.next();!iter.done;iter=keys.next()){const otherId=iter.value;if(otherId===displayId){continue}if(opt_ignoreIds&&opt_ignoreIds.includes(otherId)){continue}const otherBounds=this.getCalculatedDisplayBounds(otherId);const left=otherBounds.left;const top=otherBounds.top;const width=otherBounds.width;const height=otherBounds.height;if(x>=left&&x<left+width&&y>=top&&y<top+height){return otherId}let dx,dy;if(x<left){dx=left-x}else if(x>left+width){dx=x-(left+width)}else{dx=0}if(y<top){dy=top-y}else if(y>top+height){dy=y-(top+height)}else{dy=0}const delta2=dx*dx+dy*dy;if(closestId===""||delta2<closestDelta2){closestId=otherId;closestDelta2=delta2}}return closestId},getLayoutPositionForBounds_(bounds,parentBounds){const x=bounds.left+bounds.width/2;const y=bounds.top+bounds.height/2;const left=parentBounds.left;const top=parentBounds.top;const width=parentBounds.width;const height=parentBounds.height;const dx=x-(left+width/2);const dy=y-(top+height/2);const distx=Math.abs(dx)-width/2;const disty=Math.abs(dy)-height/2;if(distx>disty){if(dx<0){return chrome.system.display.LayoutPosition.LEFT}else{return chrome.system.display.LayoutPosition.RIGHT}}else{if(dy<0){return chrome.system.display.LayoutPosition.TOP}else{return chrome.system.display.LayoutPosition.BOTTOM}}},snapBounds_(bounds,parentId,layoutPosition){const parentBounds=this.getCalculatedDisplayBounds(parentId);let x;if(layoutPosition===chrome.system.display.LayoutPosition.LEFT){x=parentBounds.left-bounds.width}else if(layoutPosition===chrome.system.display.LayoutPosition.RIGHT){x=parentBounds.left+parentBounds.width}else{x=this.snapToX_(bounds,parentBounds)}let y;if(layoutPosition===chrome.system.display.LayoutPosition.TOP){y=parentBounds.top-bounds.height}else if(layoutPosition===chrome.system.display.LayoutPosition.BOTTOM){y=parentBounds.top+parentBounds.height}else{y=this.snapToY_(bounds,parentBounds)}return{x:x,y:y}},snapToX_(newBounds,parentBounds,opt_snapDistance){return this.snapToEdge_(newBounds.left,newBounds.width,parentBounds.left,parentBounds.width,opt_snapDistance)},snapToY_(newBounds,parentBounds,opt_snapDistance){return this.snapToEdge_(newBounds.top,newBounds.height,parentBounds.top,parentBounds.height,opt_snapDistance)},snapToEdge_(point,width,basePoint,baseWidth,opt_snapDistance){const SNAP_DISTANCE_PX=16;const snapDist=opt_snapDistance!==undefined?opt_snapDistance:SNAP_DISTANCE_PX;const startDiff=Math.abs(point-basePoint);const endDiff=Math.abs(point+width-(basePoint+baseWidth));if((!snapDist||startDiff<snapDist)&&startDiff<endDiff){return basePoint}else if(!snapDist||endDiff<snapDist){return basePoint+baseWidth-width}return point},collideAndModifyDelta_(id,bounds,deltaPos){const keys=this.calculatedBoundsMap_.keys();const others=new Set(keys);others.delete(id);let checkCollisions=true;while(checkCollisions){checkCollisions=false;const othersValues=others.values();for(let iter=othersValues.next();!iter.done;iter=othersValues.next()){const otherId=iter.value;const otherBounds=this.getCalculatedDisplayBounds(otherId);if(this.collideWithBoundsAndModifyDelta_(bounds,otherBounds,deltaPos)){if(deltaPos.x===0&&deltaPos.y===0){return}others.delete(otherId);checkCollisions=true;break}}}},collideWithBoundsAndModifyDelta_(bounds,otherBounds,deltaPos){const newX=bounds.left+deltaPos.x;const newY=bounds.top+deltaPos.y;if(newX+bounds.width<=otherBounds.left||newX>=otherBounds.left+otherBounds.width||newY+bounds.height<=otherBounds.top||newY>=otherBounds.top+otherBounds.height){return false}if(Math.abs(deltaPos.x)>Math.abs(deltaPos.y)){deltaPos.y=0;let snapDeltaX;if(deltaPos.x>0){snapDeltaX=Math.max(0,otherBounds.left-bounds.width-bounds.left)}else{snapDeltaX=Math.min(0,otherBounds.left+otherBounds.width-bounds.left)}deltaPos.x=snapDeltaX}else{deltaPos.x=0;let snapDeltaY;if(deltaPos.y>0){snapDeltaY=Math.min(0,otherBounds.top-bounds.height-bounds.top)}else if(deltaPos.y<0){snapDeltaY=Math.max(0,otherBounds.top+otherBounds.height-bounds.top)}else{snapDeltaY=0}deltaPos.y=snapDeltaY}return true},updateOffsetAndPosition_(bounds,position,layout){layout.position=position;if(!layout.parentId){layout.offset=0;return}const parentBounds=this.getCalculatedDisplayBounds(layout.parentId);let offset,minOffset,maxOffset;if(position===chrome.system.display.LayoutPosition.LEFT||position===chrome.system.display.LayoutPosition.RIGHT){offset=bounds.top-parentBounds.top;minOffset=-bounds.height;maxOffset=parentBounds.height}else{offset=bounds.left-parentBounds.left;minOffset=-bounds.width;maxOffset=parentBounds.width}const MIN_OFFSET_OVERLAP=50;minOffset+=MIN_OFFSET_OVERLAP;maxOffset-=MIN_OFFSET_OVERLAP;layout.offset=Math.max(minOffset,Math.min(offset,maxOffset));this.calculateBounds_(layout.id,bounds.width,bounds.height)},getCornerBounds_(bounds,parentBounds){let x;if(bounds.left>parentBounds.left+parentBounds.width/2){x=parentBounds.left+parentBounds.width}else{x=parentBounds.left-bounds.width}let y;if(bounds.top>parentBounds.top+parentBounds.height/2){y=parentBounds.top+parentBounds.height}else{y=parentBounds.top-bounds.height}return{left:x,top:y,width:bounds.width,height:bounds.height}},highlightEdge_(id,layoutPosition){for(let i=0;i<this.layouts.length;++i){const layout=this.layouts[i];const highlight=layout.id===id||layout.parentId===id?layoutPosition:undefined;const div=id?this.$$("#_"+id):this.$$("#_"+layout.id);div.classList.toggle("highlight-right",highlight===chrome.system.display.LayoutPosition.RIGHT);div.classList.toggle("highlight-left",highlight===chrome.system.display.LayoutPosition.LEFT);div.classList.toggle("highlight-top",highlight===chrome.system.display.LayoutPosition.TOP);div.classList.toggle("highlight-bottom",highlight===chrome.system.display.LayoutPosition.BOTTOM)}}};// Copyright 2016 The Chromium Authors. All rights reserved.
const MIN_VISUAL_SCALE=.01;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="display-layout">#displayArea {
  height: 100%;
        overflow: hidden;
        position: relative;
        width: 100%;
}

.display {
  align-items: center;
        background: var(--google-grey-100);
        color: var(--google-grey-700);
        cursor: default;
        display: flex;
        font-size: 100%;
        font-weight: 500;
        justify-content: center;
        margin: 4px;
        padding: 3px;
        position: absolute;
        text-align: center;
}

.display[selected] {
  border: var(--google-blue-500) solid 1px;
}

.display.mirror {
  border: var(--google-blue-500) solid 1px;
}

.highlight-left {
  border-left: var(--google-blue-700) solid 1px;
}

.highlight-right {
  border-right: var(--google-blue-700) solid 1px;
}

.highlight-top {
  border-top: var(--google-blue-700) solid 1px;
}

.highlight-bottom {
  border-bottom: var(--google-blue-700) solid 1px;
}

.display.elevate {
  box-shadow: var(--cr-elevation-3);
}

</style>
    <div id="displayArea" on-iron-resize="calculateVisualScale_">
      <template is="dom-repeat" items="[[mirroringDestinationIds_]]">
        <div id="_mirror_[[item]]" class="display mirror" hidden$="[[!mirroring]]" style$="[[getMirrorDivStyle_(index, mirroringDestinationIds_.length,
                                         displays, visualScale)]]">
        </div>
      </template>
      <template is="dom-repeat" items="[[displays]]">
        <div id="_[[item.id]]" class="display elevate" draggable="[[dragEnabled]]" on-focus="onFocus_" on-click="onSelectDisplayTap_" style$="[[getDivStyle_(item.id, item.bounds, visualScale)]]" selected$="[[isSelected_(item, selectedDisplay)]]" tabindex="0">
          [[getDisplayName_(mirroring, item.name,
                            'Mirrored')]]
        </div>
      </template>
    </div>
<!--_html_template_end_-->`,is:"display-layout",behaviors:[IronResizableBehavior,DragBehavior,LayoutBehavior],properties:{displays:Array,selectedDisplay:Object,visualScale:{type:Number,value:1},mirroringDestinationIds_:Array},allowDisplayIdentificationApi_:loadTimeData$1.getBoolean("allowDisplayIdentificationApi"),visualOffset_:{left:0,top:0},lastDragCoordinates_:null,browserProxy_:null,allowDisplayAlignmentApi_:loadTimeData$1.getBoolean("allowDisplayAlignmentApi"),allowKeyboardDrag_:loadTimeData$1.getBoolean("allowKeyboardBasedDisplayArrangementInSettings"),invalidDisplayId_:loadTimeData$1.getString("invalidDisplayId"),created(){if(this.allowDisplayAlignmentApi_||this.allowDisplayIdentificationApi_){this.browserProxy_=DevicePageBrowserProxyImpl.getInstance()}},detached(){this.initializeDrag(false)},updateDisplays(displays,layouts,mirroringDestinationIds){this.displays=displays;this.layouts=layouts;this.mirroringDestinationIds_=mirroringDestinationIds;this.initializeDisplayLayout(displays,layouts);const self=this;const retry=100;function tryCalcVisualScale(){if(!self.calculateVisualScale_()){setTimeout(tryCalcVisualScale,retry)}}tryCalcVisualScale();this.keyboardDragEnabled=this.allowKeyboardDrag_;this.initializeDrag(!this.mirroring,this.$.displayArea,this.onDrag_.bind(this))},calculateVisualScale_(){const displayAreaDiv=this.$.displayArea;if(!displayAreaDiv||!displayAreaDiv.offsetWidth||!this.displays||!this.displays.length){return false}let display=this.displays[0];let bounds=this.getCalculatedDisplayBounds(display.id);const boundsBoundingBox={left:bounds.left,right:bounds.left+bounds.width,top:bounds.top,bottom:bounds.top+bounds.height};let maxWidth=bounds.width;let maxHeight=bounds.height;for(let i=1;i<this.displays.length;++i){display=this.displays[i];bounds=this.getCalculatedDisplayBounds(display.id);boundsBoundingBox.left=Math.min(boundsBoundingBox.left,bounds.left);boundsBoundingBox.right=Math.max(boundsBoundingBox.right,bounds.left+bounds.width);boundsBoundingBox.top=Math.min(boundsBoundingBox.top,bounds.top);boundsBoundingBox.bottom=Math.max(boundsBoundingBox.bottom,bounds.top+bounds.height);maxWidth=Math.max(maxWidth,bounds.width);maxHeight=Math.max(maxHeight,bounds.height)}const boundsWidth=boundsBoundingBox.right-boundsBoundingBox.left;const boundsHeight=boundsBoundingBox.bottom-boundsBoundingBox.top;const horizontalScale=displayAreaDiv.offsetWidth/(boundsWidth+maxWidth*2);const verticalScale=displayAreaDiv.offsetHeight/(boundsHeight+maxHeight*2);const scale=Math.min(horizontalScale,verticalScale);this.visualOffset_.left=(displayAreaDiv.offsetWidth-boundsWidth*scale)/2-boundsBoundingBox.left*scale;this.visualOffset_.top=(displayAreaDiv.offsetHeight-boundsHeight*scale)/2-boundsBoundingBox.top*scale;this.visualScale=Math.max(MIN_VISUAL_SCALE,scale);return true},getDivStyle_(id,displayBounds,visualScale,opt_offset){const BORDER=1;const MARGIN=4;const OFFSET=opt_offset||0;const PADDING=3;const bounds=this.getCalculatedDisplayBounds(id,true);if(!bounds){return""}const height=Math.round(bounds.height*this.visualScale)-BORDER*2-MARGIN*2-PADDING*2;const width=Math.round(bounds.width*this.visualScale)-BORDER*2-MARGIN*2-PADDING*2;const left=OFFSET+Math.round(this.visualOffset_.left+bounds.left*this.visualScale);const top=OFFSET+Math.round(this.visualOffset_.top+bounds.top*this.visualScale);return"height: "+height+"px; width: "+width+"px;"+" left: "+left+"px; top: "+top+"px"},getMirrorDivStyle_(mirroringDestinationIndex,mirroringDestinationDisplayNum,displays,visualScale){return this.getDivStyle_(displays[0].id,displays[0].bounds,visualScale,(mirroringDestinationDisplayNum-mirroringDestinationIndex)*-4)},getDisplayName_(mirroring,displayName,mirroringName){if(this.allowDisplayIdentificationApi_){return""}return mirroring?mirroringName:displayName},isSelected_(display,selectedDisplay){return display.id===selectedDisplay.id},focusSelectedDisplay_(){if(!this.selectedDisplay){return}const children=Array.from(this.$.displayArea.children);const selected=children.find((display=>display.id==="_"+this.selectedDisplay.id));if(selected){selected.focus()}},onSelectDisplayTap_(e){this.fire("select-display",e.model.item.id);e.target.active=true},onFocus_(e){this.fire("select-display",e.model.item.id);this.focusSelectedDisplay_()},onDrag_(id,amount){id=id.substr(1);let newBounds;if(!amount){this.finishUpdateDisplayBounds(id);newBounds=this.getCalculatedDisplayBounds(id);this.lastDragCoordinates_=null;if(this.allowDisplayIdentificationApi_){this.browserProxy_.highlightDisplay(this.invalidDisplayId_)}}else{if(this.allowDisplayIdentificationApi_){this.browserProxy_.highlightDisplay(id)}if(id!==this.selectedDisplay.id){this.fire("select-display",id)}const calculatedBounds=this.getCalculatedDisplayBounds(id);newBounds=Object.assign({},calculatedBounds);newBounds.left+=Math.round(amount.x/this.visualScale);newBounds.top+=Math.round(amount.y/this.visualScale);if(this.displays.length>=2){newBounds=this.updateDisplayBounds(id,newBounds)}if(this.allowDisplayAlignmentApi_){if(!this.lastDragCoordinates_){this.hasDragStarted_=true;this.lastDragCoordinates_={x:calculatedBounds.left,y:calculatedBounds.top}}const deltaX=newBounds.left-this.lastDragCoordinates_.x;const deltaY=newBounds.top-this.lastDragCoordinates_.y;this.lastDragCoordinates_.x=newBounds.left;this.lastDragCoordinates_.y=newBounds.top;if(deltaX!==0||deltaY!==0){this.browserProxy_.dragDisplayDelta(id,Math.round(deltaX),Math.round(deltaY))}}}const left=this.visualOffset_.left+Math.round(newBounds.left*this.visualScale);const top=this.visualOffset_.top+Math.round(newBounds.top*this.visualScale);const div=this.$$("#_"+id);div.style.left=""+left+"px";div.style.top=""+top+"px";this.focusSelectedDisplay_()}});// Copyright 2016 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared iron-flex iron-flex-alignment" scope="settings-display-overscan-dialog">.subtitle {
  margin-top: 10px;
}

.instructions {
  color: var(--google-grey-600);
       margin-top: 4px;
}

.details {
  margin: 40px;
}

iron-icon {
  --iron-icon-fill-color: white;
       background: black;
       margin: 5px;
}

#move > div {
  color: grey;
       font-size: 150%;
}

#move > div.shift {
  background: black;
       color: white;
       font-size: 100%;
       margin: 0 8px;
       padding: 4px 8px 0;
}

</style>
    <cr-dialog id="dialog" on-close="close" close-text="Close">
      <div slot="title">Overscan</div>
      <div slot="body">
        <div class="subtitle">Adjust the boundaries of your display</div>
        <div class="instructions">Tap the following keys to adjust or move the cropping area</div>
        <div class="details layout horizontal around-justified self-stretch">
          <div class="layout vertical center">
            <div class="layout horizontal">
              <iron-icon icon="cr:expand-less"></iron-icon>
            </div>
            <div class="layout horizontal">
              <iron-icon icon="os-settings:chevron-left"></iron-icon>
              <iron-icon icon="cr:expand-more"></iron-icon>
              <iron-icon icon="cr:chevron-right"></iron-icon>
            </div>
            <div class="label">Shrink / Expand</div>
          </div>
          <div class="layout vertical center">
            <div class="layout vertical center-justified flex">
              <div id="move" class="layout horizontal">
                <!-- TODO(stevenjb): Localize 'shift' for other keyboards -->
                <!-- crbug.com/614827 -->
                <div>( + </div><div class="shift">shift</div><div>)</div>
              </div>
            </div>
            <div class="label">Move</div>
          </div>
        </div>
      </div>
      <div slot="button-container">
        <cr-button id="reset" class="cancel-button" on-click="onResetTap_">
          Reset
        </cr-button>
        <cr-button class="action-button" on-click="onSaveTap_">
          OK
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"settings-display-overscan-dialog",properties:{displayId:{type:String,notify:true,observer:"displayIdChanged_"},committed_:Boolean},keyHandler_:null,open(){this.keyHandler_=this.handleKeyEvent_.bind(this);window.addEventListener("keydown",this.keyHandler_);this.committed_=false;this.$.dialog.showModal();this.$$("#reset").blur()},close(){window.removeEventListener("keydown",this.keyHandler_);this.displayId="";if(this.$.dialog.open){this.$.dialog.close()}},displayIdChanged_(newValue,oldValue){if(oldValue&&!this.committed_){getDisplayApi().overscanCalibrationReset(oldValue);getDisplayApi().overscanCalibrationComplete(oldValue)}if(!newValue){return}this.committed_=false;getDisplayApi().overscanCalibrationStart(newValue)},onResetTap_(){getDisplayApi().overscanCalibrationReset(this.displayId)},onSaveTap_(){getDisplayApi().overscanCalibrationComplete(this.displayId);this.committed_=true;this.close()},handleKeyEvent_(event){if(event.altKey||event.ctrlKey||event.metaKey){return}switch(event.keyCode){case 37:if(event.shiftKey){this.move_(-1,0)}else{this.resize_(1,0)}break;case 38:if(event.shiftKey){this.move_(0,-1)}else{this.resize_(0,-1)}break;case 39:if(event.shiftKey){this.move_(1,0)}else{this.resize_(-1,0)}break;case 40:if(event.shiftKey){this.move_(0,1)}else{this.resize_(0,1)}break;default:return}event.preventDefault()},move_(x,y){const delta={left:x,top:y,right:x?-x:0,bottom:y?-y:0};getDisplayApi().overscanCalibrationAdjust(this.displayId,delta)},resize_(x,y){const delta={left:x,top:y,right:x,bottom:y};getDisplayApi().overscanCalibrationAdjust(this.displayId,delta)}});// Copyright 2017 The Chromium Authors. All rights reserved.
const HOURS_PER_DAY=24;const MIN_KNOBS_DISTANCE_MINUTES=60;const OFFSET_MINUTES_6PM=18*60;const TOTAL_MINUTES_PER_DAY=24*60;function modulo(x,y){return(x%y+y)%y}Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="night-light-slider">:host {
  cursor: default;
        font-weight: 500;
        text-align: center;
        user-select: none;
}

#sliderContainer {
  display: inline-block;
        position: relative;
        user-select: none;
        width: 100%;
}

#sliderBar {
  background-color: rgba(var(--google-blue-600-rgb), .24);
        background-size: 100%;
        display: inline-block;
        height: 2px;
        position: relative;
        width: inherit;
}

.knob {
  height: 32px;
        margin-left: -16px;
        margin-top: -15px;
        position: absolute;
        width: 32px;
        z-index: 3;
}

.knob:focus {
  outline: none;
}

.knob-inner {
  background: var(--google-blue-600);
        border-radius: 6px;
        height: 10px;
        left: 0;
        margin: 11px;
        position: absolute;
        width: 10px;
        z-index: 3;
}

.knob-inner:focus {
  outline: none;
}

#progressContainer {
  height: 100%;
        overflow: hidden;
        position: absolute;
        width: 100%;
}

.progress {
  background: var(--google-blue-600);
        height: 100%;
        position: absolute;
        z-index: 1;
}

#labelContainer {
  height: 1.75em;
}

.label {
  background: var(--google-blue-600);
        border-radius: 14px;
        color: white;
        font-size: 12px;
        left: 0;
        line-height: 1.5em;
        margin-left: -2.5em;
        position: absolute;
        text-align: center;
        transition: margin-top 200ms cubic-bezier(0, 0, 0.2, 1);
        vertical-align: middle;
        width: 5em;
}

.end-label-overlap {
  margin-top: -2em;
}

#markersContainer {
  display: flex;
        height: 100%;
        left: 0;
        position: absolute;
        width: 100%;
}

.active-marker, .inactive-marker {
  background-color: rgba(255, 255, 255, 0.54);
        border-radius: 50%;
        display: block;
        height: 100%;
        margin-left: -1px;
        padding: 0;
        position: absolute;
        width: 2PX;
        z-index: 2;
}

.inactive-marker {
  background-color: rgba(26, 115, 232, 0.54);
}

#legendContainer {
  height: 10px;
        position: relative;
        width: inherit;
}

#legendContainer > div {
  color: rgb(100, 100, 100);
        font-size: 12px;
        margin-left: -2.5em;
        position: absolute;
        text-align: center;
        top: 5px;
        width: 5em;
}

paper-ripple {
  color: var(--google-blue-600);
}

</style>

    <div id="sliderContainer">
      <div id="labelContainer">
        <div id="startLabel" class="label" aria-label="Start time">
          [[getTimeString_(prefs.ash.night_light.custom_start_time.value,
                           shouldUse24Hours_)]]
        </div>
        <div id="endLabel" class="label" aria-label="End time">
          [[getTimeString_(prefs.ash.night_light.custom_end_time.value,
                           shouldUse24Hours_)]]
        </div>
      </div>
      <div id="sliderBar">
        <div id="progressContainer">
          <div id="endProgress" class="progress"></div>
          <div id="startProgress" class="progress"></div>
        </div>
        <div id="markersContainer">
        </div>
        <div id="startKnob" class="knob" tabindex="1" on-down="startDrag_" on-up="endDrag_" on-track="continueDrag_">
          <div class="knob-inner" tabindex="-1"></div>
        </div>
        <div id="endKnob" class="knob" tabindex="2" on-down="startDrag_" on-up="endDrag_" on-track="continueDrag_">
          <div class="knob-inner" tabindex="-1"></div>
        </div>
      </div>
      <div id="legendContainer">
        <div style="[[getLegendStyle_(0, isRTL_)]]">
          [[getLocaleTimeString_(18, 0, shouldUse24Hours_)]]
        </div>
        <div style="[[getLegendStyle_(25, isRTL_)]]">
          [[getLocaleTimeString_(0, 0, shouldUse24Hours_)]]
        </div>
        <div style="[[getLegendStyle_(50, isRTL_)]]">
          [[getLocaleTimeString_(6, 0, shouldUse24Hours_)]]
        </div>
        <div style="[[getLegendStyle_(75, isRTL_)]]">
          [[getLocaleTimeString_(12, 0, shouldUse24Hours_)]]
        </div>
        <div style="[[getLegendStyle_(100, isRTL_)]]">
          [[getLocaleTimeString_(18, 0, shouldUse24Hours_)]]
        </div>
      </div>
      <div id="dummyRippleContainer" hidden=""></div>
    </div>

<!--_html_template_end_-->`,is:"night-light-slider",behaviors:[PrefsBehavior,IronResizableBehavior,PaperRippleBehavior],properties:{isReady_:Boolean,isRTL_:Boolean,shouldUse24Hours_:Boolean},listeners:{"iron-resize":"onResize_",focus:"onFocus_",blur:"onBlur_",keydown:"onKeyDown_"},observers:["updateKnobs_(prefs.ash.night_light.custom_start_time.*, "+"prefs.ash.night_light.custom_end_time.*, isRTL_, isReady_)","hourFormatChanged_(prefs.settings.clock.use_24hour_clock.*)","updateMarkers_(prefs.ash.night_light.custom_start_time.*, "+"prefs.ash.night_light.custom_end_time.*, isRTL_, isReady_)"],dragObject_:null,attached(){this.isRTL_=window.getComputedStyle(this).direction==="rtl";this.$.sliderContainer.addEventListener("contextmenu",(function(e){e.preventDefault();return false}));setTimeout((()=>{this.isReady_=true}))},prefsAvailable(){return["custom_start_time","custom_end_time"].map((key=>`prefs.ash.night_light.${key}.value`)).every((path=>this.get(path)!==undefined))},updateMarkers_(){if(!this.isReady_||!this.prefsAvailable()){return}const startHour=this.getPref("ash.night_light.custom_start_time").value/60;const endHour=this.getPref("ash.night_light.custom_end_time").value/60;const markersContainer=this.$.markersContainer;markersContainer.innerHTML="";for(let i=0;i<=HOURS_PER_DAY;++i){const marker=document.createElement("div");const hourIndex=this.isRTL_?24-i:i;const hour=(hourIndex+18)%24;if(startHour<endHour){marker.className=hour>startHour&&hour<endHour?"active-marker":"inactive-marker"}else{marker.className=hour>endHour&&hour<startHour?"inactive-marker":"active-marker"}markersContainer.appendChild(marker);marker.style.left=i*100/HOURS_PER_DAY+"%"}},onResize_(){this.updateKnobs_()},hourFormatChanged_(){this.shouldUse24Hours_=this.getPref("settings.clock.use_24hour_clock").value},getLegendStyle_(percent,isRTL){percent=isRTL?100-percent:percent;return"left: "+percent+"%"},blurAnyFocusedKnob_(){const activeElement=this.shadowRoot.activeElement;if(activeElement===this.$.startKnob||activeElement===this.$.endKnob){activeElement.blur()}},startDrag_(event){event.preventDefault();if(event.target===this.$.startKnob||event.target===this.$.startKnob.firstElementChild){this.dragObject_=this.$.startKnob}else if(event.target===this.$.endKnob||event.target===this.$.endKnob.firstElementChild){this.dragObject_=this.$.endKnob}else{return}this.handleKnobEvent_(event,this.dragObject_);this.valueAtDragStart_=this.getPrefValue_(this.dragObject_)},continueDrag_(event){if(!this.dragObject_){return}event.stopPropagation();switch(event.detail.state){case"start":this.startDrag_(event);break;case"track":this.doKnobTracking_(event);break;case"end":this.endDrag_(event);break}},getDeltaMinutes_(deltaX){return(this.isRTL_?-1:1)*Math.floor(TOTAL_MINUTES_PER_DAY*deltaX/this.$.sliderBar.offsetWidth)},doKnobTracking_(event){const lastDeltaMinutes=this.getDeltaMinutes_(event.detail.ddx);if(Math.abs(lastDeltaMinutes)<1){return}this.updatePref_(this.valueAtDragStart_+this.getDeltaMinutes_(event.detail.dx),true)},endDrag_(event){event.preventDefault();this.dragObject_=null;this.removeRipple_()},getKnobRatio_(knob){return parseFloat(knob.style.left)/this.$.sliderBar.offsetWidth},getLocaleTimeString_(hour,minutes,shouldUse24Hours){const d=new Date;d.setHours(hour);d.setMinutes(minutes);d.setSeconds(0);d.setMilliseconds(0);return d.toLocaleTimeString(navigator.language,{hour:"numeric",minute:"numeric",hour12:!shouldUse24Hours})},getTimeString_(offsetMinutes,shouldUse24Hours){const hour=Math.floor(offsetMinutes/60);const minute=Math.floor(offsetMinutes%60);return this.getLocaleTimeString_(hour,minute,shouldUse24Hours)},updateKnobs_(){if(!this.isReady_||!this.prefsAvailable()||this.$.sliderBar.offsetWidth===0){return}const startOffsetMinutes=this.getPref("ash.night_light.custom_start_time").value;this.updateKnobLeft_(this.$.startKnob,startOffsetMinutes);const endOffsetMinutes=this.getPref("ash.night_light.custom_end_time").value;this.updateKnobLeft_(this.$.endKnob,endOffsetMinutes);this.refresh_()},updateKnobLeft_(knob,offsetMinutes){const offsetAfter6pm=(offsetMinutes+TOTAL_MINUTES_PER_DAY-OFFSET_MINUTES_6PM)%TOTAL_MINUTES_PER_DAY;let ratio=offsetAfter6pm/TOTAL_MINUTES_PER_DAY;if(ratio===0){const currentKnobRatio=this.getKnobRatio_(knob);ratio=currentKnobRatio>.5?1:0}else{ratio=this.isRTL_?1-ratio:ratio}knob.style.left=ratio*this.$.sliderBar.offsetWidth+"px"},refresh_(){this.$.startLabel.style.left=this.$.startKnob.style.left;this.$.endLabel.style.left=this.$.endKnob.style.left;const rtl=this.isRTL_;const endKnob=rtl?this.$.startKnob:this.$.endKnob;const startKnob=rtl?this.$.endKnob:this.$.startKnob;const startProgress=rtl?this.$.endProgress:this.$.startProgress;const endProgress=rtl?this.$.startProgress:this.$.endProgress;const endProgressLeft=startKnob.offsetLeft>=endKnob.offsetLeft?"0px":startKnob.style.left;endProgress.style.left=endProgressLeft;endProgress.style.width=parseFloat(endKnob.style.left)-parseFloat(endProgressLeft)+"px";const startProgressRight=endKnob.offsetLeft<startKnob.offsetLeft?this.$.sliderBar.offsetWidth:endKnob.style.left;startProgress.style.left=startKnob.style.left;startProgress.style.width=parseFloat(startProgressRight)-parseFloat(startKnob.style.left)+"px";this.fixLabelsOverlapIfAny_()},fixLabelsOverlapIfAny_(){const startLabel=this.$.startLabel;const endLabel=this.$.endLabel;const distance=Math.abs(parseFloat(startLabel.style.left)-parseFloat(endLabel.style.left));if(distance<=1.25*startLabel.offsetWidth){endLabel.classList.add("end-label-overlap")}else{endLabel.classList.remove("end-label-overlap")}},getOtherKnobPrefValue_(prefPath){if(prefPath==="ash.night_light.custom_start_time"){return this.getPref("ash.night_light.custom_end_time").value}return this.getPref("ash.night_light.custom_start_time").value},updatePref_(updatedValue,fromUserGesture){const prefPath=assert(this.getFocusedKnobPrefPathIfAny_());const otherValue=this.getOtherKnobPrefValue_(prefPath);const totalMinutes=TOTAL_MINUTES_PER_DAY;const minDistance=MIN_KNOBS_DISTANCE_MINUTES;if(modulo(otherValue-updatedValue,totalMinutes)<minDistance){updatedValue=otherValue+(fromUserGesture?-1:1)*minDistance}else if(modulo(updatedValue-otherValue,totalMinutes)<minDistance){updatedValue=otherValue+(fromUserGesture?1:-1)*minDistance}this.setPrefValue(prefPath,modulo(updatedValue,TOTAL_MINUTES_PER_DAY))},getPrefPath_(knob){if(knob===this.$.startKnob){return"ash.night_light.custom_start_time"}if(knob===this.$.endKnob){return"ash.night_light.custom_end_time"}return null},getPrefValue_(knob){const path=this.getPrefPath_(knob);return path?this.getPref(path).value:null},getFocusedKnobPrefPathIfAny_(){return this.getPrefPath_(this.shadowRoot.activeElement)},isEitherKnobFocused_(){const activeElement=this.shadowRoot.activeElement;return activeElement===this.$.startKnob||activeElement===this.$.endKnob},_createRipple(){if(this.isEitherKnobFocused_()){this._rippleContainer=this.shadowRoot.activeElement}else{this._rippleContainer=this.$.dummyRippleContainer}const ripple=PaperRippleBehavior._createRipple();ripple.id="ink";ripple.setAttribute("recenters","");ripple.classList.add("circle","toggle-ink");return ripple},onFocus_(event){this.handleKnobEvent_(event)},handleKnobEvent_(event,overrideElement){const knob=overrideElement||event.path.find((el=>el.classList&&el.classList.contains("knob")));if(!knob){event.preventDefault();return}if(this._rippleContainer!==knob){this.removeRipple_();knob.focus()}this.ensureRipple();if(this.hasRipple()){this._ripple.style.display="";this._ripple.holdDown=true}},onBlur_(){this.removeRipple_()},removeRipple_(){if(this.hasRipple()){this._ripple.remove();this._ripple=null}},onKeyDown_(event){const activeElement=this.shadowRoot.activeElement;if(event.key==="Tab"){if(event.shiftKey&&this.$.endKnob===activeElement){event.preventDefault();this.handleKnobEvent_(event,this.$.startKnob);return}if(!event.shiftKey&&this.$.startKnob===activeElement){event.preventDefault();this.handleKnobEvent_(event,this.$.endKnob)}return}if(event.metaKey||event.shiftKey||event.altKey||event.ctrlKey){return}const deltaKeyMap={ArrowDown:-1,ArrowLeft:this.isRTL_?1:-1,ArrowRight:this.isRTL_?-1:1,ArrowUp:1,PageDown:-15,PageUp:15};if(event.key in deltaKeyMap){this.handleKnobEvent_(event);event.preventDefault();const value=this.getPrefValue_(activeElement);if(value==null){return}const delta=deltaKeyMap[event.key];this.updatePref_(value+delta,false)}}});// Copyright 2016 The Chromium Authors. All rights reserved.
const NightLightScheduleType={NEVER:0,SUNSET_TO_SUNRISE:1,CUSTOM:2};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared md-select iron-flex iron-flex-alignment" scope="settings-display">.indented {
  align-self: stretch;
        margin-inline-start: var(--cr-section-indent-padding);
        padding: 0;
}

#nightLightTemperatureDiv[disabled] {
  opacity: 0.38;
        pointer-events: none;
}

.display-tabs {
  width: 100%;
}

display-layout {
  align-self: stretch;
        flex: 1 1;
        height: 300px;
        margin: 10px;
        min-height: 300px;
}

.text-area {
  margin: 10px 0;
}

.settings-box > cr-button:first-child {
  padding-inline-start: 0
}

.settings-box > cr-policy-pref-indicator {
  margin-inline-end: var(--cr-controlled-by-spacing);
}

.underbar {
  border-bottom: var(--cr-separator-line);
}

#controlsDiv > .settings-box:first-of-type {
  border-top: none;
}

#nightLightSlider {
  flex-grow: 1;
        margin-top: 20px;
}

iron-collapse {
  width: 100%;
}

</style>

    <!-- Arrangement section -->
    <template is="dom-if" if="[[shouldShowArrangementSection_(displays)]]" restamp="">
      <div class="settings-box first layout vertical self-stretch underbar" id="arrangement-section">
        <h2 class="layout self-start">
          Arrangement
        </h2>
        <div class="secondary layout self-start" hidden="[[isMirrored_(displays)]]">
          Drag or use arrow keys to move a display
        </div>
        <display-layout id="displayLayout" selected-display="[[selectedDisplay]]" on-select-display="onSelectDisplay_" deep-link-focus-id$="[[Setting.kDisplayArrangement]]">
        </display-layout>

        <template is="dom-if" if="[[showMirror_(unifiedDesktopMode_, displays)]]" restamp="">
          <div class="secondary self-start">
            <cr-checkbox id="displayMirrorCheckbox" checked="[[isMirrored_(displays)]]" on-click="onMirroredTap_" aria-label="[[getDisplayMirrorText_(displays)]]" deep-link-focus-id$="[[Setting.kDisplayMirroring]]">
              <div class="text-area">[[getDisplayMirrorText_(displays)]]</div>
            </cr-checkbox>
          </div>
        </template>
      </div>
    </template>

    <!-- Display tabs -->
    <div hidden="[[!hasMultipleDisplays_(displays)]]" class="settings-box first">
      <cr-tabs selected="[[selectedTab_]]" class="display-tabs" on-selected-changed="onSelectDisplayTab_" tab-names="[[displayTabNames_]]"></cr-tabs>
    </div>

    <div id="controlsDiv" class="settings-box layout vertical first">
      <h2>[[selectedDisplay.name]]</h2>
      <template is="dom-if" if="[[showUnifiedDesktop_(unifiedDesktopAvailable_,
          unifiedDesktopMode_, displays)]]" restamp="">
        <div class="settings-box indented two-line">
          <div class="start">
            <div id="displayUnifiedDesktopCheckboxLabel">
              Allow windows to span displays
            </div>
            <div class="secondary">
              [[getUnifiedDesktopText_(unifiedDesktopMode_)]]
            </div>
          </div>
          <cr-toggle checked="[[unifiedDesktopMode_]]" on-click="onUnifiedDesktopTap_" aria-labelledby="displayUnifiedDesktopCheckboxLabel" deep-link-focus-id$="[[Setting.kAllowWindowsToSpanDisplays]]">
          </cr-toggle>
        </div>
      </template>

      <template is="dom-if" restamp="" if="[[showDisplaySelectMenu_(displays, selectedDisplay)]]">
        <div class="settings-box indented">
          <div id="displayScreenTitle" class="start" aria-hidden="true">
            Screen
          </div>
          <select class="md-select" on-change="updatePrimaryDisplay_" aria-labelledby="displayScreenTitle" value="[[getDisplaySelectMenuIndex_(
                  selectedDisplay, primaryDisplayId)]]">
            <option value="0">Primary display</option>
            <option value="1">Extended display</option>
          </select>
        </div>
      </template>

      <!-- Display zoom selection slider -->
      <div class="settings-box indented two-line first">
        <div class="start text-area layout vertical">
          <div id="displayZoomTitle" aria-hidden="true">
            Display size
          </div>
          <div id="displayZoomSublabel" class="secondary self-start" aria-hidden="true">
            Make items on your screen smaller or larger
          </div>
          <div id="logicalResolutionText" class="secondary self-start" hidden$="[[!logicalResolutionText_]]" aria-hidden="true">
            [[logicalResolutionText_]]
          </div>
        </div>
        <template is="dom-if" if="[[isDisplayScaleManagedByPolicy_(
            selectedDisplay, prefs.cros.device_display_resolution)]]">
          <cr-policy-pref-indicator pref="[[prefs.cros.device_display_resolution]]" icon-aria-label="Display size">
          </cr-policy-pref-indicator>
        </template>
        <settings-slider id="displaySizeSlider" ticks="[[zoomValues_]]" pref="{{selectedZoomPref_}}" label-aria="Display size" label-min="Small" label-max="Large" disabled="[[isDisplayScaleMandatory_(
                selectedDisplay,
                prefs.cros.device_display_resolution)]]" on-cr-slider-value-changed="onDisplaySizeSliderDrag_" aria-describedby="displayZoomSublabel logicalResolutionText" deep-link-focus-id$="[[Setting.kDisplaySize]]">
        </settings-slider>
      </div>

      <!-- Drop down select menu for resolution -->
      <template is="dom-if" if="[[showDropDownResolutionSetting_(selectedDisplay)]]" restamp="">
        <div class="settings-box indented two-line">
          <div class="start text-area layout vertical" aria-hidden="true">
            <div>Resolution</div>
            <div class="secondary self-start" id="displayResolutionSublabel">
              Determines sharpness of text and images
            </div>
          </div>
          <template is="dom-if" if="[[isDisplayResolutionManagedByPolicy_(
              prefs.cros.device_display_resolution)]]">
            <cr-policy-pref-indicator pref="[[prefs.cros.device_display_resolution]]" icon-aria-label="Resolution">
            </cr-policy-pref-indicator>
          </template>
          <settings-dropdown-menu id="displayModeSelector" pref="{{selectedParentModePref_}}" disabled="[[isDisplayResolutionMandatory_(
                  prefs.cros.device_display_resolution)]]" label="Resolution" aria-describedby="displayResolutionSublabel" menu-options="[[displayModeList_]]" deep-link-focus-id$="[[Setting.kDisplayResolution]]">
          </settings-dropdown-menu>
        </div>
      </template>

      <!-- Drop down select menu for refresh rate -->
      <template is="dom-if" if="[[showRefreshRateSetting_(selectedDisplay)]]" restamp="">
        <div class="settings-box indented two-line">
          <div class="start text-area layout vertical" aria-hidden="true">
            <div>Refresh Rate</div>
            <div class="secondary self-start" id="displayRefreshRateSublabel">
              Determines the frequency that the screen updates
            </div>
          </div>
          <template is="dom-if" if="[[isDisplayResolutionManagedByPolicy_(
              prefs.cros.devicte_display_resolution)]]">
            <cr-policy-pref-indicator pref="[[prefs.cros.device_display_resolution]]" icon-aria-label="$1 x $2">
            </cr-policy-pref-indicator>
          </template>
          <settings-dropdown-menu id="refreshRateSelector" pref="{{selectedModePref_}}" disabled="[[isDisplayResolutionMandatory_(
                  prefs.cros.device_display_resolution)]]" label="Refresh Rate Menu" aria-describedby="displayRefreshRateSublabel" menu-options="[[refreshRateList_]]" deep-link-focus-id$="[[Setting.kDisplayRefreshRate]]">
          </settings-dropdown-menu>
        </div>
      </template>


      <template is="dom-if" if="[[!unifiedDesktopMode_]]" restamp="">
        <div class="settings-box indented">
          <div id="displayOrientation" class="start text-area" aria-hidden="true">
            Orientation
          </div>
          <template is="dom-if" if="[[isDevicePolicyEnabled_(
              prefs.cros.display_rotation_default)]]">
            <cr-policy-pref-indicator pref="[[prefs.cros.display_rotation_default]]" icon-aria-label="Orientation">
            </cr-policy-pref-indicator>
          </template>
          <select class="md-select" value="[[selectedDisplay.rotation]]" aria-labelledby="displayOrientation" on-change="onOrientationChange_" deep-link-focus-id$="[[Setting.kDisplayOrientation]]">
            <option value="-1" hidden$="[[!showAutoRotateOption_(selectedDisplay)]]">
              Auto-rotate
            </option>
            <option value="0">0Â° (Default)</option>
            <option value="90">90Â°</option>
            <option value="180">180Â°</option>
            <option value="270">270Â°</option>
          </select>
        </div>
      </template>

      <template is="dom-if" if="[[showAmbientColorSetting_(
          ambientColorAvailable_, selectedDisplay)]]">
        <settings-toggle-button id="ambientColor" class="indented hr" pref="{{prefs.ash.ambient_color.enabled}}" label="Ambient colors" sub-label="Adjusts the screen color to match the environment" deep-link-focus-id$="[[Setting.kAmbientColors]]">
        </settings-toggle-button>
      </template>

      <cr-link-row class="indented hr" id="overscan" label="Overscan" sub-label="Adjust the boundaries of your desktop within the display" on-click="onOverscanTap_" hidden$="[[!showOverscanSetting_(selectedDisplay)]]" embedded="" deep-link-focus-id$="[[Setting.kDisplayOverscan]]">
      </cr-link-row>

      <settings-display-overscan-dialog id="displayOverscan" display-id="{{overscanDisplayId}}" on-close="onCloseOverscanDialog_">
      </settings-display-overscan-dialog>

      <!-- Link row to touch calibration -->
      <cr-link-row class="indented hr" id="touchCalibration" label="Calibrate touchscreen" sub-label="Set up and adjust the accuracy of your touchscreen" on-click="onTouchCalibrationTap_" hidden$="[[!showTouchCalibrationSetting_(selectedDisplay)]]" embedded="" deep-link-focus-id$="[[Setting.kTouchscreenCalibration]]">
      </cr-link-row>
    </div>

    <!-- Night Light Settings -->
    <settings-toggle-button id="nightLightToggleButton" class="hr" label="Night Light" pref="{{prefs.ash.night_light.enabled}}" sub-label="Make it easier to look at your screen or read in dim light" deep-link-focus-id$="[[Setting.kNightLight]]">
    </settings-toggle-button>

    <div id="nightLightSettingsDiv" class="settings-box continuation start layout vertical">
      <!-- Color temperature slider -->
      <div id="nightLightTemperatureDiv" class="settings-box indented continuation" hidden$="[[!prefs.ash.night_light.enabled.value]]">
        <div class="start text-area" id="colorTemperatureLabel">
          Color temperature
        </div>
        <settings-slider id="colorTemperatureSlider" aria-labelledby="colorTemperatureLabel" min="0" max="100" scale="100" label-min="Cooler" label-max="Warmer" pref="{{prefs.ash.night_light.color_temperature}}" deep-link-focus-id$="[[Setting.kNightLightColorTemperature]]">
        </settings-slider>
      </div>
      <!-- Schedule settings -->
      <div class="settings-box indented">
        <div class="start text-area" aria-hidden="true">
          <div id="nightLightScheduleLabel" class="label">
            Schedule
          </div>
          <div id="nightLightScheduleSubLabel" class="secondary label" hidden$="[[!nightLightScheduleSubLabel_]]">
            [[nightLightScheduleSubLabel_]]
          </div>
        </div>
        <settings-dropdown-menu id="nightLightScheduleTypeDropDown" label="Schedule" aria-describedby="nightLightScheduleSubLabel" pref="{{prefs.ash.night_light.schedule_type}}" menu-options="[[scheduleTypesList_]]">
        </settings-dropdown-menu>
      </div>
      <!-- Custom schedule slider -->
      <iron-collapse id="nightLightCustomScheduleCollapse" opened="[[shouldOpenCustomScheduleCollapse_]]">
        <div class="settings-box indented continuation">
          <div class="start text-area layout vertical">
            <div class="settings-box continuation self-stretch">
              <night-light-slider id="nightLightSlider" prefs="{{prefs}}">
              </night-light-slider>
            </div>
          </div>
        </div>
      </iron-collapse>
    </div>

<!--_html_template_end_-->`,is:"settings-display",behaviors:[DeepLinkingBehavior,I18nBehavior,PrefsBehavior,RouteObserverBehavior],properties:{selectedModePref_:{type:Object,value(){return{key:"fakeDisplaySliderPref",type:chrome.settingsPrivate.PrefType.NUMBER,value:0}}},selectedZoomPref_:{type:Object,value(){return{key:"fakeDisplaySliderZoomPref",type:chrome.settingsPrivate.PrefType.NUMBER,value:0}}},displays:Array,layouts:Array,displayIds:{type:String,observer:"onDisplayIdsChanged_"},primaryDisplayId:String,selectedDisplay:Object,overscanDisplayId:{type:String,notify:true},mirroringDestinationIds:Array,modeValues_:Array,zoomValues_:Array,displayModeList_:{type:Array,value:[]},refreshRateList_:{type:Array,value:[]},unifiedDesktopAvailable_:{type:Boolean,value(){return loadTimeData$1.getBoolean("unifiedDesktopAvailable")}},ambientColorAvailable_:{type:Boolean,value(){return loadTimeData$1.getBoolean("deviceSupportsAmbientColor")}},listAllDisplayModes_:{type:Boolean,value(){return loadTimeData$1.getBoolean("listAllDisplayModes")}},unifiedDesktopMode_:{type:Boolean,value:false},selectedParentModePref_:{type:Object,value:function(){return{key:"fakeDisplayParentModePref",type:chrome.settingsPrivate.PrefType.NUMBER,value:0}}},scheduleTypesList_:{type:Array,value(){return[{name:loadTimeData$1.getString("displayNightLightScheduleNever"),value:NightLightScheduleType.NEVER},{name:loadTimeData$1.getString("displayNightLightScheduleSunsetToSunRise"),value:NightLightScheduleType.SUNSET_TO_SUNRISE},{name:loadTimeData$1.getString("displayNightLightScheduleCustom"),value:NightLightScheduleType.CUSTOM}]}},shouldOpenCustomScheduleCollapse_:{type:Boolean,value:false},nightLightScheduleSubLabel_:String,logicalResolutionText_:String,displayTabNames_:Array,selectedTab_:Number,pendingSettingId_:{type:Number,value:null},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kDisplaySize,chromeos.settings.mojom.Setting.kNightLight,chromeos.settings.mojom.Setting.kDisplayOrientation,chromeos.settings.mojom.Setting.kDisplayArrangement,chromeos.settings.mojom.Setting.kDisplayResolution,chromeos.settings.mojom.Setting.kDisplayRefreshRate,chromeos.settings.mojom.Setting.kDisplayMirroring,chromeos.settings.mojom.Setting.kAllowWindowsToSpanDisplays,chromeos.settings.mojom.Setting.kAmbientColors,chromeos.settings.mojom.Setting.kTouchscreenCalibration,chromeos.settings.mojom.Setting.kNightLightColorTemperature,chromeos.settings.mojom.Setting.kDisplayOverscan])}},observers:["updateNightLightScheduleSettings_(prefs.ash.night_light.schedule_type.*,"+" prefs.ash.night_light.enabled.*)","onSelectedModeChange_(selectedModePref_.value)","onSelectedParentModeChange_(selectedParentModePref_.value)","onSelectedZoomChange_(selectedZoomPref_.value)","onDisplaysChanged_(displays.*)"],currentSelectedParentModeIndex_:-1,currentSelectedModeIndex_:-1,displayChangedListener_:undefined,browserProxy_:null,allowDisplayIdentificationApi_:loadTimeData$1.getBoolean("allowDisplayIdentificationApi"),invalidDisplayId_:loadTimeData$1.getString("invalidDisplayId"),currentRoute_:undefined,parentModeToRefreshRateMap_:new Map,modeToParentModeMap_:new Map,created(){if(this.allowDisplayIdentificationApi_){this.browserProxy_=DevicePageBrowserProxyImpl.getInstance()}},attached(){this.displayChangedListener_=this.displayChangedListener_||this.getDisplayInfo_.bind(this);getDisplayApi().onDisplayChanged.addListener(this.displayChangedListener_);this.getDisplayInfo_();this.$.displaySizeSlider.updateValueInstantly=false},detached(){getDisplayApi().onDisplayChanged.removeListener(assert(this.displayChangedListener_));this.currentSelectedModeIndex_=-1;this.currentSelectedParentModeIndex_=-1},beforeDeepLinkAttempt(settingId){if(!this.displays){return false}return true},currentRouteChanged(opt_newRoute,opt_oldRoute){if(!this.allowDisplayIdentificationApi_){return}this.currentRoute_=opt_newRoute;if(opt_newRoute!==routes.DISPLAY&&opt_oldRoute===routes.DISPLAY){this.browserProxy_.highlightDisplay(this.invalidDisplayId_);return}if(opt_newRoute!==routes.DISPLAY){this.pendingSettingId_=null;return}this.attemptDeepLink().then((result=>{if(!result.deepLinkShown&&result.pendingSettingId){this.pendingSettingId_=result.pendingSettingId}}))},showOverscanDialog_(showOverscan){if(showOverscan){this.$.displayOverscan.open();this.$.displayOverscan.focus()}else{this.$.displayOverscan.close()}},onDisplayIdsChanged_(){this.showOverscanDialog_(false)},getDisplayInfo_(){const flags={singleUnified:true};getDisplayApi().getInfo(flags,this.displayInfoFetched_.bind(this))},displayInfoFetched_(displays){if(!displays.length){return}getDisplayApi().getDisplayLayout(this.displayLayoutFetched_.bind(this,displays));if(this.isMirrored_(displays)){this.mirroringDestinationIds=displays[0].mirroringDestinationIds}else{this.mirroringDestinationIds=[]}},displayLayoutFetched_(displays,layouts){this.layouts=layouts;this.displays=displays;this.displayTabNames_=displays.map((({name:name})=>name));this.updateDisplayInfo_()},getSelectedModeIndex_(selectedDisplay){for(let i=0;i<selectedDisplay.modes.length;++i){if(selectedDisplay.modes[i].isSelected){return i}}return 0},isDevicePolicyEnabled_(policyPref){return policyPref!==undefined&&policyPref.value!==null},isDisplayResolutionManagedByPolicy_(resolutionPref){return this.isDevicePolicyEnabled_(resolutionPref)&&(resolutionPref.value.external_use_native!==undefined||resolutionPref.value.external_width!==undefined&&resolutionPref.value.external_height!==undefined)},isDisplayResolutionMandatory_(resolutionPref){return this.isDisplayResolutionManagedByPolicy_(resolutionPref)&&!resolutionPref.value.recommended},isDisplayScaleManagedByPolicy_(selectedDisplay,resolutionPref){if(!this.isDevicePolicyEnabled_(resolutionPref)||!selectedDisplay){return false}if(selectedDisplay.isInternal){return resolutionPref.value.internal_scale_percentage!==undefined}return resolutionPref.value.external_scale_percentage!==undefined},isDisplayScaleMandatory_(selectedDisplay,resolutionPref){return this.isDisplayScaleManagedByPolicy_(selectedDisplay,resolutionPref)&&!resolutionPref.value.recommended},parseCompoundDisplayModes_(selectedDisplay){assert(!this.listAllDisplayModes_);const optionList=[];for(let i=0;i<selectedDisplay.modes.length;++i){const mode=selectedDisplay.modes[i];const id="displayResolutionMenuItem";const refreshRate=Math.round(mode.refreshRate*100)/100;const resolution=this.i18n(id,mode.width.toString(),mode.height.toString(),refreshRate.toString());optionList.push({name:resolution,value:i})}this.displayModeList_=optionList},createModeMap_(selectedDisplay){const modes=new Map;for(let i=0;i<selectedDisplay.modes.length;++i){const mode=selectedDisplay.modes[i];if(!modes.has(mode.width)){modes.set(mode.width,new Map)}if(!modes.get(mode.width).has(mode.height)){modes.get(mode.width).set(mode.height,new Map)}if(modes.get(mode.width).get(mode.height).has(mode.refreshRate)){const existingModeIndex=modes.get(mode.width).get(mode.height).get(mode.refreshRate);const existingMode=selectedDisplay.modes[existingModeIndex];if(existingMode.isNative||!mode.isNative){continue}}modes.get(mode.width).get(mode.height).set(mode.refreshRate,i)}return modes},parseSplitDisplayModes_(selectedDisplay){assert(this.listAllDisplayModes_);this.modeToParentModeMap_=new Map;this.parentModeToRefreshRateMap_=new Map;this.displayModeList_=new Array;const modes=this.createModeMap_(selectedDisplay);const widthsArr=Array.from(modes.keys()).sort();for(let i=0;i<widthsArr.length;i++){const width=widthsArr[i];const heightsMap=modes.get(width);const heightArr=Array.from(heightsMap.keys());for(let j=0;j<heightArr.length;j++){const height=heightArr[j];const refreshRates=heightsMap.get(height);const parentModeIndex=this.getParentModeIndex_(refreshRates);this.addResolution_(parentModeIndex,width,height);const refreshRatesArr=Array.from(refreshRates.keys());for(let k=0;k<refreshRatesArr.length;k++){const rate=refreshRatesArr[k];const modeIndex=refreshRates.get(rate);const isInterlaced=selectedDisplay.modes[modeIndex].isInterlaced;this.addRefreshRate_(parentModeIndex,modeIndex,rate,isInterlaced)}}}for(let i=0;i<selectedDisplay.modes.length;i++){const mode=selectedDisplay.modes[i];const parentModeIndex=this.getParentModeIndex_(modes.get(mode.width).get(mode.height));this.modeToParentModeMap_.set(i,parentModeIndex)}assert(this.modeToParentModeMap_.size===selectedDisplay.modes.length);this.sortResolutionList_()},getParentModeIndex_(refreshRates){const maxRefreshRate=Math.max(...refreshRates.keys());return refreshRates.get(maxRefreshRate)},addResolution_(parentModeIndex,width,height){assert(this.listAllDisplayModes_);this.parentModeToRefreshRateMap_.set(parentModeIndex,new Array);const resolutionOption=this.i18n("displayResolutionOnlyMenuItem",width,height);this.push("displayModeList_",{name:resolutionOption,value:parentModeIndex})},addRefreshRate_(parentModeIndex,modeIndex,rate,isInterlaced){assert(this.listAllDisplayModes_);let refreshRate=Number(rate).toFixed(2);if(refreshRate.endsWith(".00")){refreshRate=refreshRate.substring(0,refreshRate.length-3)}const id=isInterlaced?"displayRefreshRateInterlacedMenuItem":"displayRefreshRateMenuItem";const refreshRateOption=this.i18n(id,refreshRate.toString());this.parentModeToRefreshRateMap_.get(parentModeIndex).push({name:refreshRateOption,value:modeIndex})},sortResolutionList_(){const getWidthFromResolutionString=function(str){return Number(str.substr(0,str.indexOf(" ")))};this.displayModeList_=this.displayModeList_.sort(((first,second)=>getWidthFromResolutionString(first.name)-getWidthFromResolutionString(second.name))).reverse()},updateDisplayModeStructures_(selectedDisplay){if(this.listAllDisplayModes_){this.parseSplitDisplayModes_(selectedDisplay)}else{this.parseCompoundDisplayModes_(selectedDisplay)}},getSelectedDisplayZoom_(selectedDisplay){const selectedZoom=selectedDisplay.displayZoomFactor;let closestMatch=this.zoomValues_[0].value;let minimumDiff=Math.abs(closestMatch-selectedZoom);for(let i=0;i<this.zoomValues_.length;i++){const currentDiff=Math.abs(this.zoomValues_[i].value-selectedZoom);if(currentDiff<minimumDiff){closestMatch=this.zoomValues_[i].value;minimumDiff=currentDiff}}return closestMatch},getZoomValues_(selectedDisplay){return selectedDisplay.availableDisplayZoomFactors.map((value=>{const ariaValue=Math.round(value*100);return{value:value,ariaValue:ariaValue,label:this.i18n("displayZoomValue",ariaValue.toString())}}))},setSelectedDisplay_(selectedDisplay){this.currentSelectedModeIndex_=-1;this.currentSelectedParentModeIndex_=-1;const numModes=selectedDisplay.modes.length;this.modeValues_=numModes===0?[]:Array.from(Array(numModes).keys());this.zoomValues_=this.getZoomValues_(selectedDisplay);this.set("selectedZoomPref_.value",this.getSelectedDisplayZoom_(selectedDisplay));this.updateDisplayModeStructures_(selectedDisplay);this.selectedDisplay=selectedDisplay;this.selectedTab_=this.displays.indexOf(this.selectedDisplay);const currentModeIndex=this.getSelectedModeIndex_(selectedDisplay);this.currentSelectedModeIndex_=currentModeIndex;this.set("selectedModePref_.value",this.currentSelectedModeIndex_);if(this.listAllDisplayModes_){this.currentSelectedParentModeIndex_=this.modeToParentModeMap_.get(currentModeIndex);this.refreshRateList_=this.parentModeToRefreshRateMap_.get(this.currentSelectedParentModeIndex_)}else{this.currentSelectedParentModeIndex_=currentModeIndex}this.set("selectedParentModePref_.value",this.currentSelectedParentModeIndex_);this.updateLogicalResolutionText_(this.selectedZoomPref_.value)},showDropDownResolutionSetting_(display){return!display.isInternal},showRefreshRateSetting_(display){return this.listAllDisplayModes_&&this.showDropDownResolutionSetting_(display)},showTouchCalibrationSetting_(display){return!display.isInternal&&loadTimeData$1.getBoolean("enableTouchCalibrationSetting")},showOverscanSetting_(display){return!display.isInternal},showAmbientColorSetting_(ambientColorAvailable,display){return ambientColorAvailable&&display&&display.isInternal},hasMultipleDisplays_(){return this.displays.length>1},showDisplaySelectMenu_(displays,selectedDisplay){if(selectedDisplay){return displays.length>1&&!selectedDisplay.isPrimary}return false},getDisplaySelectMenuIndex_(selectedDisplay,primaryDisplayId){if(selectedDisplay&&selectedDisplay.id===primaryDisplayId){return 0}return 1},getDisplayMirrorText_(displays){return this.i18n("displayMirror",displays[0].name)},showUnifiedDesktop_(unifiedDesktopAvailable,unifiedDesktopMode,displays){if(displays===undefined){return false}return unifiedDesktopMode||unifiedDesktopAvailable&&displays.length>1&&!this.isMirrored_(displays)},getUnifiedDesktopText_(unifiedDesktopMode){return this.i18n(unifiedDesktopMode?"displayUnifiedDesktopOn":"displayUnifiedDesktopOff")},showMirror_(unifiedDesktopMode,displays){if(displays===undefined){return false}return this.isMirrored_(displays)||!unifiedDesktopMode&&displays.length>1},isMirrored_(displays){return displays!==undefined&&displays.length>0&&!!displays[0].mirroringSourceId},isSelected_(display,selectedDisplay){return display.id===selectedDisplay.id},enableSetResolution_(selectedDisplay){return selectedDisplay.modes.length>1},enableDisplayZoomSlider_(selectedDisplay){return selectedDisplay.availableDisplayZoomFactors.length>1},isBestMode_(selectedDisplay,mode){if(!selectedDisplay.isInternal){return mode.isNative}if(mode.heightInNativePixels===1080){return Math.abs(mode.uiScale-.8)<.001&&Math.abs(mode.deviceScaleFactor-1.25)<.001}return mode.uiScale===1},getResolutionText_(){if(this.selectedDisplay.modes.length===0||this.currentSelectedModeIndex_===-1){return this.i18n("displayResolutionText",this.selectedDisplay.bounds.width.toString(),this.selectedDisplay.bounds.height.toString())}const mode=this.selectedDisplay.modes[this.selectedModePref_.value];assert(mode);const widthStr=mode.width.toString();const heightStr=mode.height.toString();if(this.isBestMode_(this.selectedDisplay,mode)){return this.i18n("displayResolutionTextBest",widthStr,heightStr)}else if(mode.isNative){return this.i18n("displayResolutionTextNative",widthStr,heightStr)}return this.i18n("displayResolutionText",widthStr,heightStr)},updateLogicalResolutionText_(zoomFactor){if(!this.selectedDisplay.isInternal){this.logicalResolutionText_="";return}const mode=this.selectedDisplay.modes[this.currentSelectedModeIndex_];const deviceScaleFactor=mode.deviceScaleFactor;const inverseZoomFactor=1/zoomFactor;let logicalResolutionStrId="displayZoomLogicalResolutionText";if(Math.abs(deviceScaleFactor-inverseZoomFactor)<.001){logicalResolutionStrId="displayZoomNativeLogicalResolutionNativeText"}else if(Math.abs(inverseZoomFactor-1)<.001){logicalResolutionStrId="displayZoomLogicalResolutionDefaultText"}let widthStr=Math.round(mode.widthInNativePixels/(deviceScaleFactor*zoomFactor)).toString();let heightStr=Math.round(mode.heightInNativePixels/(deviceScaleFactor*zoomFactor)).toString();if(this.shouldSwapLogicalResolutionText_()){const temp=widthStr;widthStr=heightStr;heightStr=temp}this.logicalResolutionText_=this.i18n(logicalResolutionStrId,widthStr,heightStr)},shouldSwapLogicalResolutionText_(){const mode=this.selectedDisplay.modes[this.currentSelectedModeIndex_];const bounds=this.selectedDisplay.bounds;return bounds.width>bounds.height!==mode.widthInNativePixels>mode.heightInNativePixels},onDisplaySizeSliderDrag_(){if(!this.selectedDisplay){return}const sliderValue=this.$.displaySizeSlider.$$("#slider").value;const zoomFactor=this.$.displaySizeSlider.ticks[sliderValue].value;this.updateLogicalResolutionText_(zoomFactor)},onSelectDisplay_(e){const id=e.detail;for(let i=0;i<this.displays.length;++i){const display=this.displays[i];if(id===display.id){if(this.selectedDisplay!==display){this.setSelectedDisplay_(display)}return}}},onSelectDisplayTab_(){const{selected:selected}=this.$$("cr-tabs");if(this.selectedTab_!==selected){this.setSelectedDisplay_(this.displays[selected])}},onTouchCalibrationTap_(e){getDisplayApi().showNativeTouchCalibration(this.selectedDisplay.id)},updatePrimaryDisplay_(e){if(!this.selectedDisplay){return}if(this.selectedDisplay.id===this.primaryDisplayId){return}if(!e.target.value){return}const properties={isPrimary:true};getDisplayApi().setDisplayProperties(this.selectedDisplay.id,properties,this.setPropertiesCallback_.bind(this))},onSelectedParentModeChange_(newModeIndex){if(this.currentSelectedParentModeIndex_===newModeIndex){return}if(!this.hasNewParentModeBeenSet()){return}this.set("selectedModePref_.value",this.selectedParentModePref_.value)},hasNewParentModeBeenSet(){if(this.currentSelectedParentModeIndex_===-1){return false}return this.currentSelectedParentModeIndex_!==this.selectedParentModePref_.value},hasNewModeBeenSet(){if(this.currentSelectedModeIndex_===-1){return false}if(this.currentSelectedParentModeIndex_!==this.selectedParentModePref_.value){return true}return this.currentSelectedModeIndex_!==this.selectedModePref_.value},onSelectedModeChange_(newModeIndex){if(this.currentSelectedModeIndex_===newModeIndex){return}if(!this.hasNewModeBeenSet()){return}const properties={displayMode:this.selectedDisplay.modes[this.selectedModePref_.value]};this.refreshRateList_=this.parentModeToRefreshRateMap_.get(this.selectedParentModePref_.value);getDisplayApi().setDisplayProperties(this.selectedDisplay.id,properties,this.setPropertiesCallback_.bind(this))},onSelectedZoomChange_(){if(this.currentSelectedModeIndex_===-1||!this.selectedDisplay){return}const properties={displayZoomFactor:this.selectedZoomPref_.value};getDisplayApi().setDisplayProperties(this.selectedDisplay.id,properties,this.setPropertiesCallback_.bind(this))},showAutoRotateOption_(selectedDisplay){return selectedDisplay.isAutoRotationAllowed},onOrientationChange_(event){const target=event.target;const value=parseInt(target.value,10);assert(value!==-1||this.selectedDisplay.isAutoRotationAllowed);const properties={rotation:value};getDisplayApi().setDisplayProperties(this.selectedDisplay.id,properties,this.setPropertiesCallback_.bind(this))},onMirroredTap_(event){event.target.blur();const mirrorModeInfo={mode:this.isMirrored_(this.displays)?chrome.system.display.MirrorMode.OFF:chrome.system.display.MirrorMode.NORMAL};getDisplayApi().setMirrorMode(mirrorModeInfo,(()=>{const error=chrome.runtime.lastError;if(error){console.error("setMirrorMode Error: "+error.message)}}))},onUnifiedDesktopTap_(){const properties={isUnified:!this.unifiedDesktopMode_};getDisplayApi().setDisplayProperties(this.primaryDisplayId,properties,this.setPropertiesCallback_.bind(this))},onOverscanTap_(e){e.preventDefault();this.overscanDisplayId=this.selectedDisplay.id;this.showOverscanDialog_(true)},onCloseOverscanDialog_(){focusWithoutInk(assert(this.$$("#overscan")))},updateDisplayInfo_(){let displayIds="";let primaryDisplay=undefined;let selectedDisplay=undefined;for(let i=0;i<this.displays.length;++i){const display=this.displays[i];if(displayIds){displayIds+=","}displayIds+=display.id;if(display.isPrimary&&!primaryDisplay){primaryDisplay=display}if(this.selectedDisplay&&display.id===this.selectedDisplay.id){selectedDisplay=display}}this.displayIds=displayIds;this.primaryDisplayId=primaryDisplay&&primaryDisplay.id||"";selectedDisplay=selectedDisplay||primaryDisplay||this.displays&&this.displays[0];this.setSelectedDisplay_(selectedDisplay);this.unifiedDesktopMode_=!!primaryDisplay&&primaryDisplay.isUnified;if(!this.pendingSettingId_){return}this.showDeepLink(this.pendingSettingId_).then((result=>{if(result.deepLinkShown){this.pendingSettingId_=null}}))},setPropertiesCallback_(){if(chrome.runtime.lastError){console.error("setDisplayProperties Error: "+chrome.runtime.lastError.message)}},updateNightLightScheduleSettings_(){const scheduleType=this.getPref("ash.night_light.schedule_type").value;this.shouldOpenCustomScheduleCollapse_=scheduleType===NightLightScheduleType.CUSTOM;if(scheduleType===NightLightScheduleType.SUNSET_TO_SUNRISE){const nightLightStatus=this.getPref("ash.night_light.enabled").value;this.nightLightScheduleSubLabel_=nightLightStatus?this.i18n("displayNightLightOffAtSunrise"):this.i18n("displayNightLightOnAtSunset")}else{this.nightLightScheduleSubLabel_=""}},shouldShowArrangementSection_(){if(!this.displays){return false}return this.hasMultipleDisplays_()||this.isMirrored_(this.displays)},onDisplaysChanged_(){flush();const displayLayout=this.$$("#displayLayout");if(displayLayout){displayLayout.updateDisplays(this.displays,this.layouts,this.mirroringDestinationIds)}}});
/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/Polymer({_template:html`<!--css-build:shadow--><style scope="iron-collapse">:host {
  display: block;
        transition-duration: var(--iron-collapse-transition-duration, 300ms);
        
        overflow: visible;
}

:host(.iron-collapse-closed) {
  display: none;
}

:host(:not(.iron-collapse-opened)) {
  overflow: hidden;
}

</style>

    <slot></slot>
`,is:"iron-collapse",behaviors:[IronResizableBehavior],properties:{horizontal:{type:Boolean,value:false,observer:"_horizontalChanged"},opened:{type:Boolean,value:false,notify:true,observer:"_openedChanged"},transitioning:{type:Boolean,notify:true,readOnly:true},noAnimation:{type:Boolean},_desiredSize:{type:String,value:""}},get dimension(){return this.horizontal?"width":"height"},get _dimensionMax(){return this.horizontal?"maxWidth":"maxHeight"},get _dimensionMaxCss(){return this.horizontal?"max-width":"max-height"},hostAttributes:{role:"group","aria-hidden":"true"},listeners:{transitionend:"_onTransitionEnd"},toggle:function(){this.opened=!this.opened},show:function(){this.opened=true},hide:function(){this.opened=false},updateSize:function(size,animated){size=size==="auto"?"":size;var willAnimate=animated&&!this.noAnimation&&this.isAttached&&this._desiredSize!==size;this._desiredSize=size;this._updateTransition(false);if(willAnimate){var startSize=this._calcSize();if(size===""){this.style[this._dimensionMax]="";size=this._calcSize()}this.style[this._dimensionMax]=startSize;this.scrollTop=this.scrollTop;this._updateTransition(true);willAnimate=size!==startSize}this.style[this._dimensionMax]=size;if(!willAnimate){this._transitionEnd()}},enableTransition:function(enabled){Base._warn("`enableTransition()` is deprecated, use `noAnimation` instead.");this.noAnimation=!enabled},_updateTransition:function(enabled){this.style.transitionDuration=enabled&&!this.noAnimation?"":"0s"},_horizontalChanged:function(){this.style.transitionProperty=this._dimensionMaxCss;var otherDimension=this._dimensionMax==="maxWidth"?"maxHeight":"maxWidth";this.style[otherDimension]="";this.updateSize(this.opened?"auto":"0px",false)},_openedChanged:function(){this.setAttribute("aria-hidden",!this.opened);this._setTransitioning(true);this.toggleClass("iron-collapse-closed",false);this.toggleClass("iron-collapse-opened",false);this.updateSize(this.opened?"auto":"0px",true);if(this.opened){this.focus()}},_transitionEnd:function(){this.style[this._dimensionMax]=this._desiredSize;this.toggleClass("iron-collapse-closed",!this.opened);this.toggleClass("iron-collapse-opened",this.opened);this._updateTransition(false);this.notifyResize();this._setTransitioning(false)},_onTransitionEnd:function(event){if(dom(event).rootTarget===this){this._transitionEnd()}},_calcSize:function(){return this.getBoundingClientRect()[this.dimension]+"px"}});// Copyright 2016 The Chromium Authors. All rights reserved.
const ModifierKey={SEARCH_KEY:0,CONTROL_KEY:1,ALT_KEY:2,VOID_KEY:3,CAPS_LOCK_KEY:4,ESCAPE_KEY:5,BACKSPACE_KEY:6,ASSISTANT_KEY:7};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-keyboard"></style>
    <template is="dom-if" if="[[hasLauncherKey_]]">
      <div class="settings-box first" id="launcherKey">
        <div class="start" aria-hidden="true">Search</div>
        <settings-dropdown-menu label="Search" pref="{{prefs.settings.language.xkb_remap_search_key_to}}" menu-options="[[keyMapTargets_]]">
        </settings-dropdown-menu>
      </div>
    </template>
    <div class="settings-box">
      <div class="start" aria-hidden="true">Ctrl</div>
      <settings-dropdown-menu label="Ctrl" pref="{{prefs.settings.language.xkb_remap_control_key_to}}" menu-options="[[keyMapTargets_]]">
      </settings-dropdown-menu>
    </div>
    <div class="settings-box">
      <div class="start" aria-hidden="true">Alt</div>
      <settings-dropdown-menu label="Alt" pref="{{prefs.settings.language.xkb_remap_alt_key_to}}" menu-options="[[keyMapTargets_]]">
      </settings-dropdown-menu>
    </div>
    <div class="settings-box">
      <div class="start" aria-hidden="true">Escape</div>
      <settings-dropdown-menu label="Escape" pref="{{prefs.settings.language.remap_escape_key_to}}" menu-options="[[keyMapTargets_]]">
      </settings-dropdown-menu>
    </div>
    <div class="settings-box">
      <div class="start" aria-hidden="true">Backspace</div>
      <settings-dropdown-menu label="Backspace" pref="{{prefs.settings.language.remap_backspace_key_to}}" menu-options="[[keyMapTargets_]]">
      </settings-dropdown-menu>
    </div>
    <template is="dom-if" if="[[hasAssistantKey_]]">
      <div class="settings-box" id="assistantKey">
        <div class="start" aria-hidden="true">Assistant</div>
        <settings-dropdown-menu label="Assistant" pref="{{prefs.settings.language.xkb_remap_assistant_key_to}}" menu-options="[[keyMapTargets_]]">
        </settings-dropdown-menu>
      </div>
    </template>
    <template is="dom-if" if="[[showCapsLock_]]">
      <div class="settings-box" id="capsLockKey">
        <div class="start" aria-hidden="true">Caps Lock</div>
        <settings-dropdown-menu label="Caps Lock" pref="{{prefs.settings.language.remap_caps_lock_key_to}}" menu-options="[[keyMapTargets_]]">
        </settings-dropdown-menu>
      </div>
    </template>
    <template is="dom-if" if="[[showExternalMetaKey_]]">
      <div class="settings-box" id="externalMetaKey">
        <div class="start" aria-hidden="true">
          [[getExternalMetaKeyLabel_(hasLauncherKey_)]]
        </div>
        <settings-dropdown-menu label="[[getExternalMetaKeyLabel_(hasLauncherKey_)]]" pref="{{prefs.settings.language.remap_external_meta_key_to}}" menu-options="[[keyMapTargets_]]">
        </settings-dropdown-menu>
      </div>
    </template>
    <template is="dom-if" if="[[showAppleCommandKey_]]">
      <div class="settings-box" id="externalCommandKey">
        <div class="start" aria-hidden="true">
          [[getExternalCommandKeyLabel_(hasLauncherKey_)]]
        </div>
        <settings-dropdown-menu label="[[getExternalCommandKeyLabel_(hasLauncherKey_)]]" pref="{{prefs.settings.language.remap_external_command_key_to}}" menu-options="[[keyMapTargets_]]">
        </settings-dropdown-menu>
      </div>
    </template>
    <settings-toggle-button class="hr" pref="{{prefs.settings.language.send_function_keys}}" label="Treat top-row keys as function keys" sub-label="Hold the Search key to switch the behavior of the top-row keys" deep-link-focus-id$="[[Setting.kKeyboardFunctionKeys]]">
    </settings-toggle-button>
    <settings-toggle-button class="hr" pref="{{prefs.settings.language.xkb_auto_repeat_enabled_r2}}" label="Enable auto-repeat" deep-link-focus-id$="[[Setting.kKeyboardAutoRepeat]]">
    </settings-toggle-button>
    <iron-collapse opened="[[prefs.settings.language.xkb_auto_repeat_enabled_r2.value]]">
      <div class="settings-box continuation embedded">
        <div class="start" id="repeatDelayLabel" aria-hidden="true">
          Delay before repeat
        </div>
        <settings-slider id="delaySlider" pref="{{prefs.settings.language.xkb_auto_repeat_delay_r2}}" ticks="[[autoRepeatDelays_]]" disabled="[[
                !prefs.settings.language.xkb_auto_repeat_enabled_r2.value]]" label-aria="Delay before repeat" label-min="Long" label-max="Short">
        </settings-slider>
      </div>
      <div class="settings-box continuation embedded">
        <div class="start" id="repeatRateLabel" aria-hidden="true">
          Repeat rate
        </div>
        <settings-slider id="repeatRateSlider" pref="{{
                prefs.settings.language.xkb_auto_repeat_interval_r2}}" ticks="[[autoRepeatIntervals_]]" disabled="[[
                !prefs.settings.language.xkb_auto_repeat_enabled_r2.value]]" label-aria="Repeat rate" label-min="Slow" label-max="Fast">
        </settings-slider>
      </div>
    </iron-collapse>
    <cr-link-row id="keyboardShortcutViewer" class="hr" on-click="onShowKeyboardShortcutViewerTap_" label="View keyboard shortcuts" external="" deep-link-focus-id$="[[Setting.kKeyboardShortcuts]]"></cr-link-row>
    <cr-link-row id="showLanguagesInput" class="hr" on-click="onShowInputSettingsTap_" label="Change input settings" role-description="Subpage button">
    </cr-link-row>
<!--_html_template_end_-->`,is:"settings-keyboard",behaviors:[DeepLinkingBehavior,RouteObserverBehavior],properties:{prefs:{type:Object,notify:true},focusConfig:{type:Object,observer:"onFocusConfigChange_"},showCapsLock_:Boolean,hasLauncherKey_:Boolean,hasAssistantKey_:Boolean,showExternalMetaKey_:Boolean,showAppleCommandKey_:Boolean,keyMapTargets_:Object,autoRepeatDelays_:{type:Array,value:[2e3,1500,1e3,500,300,200,150],readOnly:true},autoRepeatIntervals_:{type:Array,value:[2e3,1e3,500,300,200,100,50,30,20],readOnly:true},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kKeyboardFunctionKeys,chromeos.settings.mojom.Setting.kKeyboardAutoRepeat,chromeos.settings.mojom.Setting.kKeyboardShortcuts])}},ready(){addWebUIListener("show-keys-changed",this.onShowKeysChange_.bind(this));DevicePageBrowserProxyImpl.getInstance().initializeKeyboard();this.setUpKeyMapTargets_()},currentRouteChanged(route,oldRoute){if(route!==routes.KEYBOARD){return}this.attemptDeepLink()},setUpKeyMapTargets_(){this.keyMapTargets_=[{value:ModifierKey.SEARCH_KEY,name:loadTimeData$1.getString("keyboardKeySearch")},{value:ModifierKey.CONTROL_KEY,name:loadTimeData$1.getString("keyboardKeyCtrl")},{value:ModifierKey.ALT_KEY,name:loadTimeData$1.getString("keyboardKeyAlt")},{value:ModifierKey.CAPS_LOCK_KEY,name:loadTimeData$1.getString("keyboardKeyCapsLock")},{value:ModifierKey.ESCAPE_KEY,name:loadTimeData$1.getString("keyboardKeyEscape")},{value:ModifierKey.BACKSPACE_KEY,name:loadTimeData$1.getString("keyboardKeyBackspace")},{value:ModifierKey.ASSISTANT_KEY,name:loadTimeData$1.getString("keyboardKeyAssistant")},{value:ModifierKey.VOID_KEY,name:loadTimeData$1.getString("keyboardKeyDisabled")}]},onFocusConfigChange_(){this.focusConfig.set(routes.OS_LANGUAGES_INPUT.path,(()=>{afterNextRender(this,(()=>{focusWithoutInk(assert(this.$$("#showLanguagesInput")))}))}))},onShowKeysChange_(keyboardParams){this.hasLauncherKey_=keyboardParams["hasLauncherKey"];this.hasAssistantKey_=keyboardParams["hasAssistantKey"];this.showCapsLock_=keyboardParams["showCapsLock"];this.showExternalMetaKey_=keyboardParams["showExternalMetaKey"];this.showAppleCommandKey_=keyboardParams["showAppleCommandKey"]},onShowKeyboardShortcutViewerTap_(){DevicePageBrowserProxyImpl.getInstance().showKeyboardShortcutViewer()},onShowInputSettingsTap_(){Router.getInstance().navigateTo(routes.OS_LANGUAGES_INPUT,null,true)},getExternalMetaKeyLabel_(hasLauncherKey){return loadTimeData$1.getString(hasLauncherKey?"keyboardKeyExternalMeta":"keyboardKeyMeta")},getExternalCommandKeyLabel_(hasLauncherKey){return loadTimeData$1.getString(hasLauncherKey?"keyboardKeyExternalCommand":"keyboardKeyCommand")}});// Copyright 2016 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-pointers">h2 {
  padding-inline-start: var(--cr-section-padding);
}

.subsection {
  padding-inline-end: var(--cr-section-padding);
        padding-inline-start: var(--cr-section-indent-padding);
}

.subsection > settings-toggle-button, .subsection > .settings-box {
  padding-inline-end: 0;
        padding-inline-start: 0;
}

#enableReverseScrollingToggle {
  border-top: none;
        padding-inline-end: 0;
}

</style>
    <div id="mouse" hidden$="[[!hasMouse]]">
      <!-- Subsection title only appears if multiple sections are visible. -->
      <h2 hidden$="[[!showHeadings_]]">Mouse</h2>
      <div class$="[[subsectionClass_]]">
        <div class="settings-box">
          <div class="start settings-box-text" id="mouseSwapButtonLabel">
            Swap primary mouse button
          </div>
          <settings-dropdown-menu id="mouseSwapButtonDropdown" aria-labeledby="mouseSwapButtonLabel" pref="{{prefs.settings.mouse.primary_right}}" menu-options="[[swapPrimaryOptions]]" deep-link-focus-id$="[[Setting.kMouseSwapPrimaryButtons]]">
          </settings-dropdown-menu>
        </div>
        <template is="dom-if" if="[[allowDisableAcceleration_]]">
          <settings-toggle-button id="mouseAcceleration" class="hr" pref="{{prefs.settings.mouse.acceleration}}" label="Enable mouse acceleration" deep-link-focus-id$="[[Setting.kMouseAcceleration]]">
          </settings-toggle-button>
        </template>
        <div class="settings-box">
          <div class="start" id="mouseSpeedLabel" aria-hidden="true">
            Mouse speed
          </div>
          <settings-slider id="mouseSpeedSlider" pref="{{prefs.settings.mouse.sensitivity2}}" ticks="[[sensitivityValues_]]" label-aria="Mouse speed" label-min="Slow" label-max="Fast" deep-link-focus-id$="[[Setting.kMouseSpeed]]">
          </settings-slider>
        </div>
        <template is="dom-if" if="[[allowScrollSettings_]]">
          <settings-toggle-button id="mouseScrollAcceleration" class="hr" pref="{{prefs.settings.mouse.scroll_acceleration}}" label="Enable mouse scroll acceleration" deep-link-focus-id$="[[Setting.kMouseScrollAcceleration]]">
          </settings-toggle-button>
          <div class="settings-box">
            <div class="start" id="mouseScrollSpeedLabel" aria-hidden="true">
              Mouse scroll speed
            </div>
            <settings-slider pref="{{prefs.settings.mouse.scroll_sensitivity}}" ticks="[[sensitivityValues_]]" label-aria="Mouse scroll speed" label-min="Slow" label-max="Fast">
            </settings-slider>
          </div>
        </template>
        <div class="settings-box" id="mouseReverseScrollRow" on-click="onMouseReverseScrollRowClicked_">
          <div class="start settings-box-text">
            <settings-localized-link on-click="onLearnMoreLinkClicked_" id="enableMouseReverseScrollingLabel" localized-string="Enable reverse scrolling. &lt;a&gt;Learn more&lt;/a&gt;" link-url="https://fydeos.com/help">
            </settings-localized-link>
          </div>
          <cr-toggle id="mouseReverseScroll" checked="{{prefs.settings.mouse.reverse_scroll.value}}" aria-labelledby="enableMouseReverseScrollingLabel" deep-link-focus-id$="[[Setting.kMouseReverseScrolling]]">
          </cr-toggle>
        </div>
      </div>
    </div>
    <div id="pointingStick" hidden$="[[!hasPointingStick]]">
      <!-- Subsection title only appears if multiple sections are visible. -->
      <h2 hidden$="[[!showHeadings_]]">TrackPoint</h2>
      <div class$="[[subsectionClass_]]">
        <div class="settings-box">
          <div class="start settings-box-text" id="pointingStickSwapButtonLabel">
            Primary TrackPoint button
          </div>
          <settings-dropdown-menu id="pointingStickSwapButtonDropdown" aria-labeledby="pointingStickSwapButtonLabel" pref="{{prefs.settings.pointing_stick.primary_right}}" menu-options="[[swapPrimaryOptions]]" deep-link-focus-id$="[[Setting.kPointingStickSwapPrimaryButtons]]">
          </settings-dropdown-menu>
        </div>
        <template is="dom-if" if="[[allowDisableAcceleration_]]">
          <settings-toggle-button id="pointingStickAcceleration" class="hr" pref="{{prefs.settings.pointing_stick.acceleration}}" label="Enable TrackPoint acceleration" deep-link-focus-id$="[[Setting.kPointingStickAcceleration]]">
          </settings-toggle-button>
        </template>
        <div class="settings-box">
          <div class="start" id="pointingStickSpeedLabel" aria-hidden="true">
            TrackPoint speed
          </div>
          <settings-slider id="pointingStickSpeedSlider" pref="{{prefs.settings.pointing_stick.sensitivity}}" ticks="[[sensitivityValues_]]" label-aria="TrackPoint speed" label-min="Slow" label-max="Fast" deep-link-focus-id$="[[Setting.kPointingStickSpeed]]">
          </settings-slider>
        </div>
      </div>
    </div>
    <div id="touchpad" hidden$="[[!hasTouchpad]]">
      <!-- Subsection title only appears if multiple sections are visible. -->
      <h2 hidden$="[[!showHeadings_]]">Touchpad</h2>
      <div class$="[[subsectionClass_]]">
        <settings-toggle-button id="enableTapToClick" pref="{{prefs.settings.touchpad.enable_tap_to_click}}" label="Enable tap-to-click" deep-link-focus-id$="[[Setting.kTouchpadTapToClick]]">
        </settings-toggle-button>
        <settings-toggle-button id="enableTapDragging" class="hr" pref="{{prefs.settings.touchpad.enable_tap_dragging}}" label="Enable tap dragging" deep-link-focus-id$="[[Setting.kTouchpadTapDragging]]">
        </settings-toggle-button>
        <template is="dom-if" if="[[allowDisableAcceleration_]]">
          <settings-toggle-button id="touchpadAcceleration" class="hr" pref="{{prefs.settings.touchpad.acceleration}}" label="Enable touchpad acceleration" deep-link-focus-id$="[[Setting.kTouchpadAcceleration]]">
          </settings-toggle-button>
        </template>
        <div class="settings-box">
          <div class="start" id="touchpadSpeedLabel" aria-hidden="true">
            Touchpad speed
          </div>
            <settings-slider id="touchpadSensitivity" pref="{{prefs.settings.touchpad.sensitivity2}}" ticks="[[sensitivityValues_]]" label-aria="Touchpad speed" label-min="Slow" label-max="Fast" deep-link-focus-id$="[[Setting.kTouchpadSpeed]]">
            </settings-slider>
        </div>
        <template is="dom-if" if="[[allowScrollSettings_]]">
          <settings-toggle-button id="touchpadScrollAcceleration" class="hr" pref="{{prefs.settings.touchpad.scroll_acceleration}}" label="Enable touchpad scroll acceleration" deep-link-focus-id$="[[Setting.kTouchpadScrollAcceleration]]">
          </settings-toggle-button>
          <div class="settings-box">
            <div class="start" id="touchpadScrollSpeedLabel" aria-hidden="true">
              Touchpad scroll speed
            </div>
            <settings-slider pref="{{prefs.settings.touchpad.scroll_sensitivity}}" ticks="[[sensitivityValues_]]" label-aria="Touchpad scroll speed" label-min="Slow" label-max="Fast">
            </settings-slider>
          </div>
        </template>
        <div class="settings-box" id="reverseScrollRow" on-click="onTouchpadReverseScrollRowClicked_">
          <div class="start settings-box-text">
            <settings-localized-link on-click="onLearnMoreLinkClicked_" id="enableReverseScrollingLabel" localized-string="Enable reverse scrolling. &lt;a&gt;Learn more&lt;/a&gt;" link-url="https://fydeos.com/help">
            </settings-localized-link>
          </div>
          <cr-toggle id="enableReverseScrollingToggle" checked="{{prefs.settings.touchpad.natural_scroll.value}}" aria-labelledby="enableReverseScrollingLabel" deep-link-focus-id$="[[Setting.kTouchpadReverseScrolling]]">
          </cr-toggle>
        </div>
      </div>
    </div>
<!--_html_template_end_-->`,is:"settings-pointers",behaviors:[DeepLinkingBehavior,PrefsBehavior,RouteObserverBehavior],properties:{prefs:{type:Object,notify:true},hasMouse:Boolean,hasPointingStick:Boolean,hasTouchpad:Boolean,swapPrimaryOptions:{readOnly:true,type:Array,value(){return[{value:false,name:loadTimeData$1.getString("primaryMouseButtonLeft")},{value:true,name:loadTimeData$1.getString("primaryMouseButtonRight")}]}},showHeadings_:{type:Boolean,computed:"computeShowHeadings_(hasMouse, hasPointingStick, hasTouchpad)"},subsectionClass_:{type:String,computed:"computeSubsectionClass_(hasMouse, hasPointingStick, "+"hasTouchpad)"},sensitivityValues_:{type:Array,value:[1,2,3,4,5],readOnly:true},allowDisableAcceleration_:{type:Boolean,value(){return loadTimeData$1.getBoolean("allowDisableMouseAcceleration")}},allowScrollSettings_:{type:Boolean,value(){return loadTimeData$1.getBoolean("allowScrollSettings")}},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kTouchpadTapToClick,chromeos.settings.mojom.Setting.kTouchpadTapDragging,chromeos.settings.mojom.Setting.kTouchpadReverseScrolling,chromeos.settings.mojom.Setting.kTouchpadAcceleration,chromeos.settings.mojom.Setting.kTouchpadScrollAcceleration,chromeos.settings.mojom.Setting.kTouchpadSpeed,chromeos.settings.mojom.Setting.kPointingStickAcceleration,chromeos.settings.mojom.Setting.kPointingStickSpeed,chromeos.settings.mojom.Setting.kPointingStickSwapPrimaryButtons,chromeos.settings.mojom.Setting.kMouseSwapPrimaryButtons,chromeos.settings.mojom.Setting.kMouseReverseScrolling,chromeos.settings.mojom.Setting.kMouseAcceleration,chromeos.settings.mojom.Setting.kMouseScrollAcceleration,chromeos.settings.mojom.Setting.kMouseSpeed])}},computeShowHeadings_(hasMouse,hasPointingStick,hasTouchpad){const sectionVisibilities=[hasMouse,hasPointingStick,hasTouchpad];const numVisibleSections=sectionVisibilities.filter((x=>x)).length;return numVisibleSections>1},computeSubsectionClass_(hasMouse,hasPointingStick,hasTouchpad){const subsections=this.computeShowHeadings_(hasMouse,hasPointingStick,hasTouchpad);return subsections?"subsection":""},currentRouteChanged(route,oldRoute){if(route!==routes.POINTERS){return}this.attemptDeepLink()},onLearnMoreLinkClicked_:function(event){if(!Array.isArray(event.path)||!event.path.length){return}if(event.path[0].tagName==="A"){event.stopPropagation()}},onMouseReverseScrollRowClicked_:function(){this.setPrefValue("settings.mouse.reverse_scroll",!this.getPref("settings.mouse.reverse_scroll").value)},onTouchpadReverseScrollRowClicked_:function(){this.setPrefValue("settings.touchpad.natural_scroll",!this.getPref("settings.touchpad.natural_scroll").value)}});// Copyright 2017 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-flex cr-shared-style settings-shared md-select" scope="settings-power">.indented {
  margin-inline-start: var(--cr-section-indent-padding);
        padding-inline-start: 0;
}

cr-policy-indicator {
  padding-inline-end: 8px;
}

</style>
    <div id="powerSourceRow" class="cr-row first" hidden$="[[!batteryStatus_.present]]">
      <div class="flex cr-padded-text" aria-hidden="true">
        <div id="powerSourceLabel">[[powerSourceLabel_]]</div>
        <div id="batteryStatus" class="secondary">[[batteryStatus_.statusText]]</div>
      </div>
      <select id="powerSource" class="md-select" hidden$="[[!showPowerSourceDropdown_]]" aria-labelledby="powerSourceLabel" aria-describedby="batteryStatus" on-change="onPowerSourceChange_" deep-link-focus-id$="[[Setting.kPowerSource]]">
        <option value="" selected="[[isEqual_('', selectedPowerSourceId_)]]">
          Battery
        </option>
        <template is="dom-repeat" items="[[powerSources_]]">
          <option value="[[item.id]]" selected="[[isEqual_(item.id, selectedPowerSourceId_)]]">
            [[item.description]]
          </option>
        </template>
      </select>
      <div hidden$="[[showPowerSourceDropdown_]]" aria-labelledby="powerSourceLabel" aria-describedby="batteryStatus">
        [[powerSourceName_]]
      </div>
    </div>

    <div class$="cr-row [[getFirst_(batteryStatus_.present)]]">
      <div id="powerIdleLabel" class="flex" aria-label="true">
        When idle
      </div>
      <template is="dom-if" if="[[!batteryStatus_.present]]" restamp="">
        <template is="dom-if" if="[[acIdleManaged_]]" restamp="">
          <cr-policy-indicator id="noBatteryAcIdleManagedIndicator" indicator-type="devicePolicy" icon-aria-label="Idle action while charging">
          </cr-policy-indicator>
        </template>
        <select id="noBatteryAcIdleSelect" class="md-select" on-change="onAcIdleSelectChange_" disabled="[[shouldAcIdleSelectBeDisabled_]]" aria-label="Idle action while charging" deep-link-focus-id$="[[Setting.kPowerIdleBehaviorWhileCharging]]">
          <template is="dom-repeat" items="[[acIdleOptions_]]">
            <option value="[[item.value]]" selected="[[item.selected]]">
              [[item.name]]
            </option>
          </template>
        </select>
      </template>
    </div>

    <template is="dom-if" if="[[batteryStatus_.present]]" restamp="">
      <div id="acIdleSettingBox" class="cr-row indented first">
        <div class="flex" aria-hidden="true">
          While charging
        </div>
        <template is="dom-if" if="[[acIdleManaged_]]" restamp="">
          <cr-policy-indicator id="acIdleManagedIndicator" indicator-type="devicePolicy" icon-aria-label="Idle action while charging">
          </cr-policy-indicator>
        </template>
        <select id="acIdleSelect" class="md-select" on-change="onAcIdleSelectChange_" disabled="[[shouldAcIdleSelectBeDisabled_]]" aria-label="Idle action while charging" deep-link-focus-id$="[[Setting.kPowerIdleBehaviorWhileCharging]]">
          <template is="dom-repeat" items="[[acIdleOptions_]]">
            <option value="[[item.value]]" selected="[[item.selected]]">
              [[item.name]]
            </option>
          </template>
        </select>
      </div>

      <div id="batteryIdleSettingBox" class="cr-row indented">
        <div class="flex" aria-hidden="true">
          While on battery
        </div>
        <template is="dom-if" if="[[batteryIdleManaged_]]" restamp="">
          <cr-policy-indicator id="batteryIdleManagedIndicator" indicator-type="devicePolicy" icon-aria-label="Idle action while on battery">
          </cr-policy-indicator>
        </template>
        <select id="batteryIdleSelect" class="md-select" on-change="onBatteryIdleSelectChange_" disabled="[[shouldBatteryIdleSelectBeDisabled_]]" aria-label="Idle action while on battery" deep-link-focus-id$="[[Setting.kPowerIdleBehaviorWhileOnBattery]]">
          <template is="dom-repeat" items="[[batteryIdleOptions_]]">
            <option value="[[item.value]]" selected="[[item.selected]]">
              [[item.name]]
            </option>
          </template>
        </select>
      </div>
    </template>

    <settings-toggle-button hidden$="[[!hasLid_]]" id="lidClosedToggle" pref="[[lidClosedPref_]]" label="[[lidClosedLabel_]]" on-settings-boolean-control-change="onLidClosedToggleChange_" no-set-pref="" deep-link-focus-id$="[[Setting.kSleepWhenLaptopLidClosed]]">
    </settings-toggle-button>
<!--_html_template_end_-->`,is:"settings-power",behaviors:[DeepLinkingBehavior,I18nBehavior,RouteObserverBehavior,WebUIListenerBehavior],properties:{selectedPowerSourceId_:String,batteryStatus_:Object,lowPowerCharger_:Boolean,acIdleManaged_:Boolean,batteryIdleManaged_:Boolean,lidClosedLabel_:String,hasLid_:Boolean,powerSources_:Array,powerSourceLabel_:{type:String,computed:"computePowerSourceLabel_(powerSources_, batteryStatus_.calculating)"},showPowerSourceDropdown_:{type:Boolean,computed:"computeShowPowerSourceDropdown_(powerSources_)",value:false},powerSourceName_:{type:String,computed:"computePowerSourceName_(powerSources_, lowPowerCharger_)"},acIdleOptions_:{type:Array,value(){return[]}},batteryIdleOptions_:{type:Array,value(){return[]}},shouldAcIdleSelectBeDisabled_:{type:Boolean,computed:"hasSingleOption_(acIdleOptions_)"},shouldBatteryIdleSelectBeDisabled_:{type:Boolean,computed:"hasSingleOption_(batteryIdleOptions_)"},lidClosedPref_:{type:Object,value(){return{}}},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kPowerIdleBehaviorWhileCharging,chromeos.settings.mojom.Setting.kPowerSource,chromeos.settings.mojom.Setting.kSleepWhenLaptopLidClosed,chromeos.settings.mojom.Setting.kPowerIdleBehaviorWhileOnBattery])}},browserProxy_:null,created(){this.browserProxy_=DevicePageBrowserProxyImpl.getInstance()},attached(){this.addWebUIListener("battery-status-changed",this.set.bind(this,"batteryStatus_"));this.addWebUIListener("power-sources-changed",this.powerSourcesChanged_.bind(this));this.browserProxy_.updatePowerStatus();this.addWebUIListener("power-management-settings-changed",this.powerManagementSettingsChanged_.bind(this));this.browserProxy_.requestPowerManagementSettings()},beforeDeepLinkAttempt(settingId){if(settingId===chromeos.settings.mojom.Setting.kPowerSource&&this.$.powerSource.hidden){return false}return true},currentRouteChanged(route,oldRoute){if(route!==routes.POWER){return}this.attemptDeepLink()},computePowerSourceLabel_(powerSources,calculating){return this.i18n(calculating?"calculatingPower":powerSources&&powerSources.length?"powerSourceLabel":"powerSourceBattery")},computeShowPowerSourceDropdown_(powerSources){return powerSources.length>0&&powerSources.every((function(source){return!source.is_dedicated_charger}))},computePowerSourceName_(powerSources,lowPowerCharger){if(lowPowerCharger){return this.i18n("powerSourceLowPowerCharger")}if(powerSources.length){return this.i18n("powerSourceAcAdapter")}return""},onPowerSourceChange_(){this.browserProxy_.setPowerSource(this.$.powerSource.value)},hasSingleOption_(idleOptions){return idleOptions.length===1},onAcIdleSelectChange_(event){const behavior=parseInt(event.target.value,10);this.browserProxy_.setIdleBehavior(behavior,true);recordSettingChange()},onBatteryIdleSelectChange_(){const behavior=parseInt(this.$$("#batteryIdleSelect").value,10);this.browserProxy_.setIdleBehavior(behavior,false);recordSettingChange()},onLidClosedToggleChange_(){this.browserProxy_.setLidClosedBehavior(this.$.lidClosedToggle.checked?LidClosedBehavior.SUSPEND:LidClosedBehavior.DO_NOTHING);recordSettingChange()},powerSourcesChanged_(sources,selectedId,lowPowerCharger){this.powerSources_=sources;this.selectedPowerSourceId_=selectedId;this.lowPowerCharger_=lowPowerCharger},updateLidClosedLabelAndPref_(behavior,isControlled){const pref={key:"",type:chrome.settingsPrivate.PrefType.BOOLEAN,value:true};switch(behavior){case LidClosedBehavior.SUSPEND:case LidClosedBehavior.DO_NOTHING:this.lidClosedLabel_=loadTimeData$1.getString("powerLidSleepLabel");pref.value=behavior===LidClosedBehavior.SUSPEND;break;case LidClosedBehavior.STOP_SESSION:this.lidClosedLabel_=loadTimeData$1.getString("powerLidSignOutLabel");break;case LidClosedBehavior.SHUT_DOWN:this.lidClosedLabel_=loadTimeData$1.getString("powerLidShutDownLabel");break}if(isControlled){pref.enforcement=chrome.settingsPrivate.Enforcement.ENFORCED;pref.controlledBy=chrome.settingsPrivate.ControlledBy.USER_POLICY}this.lidClosedPref_=pref},getIdleOption_(idleBehavior,currIdleBehavior){const selected=idleBehavior===currIdleBehavior;switch(idleBehavior){case IdleBehavior.DISPLAY_OFF_SLEEP:return{value:idleBehavior,name:loadTimeData$1.getString("powerIdleDisplayOffSleep"),selected:selected};case IdleBehavior.DISPLAY_OFF:return{value:idleBehavior,name:loadTimeData$1.getString("powerIdleDisplayOff"),selected:selected};case IdleBehavior.DISPLAY_ON:return{value:idleBehavior,name:loadTimeData$1.getString("powerIdleDisplayOn"),selected:selected};case IdleBehavior.SHUT_DOWN:return{value:idleBehavior,name:loadTimeData$1.getString("powerIdleDisplayShutDown"),selected:selected};case IdleBehavior.STOP_SESSION:return{value:idleBehavior,name:loadTimeData$1.getString("powerIdleDisplayStopSession"),selected:selected};default:assertNotReached$1("Unknown IdleBehavior type")}},updateIdleOptions_(acIdleBehaviors,batteryIdleBehaviors,currAcIdleBehavior,currBatteryIdleBehavior){this.acIdleOptions_=acIdleBehaviors.map((idleBehavior=>this.getIdleOption_(idleBehavior,currAcIdleBehavior)));this.batteryIdleOptions_=batteryIdleBehaviors.map((idleBehavior=>this.getIdleOption_(idleBehavior,currBatteryIdleBehavior)))},powerManagementSettingsChanged_(powerManagementSettings){this.updateIdleOptions_(powerManagementSettings.possibleAcIdleBehaviors||[],powerManagementSettings.possibleBatteryIdleBehaviors||[],powerManagementSettings.currentAcIdleBehavior,powerManagementSettings.currentBatteryIdleBehavior);this.acIdleManaged_=powerManagementSettings.acIdleManaged;this.batteryIdleManaged_=powerManagementSettings.batteryIdleManaged;this.hasLid_=powerManagementSettings.hasLid;this.updateLidClosedLabelAndPref_(powerManagementSettings.lidClosedBehavior,powerManagementSettings.lidClosedControlled)},getFirst_(batteryPresent){return!batteryPresent?"first":""},isEqual_(lhs,rhs){return lhs===rhs}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="storage-external-entry">settings-toggle-button {
  margin-inline-end: var(--cr-section-padding);
        margin-inline-start: var(--cr-section-indent-padding);
        padding-inline-end: 0;
        padding-inline-start: 0;
}

</style>
    <settings-toggle-button class="hr" pref="{{visiblePref_}}" label="[[label]]" on-settings-boolean-control-change="onVisibleChange_">
    </settings-toggle-button>
<!--_html_template_end_-->`,is:"storage-external-entry",behaviors:[WebUIListenerBehavior,PrefsBehavior],properties:{uuid:String,label:String,visiblePref_:{type:Object,value(){return{}}}},observers:["updateVisible_(prefs.arc.visible_external_storages.*)"],onVisibleChange_(event){const visible=!!event.target.checked;if(visible){this.appendPrefListItem("arc.visible_external_storages",this.uuid)}else{this.deletePrefListItem("arc.visible_external_storages",this.uuid)}chrome.metricsPrivate.recordBoolean("Arc.ExternalStorage.SetVisible",visible)},updateVisible_(){const uuids=this.getPref("arc.visible_external_storages").value;const visible=uuids.some((id=>id===this.uuid));const pref={key:"",type:chrome.settingsPrivate.PrefType.BOOLEAN,value:visible};this.visiblePref_=pref}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-storage-external">h2 {
  padding-inline-start: var(--cr-section-padding);
}

</style>
    <div class="settings-box first">
      <settings-localized-link localized-string="[[i18nAdvanced('storageAndroidAppsExternalDrivesNote')]]">
      </settings-localized-link>
    </div>
    <h2>[[computeStorageListHeader_(externalStorages_)]]</h2>
    <iron-list id="removableDevices" preserve-focus="" items="[[externalStorages_]]">
      <template>
        <storage-external-entry uuid="[[item.uuid]]" label="[[item.label]]" prefs="{{prefs}}">
        </storage-external-entry>
      </template>
    </iron-list>
<!--_html_template_end_-->`,is:"settings-storage-external",behaviors:[I18nBehavior,WebUIListenerBehavior],properties:{externalStorages_:{type:Array,value(){return[]}},externalStorageVisiblePref_:{type:Object,value(){return{}}}},browserProxy_:null,created(){this.browserProxy_=DevicePageBrowserProxyImpl.getInstance()},attached(){this.browserProxy_.setExternalStoragesUpdatedCallback(this.handleExternalStoragesUpdated_.bind(this));this.browserProxy_.updateExternalStorages()},handleExternalStoragesUpdated_(storages){this.externalStorages_=storages},computeStorageListHeader_(externalStorages){return this.i18n(!externalStorages||externalStorages.length===0?"storageExternalStorageEmptyListHeader":"storageExternalStorageListHeader")}});// Copyright 2016 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-storage">progress {
  -webkit-appearance: none;
        display: block;
        height: 28px;
        width: 100%;
}

progress::-webkit-progress-bar {
  background-color: rgba(0, 0, 0, 0.06);
        border-radius: 2px;
}

progress::-webkit-progress-value {
  background-color: rgb(0, 175, 255);
        border-radius: 2px;
}

progress.space-low::-webkit-progress-value {
  background-color: rgb(255, 176, 0);
}

progress.space-critically-low::-webkit-progress-value {
  background-color: var(--google-red-500);
}

iron-icon {
  --iron-icon-fill-color: rgb(255, 176, 0);
        --iron-icon-height: 32px;
        --iron-icon-width: 32px;
}

#criticallyLowMessage iron-icon {
  --iron-icon-fill-color: var(--google-red-500);
}

.storage-size {
  color: var(--cr-secondary-text-color);
}

.message-area {
  background-color: var(--google-grey-100);
        border-radius: 2px;
        display: flex;
        margin: 14px 0 16px;
        padding-bottom: 12px;
        padding-inline-end: 48px;
        padding-inline-start: 16px;
        padding-top: 16px;
        width: 100%;
}

.message-area > iron-icon {
  flex: none;
        padding-inline-end: 16px;
}

.message-title {
  font-size: 115%;
}

.message-description {
  color: rgb(90, 90, 90);
        font-size: 92%;
        line-height: 1.6em;
        margin: 1em 0;
}

#barArea {
  display: flex;
        flex-direction: column;
        margin: 24px 0 54px;
        width: 100%;
}

#barLabels {
  display: flex;
}

.bar-label {
  display: flex;
        flex-direction: column;
}

.bar-label .vertical-line {
  align-self: center;
        background-color: rgba(0, 0, 0, 0.17);
        height: 8px;
        margin-bottom: 4px;
        width: 1px;
}

.bar-label .wrapper {
  color: rgb(51, 51, 51);
        text-align: center;
        white-space: nowrap;
}

.end-aligned .wrapper {
  direction: rtl;
}

:host-context([dir=rtl]) .end-aligned .wrapper {
  direction: ltr;
}

.end-aligned .wrapper span {
  direction: initial;
        unicode-bidi: embed;
}

#deleteButton {
  display: none;
}

[actionable] #deleteButton {
  display: block;
}

button > iron-icon {
  --iron-icon-fill-color: var(--google-grey-400);
        --iron-icon-height: 24px;
        --iron-icon-width: 24px;
}

</style>
    <template is="dom-if" if="[[isSpaceLow_(sizeStat_.spaceState)]]">
      <div class="settings-box first">
        <div id="lowMessage" class="message-area">
          <iron-icon icon="cr:warning"></iron-icon>
          <div class="message">
            <div class="message-title">Device is low on space</div>
            <div class="message-description">
              <span>To free up space, delete files from device storage.</span>
              <span>If space isnâ€™t made available, users and data may be automatically removed.</span>
            </div>
          </div>
        </div>
      </div>
    </template>
    <template is="dom-if" if="[[isSpaceCriticallyLow_(sizeStat_.spaceState)]]">
      <div class="settings-box first">
        <div id="criticallyLowMessage" class="message-area">
          <iron-icon icon="cr:warning"></iron-icon>
          <div class="message">
            <div class="message-title">
              Device space critically low
            </div>
            <div class="message-description">
              <span>Free up at least 512 MB of space or your device will become unresponsive. To free up space, delete files from device storage.</span>
              <span>If you donâ€™t free up space, users and data may be automatically removed.</span>
            </div>
          </div>
        </div>
      </div>
    </template>
    <div class="settings-box first">
      <div id="barArea">
        <progress id="bar" class$="[[getBarClass_(sizeStat_.spaceState)]]" value="[[sizeStat_.usedRatio]]" aria-label="Storage Usage Overview" aria-describedby="barLabels">
        </progress>
        <div id="barLabels" aria-hidden="true">
          <div id="inUseLabelArea" class="bar-label">
            <div class="vertical-line"></div>
            <div class="wrapper"><span>In use</span></div>
            <div class="wrapper">
              <span class="storage-size">[[sizeStat_.usedSize]]</span>
            </div>
          </div>
          <div id="availableLabelArea" class="bar-label end-aligned">
            <div class="vertical-line"></div>
            <div class="wrapper"><span>Available</span></div>
            <div class="wrapper">
              <span class="storage-size">[[sizeStat_.availableSize]]</span>
            </div>
          </div>
        </div>
      </div>
    </div>
    <cr-link-row id="myFilesSize" class="hr" on-click="onMyFilesTap_" label="My files" sub-label="Calculatingâ€¦" external="">
    </cr-link-row>
    <cr-link-row id="browsingDataSize" class="hr" on-click="onBrowsingDataTap_" label="Browsing data" sub-label="Calculatingâ€¦" external="">
    </cr-link-row>
    <cr-link-row id="appsSize" class="hr" on-click="onAppsTap_" label="Apps and extensions" sub-label="Calculatingâ€¦" external="">
    </cr-link-row>
    <template is="dom-if" if="[[showCrostiniStorage_]]">
      <cr-link-row id="crostiniSize" class="hr" on-click="onCrostiniTap_" label="Linux storage" sub-label="Calculatingâ€¦" role-description="Subpage button">
      </cr-link-row>
    </template>
    <template is="dom-if" if="[[showOtherUsers_]]">
      <cr-link-row id="otherUsersSize" class="hr" on-click="onOtherUsersTap_" label="Other users" sub-label="Calculatingâ€¦" role-description="Subpage button">
      </cr-link-row>
    </template>
    <template is="dom-if" if="[[!isGuest_]]">
      <div id="systemSize" class="settings-box two-line single-column stretch settings-box-text" aria-describedby="systemSizeLabel" aria-labelledby="systemSizeSubLabel">
        <div id="systemSizeLabel" class="label" aria-hidden="true">
          System
        </div>
        <div id="systemSizeSubLabel" class="secondary label" aria-hidden="true">
          Calculatingâ€¦
        </div>
      </div>
    </template>
    <template is="dom-if" if="[[androidEnabled]]">
      <cr-link-row id="externalStoragePreferences" class="hr" on-click="onExternalStoragePreferencesTap_" label="External storage preferences" role-description="Subpage button">
      </cr-link-row>
    </template>
<!--_html_template_end_-->`,is:"settings-storage",behaviors:[RouteObserverBehavior,RouteOriginBehavior,WebUIListenerBehavior],properties:{androidEnabled:Boolean,showCrostiniStorage_:{type:Boolean,value:false},showCrostini:Boolean,isGuest_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isGuest")}},showOtherUsers_:{type:Boolean,value(){return!loadTimeData$1.getBoolean("isGuest")}},sizeStat_:Object},route_:routes.STORAGE,observers:["handleCrostiniEnabledChanged_(prefs.crostini.enabled.value)"],updateTimerId_:-1,browserProxy_:null,attached(){this.addWebUIListener("storage-size-stat-changed",this.handleSizeStatChanged_.bind(this));this.addWebUIListener("storage-my-files-size-changed",this.handleMyFilesSizeChanged_.bind(this));this.addWebUIListener("storage-browsing-data-size-changed",this.handleBrowsingDataSizeChanged_.bind(this));this.addWebUIListener("storage-apps-size-changed",this.handleAppsSizeChanged_.bind(this));this.addWebUIListener("storage-crostini-size-changed",this.handleCrostiniSizeChanged_.bind(this));if(!this.isGuest_){this.addWebUIListener("storage-other-users-size-changed",this.handleOtherUsersSizeChanged_.bind(this));this.addWebUIListener("storage-system-size-changed",this.handleSystemSizeChanged_.bind(this))}},ready(){const r=routes;this.addFocusConfig_(r.CROSTINI_DETAILS,"#crostiniSize");this.addFocusConfig_(r.ACCOUNTS,"#otherUsersSize");this.addFocusConfig_(r.EXTERNAL_STORAGE_PREFERENCES,"#externalStoragePreferences");this.browserProxy_=DevicePageBrowserProxyImpl.getInstance()},currentRouteChanged(newRoute,oldRoute){RouteOriginBehaviorImpl.currentRouteChanged.call(this,newRoute,oldRoute);if(Router.getInstance().getCurrentRoute()!==routes.STORAGE){return}this.onPageShown_()},onPageShown_(){this.browserProxy_.updateStorageInfo();this.startPeriodicUpdate_()},onMyFilesTap_(){this.browserProxy_.openMyFiles()},onBrowsingDataTap_(){window.open("chrome://settings/clearBrowserData")},onAppsTap_(){window.location="chrome://os-settings/app-management"},onCrostiniTap_(){Router.getInstance().navigateTo(routes.CROSTINI_DETAILS,null,true)},onOtherUsersTap_(){Router.getInstance().navigateTo(routes.ACCOUNTS,null,true)},onExternalStoragePreferencesTap_(){Router.getInstance().navigateTo(routes.EXTERNAL_STORAGE_PREFERENCES)},handleSizeStatChanged_(sizeStat){this.sizeStat_=sizeStat;this.$.inUseLabelArea.style.width=sizeStat.usedRatio*100+"%";this.$.availableLabelArea.style.width=(1-sizeStat.usedRatio)*100+"%"},handleMyFilesSizeChanged_(size){this.$.myFilesSize.subLabel=size},handleBrowsingDataSizeChanged_(size){this.$.browsingDataSize.subLabel=size},handleAppsSizeChanged_(size){this.$$("#appsSize").subLabel=size},handleCrostiniSizeChanged_(size){if(this.showCrostiniStorage_){this.$$("#crostiniSize").subLabel=size}},handleOtherUsersSizeChanged_(size,noOtherUsers){if(this.isGuest_||noOtherUsers){this.showOtherUsers_=false;return}this.showOtherUsers_=true;this.$$("#otherUsersSize").subLabel=size},handleSystemSizeChanged_(size){this.$$("#systemSizeSubLabel").innerText=size},handleCrostiniEnabledChanged_(enabled){this.showCrostiniStorage_=enabled&&this.showCrostini},startPeriodicUpdate_(){if(this.updateTimerId_===-1){this.updateTimerId_=window.setInterval((()=>{if(Router.getInstance().getCurrentRoute()!==routes.STORAGE){this.stopPeriodicUpdate_();return}this.browserProxy_.updateStorageInfo()}),5e3)}},stopPeriodicUpdate_(){if(this.updateTimerId_!==-1){window.clearInterval(this.updateTimerId_);this.updateTimerId_=-1}},isSpaceLow_(spaceState){return spaceState===StorageSpaceState.LOW},isSpaceCriticallyLow_(spaceState){return spaceState===StorageSpaceState.CRITICALLY_LOW},getBarClass_(spaceState){switch(spaceState){case StorageSpaceState.LOW:return"space-low";case StorageSpaceState.CRITICALLY_LOW:return"space-critically-low";default:return""}}});// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const FIND_MORE_APPS_URL="https://play.google.com/store/apps/"+"collection/promotion_30023cb_stylus_apps";Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared md-select" scope="settings-stylus">.settings-box > .secondary {
  align-items: center;
        display: flex;
        
        margin-top: 0;
}

paper-spinner-lite {
  height: var(--cr-icon-size);
        margin-inline-start: 12px;
        width: var(--cr-icon-size);
}

cr-policy-indicator {
  padding: 0 var(--cr-controlled-by-spacing);
}

#selectApp {
  width: 400px;
}

#note-taking-app-lock-screen-settings {
  padding: 0 var(--cr-section-padding);
}

</style>

    <settings-toggle-button id="enableStylusToolsToggle" pref="{{prefs.settings.enable_stylus_tools}}" label="Show stylus tools in the shelf" deep-link-focus-id$="[[Setting.kStylusToolsInShelf]]">
    </settings-toggle-button>

    <template is="dom-if" if="[[hasInternalStylus_]]">
      <settings-toggle-button id="launchPaletteOnEjectEventToggle" class="hr" pref="{{prefs.settings.launch_palette_on_eject_event}}" label="Open stylus tools when the stylus is removed" disabled="[[!prefs.settings.enable_stylus_tools.value]]">
      </settings-toggle-button>
    </template>

    <div class="settings-box">
      <div id="stylusNoteTakingAppLabel" class="start">
        Note-taking app
      </div>

      <div id="no-apps" class="secondary" hidden$="[[!showNoApps_(appChoices_, waitingForAndroid_)]]">
        None available
      </div>

      <div id="waiting" class="secondary" hidden$="[[!waitingForAndroid_]]">
        Loading appsâ€¦
        <paper-spinner-lite active=""></paper-spinner-lite>
      </div>

      <select id="selectApp" class="md-select" on-change="onSelectedAppChanged_" aria-labelledby="stylusNoteTakingAppLabel" hidden$="[[!showApps_(appChoices_, waitingForAndroid_)]]" deep-link-focus-id$="[[Setting.kStylusNoteTakingApp]]">
        <template is="dom-repeat" items="[[appChoices_]]">
          <option value="[[item.value]]" selected="[[item.preferred]]">
            [[item.name]]
          </option>
        </template>
      </select>
    </div>

    <cr-link-row class="hr" on-click="onFindAppsTap_" ***---fydeos="" begin="" ***---="" hidden$="[[!showStylusFindMoreApps_(prefs.arc.enabled.value)]]" end="" label="Find more stylus apps" sub-label="Open Google Play" external=""></cr-link-row>

    <template is="dom-if" if="[[supportsLockScreen_(selectedApp_)]]">
      <div id="note-taking-app-lock-screen-settings">
        <h2>Lock screen notes</h2>

        <div class="settings-box first">
          <div id="lock-screen-toggle-label" class="start" actionable$="[[!disallowedOnLockScreenByPolicy_(selectedApp_)]]" on-click="toggleLockScreenSupport_">
            Enable note-taking from lock screen
          </div>
          <template is="dom-if" if="[[disallowedOnLockScreenByPolicy_(selectedApp_)]]">
            <cr-policy-indicator id="enable-app-on-lock-screen-policy-indicator" indicator-type="[[userPolicyIndicator_]]">
            </cr-policy-indicator>
          </template>
          <cr-toggle id="enable-app-on-lock-screen-toggle" aria-labelledby="lock-screen-toggle-label" disabled="[[disallowedOnLockScreenByPolicy_(selectedApp_)]]" checked="[[lockScreenSupportEnabled_(selectedApp_)]]" on-change="toggleLockScreenSupport_" deep-link-focus-id$="[[Setting.kStylusNoteTakingFromLockScreen]]">
          </cr-toggle>
        </div>

        <template is="dom-if" if="[[lockScreenSupportEnabled_(selectedApp_)]]">
          <settings-toggle-button id="keep-last-note-on-lock-screen-toggle" class="hr" pref="{{prefs.settings.restore_last_lock_screen_note}}" label="Keep latest note on lock screen" deep-link-focus-id$="[[Setting.kStylusLatestNoteOnLockScreen]]">
          </settings-toggle-button>
        </template>
      </div>
    </template>

<!--_html_template_end_-->`,is:"settings-stylus",behaviors:[DeepLinkingBehavior,RouteObserverBehavior],properties:{prefs:{type:Object,notify:true},userPolicyIndicator_:{type:String,value:CrPolicyIndicatorType.USER_POLICY},appChoices_:{type:Array,value(){return[]}},hasInternalStylus_:{type:Boolean,value(){return loadTimeData$1.getBoolean("hasInternalStylus")},readOnly:true},selectedApp_:{type:Object,value:null},waitingForAndroid_:{type:Boolean,value:false},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kStylusToolsInShelf,chromeos.settings.mojom.Setting.kStylusNoteTakingApp,chromeos.settings.mojom.Setting.kStylusNoteTakingFromLockScreen,chromeos.settings.mojom.Setting.kStylusLatestNoteOnLockScreen])}},currentRouteChanged(route,oldRoute){if(route!==routes.STYLUS){return}this.attemptDeepLink()},supportsLockScreen_(){return!!this.selectedApp_&&this.selectedApp_.lockScreenSupport!==NoteAppLockScreenSupport.NOT_SUPPORTED},disallowedOnLockScreenByPolicy_(){return!!this.selectedApp_&&this.selectedApp_.lockScreenSupport===NoteAppLockScreenSupport.NOT_ALLOWED_BY_POLICY},lockScreenSupportEnabled_(){return!!this.selectedApp_&&this.selectedApp_.lockScreenSupport===NoteAppLockScreenSupport.ENABLED},browserProxy_:null,created(){this.browserProxy_=DevicePageBrowserProxyImpl.getInstance()},ready(){this.browserProxy_.setNoteTakingAppsUpdatedCallback(this.onNoteAppsUpdated_.bind(this));this.browserProxy_.requestNoteTakingApps()},findApp_(id){return this.appChoices_.find((function(app){return app.value===id}))||null},toggleLockScreenSupport_(){assert(this.selectedApp_);if(this.selectedApp_.lockScreenSupport!==NoteAppLockScreenSupport.ENABLED&&this.selectedApp_.lockScreenSupport!==NoteAppLockScreenSupport.SUPPORTED){return}this.browserProxy_.setPreferredNoteTakingAppEnabledOnLockScreen(this.selectedApp_.lockScreenSupport===NoteAppLockScreenSupport.SUPPORTED);recordSettingChange()},onSelectedAppChanged_(){const app=this.findApp_(this.$.selectApp.value);this.selectedApp_=app;if(app&&!app.preferred){this.browserProxy_.setPreferredNoteTakingApp(app.value);recordSettingChange()}},onNoteAppsUpdated_(apps,waitingForAndroid){this.waitingForAndroid_=waitingForAndroid;this.appChoices_=apps;this.async(this.onSelectedAppChanged_.bind(this))},showNoApps_(apps,waitingForAndroid){return apps.length===0&&!waitingForAndroid},showApps_(apps,waitingForAndroid){return apps.length>0&&!waitingForAndroid},onFindAppsTap_(){this.browserProxy_.showPlayStore(FIND_MORE_APPS_URL)},showStylusFindMoreApps_(arcEnabled){return arcEnabled&&!loadTimeData$1.getBoolean("isFydeProfile")}});// Copyright 2016 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-device-page"></style>
    <settings-animated-pages id="pages" section="device" focus-config="[[focusConfig_]]">
      <div id="main" route-path="default">
        <cr-link-row id="pointersRow" label="[[getPointersTitle_(hasMouse_, hasPointingStick_,
                                       hasTouchpad_)]]" on-click="onPointersTap_" role-description="Subpage button"></cr-link-row>
        <cr-link-row class="hr" id="keyboardRow" label="Keyboard" on-click="onKeyboardTap_" role-description="Subpage button"></cr-link-row>
        <template is="dom-if" if="[[hasStylus_]]">
          <cr-link-row class="hr" id="stylusRow" label="Stylus" on-click="onStylusTap_" role-description="Subpage button">
          </cr-link-row>
        </template>
        <cr-link-row class="hr" id="displayRow" label="Displays" on-click="onDisplayTap_" role-description="Subpage button"></cr-link-row>
        <cr-link-row class="hr" hidden="[[hideStorageInfo_]]" id="storageRow" label="Storage management" on-click="onStorageTap_" role-description="Subpage button"></cr-link-row>
        <cr-link-row class="hr" id="powerRow" label="Power" on-click="onPowerTap_" role-description="Subpage button">
        </cr-link-row>
      </div>
      <template is="dom-if" route-path="/pointer-overlay">
        <settings-subpage associated-control="[[$$('#pointersRow')]]" page-title="[[getPointersTitle_(hasMouse_, hasPointingStick_,
                                            hasTouchpad_)]]">
          <settings-pointers prefs="{{prefs}}" has-mouse="[[hasMouse_]]" has-pointing-stick="[[hasPointingStick_]]" has-touchpad="[[hasTouchpad_]]">
          </settings-pointers>
        </settings-subpage>
      </template>
      <template is="dom-if" route-path="/keyboard-overlay">
        <settings-subpage associated-control="[[$$('#keyboardRow')]]" page-title="Keyboard">
          <settings-keyboard prefs="{{prefs}}" focus-config="[[focusConfig_]]">
          </settings-keyboard>
        </settings-subpage>
      </template>
      <template is="dom-if" route-path="/stylus" no-search="[[!hasStylus_]]">
        <settings-subpage associated-control="[[$$('#stylusRow')]]" page-title="Stylus" no-search$="[[!hasStylus_]]">
          <settings-stylus prefs="{{prefs}}"></settings-stylus>
        </settings-subpage>
      </template>
      <template is="dom-if" route-path="/display">
        <settings-subpage associated-control="[[$$('#displayRow')]]" page-title="Displays">
          <settings-display prefs="{{prefs}}"></settings-display>
        </settings-subpage>
      </template>
      <template is="dom-if" route-path="/storage">
        <settings-subpage associated-control="[[$$('#storageRow')]]" page-title="Storage management">
          <settings-storage prefs="{{prefs}}" show-crostini="[[showCrostini]]" android-enabled="[[androidEnabled_]]">
          </settings-storage>
        </settings-subpage>
      </template>
      <template is="dom-if" if="[[androidEnabled_]]">
        <template is="dom-if" route-path="/storage/externalStoragePreferences">
          <settings-subpage associated-control="[[$$('#storageRow')]]" page-title="External storage preferences">
            <settings-storage-external prefs="{{prefs}}">
            </settings-storage-external>
          </settings-subpage>
        </template>
      </template>
      <template is="dom-if" route-path="/power">
        <settings-subpage associated-control="[[$$('#powerRow')]]" page-title="Power">
          <settings-power></settings-power>
        </settings-subpage>
      </template>
    </settings-animated-pages>
<!--_html_template_end_-->`,is:"settings-device-page",behaviors:[I18nBehavior,WebUIListenerBehavior,RouteObserverBehavior],properties:{prefs:{type:Object,notify:true},showCrostini:Boolean,hasMouse_:Boolean,hasPointingStick_:Boolean,hasTouchpad_:Boolean,hasStylus_:{type:Boolean,value:false},hideStorageInfo_:{type:Boolean,value(){return loadTimeData$1.valueExists("isDemoSession")&&loadTimeData$1.getBoolean("isDemoSession")},readOnly:true},focusConfig_:{type:Object,value(){const map=new Map;if(routes.POINTERS){map.set(routes.POINTERS.path,"#pointersRow")}if(routes.KEYBOARD){map.set(routes.KEYBOARD.path,"#keyboardRow")}if(routes.STYLUS){map.set(routes.STYLUS.path,"#stylusRow")}if(routes.DISPLAY){map.set(routes.DISPLAY.path,"#displayRow")}if(routes.STORAGE){map.set(routes.STORAGE.path,"#storageRow")}if(routes.EXTERNAL_STORAGE_PREFERENCES){map.set(routes.EXTERNAL_STORAGE_PREFERENCES.path,"#externalStoragePreferencesRow")}if(routes.POWER){map.set(routes.POWER.path,"#powerRow")}return map}},androidEnabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("androidEnabled")}}},observers:["pointersChanged_(hasMouse_, hasPointingStick_, hasTouchpad_)"],attached(){this.addWebUIListener("has-mouse-changed",this.set.bind(this,"hasMouse_"));this.addWebUIListener("has-pointing-stick-changed",this.set.bind(this,"hasPointingStick_"));this.addWebUIListener("has-touchpad-changed",this.set.bind(this,"hasTouchpad_"));DevicePageBrowserProxyImpl.getInstance().initializePointers();this.addWebUIListener("has-stylus-changed",this.set.bind(this,"hasStylus_"));DevicePageBrowserProxyImpl.getInstance().initializeStylus();this.addWebUIListener("storage-android-enabled-changed",this.set.bind(this,"androidEnabled_"));DevicePageBrowserProxyImpl.getInstance().updateAndroidEnabled()},getPointersTitle_(){const hasMouseOrPointingStick=this.hasMouse_||this.hasPointingStick_;if(hasMouseOrPointingStick&&this.hasTouchpad_){return this.i18n("mouseAndTouchpadTitle")}if(hasMouseOrPointingStick){return this.i18n("mouseTitle")}if(this.hasTouchpad_){return this.i18n("touchpadTitle")}return""},onPointersTap_(){Router.getInstance().navigateTo(routes.POINTERS)},onKeyboardTap_(){Router.getInstance().navigateTo(routes.KEYBOARD)},onStylusTap_(){Router.getInstance().navigateTo(routes.STYLUS)},onDisplayTap_(){Router.getInstance().navigateTo(routes.DISPLAY)},onStorageTap_(){Router.getInstance().navigateTo(routes.STORAGE)},onPowerTap_(){Router.getInstance().navigateTo(routes.POWER)},currentRouteChanged(){this.checkPointerSubpage_()},pointersChanged_(hasMouse,hasPointingStick,hasTouchpad){this.$.pointersRow.hidden=!hasMouse&&!hasPointingStick&&!hasTouchpad;this.checkPointerSubpage_()},checkPointerSubpage_(){if(this.hasMouse_===false&&this.hasPointingStick_===false&&this.hasTouchpad_===false&&Router.getInstance().getCurrentRoute()===routes.POINTERS){Router.getInstance().navigateTo(routes.DEVICE)}}});// Copyright 2016 The Chromium Authors. All rights reserved.
Polymer({is:"controlled-button",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="controlled-button">:host {
  --justify-margin: 8px;
    align-items: center;
    display: flex;
}

:host([enforced_]) {
  pointer-events: none;
}

cr-policy-pref-indicator {
  pointer-events: all;
}

:host(:not([end-justified])) cr-policy-pref-indicator {
  margin-inline-start: var(--cr-controlled-by-spacing);
}

:host([end-justified]) cr-policy-pref-indicator {
  margin-inline-end: var(--cr-controlled-by-spacing);
    margin-inline-start: calc(
        var(--cr-controlled-by-spacing) - var(--justify-margin));
    order: -1;
}

</style>

<cr-button class$="[[actionClass_]]" disabled="[[!buttonEnabled_(enforced_, disabled)]]">
  [[label]]
</cr-button>

<template is="dom-if" if="[[hasPrefPolicyIndicator(pref.*)]]" restamp="">
  <cr-policy-pref-indicator pref="[[pref]]" on-click="onIndicatorClick_" icon-aria-label="[[label]]">
  </cr-policy-pref-indicator>
</template>
<!--_html_template_end_-->`,behaviors:[CrPolicyPrefBehavior,PrefControlBehavior],properties:{endJustified:{type:Boolean,value:false,reflectToAttribute:true},label:String,disabled:{type:Boolean,value:false,reflectToAttribute:true},actionClass_:{type:String,value:""},enforced_:{type:Boolean,computed:"isPrefEnforced(pref.*)",reflectToAttribute:true}},attached(){if(this.classList.contains("action-button")){this.actionClass_="action-button"}},focus(){this.$$("cr-button").focus()},onIndicatorClick_(e){e.preventDefault();e.stopPropagation()},buttonEnabled_(enforced,disabled){return!enforced&&!disabled}});// Copyright 2017 The Chromium Authors. All rights reserved.
class GoogleAssistantBrowserProxyImpl{showGoogleAssistantSettings(){chrome.send("showGoogleAssistantSettings")}retrainAssistantVoiceModel(){chrome.send("retrainAssistantVoiceModel")}syncVoiceModelStatus(){chrome.send("syncVoiceModelStatus")}}addSingletonGetter(GoogleAssistantBrowserProxyImpl);// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const DspHotwordState={DEFAULT_ON:0,ALWAYS_ON:1,OFF:2};const ConsentStatus={kUnknown:0,kActivityControlAccepted:1,kUnauthorized:2,kNotFound:3};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared md-select" scope="settings-google-assistant-page">.text-area {
  margin-inline-end: 24px;
}

select.md-select {
  min-width: 200px;
}

cr-policy-pref-indicator {
  margin-inline-end: var(--cr-controlled-by-spacing);
}

</style>
<settings-toggle-button id="google-assistant-enable" class="primary-toggle" pref="{{prefs.settings.voice_interaction.enabled}}" label="[[getAssistantOnOffLabel_(
        prefs.settings.voice_interaction.enabled.value)]]" disabled="{{prefs.settings.assistant.disabled_by_policy.value}}" deep-link-focus-id$="[[Setting.kAssistantOnOff]]">
</settings-toggle-button>
<template is="dom-if" if="[[prefs.settings.voice_interaction.enabled.value]]">
  <settings-toggle-button id="google-assistant-context-enable" class="hr" pref="{{prefs.settings.voice_interaction.context.enabled}}" label="Related info" sub-label="Allow Assistant to use information on screen to provide quick answers such as translation, definition, unit conversion and more" deep-link-focus-id$="[[Setting.kAssistantRelatedInfo]]">
  </settings-toggle-button>
  <template is="dom-if" if="[[hotwordDspAvailable_]]" restamp="">
    <settings-toggle-button id="google-assistant-hotword-enable" class="hr" pref="{{prefs.settings.voice_interaction.hotword.enabled}}" label="&quot;Ok Google&quot;" sub-label="Access your Assistant when you say &quot;Ok Google.&quot;" on-settings-boolean-control-change="onEnableHotwordChange_" deep-link-focus-id$="[[Setting.kAssistantOkGoogle]]">
    </settings-toggle-button>
  </template>
  <template is="dom-if" if="[[!hotwordDspAvailable_]]" restamp="">
    <div class="settings-box" id="dsp-hotword-container">
      <div class="start text-area settings-box-text" aria-hidden="true">
        <div class="label" id="googleAssistantEnableHotword">
          &quot;Ok Google&quot;
        </div>
        <div class="secondary label" id="googleAssistantEnableHotwordDescription">
          Access your Assistant when you say &quot;Ok Google.&quot; To save battery, choose â€œOn (Recommended.)â€ Your Assistant will respond only when your device is plugged in or charging.
        </div>
      </div>
      <template is="dom-if" if="[[hotwordEnforced_]]" restamp="">
        <cr-policy-pref-indicator id="hotword-policy-pref-indicator" pref="{{prefs.settings.voice_interaction.hotword.enabled}}">
        </cr-policy-pref-indicator>
      </template>
      <!-- We don't use the settings_dropdown_menu for the dspHotwordState
           drop down, because the dspHotwordState manages 2 preferences.
       <select id="dsp-hotword-state" class="md-select"
       The settings_dropdown_menu is designed to manage only a single
       preference. -->
      <select id="dsp-hotword-state" class="md-select" aria-labelledby="googleAssistantEnableHotword" aria-describedby="googleAssistantEnableHotwordDescription" on-change="onDspHotwordStateChange_" disabled="[[hotwordEnforced_]]" deep-link-focus-id$="[[Setting.kAssistantOkGoogle]]">
        <template is="dom-repeat" items="[[hotwordDropdownList_]]">
          <option value="[[item.value]]" selected="[[isDspHotwordStateMatch_(item.value)]]">
            [[item.name]]
          </option>
        </template>
      </select>
    </div>
  </template>
  <template is="dom-if" if="[[shouldShowVoiceMatchSettings_]]">
    <div class="settings-box continuation embedded">
      <div class="start text-area settings-box-text">
        <div class="label">
          Voice match
        </div>
        <div class="secondary label">
          Teach your Assistant to recognize your voice
        </div>
      </div>
      <controlled-button id="retrain-voice-model" on-click="onRetrainVoiceModelTapped_" label="Retrain" pref="{{prefs.settings.voice_interaction.hotword.enabled}}" deep-link-focus-id$="[[Setting.kTrainAssistantVoiceModel]]">
      </controlled-button>
    </div>
  </template>
  <settings-toggle-button id="google-assistant-notification-enable" class="hr" pref="{{prefs.settings.voice_interaction.notification.enabled}}" label="Notifications" sub-label="Allow the Assistant to show you notifications" deep-link-focus-id$="[[Setting.kAssistantNotifications]]">
  </settings-toggle-button>
  <settings-toggle-button id="google-assistant-launch-with-mic-open" class="hr" pref="{{prefs.settings.voice_interaction.launch_with_mic_open}}" label="Preferred input" sub-label="Default to using voice instead of keyboard" deep-link-focus-id$="[[Setting.kAssistantVoiceInput]]">
  </settings-toggle-button>
  <cr-link-row id="google-assistant-settings" class="hr" on-click="onGoogleAssistantSettingsTapped_" label="Google Assistant settings" external=""></cr-link-row>
</template>
<!--_html_template_end_-->`,is:"settings-google-assistant-page",behaviors:[DeepLinkingBehavior,I18nBehavior,PrefsBehavior,RouteObserverBehavior,WebUIListenerBehavior],properties:{shouldShowVoiceMatchSettings_:{type:Boolean,value:false},hotwordDspAvailable_:{type:Boolean,value(){return loadTimeData$1.getBoolean("hotwordDspAvailable")}},hotwordDropdownList_:{type:Array,value(){return[{name:loadTimeData$1.getString("googleAssistantEnableHotwordWithoutDspRecommended"),value:DspHotwordState.DEFAULT_ON},{name:loadTimeData$1.getString("googleAssistantEnableHotwordWithoutDspAlwaysOn"),value:DspHotwordState.ALWAYS_ON},{name:loadTimeData$1.getString("googleAssistantEnableHotwordWithoutDspOff"),value:DspHotwordState.OFF}]}},hotwordEnforced_:{type:Boolean,value:false},dspHotwordState_:Number,supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kAssistantOnOff,chromeos.settings.mojom.Setting.kAssistantRelatedInfo,chromeos.settings.mojom.Setting.kAssistantOkGoogle,chromeos.settings.mojom.Setting.kAssistantNotifications,chromeos.settings.mojom.Setting.kAssistantVoiceInput,chromeos.settings.mojom.Setting.kTrainAssistantVoiceModel])}},observers:["onPrefsChanged_("+"prefs.settings.voice_interaction.hotword.enabled.value, "+"prefs.settings.voice_interaction.hotword.always_on.value, "+"prefs.settings.voice_interaction.activity_control.consent_status"+".value, "+"prefs.settings.assistant.disabled_by_policy.value)"],browserProxy_:null,created(){this.browserProxy_=GoogleAssistantBrowserProxyImpl.getInstance()},ready(){this.addWebUIListener("hotwordDeviceUpdated",(hasHotword=>{this.hotwordDspAvailable_=hasHotword}));chrome.send("initializeGoogleAssistantPage")},currentRouteChanged(route,oldRoute){if(route!==routes.GOOGLE_ASSISTANT){return}this.attemptDeepLink()},getAssistantOnOffLabel_(toggleValue){return this.i18n(toggleValue?"searchGoogleAssistantOn":"searchGoogleAssistantOff")},onGoogleAssistantSettingsTapped_(){this.browserProxy_.showGoogleAssistantSettings();recordSettingChange()},onRetrainVoiceModelTapped_(){this.browserProxy_.retrainAssistantVoiceModel();recordSettingChange()},onEnableHotwordChange_(event){if(event.target.checked){this.browserProxy_.syncVoiceModelStatus()}},onDspHotwordStateChange_(){switch(Number(this.$$("#dsp-hotword-state").value)){case DspHotwordState.DEFAULT_ON:this.setPrefValue("settings.voice_interaction.hotword.enabled",true);this.setPrefValue("settings.voice_interaction.hotword.always_on",false);this.browserProxy_.syncVoiceModelStatus();break;case DspHotwordState.ALWAYS_ON:this.setPrefValue("settings.voice_interaction.hotword.enabled",true);this.setPrefValue("settings.voice_interaction.hotword.always_on",true);this.browserProxy_.syncVoiceModelStatus();break;case DspHotwordState.OFF:this.setPrefValue("settings.voice_interaction.hotword.enabled",false);this.setPrefValue("settings.voice_interaction.hotword.always_on",false);break;default:console.error("Invalid Dsp hotword settings state")}},isDspHotwordStateMatch_(state){return state===this.dspHotwordState_},onPrefsChanged_(){if(this.getPref("settings.assistant.disabled_by_policy").value){this.setPrefValue("settings.voice_interaction.enabled",false);return}this.refreshDspHotwordState_();this.shouldShowVoiceMatchSettings_=!loadTimeData$1.getBoolean("voiceMatchDisabled")&&!!this.getPref("settings.voice_interaction.hotword.enabled").value;const hotwordEnabled=this.getPref("settings.voice_interaction.hotword.enabled");this.hotwordEnforced_=hotwordEnabled.enforcement===chrome.settingsPrivate.Enforcement.ENFORCED},refreshDspHotwordState_(){if(!this.getPref("settings.voice_interaction.hotword.enabled").value){this.dspHotwordState_=DspHotwordState.OFF}else if(this.getPref("settings.voice_interaction.hotword.always_on").value){this.dspHotwordState_=DspHotwordState.ALWAYS_ON}else{this.dspHotwordState_=DspHotwordState.DEFAULT_ON}if(this.$$("#dsp-hotword-state")){this.$$("#dsp-hotword-state").value=this.dspHotwordState_}}});// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const CellularSetupPageName={ESIM_FLOW_UI:"esim-flow-ui",PSIM_FLOW_UI:"psim-flow-ui"};const ButtonState={ENABLED:1,DISABLED:2,HIDDEN:3};const Button={BACKWARD:1,CANCEL:2,FORWARD:3};// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-flex" scope="button-bar">:host {
  display: flex;
        justify-content: flex-end;
        padding: 10px 0 20px 0;
}

#forward:focus {
  box-shadow: 0 0 0 2px var(--focus-shadow-color);
}

#flex {
  flex: 1;
}

</style>
    <cr-button id="backward" class="cancel-button" on-click="onBackwardButtonClicked_" disabled="[[isButtonDisabled_(Button.BACKWARD, buttonState.*)]]" hidden$="[[isButtonHidden_(Button.BACKWARD, buttonState.*)]]">
      [[i18n('back')]]
    </cr-button>
    <div id="flex"></div>
    <cr-button id="cancel" class="cancel-button" on-click="onCancelButtonClicked_" disabled="[[isButtonDisabled_(Button.CANCEL, buttonState.*)]]" hidden$="[[isButtonHidden_(Button.CANCEL, buttonState.*)]]">
      [[i18n('cancel')]]
    </cr-button>
    <cr-button id="forward" class="action-button" on-click="onForwardButtonClicked_" disabled="[[isButtonDisabled_(Button.FORWARD, buttonState.*)]]" hidden$="[[isButtonHidden_(Button.FORWARD, buttonState.*)]]">
      [[forwardButtonLabel]]
    </cr-button>
<!--_html_template_end_-->`,is:"button-bar",behaviors:[I18nBehavior],properties:{buttonState:{type:Object,value:{}},Button:{type:Object,value:Button},forwardButtonLabel:{type:String,value:""}},isButtonHidden_(buttonName){const state=this.getButtonBarState_(buttonName);return state===ButtonState.HIDDEN},isButtonDisabled_(buttonName){const state=this.getButtonBarState_(buttonName);return state===ButtonState.DISABLED},focusDefaultButton(){const buttons=this.shadowRoot.querySelectorAll("cr-button");for(let i=buttons.length-1;i>=0;i--){const button=buttons.item(i);if(!button.disabled&&!button.hidden){focusWithoutInk(button);return}}},onBackwardButtonClicked_(){this.fire("backward-nav-requested")},onCancelButtonClicked_(){this.fire("cancel-requested")},onForwardButtonClicked_(){this.fire("forward-nav-requested")},getButtonBarState_(button){assert(this.buttonState);switch(button){case Button.BACKWARD:return this.buttonState.backward;case Button.CANCEL:return this.buttonState.cancel;case Button.FORWARD:return this.buttonState.forward;default:assertNotReached$1();return ButtonState.ENABLED}}});const template$1=html`<iron-iconset-svg name="cellular-setup" size="20">
  <svg>
    <defs>
        <g id="camera" viewBox="0 0 20 20"><mask id="a" maskUnits="userSpaceOnUse" x="1" y="2" width="18" height="16"><path fill-rule="evenodd" clip-rule="evenodd" d="M16.667 4.167h-2.642L12.5 2.5h-5L5.975 4.167H3.334c-.917 0-1.667.75-1.667 1.666v10c0 .917.75 1.667 1.667 1.667h13.333c.917 0 1.667-.75 1.667-1.667v-10c0-.916-.75-1.666-1.667-1.666zm0 11.666H3.334v-10h13.333v10zm-10-5A3.332 3.332 0 1 1 10 14.166a3.332 3.332 0 0 1-3.333-3.333z" fill="#fff"></path></mask><g mask="url(#a)"><path d="M0 0h20v20H0z"></path></g></g>
        <g id="checked" viewBox="0 0 20 20"><path d="M13.707 7.293a1 1 0 0 0-1.414 0L9 10.586 7.707 9.293a1 1 0 0 0-1.414 1.414l2 2a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 0-1.414z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm0-2a6 6 0 1 0 0-12 6 6 0 0 0 0 12z"></path></g>
        <g id="error" viewBox="0 0 20 20"><path fill-rule="evenodd" clip-rule="evenodd" d="M9 10h2V6H9v4zm1-8c-4.416 0-8 3.584-8 8s3.584 8 8 8 8-3.584 8-8-3.584-8-8-8zm0 14c-3.308 0-6-2.693-6-6 0-3.308 2.692-6 6-6 3.307 0 6 2.692 6 6 0 3.307-2.693 6-6 6zm-1-2h2v-2H9v2z"></path></g>
        <g id="switch-camera" viewBox="0 0 20 20"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 9V7H4.802A5.996 5.996 0 0 1 10 4a6 6 0 0 1 5.917 5h2.021c-.491-3.945-3.853-7-7.93-7a7.992 7.992 0 0 0-6.009 2.712L4 3H2v6h5zm5.938 2v2h2.198a5.996 5.996 0 0 1-5.198 3 6 6 0 0 1-5.917-5H2c.492 3.945 3.853 7 7.93 7a7.992 7.992 0 0 0 6.009-2.712V17h2v-6h-5zM10 12a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"></path></g>
        <g id="try-again" viewBox="0 0 20 20"><path path="" fill-rule="evenodd" clip-rule="evenodd" d="M10 3C6.136 3 3 6.136 3 10C3 13.864 6.136 17 10 17C12.1865 17 14.1399 15.9959 15.4239 14.4239L13.9984 12.9984C13.0852 14.2129 11.6325 15 10 15C7.24375 15 5 12.7563 5 10C5 7.24375 7.24375 5 10 5C11.6318 5 13.0839 5.78641 13.9972 7H11V9H17V3H15V5.10253C13.7292 3.80529 11.9581 3 10 3Z"></path></g>
        <g id="warning" viewBox="0 0 20 20"><path d="M9 12H11V8H9V12Z"></path><path d="M11 15H9V13H11V15Z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M9.13177 2.50386C9.51566 1.83205 10.4844 1.83205 10.8683 2.50386L18.8683 16.5039C19.2492 17.1705 18.7678 18 18 18H2.00001C1.23219 18 0.750823 17.1705 1.13177 16.5039L9.13177 2.50386ZM10 5.01556L3.72321 16H16.2768L10 5.01556Z"></path></g>
        <g id="info" viewBox="0 0 24 24"><path d="M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z"></path></g>
    </defs>
  </svg>
</iron-iconset-svg>`;document.head.appendChild(template$1.content);// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-positioning" scope="base-page">:host {
  display: flex;
        flex-direction: column;
        height: 100%;
}

#title {
  color: var(--google-grey-900);
        font-weight: normal;
        line-height: 24px;
}

#message {
  height: var(--base-page-message-height, auto);
        margin-bottom: 20px;
}

:host ::slotted([slot='page-body']) {
  display: block;
        flex: 1 1 auto;
}

#message iron-icon {
  padding-inline-end: 4px;
}

</style>
    <template is="dom-if" if="[[isTitleShown_(title)]]" restamp="">
      <h3 id="title">[[getTitle_(title)]]</h3>
    </template>
    <div id="message" aria-live="polite" aria-atomic="true">
      <iron-icon icon$="cellular-setup:[[messageIcon]]" hidden$="[[!isMessageIconShown_(messageIcon)]]">
      </iron-icon>
      [[message]]
    </div>
    <slot name="page-body"></slot>
<!--_html_template_end_-->`,is:"base-page",behaviors:[I18nBehavior],properties:{title:String,message:String,messageIcon:{type:String,value:""}},getTitle_(){return this.title},isTitleShown_(){return!!this.title},isMessageIconShown_(){return!!this.messageIcon}});// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const LOTTIE_JS_URL="chrome://resources/lottie/lottie_worker.min.js";Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="cr-lottie">canvas {
  height: 100%;
        width: 100%;
}

</style>
    <canvas id="canvas" hidden="[[hidden]]"></canvas>
<!--_html_template_end_-->`,is:"cr-lottie",properties:{animationUrl:{type:String,value:"",observer:"animationUrlChanged_"},autoplay:{type:Boolean,value:false},hidden:{type:Boolean,value:false},singleLoop:{type:Boolean,value:false}},canvasElement_:null,isAnimationLoaded_:false,offscreenCanvas_:null,hasTransferredCanvas_:false,resizeObserver_:null,worker_:null,xhr_:null,attached(){this.sendXmlHttpRequest_(LOTTIE_JS_URL,"blob",function(response){if(this.isAttached){this.worker_=new Worker(URL.createObjectURL(response));this.worker_.onmessage=this.onMessage_.bind(this);this.initialize_()}}.bind(this))},detached(){if(this.resizeObserver_){this.resizeObserver_.disconnect()}if(this.worker_){this.worker_.terminate();this.worker_=null}if(this.xhr_){this.xhr_.abort();this.xhr_=null}},setPlay(shouldPlay){if(this.isAnimationLoaded_){this.worker_.postMessage({control:{play:shouldPlay}})}else{this.autoplay=shouldPlay}},initialize_(){this.canvasElement_=this.$.canvas;this.offscreenCanvas_=this.canvasElement_.transferControlToOffscreen();this.resizeObserver_=new ResizeObserver(this.onCanvasElementResized_.bind(this));this.resizeObserver_.observe(this.canvasElement_);if(this.isAnimationLoaded_){return}this.sendXmlHttpRequest_(this.animationUrl,"json",this.initAnimation_.bind(this))},animationUrlChanged_(animationUrl,oldAnimationUrl){if(!this.worker_){return}if(this.xhr_){this.xhr_.abort();this.xhr_=null}if(this.isAnimationLoaded_){this.worker_.postMessage({control:{stop:true}});this.isAnimationLoaded_=false}this.sendXmlHttpRequest_(this.animationUrl,"json",this.initAnimation_.bind(this))},getCanvasDrawBufferSize_(){const canvasElement=this.$.canvas;const devicePixelRatio=window.devicePixelRatio;const clientRect=canvasElement.getBoundingClientRect();const drawSize={width:clientRect.width*devicePixelRatio,height:clientRect.height*devicePixelRatio};return drawSize},isValidUrl_(maybeValidUrl){const url=new URL(maybeValidUrl,document.location.href);return url.protocol==="chrome:"||url.protocol==="data:"&&url.pathname.startsWith("application/json;")},sendXmlHttpRequest_(url,responseType,successCallback){assert(this.isValidUrl_(url),"Invalid scheme or data url used.");assert(!this.xhr_);this.xhr_=new XMLHttpRequest;this.xhr_.open("GET",url,true);this.xhr_.responseType=responseType;this.xhr_.send();this.xhr_.onreadystatechange=()=>{if(this.xhr_.readyState===4&&this.xhr_.status===200){const response=this.xhr_.response;this.xhr_=null;successCallback(response)}}},onCanvasElementResized_(){if(this.isAnimationLoaded_){this.worker_.postMessage({drawSize:this.getCanvasDrawBufferSize_()})}},initAnimation_(animationData){const message=[{animationData:animationData,drawSize:this.getCanvasDrawBufferSize_(),params:{loop:!this.singleLoop,autoplay:this.autoplay}}];if(!this.hasTransferredCanvas_){message[0].canvas=this.offscreenCanvas_;message.push([this.offscreenCanvas_]);this.hasTransferredCanvas_=true}this.worker_.postMessage(...message)},onMessage_(event){if(event.data.name==="initialized"&&event.data.success){this.isAnimationLoaded_=true;this.fire("cr-lottie-initialized")}else if(event.data.name==="playing"){this.fire("cr-lottie-playing")}else if(event.data.name==="paused"){this.fire("cr-lottie-paused")}else if(event.data.name==="stopped"){this.fire("cr-lottie-stopped")}else if(event.data.name==="resized"){this.fire("cr-lottie-resized",event.data.size)}}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-flex cr-hidden-style" scope="setup-loading-page">#animationContainer {
  align-items: flex-end;
        display: flex;
        height: 216px;
        justify-content: center;
        margin-bottom: 54px;
}

#simDetectError {
  background-image: url(chrome://resources/cr_components/chromeos/cellular_setup/sim_detect_error.svg);
        background-position: center center;
        background-repeat: no-repeat;
        background-size: contain;
        height: 100%;
        width: 100%;
}

#pageBody {
  height: 222px;
}

cr-lottie {
  height: 85%;
}

base-page {
  --base-page-message-height: 40px;
}

</style>
    <base-page title="[[loadingTitle]]" message="[[loadingMessage]]">
      <div slot="page-body" id="pageBody" class="layout vertical center-center">
        <template is="dom-if" if="[[!isSimDetectError]]" restamp="">
          <div id="animationContainer">
            <cr-lottie id="spinner" animation-url="spinner.json" autoplay="">
            </cr-lottie>
          </div>
        </template>
        <div id="simDetectError" hidden$="[[!isSimDetectError]]">
        </div>
      </div>
    </base-page>
<!--_html_template_end_-->`,is:"setup-loading-page",behaviors:[I18nBehavior],properties:{loadingMessage:{type:String,value:""},loadingTitle:{type:Object,value:""},isSimDetectError:{type:Boolean,value:false}}});// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const WEBVIEW_REDIRECT_SCRIPT="(function(form, paymentUrl, postData) {"+"function addInputElement(form, name, value) {"+"  var input = document.createElement('input');"+"  input.type = 'hidden';"+"  input.name = name;"+"  input.value = value;"+"  form.appendChild(input);"+"}"+"function initFormFromPostData(form, postData) {"+"  if (!postData) return;"+"  var pairs = postData.split('&');"+"  pairs.forEach(pairStr => {"+"    var pair = pairStr.split('=');"+"    if (pair.length === 2)"+"      addInputElement(form, pair[0], pair[1]);"+"    else if (pair.length === 1)"+"      addInputElement(form, pair[0], true);"+"  });"+"}"+"form.action = unescape(paymentUrl);"+"form.method = 'POST';"+"initFormFromPostData(form, unescape(postData));"+"form.submit();"+"})";const WEBVIEW_REDIRECT_FORM_ID="redirectForm";const WEBVIEW_REDIRECT_HTML="<html><body>"+'<form id="'+WEBVIEW_REDIRECT_FORM_ID+'"></form>'+"</body></html>";function initializeWebviewRedirectForm(webview,paymentUrl,postData,webviewSrc,commitEvent){if(!commitEvent.isTopLevel||commitEvent.url!==webviewSrc){return}webview.executeScript({code:WEBVIEW_REDIRECT_SCRIPT+"("+"document.getElementById('"+WEBVIEW_REDIRECT_FORM_ID+"'),"+" '"+escape(paymentUrl)+"',"+" '"+escape(postData||"")+"');"})}function postDeviceDataToWebview(webview,paymentUrl,postData){const webviewSrc="data:text/html;charset=utf-8,"+encodeURIComponent(WEBVIEW_REDIRECT_HTML);webview.addEventListener("loadcommit",initializeWebviewRedirectForm.bind(this,webview,paymentUrl,postData,webviewSrc));webview.src=webviewSrc}// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-flex cr-hidden-style" scope="provisioning-page">paper-spinner-lite {
  height: 32px;
        width: 32px;
}

#portalContainer {
  height: 100%;
        width: 100%;
}

#error-icon-container {
  background-image: -webkit-image-set(
            url(chrome://resources/cr_components/chromeos/cellular_setup/error_1x.png) 1x,
            url(chrome://resources/cr_components/chromeos/cellular_setup/error_2x.png) 2x);
        background-position: center center;
        background-repeat: no-repeat;
        background-size: contain;
        height: 100%;
        width: 100%;
}

</style>
    <base-page title="[[getPageTitle_(
                            showError, carrierName_, hasCarrierPortalLoaded_)]]" message="[[getPageMessage_(showError)]]">
      <div slot="page-body" class="layout horizontal center-center">
        <paper-spinner-lite active="" hidden$="[[!shouldShowSpinner_(
                           showError, hasCarrierPortalLoaded_)]]">
        </paper-spinner-lite>
        <div id="portalContainer" hidden$="[[!shouldShowPortal_(
                           showError, hasCarrierPortalLoaded_)]]">
        </div>
        <div id="error-icon-container" hidden$="[[!showError]]"></div>
      </div>
    </base-page>
<!--_html_template_end_-->`,is:"provisioning-page",behaviors:[I18nBehavior],properties:{delegate:Object,showError:{type:Boolean,value:false,notify:true},cellularMetadata:{type:Object,value:null,observer:"onCellularMetadataChanged_"},hasCarrierPortalLoaded_:{type:Boolean,value:false},carrierName_:{type:String,value:""}},getPageTitle_(){if(!this.delegate.shouldShowPageTitle()){return null}if(this.showError){return this.i18n("provisioningPageErrorTitle",this.carrierName_)}if(this.hasCarrierPortalLoaded_){return this.i18n("provisioningPageActiveTitle")}return this.i18n("provisioningPageLoadingTitle",this.carrierName_)},getPageMessage_(){if(this.showError){return this.i18n("provisioningPageErrorMessage",this.carrierName_)}return null},shouldShowSpinner_(){return!this.showError&&!this.hasCarrierPortalLoaded_},shouldShowPortal_(){return!this.showError&&this.hasCarrierPortalLoaded_},getPortalWebview(){return this.$$("webview")},onCellularMetadataChanged_(){if(this.cellularMetadata){this.carrierName_=this.cellularMetadata.carrier;this.loadPortal_();return}this.resetPage_()},loadPortal_(){assert(!!this.cellularMetadata);assert(!this.getPortalWebview());const portalWebview=document.createElement("webview");this.$.portalContainer.appendChild(portalWebview);portalWebview.addEventListener("loadabort",this.onPortalLoadAbort_.bind(this));portalWebview.addEventListener("loadstop",this.onPortalLoadStop_.bind(this));window.addEventListener("message",this.onMessageReceived_.bind(this));if(this.cellularMetadata.paymentPostData){postDeviceDataToWebview(portalWebview,this.cellularMetadata.paymentUrl.url,this.cellularMetadata.paymentPostData);return}portalWebview.src=this.cellularMetadata.paymentUrl.url},resetPage_(){this.hasCarrierPortalLoaded_=false;const portalWebview=this.getPortalWebview();if(portalWebview){portalWebview.remove()}},onPortalLoadAbort_(event){this.showError=true},onPortalLoadStop_(){if(this.hasCarrierPortalLoaded_){return}this.hasCarrierPortalLoaded_=true;this.fire("carrier-portal-loaded");this.getPortalWebview().contentWindow.postMessage({msg:"loadedInWebview"},this.cellularMetadata.paymentUrl.url)},onMessageReceived_(event){const messageType=event.data.type;const status=event.data.status;if(messageType==="requestDeviceInfoMsg"){this.getPortalWebview().contentWindow.postMessage({carrier:this.cellularMetadata.carrier,MEID:this.cellularMetadata.meid,IMEI:this.cellularMetadata.imei,MDN:this.cellularMetadata.mdn},this.cellularMetadata.paymentUrl.url);return}if(messageType==="reportTransactionStatusMsg"){const success=status==="ok";this.fire("on-carrier-portal-result",success);return}}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="final-page">[slot='page-body'] {
  background-image: -webkit-image-set(
            url(chrome://resources/cr_components/chromeos/cellular_setup/final_page_success_1x.png) 1x,
            url(chrome://resources/cr_components/chromeos/cellular_setup/final_page_success_2x.png) 2x);
        background-position: center center;
        background-repeat: no-repeat;
        background-size: contain;
        height: 242px;
}

.error[slot='page-body'] {
  background-image: -webkit-image-set(
              url(chrome://resources/cr_components/chromeos/cellular_setup/error_1x.png) 1x,
              url(chrome://resources/cr_components/chromeos/cellular_setup/error_2x.png) 2x);
          background-size: contain;
}

</style>
    <base-page title="[[getTitle_(showError)]]" message="[[getMessage_(showError)]]">
      <div class$="[[getPageBodyClass_(showError)]]" slot="page-body"></div>
    </base-page>
<!--_html_template_end_-->`,is:"final-page",behaviors:[I18nBehavior],properties:{delegate:Object,showError:Boolean,message:String,errorMessage:String},getTitle_(showError){if(this.delegate.shouldShowPageTitle()){return showError?this.i18n("finalPageErrorTitle"):this.i18n("finalPageTitle")}return null},getMessage_(showError){return showError?this.errorMessage:this.message},getPageBodyClass_(showError){return showError?"error":""}});// Copyright 2020 The Chromium Authors. All rights reserved.
const SubflowBehavior={properties:{buttonState:{type:Object,notify:true}},initSubflow(){assertNotReached$1()},navigateForward(){assertNotReached$1()},navigateBackward(){assertNotReached$1()}};// Copyright 2020 The Chromium Authors. All rights reserved.
const PSimPageName={SIM_DETECT:"simDetectPage",PROVISIONING:"provisioningPage",FINAL:"finalPage"};const PSimUIState={IDLE:"idle",STARTING_ACTIVATION:"starting-activation",WAITING_FOR_ACTIVATION_TO_START:"waiting-for-activation-to-start",TIMEOUT_START_ACTIVATION:"timeout-start-activation",FINAL_TIMEOUT_START_ACTIVATION:"final-timeout-start-activation",WAITING_FOR_PORTAL_TO_LOAD:"waiting-for-portal-to-load",TIMEOUT_PORTAL_LOAD:"timeout-portal-load",WAITING_FOR_USER_PAYMENT:"waiting-for-user-payment",WAITING_FOR_ACTIVATION_TO_FINISH:"waiting-for-activation-to-finish",TIMEOUT_FINISH_ACTIVATION:"timeout-finish-activation",ACTIVATION_SUCCESS:"activation-success",ALREADY_ACTIVATED:"already-activated",ACTIVATION_FAILURE:"activation-failure"};const PSimSetupFlowResult={SUCCESS:0,CANCELLED:1,CANCELLED_NO_SIM:2,CANCELLED_COLD_SIM_DEFER:3,CANCELLED_CARRIER_PORTAL:4,CANCELLED_PORTAL_ERROR:5,CARRIER_PORTAL_TIMEOUT:6,NETWORK_ERROR:7};function getTimeoutMsForPSimUIState(state){if(state===PSimUIState.STARTING_ACTIVATION){return 1e4}if(state===PSimUIState.WAITING_FOR_PORTAL_TO_LOAD){return 1e4}if(state===PSimUIState.WAITING_FOR_ACTIVATION_TO_FINISH){return 1e3}return null}const MAX_START_ACTIVATION_ATTEMPTS=3;const PSIM_SETUP_RESULT_METRIC_NAME="Network.Cellular.PSim.SetupFlowResult";const SUCCESSFUL_PSIM_SETUP_DURATION_METRIC_NAME="Network.Cellular.PSim.CellularSetup.Success.Duration";const FAILED_PSIM_SETUP_DURATION_METRIC_NAME="Network.Cellular.PSim.CellularSetup.Failure.Duration";Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-flex" scope="psim-flow-ui">:host {
  display: flex;
        flex: 1 1 auto;
        flex-direction: column;
}

iron-pages {
  height: 400px;
}

</style>
    <iron-pages attr-for-selected="id" selected="[[selectedPSimPageName_]]" selected-item="{{selectedPage_}}">
      <setup-loading-page id="simDetectPage" loading-title="[[getLoadingTitle_(state_)]]" loading-message="[[getLoadingMessage_(state_)]]" is-sim-detect-error="[[isSimDetectError_(state_)]]">
      </setup-loading-page>
      <provisioning-page id="provisioningPage" delegate="[[delegate]]" show-error="{{showError_}}" cellular-metadata="[[cellularMetadata_]]" on-carrier-portal-loaded="onCarrierPortalLoaded_" on-carrier-portal-result="onCarrierPortalResult_">
      </provisioning-page>
      <final-page id="finalPage" delegate="[[delegate]]" show-error="[[showError_]]" message="[[i18n('pSimfinalPageMessage')]]" error-message="[[i18n('finalPageErrorMessage')]]">
      </final-page>
    </iron-pages>
<!--_html_template_end_-->`,is:"psim-flow-ui",behaviors:[I18nBehavior,SubflowBehavior],properties:{delegate:Object,nameOfCarrierPendingSetup:{type:String,notify:true,computed:"getCarrierText("+"selectedPSimPageName_, cellularMetadata_.*)"},forwardButtonLabel:{type:String,notify:true},state_:{type:String,value:PSimUIState.IDLE},selectedPSimPageName_:{type:String,value:PSimPageName.SIM_DETECT,notify:true},selectedPage_:Object,showError_:{type:Boolean,value:false},cellularMetadata_:{type:Object,value:null},startActivationAttempts_:{type:Number,value:0}},observers:["updateShowError_(state_)","updateSelectedPage_(state_)","handlePSimUIStateChange_(state_)","updateButtonBarState_(state_)"],cellularSetupRemote_:null,activationDelegateReceiver_:null,currentTimeoutId_:null,carrierPortalHandler_:null,didCarrierPortalResultFail_:false,setTimeoutFunction_:setTimeout.bind(window),timeOnAttached_:null,created(){this.cellularSetupRemote_=getCellularSetupRemote()},attached(){this.timeOnAttached_=new Date},detached(){let resultCode=null;switch(this.state_){case PSimUIState.IDLE:case PSimUIState.STARTING_ACTIVATION:resultCode=PSimSetupFlowResult.CANCELLED;break;case PSimUIState.WAITING_FOR_ACTIVATION_TO_START:resultCode=PSimSetupFlowResult.CANCELLED_COLD_SIM_DEFER;break;case PSimUIState.TIMEOUT_START_ACTIVATION:case PSimUIState.FINAL_TIMEOUT_START_ACTIVATION:resultCode=PSimSetupFlowResult.CANCELLED_NO_SIM;break;case PSimUIState.WAITING_FOR_PORTAL_TO_LOAD:resultCode=PSimSetupFlowResult.CANCELLED;break;case PSimUIState.TIMEOUT_PORTAL_LOAD:resultCode=PSimSetupFlowResult.CARRIER_PORTAL_TIMEOUT;break;case PSimUIState.WAITING_FOR_USER_PAYMENT:resultCode=PSimSetupFlowResult.CANCELLED_CARRIER_PORTAL;break;case PSimUIState.ACTIVATION_SUCCESS:case PSimUIState.WAITING_FOR_ACTIVATION_TO_FINISH:case PSimUIState.TIMEOUT_FINISH_ACTIVATION:case PSimUIState.ALREADY_ACTIVATED:resultCode=PSimSetupFlowResult.SUCCESS;break;case PSimUIState.ACTIVATION_FAILURE:resultCode=this.didCarrierPortalResultFail_?PSimSetupFlowResult.CANCELLED_PORTAL_ERROR:PSimSetupFlowResult.NETWORK_ERROR;break;default:assertNotReached$1()}assert(resultCode!==null);chrome.metricsPrivate.recordEnumerationValue(PSIM_SETUP_RESULT_METRIC_NAME,resultCode,Object.keys(PSimSetupFlowResult).length);const elapsedTimeMs=new Date-this.timeOnAttached_;if(resultCode===PSimSetupFlowResult.SUCCESS){chrome.metricsPrivate.recordLongTime(SUCCESSFUL_PSIM_SETUP_DURATION_METRIC_NAME,elapsedTimeMs);return}chrome.metricsPrivate.recordLongTime(FAILED_PSIM_SETUP_DURATION_METRIC_NAME,elapsedTimeMs)},onActivationStarted(metadata){this.clearTimer_();this.cellularMetadata_=metadata;this.state_=PSimUIState.WAITING_FOR_PORTAL_TO_LOAD},initSubflow(){this.state_=PSimUIState.STARTING_ACTIVATION;this.startActivationAttempts_=0;this.updateButtonBarState_();this.fire("focus-default-button")},navigateForward(){switch(this.state_){case PSimUIState.WAITING_FOR_PORTAL_TO_LOAD:case PSimUIState.TIMEOUT_PORTAL_LOAD:case PSimUIState.WAITING_FOR_USER_PAYMENT:case PSimUIState.ACTIVATION_SUCCESS:this.state_=PSimUIState.WAITING_FOR_ACTIVATION_TO_FINISH;break;case PSimUIState.WAITING_FOR_ACTIVATION_TO_FINISH:case PSimUIState.TIMEOUT_FINISH_ACTIVATION:case PSimUIState.FINAL_TIMEOUT_START_ACTIVATION:case PSimUIState.ALREADY_ACTIVATED:this.fire("exit-cellular-setup");break;case PSimUIState.TIMEOUT_START_ACTIVATION:this.state_=PSimUIState.STARTING_ACTIVATION;break;default:assertNotReached$1();break}},setTimerFunctionForTest(timerFunction){this.setTimeoutFunction_=timerFunction},updateButtonBarState_(){let buttonState;switch(this.state_){case PSimUIState.IDLE:case PSimUIState.STARTING_ACTIVATION:case PSimUIState.WAITING_FOR_ACTIVATION_TO_START:case PSimUIState.WAITING_FOR_PORTAL_TO_LOAD:case PSimUIState.TIMEOUT_PORTAL_LOAD:case PSimUIState.WAITING_FOR_USER_PAYMENT:this.forwardButtonLabel=this.i18n("next");buttonState={backward:ButtonState.HIDDEN,cancel:ButtonState.ENABLED,forward:ButtonState.DISABLED};break;case PSimUIState.TIMEOUT_START_ACTIVATION:this.forwardButtonLabel=this.i18n("tryAgain");buttonState={backward:ButtonState.HIDDEN,cancel:ButtonState.ENABLED,forward:ButtonState.ENABLED};break;case PSimUIState.ACTIVATION_SUCCESS:this.forwardButtonLabel=this.i18n("next");buttonState={backward:ButtonState.HIDDEN,cancel:ButtonState.ENABLED,forward:ButtonState.ENABLED};break;case PSimUIState.ALREADY_ACTIVATED:case PSimUIState.ACTIVATION_FAILURE:case PSimUIState.FINAL_TIMEOUT_START_ACTIVATION:this.forwardButtonLabel=this.i18n("done");buttonState={backward:ButtonState.HIDDEN,cancel:ButtonState.ENABLED,forward:ButtonState.ENABLED};break;case PSimUIState.WAITING_FOR_ACTIVATION_TO_FINISH:case PSimUIState.TIMEOUT_FINISH_ACTIVATION:this.forwardButtonLabel=this.i18n("done");buttonState={backward:ButtonState.HIDDEN,cancel:ButtonState.HIDDEN,forward:ButtonState.ENABLED};break;default:assertNotReached$1()}this.set("buttonState",buttonState)},onActivationFinished(result){this.closeActivationConnection_();const ActivationResult=chromeos.cellularSetup.mojom.ActivationResult;switch(result){case ActivationResult.kSuccessfullyStartedActivation:this.state_=PSimUIState.ACTIVATION_SUCCESS;break;case ActivationResult.kAlreadyActivated:this.state_=PSimUIState.ALREADY_ACTIVATED;break;case ActivationResult.kFailedToActivate:this.state_=PSimUIState.ACTIVATION_FAILURE;break;default:assertNotReached$1()}},getCarrierText(){if(this.selectedPSimPageName_===PSimPageName.PROVISIONING&&this.cellularMetadata_){return this.cellularMetadata_.carrier}return""},updateShowError_(){switch(this.state_){case PSimUIState.TIMEOUT_PORTAL_LOAD:case PSimUIState.TIMEOUT_FINISH_ACTIVATION:case PSimUIState.ACTIVATION_FAILURE:this.showError_=true;return;default:this.showError_=false;return}},updateSelectedPage_(){switch(this.state_){case PSimUIState.IDLE:case PSimUIState.STARTING_ACTIVATION:case PSimUIState.WAITING_FOR_ACTIVATION_TO_START:case PSimUIState.TIMEOUT_START_ACTIVATION:case PSimUIState.FINAL_TIMEOUT_START_ACTIVATION:this.selectedPSimPageName_=PSimPageName.SIM_DETECT;return;case PSimUIState.WAITING_FOR_PORTAL_TO_LOAD:case PSimUIState.TIMEOUT_PORTAL_LOAD:case PSimUIState.WAITING_FOR_USER_PAYMENT:case PSimUIState.ACTIVATION_SUCCESS:this.selectedPSimPageName_=PSimPageName.PROVISIONING;return;case PSimUIState.WAITING_FOR_ACTIVATION_TO_FINISH:case PSimUIState.TIMEOUT_FINISH_ACTIVATION:case PSimUIState.ALREADY_ACTIVATED:case PSimUIState.ACTIVATION_FAILURE:this.selectedPSimPageName_=PSimPageName.FINAL;return;default:assertNotReached$1()}},handlePSimUIStateChange_(){this.clearTimer_();const timeoutMs=getTimeoutMsForPSimUIState(this.state_);if(timeoutMs!==null){this.currentTimeoutId_=this.setTimeoutFunction_(this.onTimeout_.bind(this),timeoutMs)}if(this.state_===PSimUIState.STARTING_ACTIVATION){this.startActivation_();return}},onTimeout_(){this.closeActivationConnection_();switch(this.state_){case PSimUIState.STARTING_ACTIVATION:this.startActivationAttempts_++;if(this.startActivationAttempts_<MAX_START_ACTIVATION_ATTEMPTS){this.state_=PSimUIState.TIMEOUT_START_ACTIVATION}else{this.state_=PSimUIState.FINAL_TIMEOUT_START_ACTIVATION}return;case PSimUIState.WAITING_FOR_PORTAL_TO_LOAD:this.state_=PSimUIState.TIMEOUT_PORTAL_LOAD;return;case PSimUIState.WAITING_FOR_ACTIVATION_TO_FINISH:this.state_=PSimUIState.TIMEOUT_FINISH_ACTIVATION;return;default:assertNotReached$1()}},startActivation_(){assert(!this.activationDelegateReceiver_);this.activationDelegateReceiver_=new chromeos.cellularSetup.mojom.ActivationDelegateReceiver(this);this.cellularSetupRemote_.startActivation(this.activationDelegateReceiver_.$.bindNewPipeAndPassRemote()).then((params=>{this.carrierPortalHandler_=params.observer}))},closeActivationConnection_(){assert(!!this.activationDelegateReceiver_);this.activationDelegateReceiver_.$.close();this.activationDelegateReceiver_=null;this.carrierPortalHandler_=null;this.cellularMetadata_=null},clearTimer_(){if(this.currentTimeoutId_){clearTimeout(this.currentTimeoutId_)}this.currentTimeoutId_=null},onCarrierPortalLoaded_(){this.state_=PSimUIState.WAITING_FOR_USER_PAYMENT;this.carrierPortalHandler_.onCarrierPortalStatusChange(chromeos.cellularSetup.mojom.CarrierPortalStatus.kPortalLoadedWithoutPaidUser)},onCarrierPortalResult_(event){const success=event.detail;this.didCarrierPortalResultFail_=!success;this.state_=success?PSimUIState.ACTIVATION_SUCCESS:PSimUIState.ACTIVATION_FAILURE},getLoadingMessage_(){if(this.state_===PSimUIState.TIMEOUT_START_ACTIVATION){return this.i18n("simDetectPageErrorMessage")}else if(this.state_===PSimUIState.FINAL_TIMEOUT_START_ACTIVATION){return this.i18n("simDetectPageFinalErrorMessage")}return this.i18n("establishNetworkConnectionMessage")},isSimDetectError_(){return this.state_===PSimUIState.TIMEOUT_START_ACTIVATION||this.state_===PSimUIState.FINAL_TIMEOUT_START_ACTIVATION},getLoadingTitle_(){if(this.delegate.shouldShowPageTitle()&&this.isSimDetectError_()){return this.i18n("simDetectPageErrorTitle")}return""}});// Copyright 2021 The Chromium Authors. All rights reserved.
function hasActiveCellularNetwork(){const mojom=chromeos.networkConfig.mojom;const networkConfig=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote();return networkConfig.getNetworkStateList({filter:mojom.FilterType.kActive,networkType:mojom.NetworkType.kCellular,limit:mojom.NO_LIMIT}).then((response=>response.result.some((network=>network.connectionState!==mojom.ConnectionStateType.kNotConnected))))}function getSimSlotCount(deviceState){let pSimSlots=0;let eSimSlots=0;if(!deviceState||!deviceState.simInfos){return{pSimSlots:pSimSlots,eSimSlots:eSimSlots}}for(const simInfo of deviceState.simInfos){if(simInfo.eid){eSimSlots++;continue}pSimSlots++}return{pSimSlots:pSimSlots,eSimSlots:eSimSlots}}function isConnectedToNonCellularNetwork(){const mojom=chromeos.networkConfig.mojom;const networkConfig=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote();return networkConfig.getNetworkStateList({filter:mojom.FilterType.kActive,networkType:mojom.NetworkType.kAll,limit:mojom.NO_LIMIT}).then((response=>response.result.some((network=>network.connectionState===mojom.ConnectionStateType.kOnline&&network.type!==mojom.NetworkType.kCellular))))}function isActiveSim(networkState,deviceState){const mojom=chromeos.networkConfig.mojom;if(!networkState||networkState.type!==mojom.NetworkType.kCellular){return false}const iccid=networkState.typeState.cellular.iccid;if(!iccid||!deviceState||!deviceState.simInfos){return false}const isActiveSim=deviceState.simInfos.find((simInfo=>simInfo.iccid===iccid&&simInfo.isPrimary));return!!isActiveSim}// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const QR_CODE_DETECTION_INTERVAL_MS=1e3;const PageState={MANUAL_ENTRY:1,SCANNING_USER_FACING:2,SCANNING_ENVIRONMENT_FACING:3,SWITCHING_CAM_USER_TO_ENVIRONMENT:4,SWITCHING_CAM_ENVIRONMENT_TO_USER:5,SCANNING_SUCCESS:6,SCANNING_FAILURE:7,MANUAL_ENTRY_INSTALL_FAILURE:8,SCANNING_INSTALL_FAILURE:9};const UiElement={START_SCANNING:1,VIDEO:2,SWITCH_CAMERA:3,SCAN_FINISH:4,SCAN_SUCCESS:5,SCAN_FAILURE:6,CODE_DETECTED:7,SCAN_INSTALL_FAILURE:8};const QR_CODE_FORMAT="qr_code";Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-positioning" scope="activation-code-page">:host([expanded_]) #pageBody {
  height: 340px;
        transition-duration: 200ms;
}

:host(:not([expanded_])) #pageBody {
  height: 282px;
        transition-duration: 150ms;
}

:host([expanded_]) #esimQrCodeDetection {
  height: 190px;
        transition-duration: 200ms;
}

:host(:not([expanded_])) #esimQrCodeDetection {
  height: 140px;
        transition-duration: 150ms;
}

:host(:not([expanded_])) #esimQrCodeDetection:focus-within {
  background-color: var(--google-grey-refresh-300);
}

:host cr-button {
  --ripple-opacity: 0;
}

#esimQrCodeDetection {
  background-color: var(--google-grey-refresh-100);
        border-radius: 4px;
        margin: 20px 0 20px 0;
        overflow: hidden;
        position: relative;
}

paper-spinner-lite {
  height: 20px;
        margin-inline-end: 6px;
        margin-top: 6px;
        width: 20px;
}

cr-button:not(:focus) {
  border: none;
        box-shadow: none;
}

cr-button:hover {
  background-color: transparent;
}

cr-button[disabled] {
  background-color: transparent;
}

cr-button[disabled] > iron-icon {
  --iron-icon-fill-color: var(--google-grey-600);
}

.animate {
  transition-property: height;
        transition-timing-function: cubic-bezier(0.00, 0.00, 0.20, 1.00);
}

.center {
  left: 50%;
        position: absolute;
        top: 50%;
        transform: translateY(-50%) translateX(-50%);
}

.width-92 {
  width: 92%;
}

.label {
  font-weight: 500;
}

.button-image {
  margin-inline-end: 8px;
}

.scan-finish-image {
  position: absolute;
}

.scan-finish-message {
  padding-inline-end: 0;
        padding-inline-start: 30px;
}

.scan-finish-message:hover {
  cursor: default;
}

.scan-error-header {
  --iron-icon-fill-color: #D93025;
}

.scan-error-message {
  color: var(--google-red-600);
}

.blue-icon {
  --iron-icon-fill-color: #1A73E8;
}

.hidden {
  visibility: hidden;
}

.visually-hidden {
  clip: rect(0 0 0 0);
        clip-path: inset(50%);
        height: 1px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap;
        width: 1px;
}

#scanSucessHeader {
  --iron-icon-fill-color: #1E8E3E;
        margin-bottom: 8px;
}

#scanSuccessMessage {
  color: green;
        font-size: medium;
}

#scanSuccessMessage::selection {
  background-color: rgb(172, 206, 247);
        color: green;
}

#scanFailureHeader {
  margin-bottom: 4px;
}

#useCameraAgainButton {
  display: block;
        font-weight: 500;
        text-align: center;
}

#tryAgainButton {
  display: block;
        text-align: center;
}

#switchCameraButton {
  background-color: rgba(0, 0, 0, 0.04);
        border-radius: 4px;
        color: var(--google-grey-refresh-300);
        margin: 8px;
        padding: 8px;
        position: absolute;
        right: 0;
        z-index: 2;
}

#switchCameraButton iron-icon {
  filter: brightness(2.1);
        --iron-icon-fill-color: #5F6368;
}

#loadingMessage {
  bottom: 0;
        color: var(--google-grey-600);
        font-size: var(--cr-form-field-label-font-size);
        letter-spacing: .4px;
        line-height: var(--cr-form-field-label-line-height);
        position: absolute;
}

#video {
  height: inherit;
        transform: rotateY(180deg);
}

#pageBody {
  margin-top: -20px;
}

#startScanningButton {
  max-width: 470px;
        min-width: 345px;
        text-align: center;
        width: auto;
}

</style>
    <base-page>
      <div slot="page-body" id="pageBody" class="animate">
        <span aria-live="polite">
          [[getDescription_(cameraCount_, qrCodeDetector_)]]
        </span>
        <template is="dom-if" if="[[isScanningAvailable_(cameraCount_, qrCodeDetector_.*)]]" restamp="">
          <div id="esimQrCodeDetection" class="animate">
            <cr-button id="switchCameraButton" on-click="onSwitchCameraButtonPressed_" hidden$="[[isUiElementHidden_(UiElement.SWITCH_CAMERA, state_, cameraCount_)]]" disabled="[[isUiElementDisabled_(UiElement.SWITCH_CAMERA, state_, showBusy)]]">
              <iron-icon class="button-image" icon="cellular-setup:switch-camera"></iron-icon>
              [[i18n('switchCamera')]]
            </cr-button>
            <video id="video" autoplay="" muted="" hidden$="[[isUiElementHidden_(UiElement.VIDEO, state_)]]">
            </video>
            <template is="dom-if" if="[[qrCodeCameraA11yString_]]" restamp="">
              <div class="visually-hidden" aria-live="polite">
                [[qrCodeCameraA11yString_]]
              </div>
            </template>
            <div class="center blue-icon" id="startScanningContainer" hidden$="[[isUiElementHidden_(UiElement.START_SCANNING, state_)]]">
              <cr-button class="label" id="startScanningButton" on-click="startScanning_" disabled="[[isUiElementDisabled_(UiElement.START_SCANNING, state_, showBusy)]]">
                <iron-icon class="button-image" icon="cellular-setup:camera"></iron-icon>
                [[i18n('useCamera')]]
              </cr-button>
            </div>
            <div class="center" id="scanFinishContainer" hidden$="[[isUiElementHidden_(UiElement.SCAN_FINISH, state_)]]">
              <div>
                <div id="scanSuccessContainer" hidden$="[[isUiElementHidden_(UiElement.SCAN_SUCCESS, state_)]]">
                  <div id="scanSucessHeader" hidden$="[[isUiElementHidden_(UiElement.CODE_DETECTED, state_)]]">
                    <iron-icon class="scan-finish-image" icon="cellular-setup:checked"></iron-icon>
                    <span class="label scan-finish-message" id="scanSuccessMessage">
                      [[i18n('scanQRCodeSuccess')]]
                    </span>
                  </div>
                  <div id="scanInstallFailureHeader" class="scan-error-header" hidden$="[[isUiElementHidden_(UiElement.SCAN_INSTALL_FAILURE, state_)]]">
                    <iron-icon class="scan-finish-image" icon="cellular-setup:error"></iron-icon>
                    <span class="label scan-finish-message scan-error-message">
                      [[i18n('scanQrCodeInvalid')]]
                    </span>
                  </div>
                  <template is="dom-if" restamp="" if="[[!isUiElementHidden_(UiElement.SCAN_INSTALL_FAILURE, state_)]]">
                    <cr-button id="useCameraAgainButton" class="blue-icon" on-click="startScanning_">
                      <iron-icon class="button-image" icon="cellular-setup:camera">
                      </iron-icon>
                      [[i18n('qrCodeUseCameraAgain')]]
                    </cr-button>
                  </template>
                </div>
                <div id="scanFailureContainer" hidden$="[[isUiElementHidden_(UiElement.SCAN_FAILURE, state_)]]">
                  <div id="scanFailureHeader" class="scan-error-header">
                    <iron-icon class="scan-finish-image" icon="cellular-setup:error"></iron-icon>
                    <span class="label scan-finish-message scan-error-message">
                      [[i18n('scanQrCodeError')]]
                    </span>
                  </div>
                  <cr-button id="tryAgainButton" class="blue-icon" on-click="startScanning_" disabled="[[isUiElementDisabled_(UiElement.SCAN_FAILURE, state_, showBusy)]]">
                    <iron-icon class="button-image" icon="cellular-setup:try-again"></iron-icon>
                    [[i18n('qrCodeRetry')]]
                  </cr-button>
                </div>
              </div>
            </div>
          </div>
        </template>
        <div id="activationCodeContainer" class$="[[computeActivationCodeClass_(
              cameraCount_, qrCodeDetector_.*)]]">
          <cr-input id="activationCode" label="[[i18n('activationCode')]]" value="{{activationCode}}" disabled="[[showBusy]]" on-keydown="onKeyDown_" invalid="[[shouldActivationCodeInputBeInvalid_(state_)]]" error-message="[[i18n('scanQrCodeInvalid')]]">
            <template is="dom-if" if="[[showBusy]]">
              <div slot="suffix">
                <paper-spinner-lite active="">
                </paper-spinner-lite>
              </div>
            </template>
          </cr-input>
          <div id="loadingMessage" hidden$="[[!showBusy]]">
              [[i18n('scanQrCodeLoading')]]
          </div>
        </div>
      </div>
    </base-page>
<!--_html_template_end_-->`,is:"activation-code-page",behaviors:[I18nBehavior],properties:{activationCode:{type:String,notify:true,observer:"onActivationCodeChanged_"},showError:{type:Boolean,notify:true,observer:"onShowErrorChanged_"},showBusy:{type:Boolean,value:false},UiElement:{type:Object,value:UiElement},state_:{type:Object,value:PageState,observer:"onStateChanged_"},cameraCount_:{type:Number,value:0,observer:"onHasCameraCountChanged_"},qrCodeDetector_:{type:Object,value:null},expanded_:{type:Boolean,value:false,reflectToAttribute:true},qrCodeCameraA11yString_:{type:String,value:""}},mediaDevices_:null,stream_:null,qrCodeDetectorTimer_:null,setIntervalFunction_:setInterval.bind(window),barcodeDetectorClass_:BarcodeDetector,imageCaptureClass_:ImageCapture,playVideo_:function(){this.$$("#video").play()},stopStream_:function(stream){if(stream){stream.getTracks()[0].stop()}},ready(){this.setMediaDevices(navigator.mediaDevices);this.initBarcodeDetector_();this.state_=PageState.MANUAL_ENTRY},detached(){this.stopStream_(this.stream_);if(this.qrCodeDetectorTimer_){this.clearQrCodeDetectorTimer_()}this.mediaDevices_.removeEventListener("devicechange",this.updateCameraCount_.bind(this))},isScanningAvailable_(){return this.cameraCount_>0&&!!this.qrCodeDetector_},async initBarcodeDetector_(){const formats=await this.barcodeDetectorClass_.getSupportedFormats();if(!formats||formats.length===0){this.qrCodeDetector_=null;return}const qrCodeFormat=formats.find((format=>format===QR_CODE_FORMAT));if(qrCodeFormat){this.qrCodeDetector_=new this.barcodeDetectorClass_({formats:[QR_CODE_FORMAT]})}},setMediaDevices(mediaDevices){this.mediaDevices_=mediaDevices;this.updateCameraCount_();this.mediaDevices_.addEventListener("devicechange",this.updateCameraCount_.bind(this))},async setFakesForTesting(barcodeDetectorClass,imageCaptureClass,setIntervalFunction,playVideoFunction,stopStreamFunction){this.barcodeDetectorClass_=barcodeDetectorClass;await this.initBarcodeDetector_();this.imageCaptureClass_=imageCaptureClass;this.setIntervalFunction_=setIntervalFunction;this.playVideo_=playVideoFunction;this.stopStream_=stopStreamFunction},getQrCodeDetectorTimerForTest(){return this.qrCodeDetectorTimer_},computeActivationCodeClass_(){return this.isScanningAvailable_()?"relative":"center width-92"},updateCameraCount_(){if(!this.mediaDevices_||!this.mediaDevices_.enumerateDevices){this.cameraCount_=0;return}this.mediaDevices_.enumerateDevices().then((devices=>{this.cameraCount_=devices.filter((device=>device.kind==="videoinput")).length})).catch((e=>{this.cameraCount_=0}))},onHasCameraCountChanged_(){if(this.state_===PageState.SCANNING_ENVIRONMENT_FACING&&this.cameraCount_===1){this.state_=PageState.SWITCHING_CAM_ENVIRONMENT_TO_USER;this.startScanning_()}},startScanning_(){const oldStream=this.stream_;if(this.qrCodeDetectorTimer_){this.clearQrCodeDetectorTimer_()}const useUserFacingCamera=this.state_!==PageState.SWITCHING_CAM_USER_TO_ENVIRONMENT;this.mediaDevices_.getUserMedia({video:{height:130,width:482,facingMode:useUserFacingCamera?"user":"environment"},audio:false}).then((stream=>{this.stream_=stream;if(this.stream_){const video=this.$$("#video");video.srcObject=stream;this.playVideo_()}this.stopStream_(oldStream);this.activationCode="";this.state_=useUserFacingCamera?PageState.SCANNING_USER_FACING:PageState.SCANNING_ENVIRONMENT_FACING;if(this.stream_){this.detectQrCode_()}})).catch((e=>{this.state_=PageState.SCANNING_FAILURE}))},async detectQrCode_(){try{this.qrCodeDetectorTimer_=this.setIntervalFunction_(async function(){const capturer=new this.imageCaptureClass_(this.stream_.getVideoTracks()[0]);const frame=await capturer.grabFrame();const activationCode=await this.detectActivationCode_(frame);if(activationCode){this.clearQrCodeDetectorTimer_();this.activationCode=activationCode;this.stopStream_(this.stream_);this.state_=PageState.SCANNING_SUCCESS}}.bind(this),QR_CODE_DETECTION_INTERVAL_MS)}catch(error){this.state_=PageState.SCANNING_FAILURE}},async detectActivationCode_(frame){if(!this.qrCodeDetector_){return null}const qrCodes=await this.qrCodeDetector_.detect(frame);if(qrCodes.length>0){return qrCodes[0].rawValue}return null},onActivationCodeChanged_(){const activationCode=this.validateActivationCode_(this.activationCode);this.fire("activation-code-updated",{activationCode:activationCode})},clearQrCodeDetectorTimer_(){clearTimeout(this.qrCodeDetectorTimer_);this.qrCodeDetectorTimer_=null},validateActivationCode_(activationCode){activationCode=activationCode.trim();if(activationCode.length>3){return activationCode}return null},onSwitchCameraButtonPressed_(){if(this.state_===PageState.SCANNING_USER_FACING){this.state_=PageState.SWITCHING_CAM_USER_TO_ENVIRONMENT}else if(this.state_===PageState.SCANNING_ENVIRONMENT_FACING){this.state_=PageState.SWITCHING_CAM_ENVIRONMENT_TO_USER}this.startScanning_()},onShowErrorChanged_(){if(this.showError){if(this.state_===PageState.MANUAL_ENTRY){this.state_=PageState.MANUAL_ENTRY_INSTALL_FAILURE;afterNextRender(this,(()=>{focusWithoutInk(this.$.activationCode)}))}else if(this.state_===PageState.SCANNING_SUCCESS){this.state_=PageState.SCANNING_INSTALL_FAILURE}}},onStateChanged_(){this.qrCodeCameraA11yString_="";if(this.state_!==PageState.MANUAL_ENTRY_INSTALL_FAILURE&&this.state_!==PageState.SCANNING_INSTALL_FAILURE){this.showError=false}if(this.state_===PageState.MANUAL_ENTRY){this.clearQrCodeDetectorTimer_();afterNextRender(this,(()=>{this.stopStream_(this.stream_)}))}if(this.state_===PageState.SCANNING_USER_FACING||this.state_===PageState.SCANNING_ENVIRONMENT_FACING){this.qrCodeCameraA11yString_=this.i18n("qrCodeA11YCameraOn");this.expanded_=true;return}if(this.state_===PageState.SCANNING_SUCCESS){this.qrCodeCameraA11yString_=this.i18n("qrCodeA11YCameraScanSuccess");this.fire("focus-default-button")}this.expanded_=false},onKeyDown_(e){if(e.key==="Enter"){this.fire("forward-navigation-requested")}if(e.key==="Tab"){return}this.state_=PageState.MANUAL_ENTRY;e.stopPropagation()},isUiElementHidden_(uiElement,state,cameraCount){switch(uiElement){case UiElement.START_SCANNING:return state!==PageState.MANUAL_ENTRY&&state!==PageState.MANUAL_ENTRY_INSTALL_FAILURE;case UiElement.VIDEO:return state!==PageState.SCANNING_USER_FACING&&state!==PageState.SCANNING_ENVIRONMENT_FACING;case UiElement.SWITCH_CAMERA:const isScanning=state===PageState.SCANNING_USER_FACING||state===PageState.SCANNING_ENVIRONMENT_FACING;return!(isScanning&&this.cameraCount_>1);case UiElement.SCAN_FINISH:return state!==PageState.SCANNING_SUCCESS&&state!==PageState.SCANNING_FAILURE&&state!==PageState.SCANNING_INSTALL_FAILURE;case UiElement.SCAN_SUCCESS:return state!==PageState.SCANNING_SUCCESS&&state!==PageState.SCANNING_INSTALL_FAILURE;case UiElement.SCAN_FAILURE:return state!==PageState.SCANNING_FAILURE;case UiElement.CODE_DETECTED:return state!==PageState.SCANNING_SUCCESS;case UiElement.SCAN_INSTALL_FAILURE:return state!==PageState.SCANNING_INSTALL_FAILURE}},isUiElementDisabled_(uiElement,state,showBusy){if(showBusy){return true}switch(uiElement){case UiElement.SWITCH_CAMERA:return state===PageState.SWITCHING_CAM_USER_TO_ENVIRONMENT||state===PageState.SWITCHING_CAM_ENVIRONMENT_TO_USER;default:return false}},getDescription_(){if(!this.isScanningAvailable_()){return this.i18n("scanQRCodeEnterActivationCode")}return this.i18n("scanQRCode")},shouldActivationCodeInputBeInvalid_(state){return state===PageState.MANUAL_ENTRY_INSTALL_FAILURE}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="activation-verification-page">#pageBody {
  height: 282px;
        margin-top: -20px;
        overflow: hidden;
}

#animationContainer {
  display: flex;
        height: 216px;
        margin-bottom: 30px;
        margin-top: 24px;
}

cr-lottie {
  margin: auto;
}

</style>

    <base-page>
      <div slot="page-body" id="pageBody" class="layout vertical center-center">
        <span>[[i18n('verifyingActivationCode')]]</span>
        <div id="animationContainer">
          <cr-lottie id="spinner" animation-url="spinner.json" autoplay="">
          </cr-lottie>
        </div>
      </div>
    </base-page>
<!--_html_template_end_-->`,is:"activation-verification-page",behaviors:[I18nBehavior]});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-flex iron-positioning" scope="profile-discovery-list-item">#details {
  align-items: center;
        display: flex;
        flex: auto;
        min-height: var(--cr-section-two-line-min-height);
}

#profileImage {
  margin-inline-end: 16px;
}

#profileTitleLabel {
  color: var(--cr-primary-text-color);
}

.icon {
  margin-inline-end: 8px;
        padding-inline-end: var(--cr-section-padding);
}

#checkmark {
  --iron-icon-fill-color: var(--google-blue-600);
}

paper-spinner-lite {
  height: 16px;
        vertical-align: middle;
        width: 16px;
}

</style>
    <div class="two-line no-padding" selectable="">
      <div class="flex layout horizontal center link-wrapper">
        <!-- TODO(crbug.com/1093185): Update UI to new spec. -->
        <div id="details">
          <!-- TODO(crbug.com/1093185): Update with real profile image. -->
          <img id="profileImage" src="chrome://resources/cr_components/chromeos/cellular_setup/default_esim_profile.svg">
          <!-- The item's aria properties are set in profile_discovery_list_page. -->
          <div class="flex settings-box-text">
            <div id="profileTitleLabel">
              [[getProfileName_(profileProperties_)]]
            </div>
            <div id="profileProviderLabel">
              [[getProfileProvider_(profileProperties_)]]
            </div>
          </div>
        </div>
        <div class="icon" hidden$="[[!selected]]">
          <iron-icon id="checkmark" icon="cellular-setup:checked" tabindex="-1" hidden$="[[showLoadingIndicator]]">
          </iron-icon>
          <paper-spinner-lite active="" hidden$="[[!showLoadingIndicator]]">
          </paper-spinner-lite>
        </div>
      </div>
    </div>
<!--_html_template_end_-->`,is:"profile-discovery-list-item",behaviors:[I18nBehavior],properties:{profile:{type:Object,value:null,observer:"onProfileChanged_"},selected:{type:Boolean,reflectToAttribute:true},showLoadingIndicator:{type:Boolean},profileProperties_:{type:Object,value:null,notify:true}},onProfileChanged_(){if(!this.profile){this.profileProperties_=null;return}this.profile.getProperties().then((response=>{this.profileProperties_=response.properties}))},getProfileName_(){if(!this.profileProperties_){return""}return String.fromCharCode(...this.profileProperties_.name.data)},getProfileProvider_(){if(!this.profileProperties_){return""}return String.fromCharCode(...this.profileProperties_.serviceProvider.data)}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style iron-flex" scope="profile-discovery-list-page">[slot='page-body'] {
  height: 300px;
        margin-top: -20px;
}

profile-discovery-list-item {
  height: 64px;
}

#container {
  height: 230px;
        margin-top: 20px;
        overflow-x: hidden;
        overflow-y: auto;
}

iron-list > *:not(:first-of-type) {
  border-top: var(--cr-separator-line);
}

</style>
    <base-page>
      <div slot="page-body">
        <div>[[i18n('profileListPageMessage')]]</div>
        <div id="container" class="layout vertical flex" scrollable="">
          <iron-list id="profileList" items="[[pendingProfiles]]" scroll-target="container" selection-enabled="[[!showBusy]]" preserve-focus="" selected-item="{{selectedProfile}}" role="listbox">
            <template>
              <profile-discovery-list-item profile="[[item]]" selected="[[isProfileSelected_(item, selectedProfile)]]" tabindex="0" role="option" aria-selected="[[isProfileSelected_(item, selectedProfile)]]" show-loading-indicator="[[showBusy]]">
              </profile-discovery-list-item>
            </template>
          </iron-list>
        </div>
      </div>
    </base-page>
<!--_html_template_end_-->`,is:"profile-discovery-list-page",behaviors:[I18nBehavior],properties:{pendingProfiles:{type:Array},selectedProfile:{type:Object,notify:true},showBusy:{type:Boolean,value:false}},isProfileSelected_(profile){return this.selectedProfile===profile}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-flex iron-positioning" scope="confirmation-code-page">[slot='page-body'] {
  height: 282px;
        margin-top: -20px;
}

#outerDiv {
  height: 236px;
}

.container {
  width: 472px;
}

#details {
  align-items: center;
        color: var(--cr-primary-text-color);
        display: flex;
        margin-bottom: 40px;
}

#profileImage {
  margin-inline-end: 16px;
}

#confirmationCodeContainer {
  margin-inline-end: 16px;
}

paper-spinner-lite {
  height: 20px;
        position: absolute;
        right: 16px;
        top: 24px;
        width: 20px;
}

#loadingMessage {
  bottom: 0;
        color: var(--google-grey-600);
        font-size: var(--cr-form-field-label-font-size);
        letter-spacing: .4px;
        line-height: var(--cr-form-field-label-line-height);
        position: absolute;
}

</style>
    <base-page>
      <div slot="page-body">
        <div aria-live="polite">
          [[i18n('confirmationCodeMessage')]]
        </div>
        <div id="outerDiv" class="layout horizontal center">
          <div class="container">
            <div id="details" hidden$="[[!shouldShowProfileDetails_(profile)]]">
              <!-- TODO(crbug.com/1093185): Update with real profile image. -->
              <img id="profileImage" src="chrome://resources/cr_components/chromeos/cellular_setup/default_esim_profile.svg">
              <div>
                [[getProfileName_(profileProperties_)]]
              </div>
            </div>
            <div id="confirmationCodeContainer" class="relative">
              <cr-input id="confirmationCode" label="[[i18n('confirmationCodeInput')]]" value="{{confirmationCode}}" error-message="[[i18n('confirmationCodeError')]]" invalid="[[showError]]" disabled="[[showBusy]]" on-keydown="onKeyDown_">
              </cr-input>
              <paper-spinner-lite active="" hidden$="[[!showBusy]]">
              </paper-spinner-lite>
              <div id="loadingMessage" hidden$="[[!showBusy]]">
                [[i18n('confirmationCodeLoading')]]
              </div>
            </div>
          </div>
        </div>
      </div>
    </base-page>
<!--_html_template_end_-->`,is:"confirmation-code-page",behaviors:[I18nBehavior],properties:{profile:{type:Object,observer:"onProfileChanged_"},confirmationCode:{type:String,notify:true},showError:{type:Boolean},showBusy:{type:Boolean,value:false},profileProperties_:{type:Object,value:null}},onProfileChanged_(){if(!this.profile){this.profileProperties_=null;return}this.profile.getProperties().then((response=>{this.profileProperties_=response.properties}))},onKeyDown_(e){if(e.key==="Enter"){this.fire("forward-navigation-requested")}e.stopPropagation()},shouldShowProfileDetails_(){return!!this.profile},getProfileName_(){if(!this.profileProperties_){return""}return String.fromCharCode(...this.profileProperties_.name.data)}});// Copyright 2020 The Chromium Authors. All rights reserved.
const ESimPageName={PROFILE_LOADING:"profileLoadingPage",PROFILE_DISCOVERY:"profileDiscoveryPage",ACTIVATION_CODE:"activationCodePage",ACTIVATION_VERIFCATION:"activationVerificationPage",CONFIRMATION_CODE:"confirmationCodePage",FINAL:"finalPage"};const ESimUiState={PROFILE_SEARCH:"profile-search",ACTIVATION_CODE_ENTRY:"activation-code-entry",ACTIVATION_CODE_ENTRY_READY:"activation-code-entry-ready",ACTIVATION_CODE_ENTRY_INSTALLING:"activation-code-entry-installing",CONFIRMATION_CODE_ENTRY:"confirmation-code-entry",CONFIRMATION_CODE_ENTRY_READY:"confirmation-code-entry-ready",CONFIRMATION_CODE_ENTRY_INSTALLING:"confirmation-code-entry-installing",PROFILE_SELECTION:"profile-selection",PROFILE_SELECTION_INSTALLING:"profile-selection-installing",SETUP_FINISH:"setup-finish"};const ESimSetupFlowResult={SUCCESS:0,INSTALL_FAIL:1,CANCELLED_NEEDS_CONFIRMATION_CODE:2,CANCELLED_INVALID_ACTIVATION_CODE:3,ERROR_FETCHING_PROFILES:4,CANCELLED_WITHOUT_ERROR:5,CANCELLED_NO_PROFILES:6,NO_NETWORK:7};const ESIM_SETUP_RESULT_METRIC_NAME="Network.Cellular.ESim.SetupFlowResult";const SUCCESSFUL_ESIM_SETUP_DURATION_METRIC_NAME="Network.Cellular.ESim.CellularSetup.Success.Duration";const FAILED_ESIM_SETUP_DURATION_METRIC_NAME="Network.Cellular.ESim.CellularSetup.Failure.Duration";Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-flex" scope="esim-flow-ui">:host {
  align-content: space-between;
        display: flex;
        flex: 1 1 auto;
        flex-direction: column;
}

</style>
    <iron-pages attr-for-selected="id" selected="[[selectedESimPageName_]]">
      <setup-loading-page id="profileLoadingPage" loading-message="[[getLoadingMessage_(hasHadActiveCellularNetwork_)]]">
      </setup-loading-page>
      <profile-discovery-list-page id="profileDiscoveryPage" pending-profiles="[[pendingProfiles_]]" selected-profile="{{selectedProfile_}}" show-busy="[[shouldShowSubpageBusy_(state_)]]">
      </profile-discovery-list-page>
      <activation-code-page id="activationCodePage" activation-code="{{activationCode_}}" show-error="{{showError_}}" show-busy="[[shouldShowSubpageBusy_(state_)]]">
      </activation-code-page>
      <setup-loading-page id="activationVerificationPage" loading-message="[[i18n('verifyingActivationCode')]]">
      </setup-loading-page>
      <confirmation-code-page id="confirmationCodePage" confirmation-code="{{confirmationCode_}}" profile="[[selectedProfile_]]" show-error="{{showError_}}" show-busy="[[shouldShowSubpageBusy_(state_)]]">
      </confirmation-code-page>
      <final-page id="finalPage" delegate="[[delegate]]" show-error="[[showError_]]" message="[[i18n('eSimFinalPageMessage')]]" error-message="[[i18n('eSimFinalPageErrorMessage')]]">
      </final-page>
    </iron-pages>
<!--_html_template_end_-->`,is:"esim-flow-ui",behaviors:[I18nBehavior,NetworkListenerBehavior,SubflowBehavior],properties:{delegate:Object,header:{type:String,notify:true,computed:"computeHeader_(selectedESimPageName_, showError_)"},forwardButtonLabel:{type:String,notify:true},state_:{type:String,value:ESimUiState.PROFILE_SEARCH,observer:"onStateChanged_"},selectedESimPageName_:String,showError_:{type:Boolean,value:false},pendingProfiles_:{type:Array},selectedProfile_:{type:Object},activationCode_:{type:String,value:""},confirmationCode_:{type:String,value:"",observer:"onConfirmationCodeUpdated_"},hasHadActiveCellularNetwork_:{type:Boolean,value:false}},eSimManagerRemote_:null,euicc_:null,hasFailedFetchingProfiles_:false,lastProfileInstallResult_:null,isOffline_:false,timeOnAttached_:null,listeners:{"activation-code-updated":"onActivationCodeUpdated_","forward-navigation-requested":"onForwardNavigationRequested_"},observers:["onSelectedProfileChanged_(selectedProfile_)"],created(){this.eSimManagerRemote_=getESimManagerRemote();const networkConfig=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote();const filter={filter:chromeos.networkConfig.mojom.FilterType.kActive,limit:chromeos.networkConfig.mojom.NO_LIMIT,networkType:chromeos.networkConfig.mojom.NetworkType.kAll};networkConfig.getNetworkStateList(filter).then((response=>{this.onActiveNetworksChanged(response.result)}))},attached(){this.timeOnAttached_=new Date},detached(){let resultCode=null;const ProfileInstallResult=chromeos.cellularSetup.mojom.ProfileInstallResult;switch(this.lastProfileInstallResult_){case ProfileInstallResult.kSuccess:resultCode=ESimSetupFlowResult.SUCCESS;break;case ProfileInstallResult.kFailure:resultCode=ESimSetupFlowResult.INSTALL_FAIL;break;case ProfileInstallResult.kErrorNeedsConfirmationCode:resultCode=ESimSetupFlowResult.CANCELLED_NEEDS_CONFIRMATION_CODE;break;case ProfileInstallResult.kErrorInvalidActivationCode:resultCode=ESimSetupFlowResult.CANCELLED_INVALID_ACTIVATION_CODE;break;default:if(this.hasFailedFetchingProfiles_){resultCode=ESimSetupFlowResult.ERROR_FETCHING_PROFILES}else if(this.pendingProfiles_&&!this.pendingProfiles_.length){resultCode=ESimSetupFlowResult.CANCELLED_NO_PROFILES}else{resultCode=ESimSetupFlowResult.CANCELLED_WITHOUT_ERROR}break}if(this.isOffline_&&resultCode!==ProfileInstallResult.kSuccess){resultCode=ESimSetupFlowResult.NO_NETWORK}assert(resultCode!==null);chrome.metricsPrivate.recordEnumerationValue(ESIM_SETUP_RESULT_METRIC_NAME,resultCode,Object.keys(ESimSetupFlowResult).length);const elapsedTimeMs=new Date-this.timeOnAttached_;if(resultCode===ESimSetupFlowResult.SUCCESS){chrome.metricsPrivate.recordLongTime(SUCCESSFUL_ESIM_SETUP_DURATION_METRIC_NAME,elapsedTimeMs);return}chrome.metricsPrivate.recordLongTime(FAILED_ESIM_SETUP_DURATION_METRIC_NAME,elapsedTimeMs)},onActiveNetworksChanged(activeNetworks){this.isOffline_=!activeNetworks.some((network=>network.connectionState===chromeos.networkConfig.mojom.ConnectionStateType.kOnline))},initSubflow(){this.fetchProfiles_();this.onNetworkStateListChanged()},async fetchProfiles_(){const euicc=await getEuicc();if(!euicc){this.hasFailedFetchingProfiles_=true;this.showError_=true;this.state_=ESimUiState.SETUP_FINISH;console.warn("No Euiccs found");return}this.euicc_=euicc;const requestPendingProfilesResponse=await euicc.requestPendingProfiles();if(requestPendingProfilesResponse.result===chromeos.cellularSetup.mojom.ESimOperationResult.kFailure){this.hasFailedFetchingProfiles_=true;console.warn("Error requesting pending profiles: ",requestPendingProfilesResponse)}this.pendingProfiles_=await getPendingESimProfiles(euicc);switch(this.pendingProfiles_.length){case 0:this.state_=ESimUiState.ACTIVATION_CODE_ENTRY;break;case 1:this.selectedProfile_=this.pendingProfiles_[0];this.selectedProfile_.installProfile("").then(this.handleProfileInstallResponse_.bind(this));break;default:this.state_=ESimUiState.PROFILE_SELECTION;break}},handleProfileInstallResponse_(response){this.lastProfileInstallResult_=response.result;if(response.result===chromeos.cellularSetup.mojom.ProfileInstallResult.kErrorNeedsConfirmationCode){this.state_=ESimUiState.CONFIRMATION_CODE_ENTRY;return}this.showError_=response.result!==chromeos.cellularSetup.mojom.ProfileInstallResult.kSuccess;if(response.result===chromeos.cellularSetup.mojom.ProfileInstallResult.kFailure&&this.state_===ESimUiState.CONFIRMATION_CODE_ENTRY_INSTALLING){this.state_=ESimUiState.CONFIRMATION_CODE_ENTRY_READY;return}if(response.result===chromeos.cellularSetup.mojom.ProfileInstallResult.kErrorInvalidActivationCode){this.state_=ESimUiState.ACTIVATION_CODE_ENTRY_READY;return}if(response.result===chromeos.cellularSetup.mojom.ProfileInstallResult.kSuccess||response.result===chromeos.cellularSetup.mojom.ProfileInstallResult.kFailure){this.state_=ESimUiState.SETUP_FINISH}},onStateChanged_(newState,oldState){this.updateButtonBarState_();this.updateSelectedPage_();this.initializePageState_(newState,oldState)},updateSelectedPage_(){const oldSelectedESimPageName=this.selectedESimPageName_;switch(this.state_){case ESimUiState.PROFILE_SEARCH:this.selectedESimPageName_=ESimPageName.PROFILE_LOADING;break;case ESimUiState.ACTIVATION_CODE_ENTRY:case ESimUiState.ACTIVATION_CODE_ENTRY_READY:this.selectedESimPageName_=ESimPageName.ACTIVATION_CODE;break;case ESimUiState.ACTIVATION_CODE_ENTRY_INSTALLING:this.selectedESimPageName_=ESimPageName.ACTIVATION_VERIFCATION;break;case ESimUiState.CONFIRMATION_CODE_ENTRY:case ESimUiState.CONFIRMATION_CODE_ENTRY_READY:case ESimUiState.CONFIRMATION_CODE_ENTRY_INSTALLING:this.selectedESimPageName_=ESimPageName.CONFIRMATION_CODE;break;case ESimUiState.PROFILE_SELECTION:case ESimUiState.PROFILE_SELECTION_INSTALLING:this.selectedESimPageName_=ESimPageName.PROFILE_DISCOVERY;break;case ESimUiState.SETUP_FINISH:this.selectedESimPageName_=ESimPageName.FINAL;break;default:assertNotReached$1();break}if(oldSelectedESimPageName!==this.selectedESimPageName_){this.fire("focus-default-button")}},generateButtonStateForActivationPage_(enableForwardBtn,cancelButtonStateIfEnabled,isInstalling){this.forwardButtonLabel=this.i18n("next");let backBtnState=ButtonState.HIDDEN;if(this.pendingProfiles_.length>1){backBtnState=isInstalling?ButtonState.DISABLED:ButtonState.ENABLED}return{backward:backBtnState,cancel:cancelButtonStateIfEnabled,forward:enableForwardBtn?ButtonState.ENABLED:ButtonState.DISABLED}},generateButtonStateForConfirmationPage_(enableForwardBtn,cancelButtonStateIfEnabled,isInstalling){this.forwardButtonLabel=this.i18n("confirm");let backBtnState=ButtonState.ENABLED;if(this.pendingProfiles_.length===1){backBtnState=ButtonState.HIDDEN}else if(isInstalling){backBtnState=ButtonState.DISABLED}return{backward:backBtnState,cancel:cancelButtonStateIfEnabled,forward:enableForwardBtn?ButtonState.ENABLED:ButtonState.DISABLED}},updateButtonBarState_(){let buttonState;const cancelButtonStateIfEnabled=this.delegate.shouldShowCancelButton()?ButtonState.ENABLED:ButtonState.HIDDEN;const cancelButtonStateIfDisabled=this.delegate.shouldShowCancelButton()?ButtonState.DISABLED:ButtonState.HIDDEN;switch(this.state_){case ESimUiState.PROFILE_SEARCH:this.forwardButtonLabel=this.i18n("next");buttonState={backward:ButtonState.HIDDEN,cancel:cancelButtonStateIfEnabled,forward:ButtonState.DISABLED};break;case ESimUiState.ACTIVATION_CODE_ENTRY:buttonState=this.generateButtonStateForActivationPage_(false,cancelButtonStateIfEnabled,false);break;case ESimUiState.ACTIVATION_CODE_ENTRY_READY:buttonState=this.generateButtonStateForActivationPage_(true,cancelButtonStateIfEnabled,false);break;case ESimUiState.ACTIVATION_CODE_ENTRY_INSTALLING:buttonState=this.generateButtonStateForActivationPage_(false,cancelButtonStateIfDisabled,true);break;case ESimUiState.CONFIRMATION_CODE_ENTRY:buttonState=this.generateButtonStateForConfirmationPage_(false,cancelButtonStateIfEnabled,false);break;case ESimUiState.CONFIRMATION_CODE_ENTRY_READY:buttonState=this.generateButtonStateForConfirmationPage_(true,cancelButtonStateIfEnabled,false);break;case ESimUiState.CONFIRMATION_CODE_ENTRY_INSTALLING:buttonState=this.generateButtonStateForConfirmationPage_(false,cancelButtonStateIfDisabled,true);break;case ESimUiState.PROFILE_SELECTION:this.forwardButtonLabel=this.selectedProfile_?this.i18n("next"):this.i18n("skipDiscovery");buttonState={backward:ButtonState.HIDDEN,cancel:cancelButtonStateIfEnabled,forward:ButtonState.ENABLED};break;case ESimUiState.PROFILE_SELECTION_INSTALLING:buttonState={backward:ButtonState.HIDDEN,cancel:cancelButtonStateIfDisabled,forward:ButtonState.DISABLED};break;case ESimUiState.SETUP_FINISH:this.forwardButtonLabel=this.i18n("done");buttonState={backward:ButtonState.HIDDEN,cancel:ButtonState.HIDDEN,forward:ButtonState.ENABLED};break;default:assertNotReached$1();break}this.set("buttonState",buttonState)},initializePageState_(newState,oldState){if(newState===ESimUiState.CONFIRMATION_CODE_ENTRY&&oldState!==ESimUiState.CONFIRMATION_CODE_ENTRY_READY){this.confirmationCode_=""}if(newState===ESimUiState.ACTIVATION_CODE_ENTRY&&oldState!==ESimUiState.ACTIVATION_CODE_ENTRY_READY){this.activationCode_=""}},onActivationCodeUpdated_(event){if(this.state_!==ESimUiState.ACTIVATION_CODE_ENTRY&&this.state_!==ESimUiState.ACTIVATION_CODE_ENTRY_READY){return}this.state_=event.detail.activationCode?ESimUiState.ACTIVATION_CODE_ENTRY_READY:ESimUiState.ACTIVATION_CODE_ENTRY},onSelectedProfileChanged_(){if(this.state_!==ESimUiState.PROFILE_SELECTION){return}this.forwardButtonLabel=this.selectedProfile_?this.i18n("next"):this.i18n("skipDiscovery")},onConfirmationCodeUpdated_(){if(this.state_!==ESimUiState.CONFIRMATION_CODE_ENTRY&&this.state_!==ESimUiState.CONFIRMATION_CODE_ENTRY_READY){return}this.state_=this.confirmationCode_?ESimUiState.CONFIRMATION_CODE_ENTRY_READY:ESimUiState.CONFIRMATION_CODE_ENTRY},navigateForward(){this.showError_=false;switch(this.state_){case ESimUiState.ACTIVATION_CODE_ENTRY_READY:this.state_=ESimUiState.ACTIVATION_CODE_ENTRY_INSTALLING;this.euicc_.installProfileFromActivationCode(this.activationCode_,"").then(this.handleProfileInstallResponse_.bind(this));break;case ESimUiState.PROFILE_SELECTION:if(this.selectedProfile_){this.state_=ESimUiState.PROFILE_SELECTION_INSTALLING;this.selectedProfile_.installProfile("").then(this.handleProfileInstallResponse_.bind(this))}else{this.state_=ESimUiState.ACTIVATION_CODE_ENTRY}break;case ESimUiState.CONFIRMATION_CODE_ENTRY_READY:this.state_=ESimUiState.CONFIRMATION_CODE_ENTRY_INSTALLING;if(this.selectedProfile_){this.selectedProfile_.installProfile(this.confirmationCode_).then(this.handleProfileInstallResponse_.bind(this))}else{this.euicc_.installProfileFromActivationCode(this.activationCode_,this.confirmationCode_).then(this.handleProfileInstallResponse_.bind(this))}break;case ESimUiState.SETUP_FINISH:this.fire("exit-cellular-setup");break;default:assertNotReached$1();break}},navigateBackward(){if((this.state_===ESimUiState.ACTIVATION_CODE_ENTRY||this.state_===ESimUiState.ACTIVATION_CODE_ENTRY_READY)&&this.pendingProfiles_.length>1){this.state_=ESimUiState.PROFILE_SELECTION;return}if(this.state_===ESimUiState.CONFIRMATION_CODE_ENTRY||this.state_===ESimUiState.CONFIRMATION_CODE_ENTRY_READY){if(this.activationCode_){this.state_=ESimUiState.ACTIVATION_CODE_ENTRY_READY;return}else if(this.pendingProfiles_.length>1){this.state_=ESimUiState.PROFILE_SELECTION;return}}console.error("Navigate backward faled for : "+this.state_+" this state does not support backward navigation.");assertNotReached$1()},onForwardNavigationRequested_(){if(this.state_===ESimUiState.ACTIVATION_CODE_ENTRY_READY||this.state_===ESimUiState.CONFIRMATION_CODE_ENTRY_READY){this.navigateForward()}},onNetworkStateListChanged(){hasActiveCellularNetwork().then((hasActive=>{if(hasActive){this.hasHadActiveCellularNetwork_=hasActive}}))},shouldShowSubpageBusy_(){return this.state_===ESimUiState.ACTIVATION_CODE_ENTRY_INSTALLING||this.state_===ESimUiState.CONFIRMATION_CODE_ENTRY_INSTALLING||this.state_===ESimUiState.PROFILE_SELECTION_INSTALLING},getLoadingMessage_(){return this.hasHadActiveCellularNetwork_?this.i18n("eSimProfileDetectDuringActiveCellularConnectionMessage"):this.i18n("eSimProfileDetectMessage")},computeHeader_(){if(this.selectedESimPageName_===ESimPageName.FINAL&&!this.showError_){return this.i18n("eSimFinalPageSuccessHeader")}return""}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><iron-pages attr-for-selected="id" selected="[[currentPageName]]" selected-item="{{currentPage_}}">
      <template is="dom-if" if="[[shouldShowPsimFlow_(currentPageName)]]" restamp="">
        <psim-flow-ui button-state="{{buttonState_}}" name-of-carrier-pending-setup="{{flowTitle}}" delegate="[[delegate]]" id="psim-flow-ui" forward-button-label="{{forwardButtonLabel_}}">
        </psim-flow-ui>
      </template>
      <template is="dom-if" if="[[shouldShowEsimFlow_(currentPageName)]]" restamp="">
        <esim-flow-ui button-state="{{buttonState_}}" delegate="[[delegate]]" id="esim-flow-ui" header="{{flowHeader}}" forward-button-label="{{forwardButtonLabel_}}">
        </esim-flow-ui>
      </template>
    </iron-pages>
    <button-bar id="buttonBar" button-state="[[buttonState_]]" forward-button-label="[[forwardButtonLabel_]]">
    </button-bar>
<!--_html_template_end_-->`,is:"cellular-setup",behaviors:[I18nBehavior],properties:{delegate:Object,flowTitle:{type:String,notify:true,value:""},flowHeader:{type:String,notify:true,value:""},currentPageName:String,selectedFlow_:{type:String,value:null},buttonState_:{type:Object,notify:true},currentPage_:{type:Object,observer:"onPageChange_"},forwardButtonLabel_:{type:String}},listeners:{"backward-nav-requested":"onBackwardNavRequested_","retry-requested":"onRetryRequested_","forward-nav-requested":"onForwardNavRequested_","cancel-requested":"onCancelRequested_","focus-default-button":"onFocusDefaultButton_"},attached(){if(!this.currentPageName){this.currentPageName=CellularSetupPageName.ESIM_FLOW_UI}},onPageChange_(){if(this.currentPage_){this.flowTitle="";this.currentPage_.initSubflow()}},onBackwardNavRequested_(){this.currentPage_.navigateBackward()},onCancelRequested_(){this.fire("exit-cellular-setup")},onRetryRequested_(){},onForwardNavRequested_(){this.currentPage_.navigateForward()},onFocusDefaultButton_(){this.$.buttonBar.focusDefaultButton()},shouldShowPsimFlow_(currentPage){return currentPage===CellularSetupPageName.PSIM_FLOW_UI},shouldShowEsimFlow_(currentPage){return currentPage===CellularSetupPageName.ESIM_FLOW_UI}});// Copyright 2020 The Chromium Authors. All rights reserved.
class CellularSetupSettingsDelegate{shouldShowPageTitle(){return false}shouldShowCancelButton(){return true}}// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="os-settings-cellular-setup-dialog">@media (min-width: 640px) {
:host {
  --cr-dialog-width: 512px;
}

}

@media (max-width: 640px) {
:host {
  --cr-dialog-width: 320px;
}

}

:host {
  --cr-dialog-body-padding-horizontal: 24px;
        --cr-dialog-title-slot-padding-bottom: 0;
        --cr-dialog-title-slot-padding-end: 0;
        --cr-dialog-title-slot-padding-start: 0;
        --cr-dialog-title-slot-padding-top: 0;
}

#header {
  padding-bottom: 8px;
        padding-inline-end:  24px;
        padding-inline-start: 24px;
        padding-top: 24px;
}

#title {
  align-items: center;
        background-color: var(--google-grey-200);
        display: flex;
        font-size: x-small;
        height: 32px;
        justify-content: center;
}

</style>
    <!-- TODO(crbug/1093185): Change close logic when CellularSetup embedded -->
    <cr-dialog id="dialog">
      <div slot="title">
        <template is="dom-if" if="[[shouldShowDialogTitle_(dialogTitle_)]]" restamp="">
          <div id="title">
            [[dialogTitle_]]
          </div>
        </template>
        <div id="header">[[getDialogHeader_(dialogHeader_)]]</div>
      </div>
      <div slot="body">
        <cellular-setup flow-title="{{dialogTitle_}}" flow-header="{{dialogHeader_}}" delegate="[[delegate_]]" current-page-name="[[pageName]]">
        </cellular-setup>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"os-settings-cellular-setup-dialog",behaviors:[I18nBehavior],properties:{pageName:String,delegate_:Object,dialogTitle_:{type:String},dialogHeader_:{type:String}},created(){this.delegate_=new CellularSetupSettingsDelegate},listeners:{"exit-cellular-setup":"onExitCellularSetup_"},attached(){this.$.dialog.showModal()},onExitCellularSetup_(){this.$.dialog.close()},shouldShowDialogTitle_(title){return!!this.dialogTitle_},getDialogHeader_(){if(this.dialogHeader_){return this.dialogHeader_}return this.i18n("cellularSetupDialogTitle")}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="esim-remove-profile-dialog">:host {
  --cr-dialog-width: 416px;
}

#title {
  height: 15px;
}

#warningMessage {
  --iron-icon-fill-color: var(--google-grey-600);
        --iron-icon-height: 16px;
        --iron-icon-width: 16px;
        font-size: smaller;
        margin-top: 20px;
}

#warningMessage iron-icon {
  float: left;
        padding-inline-end: 4px;
}

:host-context([dir='rtl']) #warningMessage iron-icon {
  float: right;
}

#warningMessage div {
  overflow: hidden;
}

#cancel {
  margin-inline-end: 8px;
}

#cancel:focus {
  box-shadow: 0 0 0 2px var(--focus-shadow-color);
}

</style>
    <cr-dialog id="dialog" show-on-attach="">
      <div id="title" slot="title">
        [[getTitleString_(esimProfileName_)]]
      </div>
      <div slot="body">
        <div id="description">You may not be able to reinstall this profile</div>
        <div id="warningMessage" hidden$="[[!showCellularDisconnectWarning]]">
          <iron-icon icon="cr:info-outline"></iron-icon>
          <div>This may cause your mobile network to briefly disconnect</div>
        </div>
      </div>
      <div slot="button-container">
        <cr-button id="cancel" aria-label="[[getCancelBtnA11yLabel_(esimProfileName_)]]" on-click="onCancelTap_" class="cancel-button">
          Cancel
        </cr-button>
        <cr-button id="remove" aria-label$="[[getRemoveBtnA11yLabel_(esimProfileName_)]]" aria-describedby="description warningMessage" on-click="onRemoveProfileTap_" class="action-button">
          Remove
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"esim-remove-profile-dialog",behaviors:[I18nBehavior],properties:{networkState:{type:Object,value:null},showCellularDisconnectWarning:{type:Boolean,value:false},esimProfileName_:{type:String,value:""}},esimProfileRemote_:null,attached(){this.init_()},async init_(){if(!(this.networkState&&this.networkState.type===chromeos.networkConfig.mojom.NetworkType.kCellular)){return}this.esimProfileRemote_=await getESimProfile(this.networkState.typeState.cellular.iccid);if(!this.esimProfileRemote_){this.fire("show-error-toast",this.i18n("eSimRemoveProfileDialogError"));this.$.dialog.close();return}this.esimProfileName_=this.networkState.name;this.$.cancel.focus()},convertString16ToJSString_(str){return str.data.map((ch=>String.fromCodePoint(ch))).join("")},getTitleString_(){if(!this.esimProfileName_){return""}return this.i18n("esimRemoveProfileDialogTitle",this.esimProfileName_)},onRemoveProfileTap_(event){this.esimProfileRemote_.uninstallProfile().then((response=>{if(response.result===chromeos.cellularSetup.mojom.ESimOperationResult.kFailure){this.fire("show-error-toast",this.i18n("eSimRemoveProfileDialogError"))}}));this.$.dialog.close();const params=new URLSearchParams;params.append("type",OncMojo.getNetworkTypeString(chromeos.networkConfig.mojom.NetworkType.kCellular));Router.getInstance().setCurrentRoute(routes.INTERNET_NETWORKS,params,true)},onCancelTap_(event){this.$.dialog.close()},getRemoveBtnA11yLabel_(esimProfileName){return this.i18n("eSimRemoveProfileRemoveA11yLabel",esimProfileName)},getCancelBtnA11yLabel_(esimProfileName){return this.i18n("eSimRemoveProfileCancelA11yLabel",esimProfileName)}});// Copyright 2015 The Chromium Authors. All rights reserved.
const CrPolicyNetworkBehaviorMojo={isNetworkPolicyControlled(property){if(!property){return false}const mojom=chromeos.networkConfig.mojom;return property.policySource!==mojom.PolicySource.kNone&&property.policySource!==mojom.PolicySource.kActiveExtension},isExtensionControlled(property){if(!property){return false}return property.policySource===chromeos.networkConfig.mojom.PolicySource.kActiveExtension},isControlled(property){if(!property){return false}return property.policySource!==chromeos.networkConfig.mojom.PolicySource.kNone},isEditable(property){if(!property){return false}const mojom=chromeos.networkConfig.mojom;return property.policySource!==mojom.PolicySource.kUserPolicyEnforced&&property.policySource!==mojom.PolicySource.kDevicePolicyEnforced&&property.policySource!==mojom.PolicySource.kActiveExtension},isNetworkPolicyEnforced(property){if(!property){return false}const mojom=chromeos.networkConfig.mojom;return property.policySource===mojom.PolicySource.kUserPolicyEnforced||property.policySource===mojom.PolicySource.kDevicePolicyEnforced},isNetworkPolicyRecommended(property){if(!property){return false}const mojom=chromeos.networkConfig.mojom;return property.policySource===mojom.PolicySource.kUserPolicyRecommended||property.policySource===mojom.PolicySource.kDevicePolicyRecommended},getEnforcedPolicyValue(property){if(!property||!this.isNetworkPolicyEnforced(property)){return null}return property.policyValue===undefined?null:property.policyValue},getRecommendedPolicyValue(property){if(!property||!this.isNetworkPolicyRecommended(property)){return null}return property.policyValue===undefined?null:property.policyValue},isPolicySource(source){return source===chromeos.networkConfig.mojom.OncSource.kDevicePolicy||source===chromeos.networkConfig.mojom.OncSource.kUserPolicy},getIndicatorTypeForSource(source){if(source===chromeos.networkConfig.mojom.OncSource.kDevicePolicy){return CrPolicyIndicatorType.DEVICE_POLICY}if(source===chromeos.networkConfig.mojom.OncSource.kUserPolicy){return CrPolicyIndicatorType.USER_POLICY}return CrPolicyIndicatorType.NONE},getPolicyIndicatorType(property){if(!property){return CrPolicyIndicatorType.NONE}const mojom=chromeos.networkConfig.mojom;if(property.policySource===mojom.PolicySource.kUserPolicyEnforced||property.policySource===mojom.PolicySource.kUserPolicyRecommended){return CrPolicyIndicatorType.USER_POLICY}if(property.policySource===mojom.PolicySource.kDevicePolicyEnforced||property.policySource===mojom.PolicySource.kDevicePolicyRecommended){return CrPolicyIndicatorType.DEVICE_POLICY}if(property.policySource===mojom.PolicySource.kActiveExtension){return CrPolicyIndicatorType.EXTENSION}return CrPolicyIndicatorType.NONE}};// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-hidden-style" scope="cr-policy-network-indicator-mojo">:host {
  --cr-tooltip-icon-margin-start: 0;
}

cr-tooltip-icon {
  margin-inline-start: var(--cr-tooltip-icon-margin-start);
}

</style>
    <cr-tooltip-icon hidden$="[[!indicatorVisible]]" tooltip-text="[[indicatorTooltip_]]" icon-class="[[indicatorIcon]]" tooltip-position="[[tooltipPosition]]">
    </cr-tooltip-icon>
<!--_html_template_end_-->`,is:"cr-policy-network-indicator-mojo",behaviors:[CrPolicyIndicatorBehavior,CrPolicyNetworkBehaviorMojo],properties:{property:Object,tooltipPosition:String,indicatorTooltip_:{type:String,computed:"getNetworkIndicatorTooltip_(indicatorType, property.*)"}},observers:["propertyChanged_(property.*)"],propertyChanged_(){const property=this.property;if(property===null||property===undefined||!this.isControlled(property)){this.indicatorType=CrPolicyIndicatorType.NONE;return}const PolicySource=chromeos.networkConfig.mojom.PolicySource;switch(property.policySource){case PolicySource.kNone:this.indicatorType=CrPolicyIndicatorType.NONE;break;case PolicySource.kUserPolicyEnforced:this.indicatorType=CrPolicyIndicatorType.USER_POLICY;break;case PolicySource.kDevicePolicyEnforced:this.indicatorType=CrPolicyIndicatorType.DEVICE_POLICY;break;case PolicySource.kUserPolicyRecommended:case PolicySource.kDevicePolicyRecommended:this.indicatorType=CrPolicyIndicatorType.RECOMMENDED;break;case PolicySource.kActiveExtension:this.indicatorType=CrPolicyIndicatorType.EXTENSION;break}},getNetworkIndicatorTooltip_(){if(this.property===undefined){return""}const matches=!!this.property&&this.property.activeValue===this.property.policyValue;return this.getIndicatorTooltip(this.indicatorType,"",matches)}});// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const NetworkConfigElementBehavior={properties:{disabled:{type:Boolean,value:false,reflectToAttribute:true},property:{type:Object,value:null}},getDisabled_(disabled,property){return disabled||!!property&&this.isNetworkPolicyEnforced(property)}};const template$2=document.createElement("template");template$2.innerHTML=`<dom-module id="network-shared" assetpath="chrome://resources/">\n  <template>\n    <style include="cr-shared-style" scope="network-shared">:host {\n  --network-control-margin: 40px;\n}\n\n.property-box {\n  align-items: center;\n        display: flex;\n        min-height: var(--cr-section-min-height);\n}\n\n.property-box.hr {\n  border-top: var(--cr-separator-line);\n}\n\n.property-box.indented {\n  margin-inline-start: var(--cr-section-padding);\n}\n\n.property-box.single-column {\n  align-items: flex-start;\n        flex-direction: column;\n        justify-content: center;\n}\n\n.property-box.stretch {\n  align-items: stretch;\n}\n\n.property-box.two-line {\n  min-height: var(--cr-section-two-line-min-height);\n}\n\n.property-box > .start {\n  align-items: center;\n        flex: auto;\n}\n\n.property-box > .middle {\n  align-items: center;\n        flex: auto;\n        padding-inline-start: 16px;\n}\n\ncr-input {\n  --cr-input-error-display: none;\n        margin-bottom: var(--cr-form-field-bottom-spacing);\n}\n\n</style>\n  </template>\n</dom-module>\n`;document.body.appendChild(template$2.content.cloneNode(true));// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="network-shared" scope="network-config-input">#container {
  align-items: center;
        display: flex;
        flex-direction: row;
}

cr-input {
  width: 100%;
}

cr-policy-network-indicator-mojo {
  --cr-tooltip-icon-margin-start: var(--cr-controlled-by-spacing);
}

</style>

    <div id="container">
      <cr-input label="[[label]]" value="{{value}}" hidden="[[hidden]]" readonly="[[readonly]]" disabled="[[getDisabled_(disabled, property)]]" on-keypress="onKeypress_">
      </cr-input>
      <cr-policy-network-indicator-mojo property="[[property]]" tooltip-position="left">
      
    </cr-policy-network-indicator-mojo></div>

<!--_html_template_end_-->`,is:"network-config-input",behaviors:[CrPolicyNetworkBehaviorMojo,NetworkConfigElementBehavior],properties:{label:String,hidden:{type:Boolean,reflectToAttribute:true},readonly:{type:Boolean,reflectToAttribute:true},value:{type:String,notify:true}},focus(){this.$$("cr-input").focus()},onKeypress_(event){if(event.key!=="Enter"){return}event.stopPropagation();this.fire("enter")}});// Copyright 2017 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style network-shared md-select" scope="network-config-select">.md-select {
  color: var(--cr-primary-text-color);
        width: 100%;
}

#outer {
  align-items: stretch;
        display: flex;
        flex-direction: column;
        justify-content: center;
        margin-bottom: var(--cr-form-field-bottom-spacing);
        padding: 0;
}

#inner {
  align-items: center;
        display: flex;
        flex-direction: row;
}

cr-policy-network-indicator-mojo {
  --cr-tooltip-icon-margin-start: var(--cr-controlled-by-spacing);
}

</style>

    <div id="outer">
      <div id="label" class="cr-form-field-label">[[label]]</div>
      <div id="inner">
        <select class="md-select" disabled="[[getDisabled_(disabled, property)]]" value="{{value::change}}" aria-label$="[[label]]">
          <template is="dom-repeat" items="[[items]]">
            <option value="[[getItemValue_(item)]]" disabled="[[!getItemEnabled_(item, deviceCertsOnly)]]">
              [[getItemLabel_(item, key, oncPrefix)]]
            </option>
          </template>
        </select>
        <cr-policy-network-indicator-mojo property="[[property]]" tooltip-position="left">
        </cr-policy-network-indicator-mojo>
      </div>
    </div>

<!--_html_template_end_-->`,is:"network-config-select",behaviors:[I18nBehavior,CrPolicyNetworkBehaviorMojo,NetworkConfigElementBehavior],properties:{label:String,certList:Boolean,deviceCertsOnly:Boolean,items:Array,key:String,oncPrefix:{type:String,value:""},value:{type:Object,notify:true}},observers:["updateSelected_(items, value)"],focus(){this.$$("select").focus()},updateSelected_(){this.async((function(){const select=this.$$("select");if(select.value!==this.value){select.value=this.value}}))},getItemLabel_(item){if(this.certList){return this.getCertificateName_(item)}let value;if(this.key){value=OncMojo.getTypeString(this.key,item)}else{value=item}const oncValue="Onc"+this.oncPrefix.replace(/\./g,"-")+"_"+value;if(this.i18nExists(oncValue)){return this.i18n(oncValue)}assertNotReached("ONC value not found: "+oncValue);return value},getItemValue_(item){if(this.certList){return item.hash}return item},getItemEnabled_(item){if(this.certList){const cert=item;if(this.deviceCertsOnly&&!cert.deviceWide){return false}return!!cert.hash}return true},getCertificateName_(certificate){if(certificate.hardwareBacked){return this.i18n("networkCertificateNameHardwareBacked",certificate.issuedBy,certificate.issuedTo)}if(certificate.issuedTo){return this.i18n("networkCertificateName",certificate.issuedBy,certificate.issuedTo)}return certificate.issuedBy}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="network-shared" scope="network-config-toggle">:host {
  cursor: pointer;
}

:host([disabled]) {
  cursor: initial;
}

cr-policy-network-indicator-mojo {
  --cr-tooltip-icon-margin-start: var(--cr-controlled-by-spacing);
}

cr-policy-network-indicator-mojo.left {
  margin-inline-end: var(--cr-controlled-by-spacing);
}

div.property-box {
  width: 100%;
}

</style>

    <div class="property-box">
      <div class="start">
        <div aria-hidden="true">[[label]]</div>
        <div id="sub-label" class="cr-secondary-text" aria-hidden="true">
          [[subLabel]]
        </div>
      </div>
      <template is="dom-if" if="[[policyOnLeft]]">
        <cr-policy-network-indicator-mojo class="left" property="[[property]]" tooltip-position="left">
        </cr-policy-network-indicator-mojo>
      </template>
      <cr-toggle checked="{{checked}}" disabled="[[getDisabled_(disabled, property)]]" aria-label$="[[label]]" aria-describedby="sub-label">
      </cr-toggle>
      <template is="dom-if" if="[[!policyOnLeft]]">
        <cr-policy-network-indicator-mojo property="[[property]]" tooltip-position="left">
        </cr-policy-network-indicator-mojo>
      </template>
    </div>
<!--_html_template_end_-->`,is:"network-config-toggle",behaviors:[CrPolicyNetworkBehaviorMojo,NetworkConfigElementBehavior],properties:{label:String,subLabel:String,checked:{type:Boolean,value:false,reflectToAttribute:true,notify:true},policyOnLeft:{type:Boolean,value:false,reflectToAttribute:true}},listeners:{click:"onHostTap_"},focus(){this.$$("cr-toggle").focus()},onHostTap_(e){e.stopPropagation();if(this.getDisabled_(this.disabled,this.property)){return}this.checked=!this.checked;this.fire("change")}});// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const FAKE_CREDENTIAL="FAKE_CREDENTIAL_VPaJDV9x";Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="network-shared" scope="network-password-input">:host {
  display: block;
}

:host([allow-error-message]) #input {
  --cr-input-error-display: block;
        margin-bottom: 0;
}

#container {
  align-items: center;
        display: flex;
        flex-direction: row;
}

cr-input {
  flex: 1;
}

paper-tooltip {
  --paper-tooltip-min-width: 0px;
}

cr-policy-network-indicator-mojo {
  --cr-tooltip-icon-margin-start: var(--cr-controlled-by-spacing);
}

</style>

    <div id="container">
      <cr-input id="input" label="[[label]]" value="{{value}}" disabled="[[getDisabled_(disabled, property)]]" type="[[getInputType_(showPassword)]]" on-mousedown="onMousedown_" on-touchstart="onMousedown_" on-keydown="onKeydown_" invalid="[[invalid]]" error-message="[[errorMessage]]">
        <template is="dom-if" if="[[!showPolicyIndicator_]]" restamp="">
          <div slot="suffix">
            <cr-icon-button id="icon" class$="[[getIconClass_(showPassword)]]" aria-describedby="passwordVisibilityTooltip" on-click="onShowPasswordTap_" on-touchend="onShowPasswordTap_">
            </cr-icon-button>
            <paper-tooltip id="passwordVisibilityTooltip" for="icon" position="left" fit-to-visible-bounds="" role="tooltip">
              [[getShowPasswordTitle_(showPassword)]]
            </paper-tooltip>
          </div>
        </template>
      </cr-input>
      <template is="dom-if" if="[[showPolicyIndicator_]]" restamp="">
        <cr-policy-network-indicator-mojo property="[[property]]" tooltip-position="left">
        
      </cr-policy-network-indicator-mojo></template>
    </div>
<!--_html_template_end_-->`,is:"network-password-input",behaviors:[I18nBehavior,CrPolicyNetworkBehaviorMojo,NetworkConfigElementBehavior],properties:{label:{type:String,reflectToAttribute:true},value:{type:String,notify:true},showPassword:{type:Boolean,value:false},invalid:{type:Boolean,value:false},allowErrorMessage:{type:Boolean,value:false},errorMessage:{type:String,value:""},showPolicyIndicator_:{type:Boolean,value:false,computed:"getDisabled_(disabled, property)"}},focus(){this.$$("cr-input").focus();this.$$("cr-input").select()},getInputType_(){return this.showPassword?"text":"password"},isShowingPlaceholder_(){return this.value===FAKE_CREDENTIAL},getIconClass_(){return this.showPassword?"icon-visibility-off":"icon-visibility"},getShowPasswordTitle_(){return this.showPassword?this.i18n("hidePassword"):this.i18n("showPassword")},onShowPasswordTap_(event){if(event.type==="touchend"){event.preventDefault()}if(this.isShowingPlaceholder_()){this.value="";this.focus()}this.showPassword=!this.showPassword;event.stopPropagation()},onKeydown_(event){if(event.target.id==="input"&&event.key==="Enter"){event.stopPropagation();this.fire("enter");return}if(!this.isShowingPlaceholder_()){return}if(event.key.indexOf("Arrow")<0&&event.key!=="Home"&&event.key!=="End"){return}event.preventDefault()},onMousedown_(event){if(!this.isShowingPlaceholder_()){return}if(document.activeElement!==event.target){this.focus()}event.preventDefault()}});// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const VPNConfigType={L2TP_IPSEC_PSK:"L2TP_IPsec_PSK",L2TP_IPSEC_CERT:"L2TP_IPsec_Cert",OPEN_VPN:"OpenVPN"};const mojom=chromeos.networkConfig.mojom;const DEFAULT_HASH="default";const DO_NOT_CHECK_HASH="do-not-check";const NO_CERTS_HASH="no-certs";const NO_USER_CERT_HASH="no-user-cert";Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="network-shared action-link iron-flex" scope="network-config">#spinner-container {
  height: 200px;
}

</style>

    <template is="dom-if" if="[[!managedProperties_]]" restamp="">
      <div id="spinner-container" class="layout vertical center-center">
        <paper-spinner-lite active=""></paper-spinner-lite>
      </div>
    </template>

    <template is="dom-if" if="[[managedProperties_]]" restamp="">
      <!-- SSID (WiFi) -->
      <template is="dom-if" if="[[isWiFi_(mojoType_)]]" restamp="">
        <network-config-input id="ssid" label="[[i18n('OncWiFi-SSID')]]" value="{{configProperties_.typeConfig.wifi.ssid}}" readonly="[[hasGuid_(guid)]]">
        </network-config-input>
      </template>

      <!-- Security (WiFi and Ethernet) -->
      <template is="dom-if" if="[[securityIsVisible_(mojoType_)]]" restamp="">
        <network-config-select id="security" label="[[i18n('OncWiFi-Security')]]" value="{{securityType_}}" key="security" disabled="[[!securityIsEnabled_(guid, mojoType_)]]" items="[[getSecurityItems_(mojoType_)]]" onc-prefix="WiFi.Security" property="[[getManagedSecurity_(managedProperties_)]]">
        </network-config-select>
      </template>

      <!-- Passphrase (WiFi) -->
      <template is="dom-if" restamp="" if="[[configRequiresPassphrase_]]">
        <network-password-input id="wifi-passphrase" on-keypress="onWifiPasswordInputKeypress_" label="[[i18n('OncWiFi-Passphrase')]]" value="{{configProperties_.typeConfig.wifi.passphrase}}" property="[[managedProperties_.typeProperties.wifi.passphrase]]">
        </network-password-input>
      </template>

      <!-- VPN -->
      <template is="dom-if" if="[[showVpn_]]" restamp="">
        <network-config-input label="[[i18n('OncVPN-Host')]]" value="{{configProperties_.typeConfig.vpn.host}}" property="[[managedProperties_.typeProperties.vpn.host]]">
        </network-config-input>
        <network-config-input label="[[i18n('OncName')]]" value="{{configProperties_.name}}" readonly="[[hasGuid_(guid)]]">
        </network-config-input>
        <network-config-select id="outer" label="[[i18n('OncVPN-Type')]]" value="{{vpnType_}}" items="[[vpnTypeItems_]]" onc-prefix="VPN.Type" disabled="[[hasGuid_(guid)]]">
        </network-config-select>
        <template is="dom-if" if="[[!showVpn_.OpenVPN]]">
          <network-config-input label="[[i18n('OncVPN-L2TP-Username')]]" value="{{configProperties_.typeConfig.vpn.l2tp.username}}" property="[[managedProperties_.typeProperties.vpn.l2tp.username]]">
          </network-config-input>
          <network-password-input label="[[i18n('OncVPN-L2TP-Password')]]" value="{{configProperties_.typeConfig.vpn.l2tp.password}}" property="[[managedProperties_.typeProperties.vpn.l2tp.password]]">
          </network-password-input>
          <network-config-input label="[[i18n('OncVPN-IPsec-Group')]]" value="{{configProperties_.typeConfig.vpn.ipSec.group}}" property="[[managedProperties_.typeProperties.vpn.ipSec.group]]">
          </network-config-input>
          <template is="dom-if" if="[[!showVpn_.Cert]]">
            <network-password-input label="[[i18n('OncVPN-IPsec-PSK')]]" value="{{configProperties_.typeConfig.vpn.ipSec.psk}}" property="[[managedProperties_.typeProperties.vpn.ipSec.psk]]">
            </network-password-input>
          </template>
        </template>
        <template is="dom-if" if="[[showVpn_.OpenVPN]]">
          <network-config-input label="[[i18n('OncVPN-OpenVPN-Username')]]" value="{{configProperties_.typeConfig.vpn.openVpn.username}}" property="[[managedProperties_.typeProperties.vpn.openVpn.username]]">
          </network-config-input>
          <network-password-input label="[[i18n('OncVPN-OpenVPN-Password')]]" value="{{configProperties_.typeConfig.vpn.openVpn.password}}" property="[[managedProperties_.typeProperties.vpn.openVpn.password]]">
          </network-password-input>
          <network-config-input label="[[i18n('OncVPN-OpenVPN-OTP')]]" value="{{configProperties_.typeConfig.vpn.openVpn.otp}}" property="[[managedProperties_.typeProperties.vpn.openVpn.otp]]">
          </network-config-input>
        </template>
        <template is="dom-if" if="[[showVpn_.Cert]]">
          <network-config-select id="vpnServerCa" label="[[i18n('OncEAP-ServerCA')]]" value="{{selectedServerCaHash_}}" items="[[serverCaCerts_]]" cert-list="" property="[[getManagedVpnServerCaRefs_(managedProperties_)]]">
          </network-config-select>
          <network-config-select id="vpnUserCert" label="[[i18n('OncEAP-UserCert')]]" value="{{selectedUserCertHash_}}" items="[[userCerts_]]" cert-list="" property="[[getManagedVpnClientCertType_(managedProperties_)]]">
          </network-config-select>
        </template>
        <network-config-toggle label="[[i18n('networkConfigSaveCredentials')]]" checked="{{vpnSaveCredentials_}}" property="[[getManagedVpnSaveCredentials_(managedProperties_)]]">
        </network-config-toggle>
      </template>

      <!-- EAP (WiFi, Ethernet) -->
      <template is="dom-if" if="[[showEap_]]" restamp="">
        <network-config-select id="outer" label="[[i18n('OncEAP-Outer')]]" value="{{eapProperties_.outer}}" items="[[eapOuterItems_]]" onc-prefix="EAP.Outer" hidden="[[!showEap_.Outer]]" property="[[managedEapProperties_.outer]]">
        </network-config-select>
        <network-config-select id="inner" label="[[i18n('OncEAP-Inner')]]" value="{{eapProperties_.inner}}" items="[[getEapInnerItems_(eapProperties_.outer)]]" onc-prefix="EAP.Inner" hidden="[[!showEap_.Inner]]" property="[[managedEapProperties_.inner]]">
        </network-config-select>
        <network-config-select id="serverCa" label="[[i18n('OncEAP-ServerCA')]]" value="{{selectedServerCaHash_}}" items="[[serverCaCerts_]]" hidden="[[!showEap_.ServerCA]]" cert-list="" property="[[managedEapProperties_.useSystemCAs]]" device-certs-only="[[deviceCertsOnly_]]">
        </network-config-select>
        <network-config-input label="[[i18n('OncEAP-SubjectMatch')]]" value="{{eapProperties_.subjectMatch}}" hidden="[[!showEap_.SubjectMatch]]" property="[[managedEapProperties_.subjectMatch]]">
        </network-config-input>
        <network-config-select id="userCert" label="[[i18n('OncEAP-UserCert')]]" value="{{selectedUserCertHash_}}" items="[[userCerts_]]" hidden="[[!showEap_.UserCert]]" cert-list="" property="[[managedEapProperties_.clientCertType]]" device-certs-only="[[deviceCertsOnly_]]">
        </network-config-select>
        <network-config-input id="oncEAPIdentity" label="[[i18n('OncEAP-Identity')]]" value="{{eapProperties_.identity}}" hidden="[[!showEap_.Identity]]" property="[[managedEapProperties_.identity]]">
        </network-config-input>
        <network-password-input label="[[i18n('OncEAP-Password')]]" value="{{eapProperties_.password}}" hidden="[[!showEap_.Password]]" property="[[managedEapProperties_.password]]">
        </network-password-input>
        <network-config-input label="[[i18n('OncEAP-AnonymousIdentity')]]" value="{{eapProperties_.anonymousIdentity}}" hidden="[[!showEap_.AnonymousIdentity]]" property="[[managedEapProperties_.anonymousIdentity]]">
        </network-config-input>
        <network-config-toggle label="[[i18n('networkConfigSaveCredentials')]]" checked="{{eapProperties_.saveCredentials}}" property="[[managedEapProperties_.saveCredentials]]">
        </network-config-toggle>
      </template>

      <!-- Share (WiFi) -->
      <template is="dom-if" if="[[shareIsVisible_(managedProperties_)]]" restamp="">
        <network-config-toggle id="share" label="[[i18n('networkConfigShare')]]" checked="{{shareNetwork_}}" on-change="onShareChanged_" disabled="[[!shareIsEnabled_(configProperties_.*,
                      eapProperties_.*, shareAllowEnable)]]">
        </network-config-toggle>
      </template>

      <!-- AutoConnect (WiFi) -->
      <template is="dom-if" if="[[configCanAutoConnect_(mojoType_)]]" restamp="">
        <div class="property-box">
          <div id="autoConnectLabel" class="start">
            [[i18n('networkAutoConnect')]]
          </div>
          <template is="dom-if" if="[[isAutoConnectEnforcedByPolicy_(globalPolicy_)]]" restamp="">
            <cr-policy-indicator indicator-type="devicePolicy">
            </cr-policy-indicator>
          </template>
          <cr-toggle id="autoConnect" checked="{{autoConnect_}}" disabled="[[autoConnectDisabled_(globalPolicy_)]]" aria-labeledby="autoConnectLabel">
          </cr-toggle>
        </div>
      </template>

      <!-- Hidden Network Warning -->
      <template is="dom-if" if="{{hiddenNetworkWarning_}}" restamp="">
        <div>
          <iron-icon icon="cr:warning"></iron-icon>
          [[i18nAdvanced('hiddenNetworkWarning')]]
        </div>
      </template>
    </template>
<!--_html_template_end_-->`,is:"network-config",behaviors:[NetworkListenerBehavior,I18nBehavior],properties:{globalPolicy_:Object,guid:String,type:String,mojoType_:Number,shareAllowEnable:Boolean,shareDefault:Boolean,enableConnect:{type:Boolean,notify:true,value:false},enableSave:{type:Boolean,notify:true,value:false},connectOnEnter:{type:Boolean,value:false},error:{type:String,notify:true},managedProperties_:{type:Object,value:null},managedEapProperties_:{type:Object,value:null},propertiesSent_:Boolean,configProperties_:Object,eapProperties_:{type:Object,value:null},serverCaCerts_:{type:Array,value(){return[]}},selectedServerCaHash_:String,userCerts_:{type:Array,value(){return[]}},selectedUserCertHash_:String,isConfigured_:{type:Boolean,value:false},shareNetwork_:{type:Boolean,value:true},autoConnect_:Boolean,hiddenNetworkWarning_:Boolean,securityType_:Number,vpnSaveCredentials_:{type:Boolean,value:false},vpnType_:String,showEap_:{type:Object,value:null},showVpn_:{type:Object,value:null},eapOuterItems_:{type:Array,readOnly:true,value:["LEAP","PEAP","EAP-TLS","EAP-TTLS"]},eapInnerItemsPeap_:{type:Array,readOnly:true,value:["Automatic","MD5","MSCHAPv2"]},eapInnerItemsTtls_:{type:Array,readOnly:true,value:["Automatic","MD5","MSCHAP","MSCHAPv2","PAP","CHAP","GTC"]},vpnTypeItems_:{type:Array,readOnly:true,value:[VPNConfigType.L2TP_IPSEC_PSK,VPNConfigType.L2TP_IPSEC_CERT,VPNConfigType.OPEN_VPN]},deviceCertsOnly_:{type:Boolean,value:false},configRequiresPassphrase_:{type:Boolean,computed:"computeConfigRequiresPassphrase_(mojoType_, securityType_)"}},observers:["setEnableConnect_(isConfigured_, propertiesSent_)","setEnableSave_(isConfigured_, managedProperties_)","setShareNetwork_(mojoType_, managedProperties_, securityType_,"+"shareDefault, shareAllowEnable)","updateHiddenNetworkWarning_(autoConnect_)","updateConfigProperties_(mojoType_, managedProperties_)","updateSecurity_(configProperties_, securityType_)","updateEapOuter_(eapProperties_.outer)","updateEapCerts_(eapProperties_.*, serverCaCerts_, userCerts_)","updateShowEap_(configProperties_.*, eapProperties_.*, securityType_)","updateVpnType_(configProperties_, vpnType_)","updateVpnIPsecCerts_(vpnType_,"+"configProperties_.typeConfig.vpn.ipSec.*, serverCaCerts_, userCerts_)","updateOpenVPNCerts_(vpnType_,"+"configProperties_.typeConfig.vpn.openVpn.*,"+"serverCaCerts_, userCerts_)","updateIsConfigured_(configProperties_.*, securityType_)","updateIsConfigured_(configProperties_, eapProperties_.*)","updateIsConfigured_(configProperties_.typeConfig.wifi.*)","updateIsConfigured_(configProperties_.typeConfig.vpn.*, vpnType_)","updateIsConfigured_(selectedUserCertHash_)"],listeners:{enter:"onEnterEvent_"},MIN_PASSPHRASE_LENGTH:5,networkConfig_:null,created(){this.networkConfig_=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote()},attached(){this.networkConfig_.getGlobalPolicy().then((response=>{this.globalPolicy_=response.result}))},init(){this.mojoType_=undefined;this.vpnType_=undefined;this.managedProperties_=null;this.configProperties_=undefined;this.propertiesSent_=false;this.selectedServerCaHash_=undefined;this.selectedUserCertHash_=undefined;if(this.guid){this.networkConfig_.getManagedProperties(this.guid).then((response=>{this.getManagedPropertiesCallback_(response.result)}))}else{const mojoType=OncMojo.getNetworkTypeFromString(this.type);const managedProperties=OncMojo.getDefaultManagedProperties(mojoType,this.guid,this.name);if(mojoType===mojom.NetworkType.kWiFi&&this.securityType_!==undefined){managedProperties.typeProperties.wifi.security=this.securityType_}this.managedProperties_=managedProperties;this.mojoType_=mojoType;setTimeout((()=>{this.focusFirstInput_()}))}if(this.mojoType_===mojom.NetworkType.kVPN||this.globalPolicy_&&this.globalPolicy_.allowOnlyPolicyNetworksToConnect){this.autoConnect_=false}else{this.autoConnect_=true}this.hiddenNetworkWarning_=this.showHiddenNetworkWarning_();this.updateIsConfigured_()},save(){this.saveAndConnect_(false)},connect(){this.saveAndConnect_(true)},focusPassphrase_(){const passphraseInput=this.$$("#wifi-passphrase");if(passphraseInput){passphraseInput.focus()}},saveAndConnect_(connect){if(!this.managedProperties_||this.propertiesSent_){return}this.propertiesSent_=true;this.error="";const propertiesToSet=this.getPropertiesToSet_();if(this.managedProperties_.source===mojom.OncSource.kNone){if(!this.autoConnect_){propertiesToSet.autoConnect={value:false}}this.networkConfig_.configureNetwork(propertiesToSet,this.shareNetwork_).then((response=>{this.createNetworkCallback_(response.guid,response.errorMessage,connect)}))}else{this.networkConfig_.setProperties(this.guid,propertiesToSet).then((response=>{this.setPropertiesCallback_(response.success,response.errorMessage,connect)}))}this.fire("properties-set")},focusFirstInput_(){flush();const e=this.$$("network-config-input:not([readonly]),"+"network-password-input:not([disabled]),"+"network-config-select:not([disabled])");if(e){e.focus()}},onEnterEvent_(event){if(event.path[0].localName==="network-config-input"||event.path[0].localName==="network-password-input"){this.onEnterPressedInInput_();event.stopPropagation()}},onEnterPressedInInput_(){if(!this.isConfigured_){return}if(this.connectOnEnter){this.connect()}else{this.save()}},close_(){this.guid="";this.type="";this.securityType_=undefined;this.fire("close")},hasGuid_(){return!!this.guid},onNetworkCertificatesChanged(){this.networkConfig_.getNetworkCertificates().then((response=>{const vpn=this.configProperties_.typeConfig.vpn;const isOpenVpn=!!vpn&&!!vpn.type&&vpn.type.value===mojom.VpnType.kOpenVPN;const caCerts=response.serverCas.slice();if(!isOpenVpn){caCerts.unshift(this.getDefaultCert_(chromeos.networkConfig.mojom.CertificateType.kServerCA,this.i18n("networkCAUseDefault"),DEFAULT_HASH))}caCerts.push(this.getDefaultCert_(chromeos.networkConfig.mojom.CertificateType.kServerCA,this.i18n("networkCADoNotCheck"),DO_NOT_CHECK_HASH));this.set("serverCaCerts_",caCerts);let userCerts=response.userCerts.slice();userCerts.forEach((function(cert){if(!cert.availableForNetworkAuth){cert.hash=""}}));if(isOpenVpn){userCerts.unshift(this.getDefaultCert_(chromeos.networkConfig.mojom.CertificateType.kUserCert,this.i18n("networkNoUserCert"),NO_USER_CERT_HASH))}if(!userCerts.length){userCerts=[this.getDefaultCert_(chromeos.networkConfig.mojom.CertificateType.kUserCert,this.i18n("networkCertificateNoneInstalled"),NO_CERTS_HASH)]}this.set("userCerts_",userCerts);this.updateSelectedCerts_();this.updateCertError_()}))},getDefaultCert_(type,desc,hash){return{type:type,hash:hash,issuedBy:desc,issuedTo:"",pemOrId:"",availableForNetworkAuth:false,hardwareBacked:false,deviceWide:true}},getActiveBoolean_(property){if(!property){return false}return property.activeValue},getActiveStringList_(property){if(!property){return undefined}return property.activeValue},getManagedPropertiesCallback_(managedProperties){if(!managedProperties){console.warn("Network no longer exists: "+this.guid);this.close_();return}this.managedProperties_=managedProperties;this.managedEapProperties_=this.getManagedEap_(managedProperties);this.mojoType_=managedProperties.type;if(this.mojoType_===mojom.NetworkType.kVPN){let saveCredentials=false;const vpn=managedProperties.typeProperties.vpn;if(vpn.type===mojom.VpnType.kOpenVPN){saveCredentials=this.getActiveBoolean_(vpn.openVpn.saveCredentials)}else if(vpn.type===mojom.VpnType.kL2TPIPsec){saveCredentials=this.getActiveBoolean_(vpn.ipSec.saveCredentials)||this.getActiveBoolean_(vpn.l2tp.saveCredentials)}this.vpnSaveCredentials_=saveCredentials}this.setError_(managedProperties.errorState);this.updateCertError_();this.focusFirstInput_()},getSecurityItems_(){if(this.mojoType_===mojom.NetworkType.kWiFi){return[mojom.SecurityType.kNone,mojom.SecurityType.kWepPsk,mojom.SecurityType.kWpaPsk,mojom.SecurityType.kWpaEap]}return[mojom.SecurityType.kNone,mojom.SecurityType.kWpaEap]},setShareNetwork_(){if(this.mojoType_===undefined||!this.managedProperties_||!this.securityType_===undefined){return}const source=this.managedProperties_.source;if(source!==mojom.OncSource.kNone){this.shareNetwork_=source===mojom.OncSource.kDevice||source===mojom.OncSource.kDevicePolicy;return}if(!this.shareIsVisible_()){this.shareNetwork_=false;return}if(this.shareAllowEnable){if(this.mojoType_===mojom.NetworkType.kWiFi){this.shareNetwork_=this.securityType_===mojom.SecurityType.kNone;return}}this.shareNetwork_=this.shareDefault},onShareChanged_(event){this.updateSelectedCerts_()},getEAPConfigProperties_(eap){return{anonymousIdentity:OncMojo.getActiveString(eap.anonymousIdentity),clientCertType:OncMojo.getActiveString(eap.clientCertType),clientCertPkcs11Id:OncMojo.getActiveString(eap.clientCertPkcs11Id),identity:OncMojo.getActiveString(eap.identity),inner:OncMojo.getActiveString(eap.inner),outer:OncMojo.getActiveString(eap.outer)||"LEAP",password:OncMojo.getActiveString(eap.password),saveCredentials:this.getActiveBoolean_(eap.saveCredentials),serverCaPems:this.getActiveStringList_(eap.serverCaPems),subjectMatch:OncMojo.getActiveString(eap.subjectMatch),useSystemCas:this.getActiveBoolean_(eap.useSystemCas)}},getIPSecConfigProperties_(ipSec){return{authenticationType:OncMojo.getActiveString(ipSec.authenticationType)||"PSK",clientCertPkcs11Id:OncMojo.getActiveString(ipSec.clientCertPkcs11Id),clientCertType:OncMojo.getActiveString(ipSec.clientCertType),group:OncMojo.getActiveString(ipSec.group),ikeVersion:1,psk:OncMojo.getActiveString(ipSec.psk),saveCredentials:this.getActiveBoolean_(ipSec.saveCredentials),serverCaPems:this.getActiveStringList_(ipSec.serverCaPems),serverCaRefs:this.getActiveStringList_(ipSec.serverCaRefs)}},getL2TPConfigProperties_(l2tp){return{lcpEchoDisabled:this.getActiveBoolean_(l2tp.lcpEchoDisabled),password:OncMojo.getActiveString(l2tp.password),saveCredentials:this.getActiveBoolean_(l2tp.saveCredentials),username:OncMojo.getActiveString(l2tp.username)}},getOpenVPNConfigProperties_(openVpn){return{clientCertPkcs11Id:OncMojo.getActiveString(openVpn.clientCertPkcs11Id),clientCertType:OncMojo.getActiveString(openVpn.clientCertType),extraHosts:this.getActiveStringList_(openVpn.extraHosts),otp:"",password:OncMojo.getActiveString(openVpn.password),saveCredentials:this.getActiveBoolean_(openVpn.saveCredentials),serverCaPems:this.getActiveStringList_(openVpn.serverCaPems),serverCaRefs:this.getActiveStringList_(openVpn.serverCaRefs),userAuthenticationType:OncMojo.getActiveString(openVpn.userAuthenticationType),username:OncMojo.getActiveString(openVpn.username)}},updateConfigProperties_(){if(this.mojoType_===undefined||!this.managedProperties_){return}this.showEap_=null;this.showVpn_=null;this.vpnType_=undefined;const managedProperties=this.managedProperties_;const configProperties=OncMojo.getDefaultConfigProperties(managedProperties.type);configProperties.name=OncMojo.getActiveString(managedProperties.name);let autoConnect;let security=mojom.SecurityType.kNone;switch(managedProperties.type){case mojom.NetworkType.kWiFi:const wifi=managedProperties.typeProperties.wifi;const configWifi=configProperties.typeConfig.wifi;autoConnect=this.getActiveBoolean_(wifi.autoConnect);configWifi.passphrase=OncMojo.getActiveString(wifi.passphrase);configWifi.ssid=OncMojo.getActiveString(wifi.ssid);if(wifi.eap){configWifi.eap=this.getEAPConfigProperties_(wifi.eap)}security=wifi.security;configWifi.security=security;break;case mojom.NetworkType.kEthernet:const eap=managedProperties.typeProperties.ethernet.eap?this.getEAPConfigProperties_(managedProperties.typeProperties.ethernet.eap):undefined;security=eap?mojom.SecurityType.kWpaEap:mojom.SecurityType.kNone;const auth=security===mojom.SecurityType.kWpaEap?"8021X":"None";configProperties.typeConfig.ethernet.authentication=auth;configProperties.typeConfig.ethernet.eap=eap;break;case mojom.NetworkType.kVPN:const vpn=managedProperties.typeProperties.vpn;const vpnType=vpn.type;const configVpn=configProperties.typeConfig.vpn;configVpn.host=OncMojo.getActiveString(vpn.host);configVpn.type={value:vpnType};if(vpnType===mojom.VpnType.kL2TPIPsec){assert(vpn.ipSec);configVpn.ipSec=this.getIPSecConfigProperties_(vpn.ipSec);assert(vpn.l2tp);configVpn.l2tp=this.getL2TPConfigProperties_(vpn.l2tp)}else{assert(vpnType===mojom.VpnType.kOpenVPN);assert(vpn.openVpn);configVpn.openVpn=this.getOpenVPNConfigProperties_(vpn.openVpn)}security=mojom.SecurityType.kNone;break}if(autoConnect!==undefined){configProperties.autoConnect={value:autoConnect}}const requestCertificates=this.configProperties_===undefined;this.configProperties_=configProperties;this.securityType_=security;this.set("eapProperties_",this.getEap_(this.configProperties_));if(!this.eapProperties_){this.showEap_=null}if(managedProperties.type===mojom.NetworkType.kVPN){this.vpnType_=this.getVpnTypeFromProperties_(this.configProperties_)}if(requestCertificates){this.onNetworkCertificatesChanged()}},updateSecurity_(){if(this.securityType_===undefined||!this.configProperties_){return}const type=this.mojoType_;if(typeof this.securityType_==="string"){this.securityType_=Number.parseInt(this.securityType_,10)}const security=this.securityType_;if(type===mojom.NetworkType.kWiFi){this.configProperties_.typeConfig.wifi.security=security}else if(type===mojom.NetworkType.kEthernet){const auth=security===mojom.SecurityType.kWpaEap?"8021X":"None";this.configProperties_.typeConfig.ethernet.authentication=auth}let eap;if(security===mojom.SecurityType.kWpaEap){eap=this.getEap_(this.configProperties_,true);eap.outer=eap.outer||"LEAP"}this.setEap_(eap)},updateEapOuter_(){const eap=this.eapProperties_;if(!eap||!eap.outer){return}const innerItems=this.getEapInnerItems_(eap.outer);if(innerItems.length>0){if(!eap.inner||innerItems.indexOf(eap.inner)<0){this.set("eapProperties_.inner",innerItems[0])}}else{this.set("eapProperties_.inner",undefined)}},updateEapCerts_(){if(this.mojoType_===mojom.NetworkType.kVPN){return}const eap=this.eapProperties_;const pem=eap&&eap.serverCaPems?eap.serverCaPems[0]:"";const certId=eap&&eap.clientCertType==="PKCS11Id"?eap.clientCertPkcs11Id:"";this.setSelectedCerts_(pem,certId)},updateShowEap_(){if(!this.eapProperties_||this.securityType_===mojom.SecurityType.kNone){this.showEap_=null;this.updateCertError_();return}const outer=this.eapProperties_.outer;switch(this.mojoType_){case mojom.NetworkType.kWiFi:case mojom.NetworkType.kEthernet:this.showEap_={Outer:true,Inner:outer==="PEAP"||outer==="EAP-TTLS",ServerCA:outer!=="LEAP",SubjectMatch:outer==="EAP-TLS",UserCert:outer==="EAP-TLS",Identity:true,Password:outer!=="EAP-TLS",AnonymousIdentity:outer==="PEAP"||outer==="EAP-TTLS"};break}this.updateCertError_()},getEap_(properties,opt_create){let eap;if(properties.typeConfig.wifi){eap=properties.typeConfig.wifi.eap}else if(properties.typeConfig.ethernet){eap=properties.typeConfig.ethernet.eap}if(opt_create){return eap||{saveCredentials:false,useSystemCas:false}}return eap||null},setEap_(eapProperties){switch(this.mojoType_){case mojom.NetworkType.kWiFi:this.configProperties_.typeConfig.wifi.eap=eapProperties;break;case mojom.NetworkType.kEthernet:this.configProperties_.typeConfig.ethernet.eap=eapProperties;break}this.set("eapProperties_",eapProperties)},getManagedEap_(managedProperties){let managedEap;switch(managedProperties.type){case mojom.NetworkType.kWiFi:managedEap=managedProperties.typeProperties.wifi.eap;break;case mojom.NetworkType.kEthernet:managedEap=managedProperties.typeProperties.ethernet.eap;break}return managedEap||null},getVpnTypeFromProperties_(properties){const vpn=properties.typeConfig.vpn;assert(vpn);if(!!vpn.type&&vpn.type.value===mojom.VpnType.kL2TPIPsec){return vpn.ipSec.authenticationType==="Cert"?VPNConfigType.L2TP_IPSEC_CERT:VPNConfigType.L2TP_IPSEC_PSK}return VPNConfigType.OPEN_VPN},updateVpnType_(){if(this.configProperties_===undefined||this.vpnType_===undefined){return}const vpn=this.configProperties_.typeConfig.vpn;if(!vpn){this.showVpn_=null;this.updateCertError_();return}switch(this.vpnType_){case VPNConfigType.L2TP_IPSEC_PSK:vpn.type={value:mojom.VpnType.kL2TPIPsec};if(vpn.ipSec){vpn.ipSec.authenticationType="PSK"}else{vpn.ipSec={authenticationType:"PSK",ikeVersion:1,saveCredentials:false}}this.showVpn_={Cert:false,OpenVPN:false};delete vpn.openVpn;break;case VPNConfigType.L2TP_IPSEC_CERT:vpn.type={value:mojom.VpnType.kL2TPIPsec};if(vpn.ipSec){vpn.ipSec.authenticationType="Cert"}else{vpn.ipSec={authenticationType:"Cert",ikeVersion:1,saveCredentials:false}}delete vpn.openVpn;this.showVpn_={Cert:true,OpenVPN:false};break;case VPNConfigType.OPEN_VPN:vpn.type={value:mojom.VpnType.kOpenVPN};vpn.openVpn=vpn.openVpn||{saveCredentials:false};this.showVpn_={Cert:true,OpenVPN:true};delete vpn.l2tp;delete vpn.ipSec;break;default:assertNotReached$1()}if(vpn.type.value===mojom.VpnType.kL2TPIPsec&&!vpn.l2tp){vpn.l2tp={lcpEchoDisabled:false,password:"",saveCredentials:false,username:""}}this.updateCertError_()},updateVpnIPsecCerts_(){if(this.vpnType_!==VPNConfigType.L2TP_IPSEC_CERT){return}const ipSec=this.configProperties_.typeConfig.vpn.ipSec;const pem=ipSec.serverCaPems?ipSec.serverCaPems[0]:undefined;const certId=ipSec.clientCertType==="PKCS11Id"?ipSec.clientCertPkcs11Id:"";this.setSelectedCerts_(pem,certId)},updateOpenVPNCerts_(){if(this.vpnType_!==VPNConfigType.OPEN_VPN){return}const openVpn=this.configProperties_.typeConfig.vpn.openVpn;const pem=openVpn.serverCaPems?openVpn.serverCaPems[0]:undefined;const certId=openVpn.clientCertType==="PKCS11Id"?openVpn.clientCertPkcs11Id:"";this.setSelectedCerts_(pem,certId)},updateCertError_(){const noCertsError="networkErrorNoUserCertificate";const noValidCertsError="networkErrorNotAvailableForNetworkAuth";if(this.error&&this.error!==noCertsError&&this.error!==noValidCertsError){return}const requireCerts=this.showEap_&&this.showEap_.UserCert||this.showVpn_&&this.showVpn_.UserCert;if(!requireCerts){this.setError_("");return}if(!this.userCerts_.length||this.userCerts_[0].hash===NO_CERTS_HASH){this.setError_(noCertsError);return}const validUserCert=this.userCerts_.find((function(cert){return!!cert.hash}));if(!validUserCert){this.setError_(noValidCertsError);return}this.setError_("");return},setSelectedCerts_(pem,certId){if(pem){const serverCa=this.serverCaCerts_.find((function(cert){return cert.pemOrId===pem}));if(serverCa){this.selectedServerCaHash_=serverCa.hash}}if(certId){const userCert=this.userCerts_.find((function(cert){return cert.pemOrId.indexOf(certId)>=0}));if(userCert){this.selectedUserCertHash_=userCert.hash}}this.updateSelectedCerts_();this.updateIsConfigured_()},findCert_(certs,hash){if(!hash){return undefined}return certs.find((cert=>cert.hash===hash))},updateSelectedCerts_(){if(!this.serverCaCerts_.length||!this.userCerts_.length){return}const eap=this.eapProperties_;this.deviceCertsOnly_=this.shareNetwork_&&!!eap&&eap.outer==="EAP-TLS";const caCert=this.findCert_(this.serverCaCerts_,this.selectedServerCaHash_);if(!caCert||this.deviceCertsOnly_&&!caCert.deviceWide){this.selectedServerCaHash_=undefined}if(!this.selectedServerCaHash_){if(eap&&eap.useSystemCas){this.selectedServerCaHash_=DEFAULT_HASH}else if(!this.guid&&this.serverCaCerts_[0]){let cert=this.serverCaCerts_[0];if(cert.hash===DEFAULT_HASH&&this.isRealCertUsableForNetworkAuth_(this.serverCaCerts_[1])){cert=this.serverCaCerts_[1]}this.selectedServerCaHash_=cert.hash}else{this.selectedServerCaHash_=DO_NOT_CHECK_HASH}}const userCert=this.findCert_(this.userCerts_,this.selectedUserCertHash_);if(!userCert||this.deviceCertsOnly_&&!userCert.deviceWide){this.selectedUserCertHash_=undefined}if(!this.selectedUserCertHash_){for(let i=0;i<this.userCerts_.length;++i){const userCert=this.userCerts_[i];if(userCert&&(!this.deviceCertsOnly_||userCert.deviceWide)){this.selectedUserCertHash_=userCert.hash;break}}}},isRealCertUsableForNetworkAuth_(cert){return!!cert&&cert.hash!==DO_NOT_CHECK_HASH&&cert.hash!==DEFAULT_HASH},getIsConfigured_(){if(this.securityType_===undefined||!this.configProperties_){return false}const typeConfig=this.configProperties_.typeConfig;if(typeConfig.vpn){return this.vpnIsConfigured_()}if(typeConfig.wifi){if(!typeConfig.wifi.ssid){return false}if(this.configRequiresPassphrase_){const passphrase=typeConfig.wifi.passphrase;if(!passphrase||passphrase.length<this.MIN_PASSPHRASE_LENGTH){return false}}}if(this.securityType_===mojom.SecurityType.kWpaEap){return this.eapIsConfigured_()}return true},updateIsConfigured_(){this.isConfigured_=this.getIsConfigured_()},isWiFi_(networkType){return networkType===mojom.NetworkType.kWiFi},setEnableSave_(){this.enableSave=this.isConfigured_&&!!this.managedProperties_},setEnableConnect_(){this.enableConnect=this.isConfigured_&&!this.propertiesSent_},securityIsVisible_(networkType){return networkType===mojom.NetworkType.kWiFi||networkType===mojom.NetworkType.kEthernet},securityIsEnabled_(){return!this.guid||this.mojoType_===mojom.NetworkType.kEthernet},shareIsVisible_(){if(!this.managedProperties_){return false}return this.managedProperties_.source===mojom.OncSource.kNone&&this.managedProperties_.type===mojom.NetworkType.kWiFi},shareIsEnabled_(){if(!this.managedProperties_){return false}if(!this.shareAllowEnable||this.managedProperties_.source!==mojom.OncSource.kNone){return false}if(this.mojoType_===mojom.NetworkType.kWiFi&&this.securityType_===mojom.SecurityType.kNone){return false}return true},configCanAutoConnect_(){return loadTimeData$1.getBoolean("showHiddenNetworkWarning")&&this.mojoType_===mojom.NetworkType.kWiFi},autoConnectDisabled_(){return this.isAutoConnectEnforcedByPolicy_()},isAutoConnectEnforcedByPolicy_(){return!!this.globalPolicy_&&!!this.globalPolicy_.allowOnlyPolicyNetworksToAutoconnect},showHiddenNetworkWarning_(){flush();return loadTimeData$1.getBoolean("showHiddenNetworkWarning")&&this.autoConnect_&&!this.hasGuid_()},updateHiddenNetworkWarning_(){this.hiddenNetworkWarning_=this.showHiddenNetworkWarning_()},selectedUserCertHashIsValid_(){return!!this.selectedUserCertHash_&&this.selectedUserCertHash_!==NO_CERTS_HASH},eapIsConfigured_(){if(!this.configProperties_){return false}const eap=this.getEap_(this.configProperties_);if(!eap){return false}if(eap.outer!=="EAP-TLS"){return true}if(this.deviceCertsOnly_){let cert=this.findCert_(this.userCerts_,this.selectedUserCertHash_);if(!cert||!cert.deviceWide){return false}cert=this.findCert_(this.serverCaCerts_,this.selectedServerCaHash_);if(!cert.deviceWide){return false}}return this.selectedUserCertHashIsValid_()},vpnIsConfigured_(){const vpn=this.configProperties_.typeConfig.vpn;if(!this.configProperties_.name||!vpn||!vpn.host){return false}switch(this.vpnType_){case VPNConfigType.L2TP_IPSEC_PSK:return!!vpn.l2tp.username&&!!vpn.ipSec.psk;case VPNConfigType.L2TP_IPSEC_CERT:return!!vpn.l2tp.username&&this.selectedUserCertHashIsValid_();case VPNConfigType.OPEN_VPN:return true}return false},getPropertiesToSet_(){const propertiesToSet=Object.assign({},this.configProperties_);delete propertiesToSet.autoConnect;if(this.guid){propertiesToSet.guid=this.guid}const eap=this.getEap_(propertiesToSet);if(eap){this.setEapProperties_(eap)}if(this.mojoType_===mojom.NetworkType.kVPN){const vpnConfig=propertiesToSet.typeConfig.vpn;if(vpnConfig.host!==undefined){vpnConfig.host=vpnConfig.host.trim()}const vpnType=vpnConfig.type.value;if(vpnType===mojom.VpnType.kOpenVPN){this.setOpenVPNProperties_(propertiesToSet);delete propertiesToSet.typeConfig.vpn.ipSec;delete propertiesToSet.typeConfig.vpn.l2tp}else if(vpnType===mojom.VpnType.kL2TPIPsec){this.setVpnIPsecProperties_(propertiesToSet);delete propertiesToSet.typeConfig.vpn.openVpn}}return propertiesToSet},getServerCaPems_(){const caHash=this.selectedServerCaHash_||"";if(!caHash||caHash===DO_NOT_CHECK_HASH||caHash===DEFAULT_HASH){return[]}const serverCa=this.findCert_(this.serverCaCerts_,caHash);return serverCa&&serverCa.pemOrId?[serverCa.pemOrId]:[]},getUserCertPkcs11Id_(){const userCertHash=this.selectedUserCertHash_||"";if(!this.selectedUserCertHashIsValid_()||userCertHash===NO_USER_CERT_HASH){return""}const userCert=this.findCert_(this.userCerts_,userCertHash);return userCert&&userCert.pemOrId||""},setEapProperties_(eap){eap.useSystemCas=this.selectedServerCaHash_===DEFAULT_HASH;eap.serverCaPems=this.getServerCaPems_();const pkcs11Id=this.getUserCertPkcs11Id_();eap.clientCertType=pkcs11Id?"PKCS11Id":"None";eap.clientCertPkcs11Id=pkcs11Id||""},setOpenVPNProperties_(propertiesToSet){const openVpn=propertiesToSet.typeConfig.vpn.openVpn;assert(!!openVpn);openVpn.serverCaPems=this.getServerCaPems_();const pkcs11Id=this.getUserCertPkcs11Id_();openVpn.clientCertType=pkcs11Id?"PKCS11Id":"None";openVpn.clientCertPkcs11Id=pkcs11Id||"";if(openVpn.password){openVpn.userAuthenticationType=openVpn.otp?"PasswordAndOTP":"Password"}else if(openVpn.otp){openVpn.userAuthenticationType="OTP"}else{openVpn.userAuthenticationType="None"}openVpn.saveCredentials=this.vpnSaveCredentials_;propertiesToSet.typeConfig.vpn.openVpn=openVpn},setVpnIPsecProperties_(propertiesToSet){const vpn=propertiesToSet.typeConfig.vpn;assert(vpn.ipSec);assert(vpn.l2tp);if(vpn.ipSec.authenticationType==="Cert"){vpn.ipSec.clientCertType="PKCS11Id";vpn.ipSec.clientCertPkcs11Id=this.getUserCertPkcs11Id_();vpn.ipSec.serverCaPems=this.getServerCaPems_()}vpn.ipSec.ikeVersion=1;vpn.ipSec.saveCredentials=this.vpnSaveCredentials_;vpn.l2tp.saveCredentials=this.vpnSaveCredentials_},setPropertiesCallback_(success,errorMessage,connect){if(!success){console.error("Unable to set properties for: "+this.guid+" Error: "+errorMessage);this.propertiesSent_=false;this.setError_(errorMessage);this.focusPassphrase_();return}if(connect&&this.managedProperties_.connectionState===mojom.ConnectionStateType.kNotConnected){this.startConnect_(this.guid)}else{this.close_()}},createNetworkCallback_(guid,errorMessage,connect){if(!guid){console.error("Unable to configure network: "+guid+" Error: "+errorMessage);this.propertiesSent_=false;this.setError_(errorMessage);this.focusPassphrase_();return}if(connect){this.startConnect_(guid)}else{this.close_()}},startConnect_(guid){this.networkConfig_.startConnect(guid).then((response=>{const result=response.result;if(result===mojom.StartConnectResult.kSuccess||result===mojom.StartConnectResult.kInvalidGuid||result===mojom.StartConnectResult.kInvalidState||result===mojom.StartConnectResult.kCanceled){this.close_();return}this.setError_(response.message);console.error("Error connecting to network: "+guid+": "+result.toString()+" Message: "+response.message);this.propertiesSent_=false}))},computeConfigRequiresPassphrase_(mojoType,securityType){return mojoType===mojom.NetworkType.kWiFi&&(securityType===mojom.SecurityType.kWepPsk||securityType===mojom.SecurityType.kWpaPsk)},getEapInnerItems_(outer){if(outer==="PEAP"){return this.eapInnerItemsPeap_}if(outer==="EAP-TTLS"){return this.eapInnerItemsTtls_}return[]},setError_(error){this.error=error||""},getManagedSecurity_(managedProperties){const policySource=OncMojo.getEnforcedPolicySourceFromOncSource(managedProperties.source);if(policySource===mojom.PolicySource.kNone){return undefined}switch(managedProperties.type){case mojom.NetworkType.kWiFi:return{activeValue:OncMojo.getSecurityTypeString(managedProperties.typeProperties.wifi.security),policySource:policySource};break;case mojom.NetworkType.kEthernet:return{activeValue:OncMojo.getActiveString(managedProperties.typeProperties.ethernet.authentication),policySource:policySource};break}return undefined},getManagedVpnSaveCredentials_(managedProperties){const vpn=managedProperties.typeProperties.vpn;switch(vpn.type){case mojom.VpnType.kOpenVPN:return vpn.openVpn.saveCredentials||OncMojo.createManagedBool(false);case mojom.VpnType.kL2TPIPsec:return vpn.ipSec.saveCredentials||vpn.l2tp.saveCredentials||OncMojo.createManagedBool(false)}assertNotReached$1();return undefined},getManagedVpnServerCaRefs_(managedProperties){const vpn=managedProperties.typeProperties.vpn;switch(vpn.type){case mojom.VpnType.kOpenVPN:return vpn.openVpn.serverCaRefs;case mojom.VpnType.kL2TPIPsec:return vpn.ipSec.serverCaRefs}assertNotReached$1();return undefined},getManagedVpnClientCertType_(managedProperties){const vpn=managedProperties.typeProperties.vpn;switch(vpn.type){case mojom.VpnType.kOpenVPN:return vpn.openVpn.clientCertType||OncMojo.createManagedString("");case mojom.VpnType.kL2TPIPsec:return vpn.ipSec.clientCertType||OncMojo.createManagedString("")}assertNotReached$1();return undefined},onWifiPasswordInputKeypress_(){if(this.error==="bad-passphrase"){this.setError_("")}}});const template$3=document.createElement("template");template$3.innerHTML=`<dom-module id="internet-shared" assetpath="chrome://resources/">\n  <template>\n    <style include="settings-shared" scope="internet-shared">network-icon {\n  padding-inline-end: var(--cr-section-padding);\n}\n\niron-icon.policy {\n  margin-inline-end: var(--cr-controlled-by-spacing);\n}\n\n.indented {\n  margin-inline-start: var(--cr-section-padding);\n}\n\n.stretch {\n  align-items: stretch;\n}\n\n.title {\n  font-size: 107.69%;  \n        font-weight: 500;\n}\n\n</style>\n  </template>\n</dom-module>\n`;document.body.appendChild(template$3.content.cloneNode(true));// Copyright 2017 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="internet-shared iron-flex" scope="internet-config">cr-dialog::part(dialog) {
  width: 460px;
}

.error {
  color: red;
        font-weight: 500;
}

</style>

    <cr-dialog id="dialog" close-text="Close">
      <div slot="title">
        [[getDialogTitle_(name, type, showConnect)]]
      </div>
      <div slot="body">
        <network-config id="networkConfig" class="flex" guid="[[guid]]" name="{{name}}" type="{{type}}" enable-connect="{{enableConnect_}}" enable-save="{{enableSave_}}" share-allow-enable="[[shareAllowEnable_]]" share-default="[[shareDefault_]]" error="{{error_}}" on-close="onClose_" connect-on-enter="[[showConnect]]" on-properties-set="onPropertiesSet_">
        </network-config>
      </div>

      <div class="layout horizontal center" slot="button-container">
        <template is="dom-if" if="[[error_]]" restamp="">
          <div class="flex error">[[getError_(error_)]]</div>
        </template>
        <cr-button class="cancel-button" on-click="onCancelTap_">
          Cancel
        </cr-button>
        <template is="dom-if" if="[[!showConnect]]">
          <cr-button id="saveButton" class="action-button" on-click="onSaveTap_" disabled="[[!enableSave_]]">
            Save
          </cr-button>
        </template>
        <template is="dom-if" if="[[showConnect]]">
          <cr-button id="connectButton" class="action-button" on-click="onConnectTap_" disabled="[[!enableConnect_]]">
            Connect
          </cr-button>
        </template>
      </div>

    </cr-dialog>
<!--_html_template_end_-->`,is:"internet-config",behaviors:[I18nBehavior],properties:{shareAllowEnable_:{type:Boolean,value(){return loadTimeData.getBoolean("shareNetworkAllowEnable")}},shareDefault_:{type:Boolean,value(){return loadTimeData.getBoolean("shareNetworkDefault")}},guid:{type:String,value:""},type:String,name:String,showConnect:Boolean,enableConnect_:Boolean,enableSave_:Boolean,error_:{type:String,value:""}},open(){const dialog=this.$.dialog;if(!dialog.open){dialog.showModal()}this.$.networkConfig.init()},close(){const dialog=this.$.dialog;if(dialog.open){dialog.close()}},onClose_(event){this.close()},getDialogTitle_(){if(this.name&&!this.showConnect){return this.i18n("internetConfigName",HTMLEscape(this.name))}const type=this.i18n("OncType"+this.type);return this.i18n("internetJoinType",type)},getError_(){if(this.i18nExists(this.error_)){return this.i18n(this.error_)}return this.i18n("networkErrorUnknown")},onCancelTap_(){this.close()},onSaveTap_(){this.$.networkConfig.save()},onConnectTap_(){this.$.networkConfig.connect()},onPropertiesSet_(){if(this.type===OncMojo.getNetworkTypeString(chromeos.networkConfig.mojom.NetworkType.kWiFi)){recordSettingChange(chromeos.settings.mojom.Setting.kWifiAddNetwork,{stringValue:this.guid})}else{recordSettingChange()}}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style network-shared iron-flex" scope="network-property-list-mojo">.property-box {
  padding: 0;
        width: var(--cr-property-box-width, inherit);
}

cr-input[readonly] {
  --cr-input-background-color: transparent;
}

cr-policy-network-indicator-mojo {
  margin-inline-start: var(--settings-controlled-by-spacing);
}

</style>
    <template is="dom-repeat" items="[[fields]]" filter="[[computeFilter_(prefix, editFieldTypes, propertyDict)]]">
      <div class="property-box single-column two-line stretch">
        <!-- Property label -->
        <div class="layout horizontal center">
          <div>[[getPropertyLabel_(item, prefix)]]</div>
          <template is="dom-if" restamp="" if="[[isEditType_(item, editFieldTypes)]]">
            <cr-policy-network-indicator-mojo property="[[getIndicatorProperty_(item, propertyDict)]]">
            </cr-policy-network-indicator-mojo>
          </template>
        </div>
        <!-- Uneditable property value -->
        <template is="dom-if" restamp="" if="[[!showEditable_(item, editFieldTypes, propertyDict)]]">
          <div class="cr-secondary-text">
            [[getPropertyValue_(item, prefix, propertyDict)]]
          </div>
        </template>
        <!-- Editable property value -->
        <template is="dom-if" restamp="" if="[[showEditable_(item, editFieldTypes, propertyDict)]]">
          <cr-input id="[[item]]" readonly="[[!isEditable_(item, editFieldTypes, propertyDict)]]" value="[[getPropertyValue_(item, prefix, propertyDict)]]" on-change="onValueChange_" type="[[getEditInputType_(item, editFieldTypes)]]" on-focus="onInputFocused_" edited="false" disabled="[[disabled]]">
          </cr-input>
        </template>
      </div>
    </template>
<!--_html_template_end_-->`,is:"network-property-list-mojo",behaviors:[I18nBehavior,CrPolicyNetworkBehaviorMojo],properties:{propertyDict:{type:Object,observer:"onPropertyDictChanged_"},fields:{type:Array,value(){return[]}},editFieldTypes:{type:Object,value(){return{}}},prefix:{type:String,value:""},allFieldsReadOnly:{type:Boolean,value:true,readonly:true,observer:"onAllFieldsReadOnlyChanged_"},disabled:{type:Boolean,value:false},hasAnyInputFocused_:{type:Boolean,value:false}},onAllFieldsReadOnlyChanged_(){if(this.allFieldsReadOnly){return}this.hasAnyInputFocused_=false;setTimeout((()=>{this.attemptToFocusFirstEditableCrInput_()}))},onPropertyDictChanged_(){if(this.allFieldsReadOnly||this.hasAnyInputFocused_){return}this.attemptToFocusFirstEditableCrInput_()},attemptToFocusFirstEditableCrInput_(){flush();const crInput=this.shadowRoot.querySelector("cr-input:not([readonly])");if(!crInput){return}crInput.focusInput()},onInputFocused_(e){if(this.allFieldsReadOnly){return}const crInput=e.target;if(crInput.getAttribute("edited")==="true"){return}crInput.setAttribute("edited",true);crInput.select();this.hasAnyInputFocused_=true},onValueChange_(event){if(!this.propertyDict){return}const key=event.target.id;let curValue=this.getProperty_(key);if(typeof curValue==="object"&&!Array.isArray(curValue)){curValue=OncMojo.getActiveValue(curValue)}const newValue=this.getValueFromEditField_(key,event.target.value);if(newValue===curValue){return}this.fire("property-change",{field:key,value:newValue})},getOncKey_(key,opt_prefix){if(opt_prefix){key=opt_prefix+key.charAt(0).toUpperCase()+key.slice(1)}let result="";const subKeys=key.split(".");subKeys.forEach((subKey=>{if(subKey==="ipv4"||subKey==="ipv6"){result+=subKey}else if(subKey==="apn"){result+="APN"}else if(subKey==="ipAddress"){result+="IPAddress"}else if(subKey==="ipSec"){result+="IPSec"}else if(subKey==="l2tp"){result+="L2TP"}else if(subKey==="modelId"){result+="ModelID"}else if(subKey==="openVpn"){result+="OpenVPN"}else if(subKey==="otp"){result+="OTP"}else if(subKey==="ssid"){result+="SSID"}else if(subKey==="bssid"){result+="BSSID"}else if(subKey==="serverCa"){result+="ServerCA"}else if(subKey==="vpn"){result+="VPN"}else if(subKey==="wifi"){result+="WiFi"}else if(subKey==="iccid"){result+="ICCID"}else if(subKey==="imei"){result+="IMEI"}else{result+=subKey.charAt(0).toUpperCase()+subKey.slice(1)}result+="-"}));return"Onc"+result.slice(0,result.length-1)},getPropertyLabel_(key){const oncKey=this.getOncKey_(key,this.prefix);if(this.i18nExists(oncKey)){return this.i18n(oncKey)}const result=this.prefix+key;for(const type of["cellular","ethernet","tether","vpn","wifi"]){if(result.startsWith(type+".")){return result.substr(type.length+1)}}return result},computeFilter_(){return key=>{if(this.editFieldTypes.hasOwnProperty(key)){return true}const value=this.getPropertyValue_(key);return value!==""}},isPropertyEditable_(key){if(!this.propertyDict){return false}const property=this.getProperty_(key);if(property===undefined||property===null){const source=this.propertyDict.source;return source!==chromeos.networkConfig.mojom.OncSource.kUserPolicy&&source!==chromeos.networkConfig.mojom.OncSource.kDevicePolicy}return!this.isNetworkPolicyEnforced(property)},isEditType_(key){const editType=this.editFieldTypes[key];return editType==="String"||editType==="StringArray"||editType==="Password"},isEditable_(key){return this.isEditType_(key)&&this.isPropertyEditable_(key)},showEditable_(key){return this.isEditable_(key)},getEditInputType_(key){return this.editFieldTypes[key]==="Password"?"password":"text"},getProperty_(key){if(!this.propertyDict){return undefined}key=OncMojo.getManagedPropertyKey(key);const property=this.get(key,this.propertyDict);if(property===null||property===undefined){return undefined}return property},getIndicatorProperty_(key){if(!this.propertyDict){return undefined}const property=this.getProperty_(key);if((property===undefined||property===null)&&this.propertyDict.source){const policySource=OncMojo.getEnforcedPolicySourceFromOncSource(this.propertyDict.source);if(policySource!==chromeos.networkConfig.mojom.PolicySource.kNone){return{activeValue:"",policySource:policySource}}}return property},getPropertyValue_(key){let value=this.getProperty_(key);if(value===undefined||value===null){return""}if(typeof value==="object"&&!Array.isArray(value)){value=OncMojo.getActiveValue(value)}if(Array.isArray(value)){return value.join(", ")}const customValue=this.getCustomPropertyValue_(key,value);if(customValue){return customValue}if(typeof value==="boolean"){return value.toString()}let valueStr;if(typeof value==="number"){if(key==="cellular.activationState"){valueStr=OncMojo.getActivationStateTypeString(value)}else if(key==="portalState"){valueStr=OncMojo.getPortalStateString(value)}else if(key==="vpn.type"){valueStr=OncMojo.getVpnTypeString(value)}else if(key==="wifi.security"){valueStr=OncMojo.getSecurityTypeString(value)}else{return value.toString()}}else{assert(typeof value==="string");valueStr=value}const oncKey=this.getOncKey_(key,this.prefix)+"_"+valueStr;if(this.i18nExists(oncKey)){return this.i18n(oncKey)}return valueStr},getValueFromEditField_(key,fieldValue){const editType=this.editFieldTypes[key];if(editType==="StringArray"){return fieldValue.toString().split(/, */)}return fieldValue},getCustomPropertyValue_(key,value){if(key==="tether.batteryPercentage"){assert(typeof value==="number");return this.i18n("OncTether-BatteryPercentage_Value",value.toString())}if(key==="tether.signalStrength"){assert(typeof value==="number");if(value<=24){return this.i18n("OncTether-SignalStrength_Weak")}if(value<=49){return this.i18n("OncTether-SignalStrength_Okay")}if(value<=74){return this.i18n("OncTether-SignalStrength_Good")}if(value<=99){return this.i18n("OncTether-SignalStrength_Strong")}return this.i18n("OncTether-SignalStrength_VeryStrong")}if(key==="tether.carrier"){assert(typeof value==="string");return!value||value==="unknown-carrier"?this.i18n("OncTether-Carrier_Unknown"):value}return""}});// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const kDefaultAccessPointName="NONE";const kOtherAccessPointName="Other";const USE_ATTACH_APN_ON_SAVE_METRIC_NAME="Network.Cellular.Apn.UseAttachApnOnSave";Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="network-shared md-select" scope="network-apnlist">:host {
  --cr-property-box-width: 200px;
}

cr-button {
  margin: 4px 0;
}

#attachApnPropertyRow {
  display: flex;
        min-height: 0;
        padding-bottom: 20px;
        padding-top: 8px;
        width: var(--cr-property-box-width);
}

#attachApnDescription {
  display: flex;
}

#attachApnTooltip {
  --cr-icon-size: 16px;
        margin-inline-start: 6px;
}

</style>
    <div class="property-box">
      <div class="start">[[i18n('networkAccessPoint')]]</div>
      <select id="selectApn" class="md-select" on-change="onSelectApnChange_" value="[[selectedApn_]]" disabled="[[isDisabled_(disabled, selectedApn_)]]" aria-label="[[i18n('networkAccessPoint')]]">
        <template is="dom-repeat" items="[[apnSelectList_]]">
          <option value="[[item.name]]">
            [[apnDesc_(item)]]
          </option>
        </template>
      </select>
    </div>

    <template is="dom-if" if="[[showOtherApn_(selectedApn_)]]">
      <div id="otherApnProperties" class="property-box single-column indented">
        <network-property-list-mojo on-property-change="onOtherApnChange_" fields="[[otherApnFields_]]" property-dict="[[otherApn_]]" edit-field-types="[[otherApnEditTypes_]]" prefix="cellular.apn." disabled="[[disabled]]">
        </network-property-list-mojo>
        <template is="dom-if" if="[[isAttachApnAllowed_]]">
          <div id="attachApnPropertyRow" class="property-box horizontal center">
            <div id="attachApnDescription" class="start" aria-hidden="true">
              <span id="attachApnTitle">[[i18n('OncCellular-APN-Attach')]]</span>
              <cr-tooltip-icon id="attachApnTooltip" tooltip-position="right" icon-class="cr:help-outline" tooltip-text="[[i18n('OncCellular-APN-Attach_TooltipText')]]">
              </cr-tooltip-icon>
            </div>
            <cr-toggle id="attachApnControl" aria-labelledby="attachApnTitle" aria-describedby="attachApnTooltip" checked="{{isAttachApnToggleEnabled_}}">
            </cr-toggle>
          </div>
        </template>
        <cr-button id="saveButton" class="action-button" on-click="onSaveOtherTap_" disabled="[[disabled]]">
          [[i18n('save')]]
        </cr-button>
      </div>
    </template>
<!--_html_template_end_-->`,is:"network-apnlist",behaviors:[I18nBehavior],properties:{managedProperties:{type:Object,observer:"managedPropertiesChanged_"},disabled:{type:Boolean,value:false},selectedApn_:{type:String,value:""},apnSelectList_:{type:Array,value(){return[]}},otherApn_:{type:Object,value(){return{accessPointName:kDefaultAccessPointName,name:kOtherAccessPointName}}},otherApnFields_:{type:Array,value(){return["accessPointName","username","password"]},readOnly:true},otherApnEditTypes_:{type:Object,value(){return{accessPointName:"String",username:"String",password:"Password"}},readOnly:true},isAttachApnAllowed_:{type:Boolean,value(){return loadTimeData$1.valueExists("useAttachApn")&&loadTimeData$1.getBoolean("useAttachApn")}},isAttachApnToggleEnabled_:{type:Boolean,value:false}},getApnSelect(){return this.$$("#selectApn")},getApnFromManaged_(apn){return{accessPointName:OncMojo.getActiveString(apn.accessPointName),localizedName:OncMojo.getActiveString(apn.localizedName),name:OncMojo.getActiveString(apn.name),password:OncMojo.getActiveString(apn.password),username:OncMojo.getActiveString(apn.username)}},getActiveApnFromProperties_(managedProperties){const cellular=managedProperties.typeProperties.cellular;let activeApn;if(cellular.selectedApn){activeApn=this.getApnFromManaged_(cellular.selectedApn)}else if(cellular.lastGoodApn&&cellular.lastGoodApn.accessPointName){activeApn=cellular.lastGoodApn}if(activeApn&&!activeApn.accessPointName){activeApn=undefined}return activeApn},shouldUpdateSelectList_(oldManagedProperties){if(!oldManagedProperties){return true}const newActiveApn=this.getActiveApnFromProperties_(this.managedProperties);const oldActiveApn=this.getActiveApnFromProperties_(oldManagedProperties);if(!OncMojo.apnMatch(newActiveApn,oldActiveApn)){return true}const newApnList=this.managedProperties.typeProperties.cellular.apnList;const oldApnList=oldManagedProperties.typeProperties.cellular.apnList;if(!OncMojo.apnListMatch(oldApnList&&oldApnList.activeValue,newApnList&&newApnList.activeValue)){return true}const newCustomApnList=this.managedProperties.typeProperties.cellular.customApnList;const oldCustomApnList=oldManagedProperties.typeProperties.cellular.customApnList;if(!OncMojo.apnListMatch(oldCustomApnList,newCustomApnList)){return true}return false},managedPropertiesChanged_(managedProperties,oldManagedProperties){if(!this.shouldUpdateSelectList_(oldManagedProperties)){return}this.setApnSelectList_(this.getActiveApnFromProperties_(managedProperties))},setApnSelectList_(activeApn){const apnList=this.generateApnList_();if(apnList===undefined||apnList.length===0){this.apnSelectList_=[this.otherApn_];this.set("selectedApn_",kOtherAccessPointName);return}let activeApnInList;if(activeApn){activeApnInList=apnList.find((a=>a.name===activeApn.name))}const customApnList=this.managedProperties.typeProperties.cellular.customApnList;let otherApn=this.otherApn_;if(customApnList&&customApnList.length){otherApn=customApnList[0]}else if(!activeApnInList&&activeApn&&activeApn.accessPointName){otherApn=activeApn}this.isAttachApnToggleEnabled_=otherApn.attach===OncMojo.USE_ATTACH_APN_NAME;this.otherApn_={accessPointName:otherApn.accessPointName,name:kOtherAccessPointName,username:otherApn.username,password:otherApn.password};apnList.push(this.otherApn_);this.apnSelectList_=apnList;const selectedApn=activeApnInList?activeApnInList.name:kOtherAccessPointName;assert(selectedApn);this.set("selectedApn_",selectedApn);this.async((function(){this.$.selectApn.value=this.selectedApn_}))},generateApnList_(){if(!this.managedProperties){return undefined}const apnList=this.managedProperties.typeProperties.cellular.apnList;if(!apnList){return undefined}return apnList.activeValue.filter((apn=>!!apn.accessPointName)).map((apn=>({accessPointName:apn.accessPointName,localizedName:apn.localizedName,name:apn.name||apn.accessPointName,username:apn.username,password:apn.password})))},onSelectApnChange_(event){const target=event.target;const name=target.value;if(name===kOtherAccessPointName&&(!this.otherApn_.accessPointName||this.otherApn_.accessPointName===kDefaultAccessPointName)){this.selectedApn_=name;return}this.sendApnChange_(name)},onOtherApnChange_(event){const value=event.detail.field==="accessPointName"?event.detail.value.toUpperCase():event.detail.value;this.set("otherApn_."+event.detail.field,value)},onSaveOtherTap_(){if(this.sendApnChange_(this.selectedApn_)&&this.isAttachApnAllowed_){chrome.metricsPrivate.recordBoolean(USE_ATTACH_APN_ON_SAVE_METRIC_NAME,this.isAttachApnToggleEnabled_)}},sendApnChange_(name){let apn;if(name===kOtherAccessPointName){if(!this.otherApn_.accessPointName||this.otherApn_.accessPointName===kDefaultAccessPointName){return false}apn={accessPointName:this.otherApn_.accessPointName,username:this.otherApn_.username,password:this.otherApn_.password,attach:this.isAttachApnToggleEnabled_?OncMojo.USE_ATTACH_APN_NAME:""}}else{apn=this.apnSelectList_.find((a=>a.name===name));if(apn===undefined){console.error("Selected APN not in list");return false}}this.fire("apn-change",apn);return true},isDisabled_(){return this.disabled||this.selectedApn_===""},showOtherApn_(){return this.selectedApn_===kOtherAccessPointName},apnDesc_(apn){assert(apn.name);return apn.localizedName||apn.name},isApnItemSelected_(item){return item.accessPointName===this.selectedApn_}});// Copyright 2017 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style network-shared md-select iron-flex" scope="network-choose-mobile">select {
  margin-inline-start: 8px;
}

</style>
    <div class="property-box first two-line">
      <div class="flex layout vertical">
        <div>[[i18n('networkChooseMobile')]]</div>
        <div class="cr-secondary-text">
          [[getSecondaryText_(managedProperties, deviceState)]]
        </div>
      </div>
      <cr-button on-click="onScanTap_" disabled="[[!getEnableScanButton_(managedProperties,
              deviceState, disabled)]]">
        [[i18n('networkCellularScan')]]
      </cr-button>
      <select class="md-select" on-change="onChange_" value="[[selectedMobileNetworkId_]]" disabled="[[!getEnableSelectNetwork_(managedProperties,
              deviceState, disabled)]]" aria-label="[[i18n('networkChooseMobile')]]">
        <template is="dom-repeat" items="[[mobileNetworkList_]]">
          <option value="[[item.networkId]]" disabled="[[getMobileNetworkIsDisabled_(item)]]">
            [[getName_(item)]]
          </option>
        </template>
      </select>
    </div>
<!--_html_template_end_-->`,is:"network-choose-mobile",behaviors:[I18nBehavior],properties:{managedProperties:{type:Object,observer:"managedPropertiesChanged_"},deviceState:{type:Object,value:null},disabled:{type:Boolean,value:false},selectedMobileNetworkId_:{type:String,value:""},mobileNetworkList_:{type:Array,value(){return[]}}},scanRequested_:false,networkConfig_:null,attached(){this.scanRequested_=false},getNetworkConfig_(){if(!this.networkConfig_){this.networkConfig_=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote()}return this.networkConfig_},managedPropertiesChanged_(){const cellular=this.managedProperties.typeProperties.cellular;this.mobileNetworkList_=cellular.foundNetworks||[];if(!this.mobileNetworkList_.length){this.mobileNetworkList_=[{networkId:"none",longName:this.i18n("networkCellularNoNetworks")}]}this.async((()=>{let selected=this.mobileNetworkList_.find((function(mobileNetwork){return mobileNetwork.status==="current"}));if(!selected){selected=this.mobileNetworkList_[0]}this.selectedMobileNetworkId_=selected.networkId}))},getMobileNetworkIsDisabled_(foundNetwork){return foundNetwork.status!=="available"&&foundNetwork.status!=="current"},getEnableScanButton_(properties){return!this.disabled&&properties.connectionState===chromeos.networkConfig.mojom.ConnectionStateType.kNotConnected&&!!this.deviceState&&!this.deviceState.scanning},getEnableSelectNetwork_(properties){return!this.disabled&&!!this.deviceState&&!this.deviceState.scanning&&properties.connectionState===chromeos.networkConfig.mojom.ConnectionStateType.kNotConnected&&!!properties.typeProperties.cellular.foundNetworks&&properties.typeProperties.cellular.foundNetworks.length>0},getSecondaryText_(properties){if(!properties){return""}if(!!this.deviceState&&this.deviceState.scanning){return this.i18n("networkCellularScanning")}if(this.scanRequested_){return this.i18n("networkCellularScanCompleted")}if(properties.connectionState!==chromeos.networkConfig.mojom.ConnectionStateType.kNotConnected){return this.i18n("networkCellularScanConnectedHelp")}return""},getName_(foundNetwork){return foundNetwork.longName||foundNetwork.shortName||foundNetwork.networkId},onScanTap_(){this.scanRequested_=true;this.getNetworkConfig_().requestNetworkScan(chromeos.networkConfig.mojom.NetworkType.kCellular)},onChange_(event){const target=event.target;if(!target.value||target.value==="none"){return}this.getNetworkConfig_().selectCellularMobileNetwork(this.managedProperties.guid,target.value);this.fire("user-action-setting-change")}});const template$4=html`<iron-iconset-svg name="network" size="20">
  <svg>
    <defs>
      <!-- Badges -->
      <g id="badge-1x"><path d="M3.46612 7H4.45996V1H4.33265L2 1.85832V2.70021L3.46612 2.19918V7ZM9.04312 2.55647L8.19713 4.01848L7.36756 2.55647H6.26694L7.62218 4.74538L6.21766 7H7.32649L8.20945 5.48049L9.09651 7H10.1971L8.79261 4.74538L10.152 2.55647H9.04312Z" fill="#5F6368"></path></g>
      <g id="badge-3g"><path d="M3.34091 3.55481H2.74733V4.32487H3.32086C3.67915 4.32487 3.9492 4.40775 4.13102 4.57353C4.31284 4.73931 4.40374 4.97593 4.40374 5.28342C4.40374 5.58824 4.31685 5.82085 4.14305 5.98128C3.96925 6.14171 3.73128 6.22193 3.42914 6.22193C3.1377 6.22193 2.90575 6.14171 2.73329 5.98128C2.56083 5.82085 2.4746 5.6123 2.4746 5.35561H1.5C1.5 5.85294 1.67914 6.25134 2.03743 6.5508C2.39572 6.85027 2.85561 7 3.41711 7C4.00268 7 4.47527 6.84492 4.83489 6.53476C5.19452 6.2246 5.37433 5.80749 5.37433 5.28342C5.37433 4.95722 5.29078 4.67647 5.12366 4.44118C4.95655 4.20588 4.71257 4.03342 4.39171 3.9238C4.65642 3.80615 4.87233 3.63169 5.03944 3.4004C5.20655 3.16912 5.29011 2.92246 5.29011 2.66043C5.29011 2.13903 5.12366 1.73195 4.79078 1.43917C4.45789 1.14639 4 1 3.41711 1C3.06417 1 2.74532 1.06885 2.46056 1.20655C2.1758 1.34425 1.95388 1.5361 1.79479 1.78209C1.63569 2.02808 1.55615 2.3008 1.55615 2.60027H2.53075C2.53075 2.35695 2.61497 2.15976 2.78342 2.00869C2.95187 1.85762 3.16711 1.78209 3.42914 1.78209C3.72861 1.78209 3.9512 1.85896 4.09692 2.0127C4.24265 2.16644 4.31551 2.38235 4.31551 2.66043C4.31551 2.9492 4.22794 3.16979 4.05281 3.32219C3.87767 3.4746 3.64038 3.55214 3.34091 3.55481ZM10.0428 6.78743C10.4171 6.64572 10.7099 6.43717 10.9211 6.16176V3.9238H8.70722V4.69385H9.91043V5.8369C9.69117 6.07219 9.32219 6.18984 8.80348 6.18984C8.33021 6.18984 7.96056 6.01538 7.69452 5.66644C7.42847 5.31751 7.29545 4.82754 7.29545 4.19652V3.74733C7.30348 3.11363 7.4258 2.63302 7.66243 2.30548C7.89907 1.97794 8.24465 1.81417 8.6992 1.81417C9.40241 1.81417 9.81016 2.16577 9.92246 2.86898H10.9171C10.8396 2.2647 10.6096 1.80214 10.2273 1.48128C9.84492 1.16043 9.32888 1 8.67914 1C7.92246 1 7.33289 1.24799 6.91043 1.74398C6.48797 2.23998 6.27674 2.92914 6.27674 3.8115V4.26872C6.28476 4.81952 6.39104 5.30147 6.59559 5.71457C6.80013 6.12768 7.09091 6.44519 7.46791 6.66711C7.84492 6.88904 8.27807 7 8.76738 7C9.24332 7 9.66845 6.92914 10.0428 6.78743Z"></path></g>
      <g id="badge-4g"><path d="M8.78743 1C8.03074 1 7.44118 1.24799 7.01872 1.74398C6.59625 2.23998 6.38503 2.92914 6.38503 3.8115V4.26872C6.39305 4.81952 6.49933 5.30147 6.70388 5.71457C6.90842 6.12768 7.1992 6.44519 7.5762 6.66711C7.95321 6.88904 8.38636 7 8.87567 7C9.35161 7 9.77674 6.92915 10.1511 6.78743C10.5254 6.64572 10.8182 6.43717 11.0294 6.16176V3.9238H8.81551V4.69385H10.0187V5.8369C9.79946 6.07219 9.43048 6.18984 8.91176 6.18984C8.4385 6.18984 8.06885 6.01538 7.80281 5.66644C7.53676 5.31751 7.40374 4.82754 7.40374 4.19652V3.74733C7.41176 3.11363 7.53409 2.63302 7.77072 2.30548C8.00735 1.97794 8.35294 1.81417 8.80749 1.81417C9.5107 1.81417 9.91845 2.16577 10.0307 2.86898H11.0254C10.9479 2.2647 10.7179 1.80214 10.3356 1.48128C9.95321 1.16043 9.43717 1 8.78743 1ZM5.0254 1.08021H4.01872L1.5 5.02674L1.52807 5.62032H4.0508V6.91979H5.0254V5.62032H5.75134V4.83824H5.0254V1.08021ZM4.0508 2.39973V4.83824H2.52273L3.97861 2.52807L4.0508 2.39973Z"></path></g>
      <g id="badge-edge"><path d="M3.04258 4.32143H5.50687V3.49725H3.04258V1.84066H5.89423V1H2V7H5.92308V6.16758H3.04258V4.32143Z"></path></g>
      <g id="badge-evdo"><path d="M2.54258 4.32143H5.00687V3.49725H2.54258V1.84066H5.39423V1H1.5V7H5.42308V6.16758H2.54258V4.32143ZM9.91071 1L8.38599 5.69368L6.87775 1H5.73626L7.88736 7H8.89698L11.0563 1H9.91071Z"></path></g>
      <g id="badge-gsm"><path d="M5.54012 6.78743C5.91445 6.64572 6.20723 6.43717 6.41846 6.16176V3.9238H4.20456V4.69385H5.40777V5.8369C5.18852 6.07219 4.81954 6.18984 4.30082 6.18984C3.82755 6.18984 3.4579 6.01538 3.19186 5.66644C2.92582 5.31751 2.79279 4.82754 2.79279 4.19652V3.74733C2.80082 3.11363 2.92314 2.63302 3.15977 2.30548C3.39641 1.97794 3.74199 1.81417 4.19654 1.81417C4.89975 1.81417 5.3075 2.16577 5.4198 2.86898H6.41445C6.33691 2.2647 6.10697 1.80214 5.72461 1.48128C5.34226 1.16043 4.82622 1 4.17648 1C3.4198 1 2.83023 1.24799 2.40777 1.74398C1.98531 2.23998 1.77408 2.92914 1.77408 3.8115V4.26872C1.7821 4.81952 1.88838 5.30147 2.09293 5.71457C2.29748 6.12768 2.58825 6.44519 2.96525 6.66711C3.34226 6.88904 3.77541 7 4.26472 7C4.74066 7 5.16579 6.92914 5.54012 6.78743Z"></path></g>
      <g id="badge-hspa"><path d="M5.22527 7H6.26374V1H5.22527V3.49725H2.54258V1H1.5V7H2.54258V4.33379H5.22527V7Z"></path></g>
      <g id="badge-hspa-plus"><path d="M5.22527 7H6.26374V1H5.22527V3.49725H2.54258V1H1.5V7H2.54258V4.33379H5.22527V7ZM11.2788 3.69918H9.71291V2.03022H8.74038V3.69918H7.16621V4.61401H8.74038V6.39835H9.71291V4.61401H11.2788V3.69918Z"></path></g>
      <g id="badge-lte"><path d="M2 1H3V5H5V6H2V1ZM10 1H13V2H11V3H12.5V4H11V5H13V6H10V1ZM5 1H9V2H7.5V6H6.5V2H5V1Z"></path></g>
      <g id="badge-lte-advanced"><path d="M2 1H3V5H5V6H2V1ZM10 1H13V2H11V3H12.5V4H11V5H13V6H10V1ZM5 1H9V2H7.5V6H6.5V2H5V1ZM14 2H15V1H16V2H17V3H16V4H15V3H14V2Z"></path></g>

      <!-- Icons -->
      <!-- TODO(crbug.com/1157123) Update network_icon to use iron_icon
      and migrate the rest of the icons used by network_icon
      into this iconset. -->
      <g id="cellular-0"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.002 15.002V7.41622L7.41622 15.002H15.002ZM16.002 17.002C16.5543 17.002 17.002 16.5543 17.002 16.002V5.002C17.002 4.1111 15.9249 3.66493 15.2949 4.2949L4.2949 15.2949C3.66493 15.9249 4.1111 17.002 5.002 17.002H16.002Z"></path></g>

      <g id="download" viewBox="0 0 20 20"><path d="M11 9.2L13.5 6.5L15 8L10 13L5 8L6.5 6.5L9 9.2V3H11V9.2Z"></path><path d="M6 15V13H4V15.375C4 16.2688 4.73125 17 5.625 17H14.375C15.2688 17 16 16.2688 16 15.375V13H14V15H6Z"></path></g>
    </defs>
  </svg>
</iron-iconset-svg>
<iron-iconset-svg name="network8" size="8">
  <svg>
    <defs>
      <g id="badge-secure" fill-rule="evenodd">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M2.25 3H2C1.44772 3 1 3.44772 1 4V7C1 7.55228 1.44772 8 2 8H6C6.55228 8 7 7.55228 7 7V4C7 3.44772 6.55228 3 6 3H5.75V2.25C5.75 1.2835 4.9665 0.5 4 0.5C3.0335 0.5 2.25 1.2835 2.25 2.25V3ZM3.25 3H4.75V2.25C4.75 1.83579 4.41421 1.5 4 1.5C3.58579 1.5 3.25 1.83579 3.25 2.25V3Z"></path>
      </g>
    </defs>
  </svg>
</iron-iconset-svg>
`;document.head.appendChild(template$4.content);// Copyright 2015 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-hidden-style" scope="network-icon">:host {
  display: inline-flex;
        overflow: hidden;
        padding: 2px;
        position: relative;
}

#icon {
  height: 20px;
        opacity: .65;  
        width: 20px;
}

#technology {
  --iron-icon-fill-color: #5a5a5a;
        height: 20px;
        left: 0;
        position: absolute;
        top: 1px;
        width: 20px;
}

:host-context([dir='rtl']) #technology {
  left: auto;
        right: 4px;
}

#secure {
  --iron-icon-fill-color: #5a5a5a;
        height: 8px;
        left: 16px;
        position: absolute;
        top: 16px;
        width: 8px;
}

:host-context([dir='rtl']) #secure {
  left: auto;
        right: 0;
}

#icon.ethernet {
  background: url(chrome://resources/cr_components/chromeos/network/ethernet.svg);
}

#icon.vpn {
  background: url(chrome://resources/cr_components/chromeos/network/vpn.svg);
}

#icon.wifi-not-connected {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_0_with_x.svg);
}

#icon.wifi-no-network, #icon.wifi-0 {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_0.svg);
}

#icon.wifi-1 {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_1.svg);
}

#icon.wifi-2 {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_2.svg);
}

#icon.wifi-3 {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_3.svg);
}

#icon.wifi-4 {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_4.svg);
}

#icon.wifi-off {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_off.svg);
}

#icon.wifi-connecting {
  animation: wifi-levels 750ms infinite;
        animation-direction: alternate;
        animation-timing-function: steps(4, end);
}

@keyframes wifi-levels {
0% {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_0.svg);
}

25% {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_1.svg);
}

50% {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_2.svg);
}

75% {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_3.svg);
}

100% {
  background: url(chrome://resources/cr_components/chromeos/network/wifi_4.svg);
}

}

#icon.cellular-not-connected {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_0_with_x.svg);
}

#icon.cellular-no-network, #icon.cellular-0 {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_0.svg);
}

#icon.cellular-1 {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_1.svg);
}

#icon.cellular-2 {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_2.svg);
}

#icon.cellular-3 {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_3.svg);
}

#icon.cellular-4 {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_4.svg);
}

#icon.cellular-off {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_off.svg);
}

#icon.cellular-locked {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_locked.svg);
}

#icon.cellular-connecting {
  animation: cellular-levels 750ms infinite;
        animation-direction: alternate;
        animation-timing-function: steps(4, end);
}

@keyframes cellular-levels {
0% {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_0.svg);
}

25% {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_1.svg);
}

50% {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_2.svg);
}

75% {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_3.svg);
}

100% {
  background: url(chrome://resources/cr_components/chromeos/network/cellular_4.svg);
}

}

</style>
    <div id="icon" class$="[[getIconClass_(networkState, deviceState, isListItem)]]">
    </div>
    <iron-icon id="technology" hidden="[[!showTechnology_(networkState, showTechnologyBadge)]]" icon="[[getTechnology_(networkState)]]">
    </iron-icon>
    <iron-icon id="secure" hidden="[[!showSecure_(networkState)]]" icon="network8:badge-secure">
    </iron-icon>
<!--_html_template_end_-->`,is:"network-icon",behaviors:[I18nBehavior],properties:{networkState:Object,deviceState:{type:Object,value:null},isListItem:{type:Boolean,value:false},showTechnologyBadge:{type:Boolean,value:true},ariaLabel:{type:String,reflectToAttribute:true,computed:"computeAriaLabel_(locale, networkState)"},isUpdatedCellularUiEnabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("updatedCellularActivationUi")}}},networkIconCount_:5,getIconClass_(){if(!this.networkState){return""}const mojom=chromeos.networkConfig.mojom;const type=this.networkState.type;if(type===mojom.NetworkType.kEthernet){return"ethernet"}if(type===mojom.NetworkType.kVPN){return"vpn"}const prefix=OncMojo.networkTypeIsMobile(type)?"cellular-":"wifi-";if(this.networkState.type===mojom.NetworkType.kCellular&&this.networkState.typeState.cellular.simLocked&&this.isUpdatedCellularUiEnabled_){return prefix+"locked"}if(!this.isListItem&&!this.networkState.guid){const device=this.deviceState;if(!device||device.deviceState===mojom.DeviceStateType.kEnabled||device.deviceState===mojom.DeviceStateType.kEnabling){return prefix+"no-network"}return prefix+"off"}const connectionState=this.networkState.connectionState;if(connectionState===mojom.ConnectionStateType.kConnecting){return prefix+"connecting"}if(!this.isListItem&&connectionState===mojom.ConnectionStateType.kNotConnected){return prefix+"not-connected"}const strength=OncMojo.getSignalStrength(this.networkState);return prefix+this.strengthToIndex_(strength).toString(10)},computeAriaLabel_(locale,networkState){if(!this.networkState){return""}const mojom=chromeos.networkConfig.mojom;const type=this.networkState.type;if(type===mojom.NetworkType.kEthernet){return this.i18nDynamic(locale,"networkIconLabelEthernet")}if(type===mojom.NetworkType.kVPN){return this.i18nDynamic(locale,"networkIconLabelVpn")}let networkTypeString="";if(type===mojom.NetworkType.kTether){networkTypeString=this.i18nDynamic(locale,"OncTypeTether")}else if(OncMojo.networkTypeIsMobile(type)){networkTypeString=this.i18nDynamic(locale,"OncTypeCellular")}else{networkTypeString=this.i18nDynamic(locale,"OncTypeWiFi")}if(!this.isListItem&&!this.networkState.guid){const device=this.deviceState;if(!device||device.deviceState===mojom.DeviceStateType.kEnabled||device.deviceState===mojom.DeviceStateType.kEnabling){return this.i18nDynamic(locale,"networkIconLabelNoNetwork",networkTypeString)}return this.i18nDynamic(locale,"networkIconLabelOff",networkTypeString)}const connectionState=this.networkState.connectionState;if(connectionState===mojom.ConnectionStateType.kConnecting){return this.i18nDynamic(locale,"networkIconLabelConnecting",networkTypeString)}if(!this.isListItem&&connectionState===mojom.ConnectionStateType.kNotConnected){return this.i18nDynamic(locale,"networkIconLabelNotConnected",networkTypeString)}const strength=OncMojo.getSignalStrength(this.networkState);return this.i18nDynamic(locale,"networkIconLabelSignalStrength",networkTypeString,strength.toString(10))},strengthToIndex_(strength){if(strength<=0){return 0}if(strength>=100){return this.networkIconCount_-1}const zeroBasedIndex=Math.trunc((strength-1)*(this.networkIconCount_-1)/100);return zeroBasedIndex+1},showTechnology_(){if(!this.networkState){return false}return OncMojo.connectionStateIsConnected(this.networkState.connectionState)&&this.getTechnology_()!==""&&this.showTechnologyBadge},getTechnology_(){if(!this.networkState){return""}if(this.networkState.type===chromeos.networkConfig.mojom.NetworkType.kCellular){const technology=this.getTechnologyId_(this.networkState.typeState.cellular.networkTechnology);if(technology!==""){return"network:"+technology}}return""},getTechnologyId_(networkTechnology){switch(networkTechnology){case"CDMA1XRTT":return"badge-1x";case"EDGE":return"badge-edge";case"EVDO":return"badge-evdo";case"GPRS":case"GSM":return"badge-gsm";case"HSPA":return"badge-hspa";case"HSPAPlus":return"badge-hspa-plus";case"LTE":return"badge-lte";case"LTEAdvanced":return"badge-lte-advanced";case"UMTS":return"badge-3g"}return""},showSecure_(){if(!this.networkState){return false}const mojom=chromeos.networkConfig.mojom;if(!this.isListItem&&this.networkState.connectionState===mojom.ConnectionStateType.kNotConnected){return false}return this.networkState.type===mojom.NetworkType.kWiFi&&this.networkState.typeState.wifi.security!==mojom.SecurityType.kNone}});// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const getRoutingPrefixAsNetmask=function(prefixLength){if(prefixLength<=0||prefixLength>32){return undefined}let netmask="";for(let i=0;i<4;++i){let remainder=8;if(prefixLength>=8){prefixLength-=8}else{remainder=prefixLength;prefixLength=0}if(i>0){netmask+="."}let value=0;if(remainder!==0){value=(2<<remainder-1)-1<<8-remainder}netmask+=value.toString()}return netmask};const getRoutingPrefixAsLength=function(netmask){if(!netmask){return chromeos.networkConfig.mojom.NO_ROUTING_PREFIX}const tokens=netmask.split(".");if(tokens.length!==4){return chromeos.networkConfig.mojom.NO_ROUTING_PREFIX}let prefixLength=0;for(let i=0;i<tokens.length;++i){const token=tokens[i];if(prefixLength/8!==i){if(token!=="0"){return chromeos.networkConfig.mojom.NO_ROUTING_PREFIX}}else if(token==="255"){prefixLength+=8}else if(token==="254"){prefixLength+=7}else if(token==="252"){prefixLength+=6}else if(token==="248"){prefixLength+=5}else if(token==="240"){prefixLength+=4}else if(token==="224"){prefixLength+=3}else if(token==="192"){prefixLength+=2}else if(token==="128"){prefixLength+=1}else if(token==="0"){prefixLength+=0}else{return chromeos.networkConfig.mojom.NO_ROUTING_PREFIX}}return prefixLength};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="network-shared iron-flex" scope="network-ip-config">cr-toggle {
  margin-inline-start: var(--settings-control-label-spacing);
}

</style>
    <template is="dom-if" if="[[shouldShowAutoIpConfigToggle_]]" restamp="">
      <div id="autoConfig" class="property-box">
        <div id="autoIPConfigLabel" class="start">
          [[i18n('networkIPConfigAuto')]]
        </div>
        <cr-policy-indicator indicator-type="[[getPolicyIndicatorType(
            managedProperties.ipAddressConfigType)]]">
        </cr-policy-indicator>
        <cr-toggle id="autoConfigIpToggle" checked="{{automatic_}}" disabled="[[!canChangeIPConfigType_(managedProperties, disabled)]]" on-change="onAutomaticChange_" aria-labelledby="autoIPConfigLabel">
        </cr-toggle>
      </div>
    </template>
    <template is="dom-if" if="[[hasIpConfigFields_(ipConfig_)]]">
      <div class$="[[getFieldsClassList_(shouldShowAutoIpConfigToggle_)]]">
        <network-property-list-mojo fields="[[ipConfigFields_]]" all-fields-read-only="[[automatic_]]" property-dict="[[ipConfig_]]" edit-field-types="[[getIPEditFields_(automatic_,
                managedProperties)]]" on-property-change="onIPChange_" disabled="[[disabled]]">
        </network-property-list-mojo>
      </div>
    </template>
<!--_html_template_end_-->`,is:"network-ip-config",behaviors:[I18nBehavior,CrPolicyNetworkBehaviorMojo],properties:{managedProperties:{type:Object,observer:"managedPropertiesChanged_"},disabled:{type:Boolean,value:false},automatic_:{type:Boolean,value:true},ipConfig_:Object,ipConfigFields_:{type:Array,value(){return["ipv4.ipAddress","ipv4.netmask","ipv4.gateway","ipv6.ipAddress"]},readOnly:true},shouldShowAutoIpConfigToggle_:{type:Boolean,value:true,computed:"computeShouldShowAutoIpConfigToggle_(managedProperties)"},isUpdatedCellularUiEnabled_:{type:Boolean,value(){return loadTimeData.getBoolean("updatedCellularActivationUi")}}},getAutoConfigIpToggle(){return this.$$("#autoConfigIpToggle")},savedStaticIp_:undefined,managedPropertiesChanged_(newValue,oldValue){if(!this.managedProperties){return}const properties=this.managedProperties;if(newValue.guid!==(oldValue&&oldValue.guid)){this.savedStaticIp_=undefined}const ipConfigType=OncMojo.getActiveValue(properties.ipAddressConfigType);this.automatic_=ipConfigType!=="Static";if(properties.ipConfigs||properties.staticIpConfig){const ipv4=this.getIPConfigUIProperties_(OncMojo.getIPConfigForType(properties,"IPv4"));let ipv6=this.getIPConfigUIProperties_(OncMojo.getIPConfigForType(properties,"IPv6"));if(OncMojo.connectionStateIsConnected(properties.connectionState)&&this.automatic_&&ipv4&&ipv4.ipAddress){ipv6=ipv6||{};ipv6.ipAddress=ipv6.ipAddress||this.i18n("ipAddressNotAvailable")}this.ipConfig_={ipv4:ipv4,ipv6:ipv6}}else{this.ipConfig_=undefined}},canChangeIPConfigType_(managedProperties){if(this.disabled||!managedProperties){return false}if(managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kCellular){return false}const ipConfigType=managedProperties.ipAddressConfigType;return!ipConfigType||!this.isNetworkPolicyEnforced(ipConfigType)},setIpv4Defaults_(ipv4){if(!ipv4.gateway){ipv4.gateway="192.168.1.1"}if(!ipv4.ipAddress){ipv4.ipAddress="192.168.1.1"}if(!ipv4.netmask){ipv4.netmask="255.255.255.0"}if(!ipv4.type){ipv4.type="IPv4"}},onAutomaticChange_(){if(!this.automatic_){if(!this.ipConfig_){this.ipConfig_={}}if(this.savedStaticIp_){this.ipConfig_.ipv4=this.savedStaticIp_}if(!this.ipConfig_.ipv4){this.ipConfig_.ipv4={}}this.setIpv4Defaults_(this.ipConfig_.ipv4);this.sendStaticIpConfig_();return}if(this.ipConfig_){this.savedStaticIp_=this.ipConfig_.ipv4}this.fire("ip-change",{field:"ipAddressConfigType",value:"DHCP"})},getIPConfigUIProperties_(ipconfig){if(!ipconfig){return undefined}const ipconfigUI={};ipconfigUI.gateway=ipconfig.gateway;ipconfigUI.ipAddress=ipconfig.ipAddress;ipconfigUI.nameServers=ipconfig.nameServers;ipconfigUI.type=ipconfig.type;ipconfigUI.webProxyAutoDiscoveryUrl=ipconfig.webProxyAutoDiscoveryUrl;if(ipconfig.routingPrefix!==chromeos.networkConfig.mojom.NO_ROUTING_PREFIX){ipconfigUI.netmask=getRoutingPrefixAsNetmask(ipconfig.routingPrefix)}return ipconfigUI},getIPConfigProperties_(ipconfigUI){const ipconfig={};ipconfig.gateway=ipconfigUI.gateway;ipconfig.ipAddress=ipconfigUI.ipAddress;ipconfig.nameServers=ipconfigUI.nameServers;ipconfig.routingPrefix=getRoutingPrefixAsLength(ipconfigUI.netmask);ipconfig.type=ipconfigUI.type;ipconfig.webProxyAutoDiscoveryUrl=ipconfigUI.webProxyAutoDiscoveryUrl;return ipconfig},hasIpConfigFields_(){if(!this.ipConfig_){return false}for(let i=0;i<this.ipConfigFields_.length;++i){const key=this.ipConfigFields_[i];const value=this.get(key,this.ipConfig_);if(value!==undefined&&value!==""){return true}}return false},getIPFieldEditType_(property){return this.isNetworkPolicyEnforced(property)?undefined:"String"},getIPEditFields_(){const staticIpConfig=this.managedProperties&&this.managedProperties.staticIpConfig;if(this.automatic_||!staticIpConfig){return{}}return{"ipv4.ipAddress":this.getIPFieldEditType_(staticIpConfig.ipAddress),"ipv4.netmask":this.getIPFieldEditType_(staticIpConfig.routingPrefix),"ipv4.gateway":this.getIPFieldEditType_(staticIpConfig.gateway)}},onIPChange_(event){if(!this.ipConfig_){return}const field=event.detail.field;const value=event.detail.value;this.set("ipConfig_."+field,value);this.sendStaticIpConfig_()},sendStaticIpConfig_(){this.fire("ip-change",{field:"staticIpConfig",value:this.ipConfig_.ipv4?this.getIPConfigProperties_(this.ipConfig_.ipv4):{}})},computeShouldShowAutoIpConfigToggle_(){if(this.managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kCellular&&this.isUpdatedCellularUiEnabled_){return false}return true},getFieldsClassList_(){let classes="property-box single-column stretch";if(this.shouldShowAutoIpConfigToggle_){classes+=" indented"}return classes}});// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const NameserversType={AUTOMATIC:"automatic",CUSTOM:"custom",GOOGLE:"google"};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="network-shared md-select iron-flex" scope="network-nameservers">a {
  margin-inline-start: 4px;
}

cr-input {
  margin-bottom: 4px;
        
        margin-inline-start: 38px;
}

cr-radio-group {
  --cr-radio-group-item-padding: 12px;
        width: 100%;
}

.nameservers {
  margin-inline-start: 38px;
        padding-bottom: 0;
        padding-top: 0;
}

.nameservers:not([changeable]) {
  opacity: var(--cr-disabled-opacity);
}

#radioGroupDiv {
  align-items: center;
        display: block;
        padding-inline-end: var(--cr-section-padding);
        padding-inline-start: var(--cr-section-padding);
}

cr-policy-indicator {
  margin-inline-end: calc(var(--settings-control-label-spacing) + 34px);
}

</style>

    <div class="property-box">
      <div class="start">
        [[i18n('networkNameservers')]]
      </div>
      <cr-policy-indicator indicator-type="[[getPolicyIndicatorType(
          managedProperties.nameServersConfigType)]]">
      </cr-policy-indicator>
    </div>
    <div id="radioGroupDiv">
      <cr-radio-group id="nameserverType" class="layout vertical" selected="[[nameserversType_]]" on-selected-changed="onTypeChange_" aria-label="[[i18n('networkNameservers')]]" disabled="[[disabled]]">
        <!-- Automatic nameservers -->
        <cr-radio-button name="[[nameserversTypeEnum_.AUTOMATIC]]" disabled="[[!canChangeConfigType_]]">
          [[i18n('networkNameserversAutomatic')]]
        </cr-radio-button>
        <template is="dom-if" if="[[showNameservers_(nameserversType_,
            nameserversTypeEnum_.AUTOMATIC, nameservers_)]]">
          <div class="nameservers" changeable$="[[canChangeConfigType_]]">
            [[getNameserversString_(nameservers_)]]
          </div>
        </template>

        <!-- Google nameservers -->
        <cr-radio-button hidden="" name="[[nameserversTypeEnum_.GOOGLE]]" disabled="[[!canChangeConfigType_]]">
          [[i18n('networkNameserversGoogle')]]
          <template is="dom-if" if="[[i18nExists('networkGoogleNameserversLearnMoreUrl')]]">
            <a href="[[i18n('networkGoogleNameserversLearnMoreUrl')]]" target="_blank" on-click="doNothing_">
              [[i18n('networkNameserversLearnMore')]]
            </a>
          </template>
        </cr-radio-button>
        <template is="dom-if" if="[[showNameservers_(nameserversType_,
            nameserversTypeEnum_.GOOGLE, nameservers_)]]">
          <div class="nameservers" changeable="">
            [[getNameserversString_(nameservers_)]]
          </div>
        </template>

        <!-- Custom nameservers -->
        <cr-radio-button name="[[nameserversTypeEnum_.CUSTOM]]" disabled="[[!canChangeConfigType_]]">
          [[i18n('networkNameserversCustom')]]
        </cr-radio-button>
        <template is="dom-if" if="[[showNameservers_(nameserversType_,
            nameserversTypeEnum_.CUSTOM)]]">
          <div class="property-box single-column two-line">
            <template is="dom-repeat" items="[[nameservers_]]">
              <cr-input id="nameserver[[index]]" value="{{item}}" aria-label="[[getCustomNameServerInputA11yLabel_(index)]]" on-change="onValueChange_" disabled="[[!canEditCustomNameServers_(nameserversType_,
                      managedProperties)]]">
              </cr-input>
            </template>
          </div>
        </template>
      </cr-radio-group>
    </div>

<!--_html_template_end_-->`,is:"network-nameservers",behaviors:[I18nBehavior,CrPolicyNetworkBehaviorMojo],properties:{managedProperties:{type:Object,observer:"managedPropertiesChanged_"},disabled:{type:Boolean,value:false},nameservers_:{type:Array,value(){return[]}},nameserversType_:{type:String,value:NameserversType.AUTOMATIC},nameserversTypeEnum_:{readOnly:true,type:Object,value:NameserversType},googleNameserversText_:{type:String,value(){return this.i18nAdvanced("networkNameserversGoogle",{substitutions:[],tags:["a"]})}},canChangeConfigType_:{type:Boolean,computed:"computeCanChangeConfigType_(managedProperties)"}},GOOGLE_NAMESERVERS:["8.8.4.4","8.8.8.8"],EMPTY_NAMESERVER:"0.0.0.0",MAX_NAMESERVERS:4,savedCustomNameservers_:[],savedNameserversType_:null,getNameserverRadioButtons(){return this.$$("#nameserverType")},nameserversMatch_(nameservers1,nameservers2){const nonEmptySortedNameservers1=this.clearEmptyNameServers_(nameservers1).sort();const nonEmptySortedNameservers2=this.clearEmptyNameServers_(nameservers2).sort();if(nonEmptySortedNameservers1.length!==nonEmptySortedNameservers2.length){return false}for(let i=0;i<nonEmptySortedNameservers1.length;i++){if(nonEmptySortedNameservers1[i]!==nonEmptySortedNameservers2[i]){return false}}return true},isGoogleNameservers_(nameservers){return this.nameserversMatch_(nameservers,this.GOOGLE_NAMESERVERS)},getPolicyEnforcedNameservers_(){const staticIpConfig=this.managedProperties&&this.managedProperties.staticIpConfig;if(!staticIpConfig||!staticIpConfig.nameServers){return null}return this.getEnforcedPolicyValue(staticIpConfig.nameServers)},getPolicyRecommendedNameservers_(){const staticIpConfig=this.managedProperties&&this.managedProperties.staticIpConfig;if(!staticIpConfig||!staticIpConfig.nameServers){return null}return this.getRecommendedPolicyValue(staticIpConfig.nameServers)},managedPropertiesChanged_(newValue,oldValue){if(!this.managedProperties){return}if(!oldValue||newValue.guid!==oldValue.guid){this.savedCustomNameservers_=[];this.savedNameserversType_=null}let nameservers=[];const ipv4=OncMojo.getIPConfigForType(this.managedProperties,"IPv4");if(ipv4&&ipv4.nameServers){nameservers=ipv4.nameServers.slice()}const configType=OncMojo.getActiveValue(this.managedProperties.nameServersConfigType);let type;if(configType==="Static"){if(this.isGoogleNameservers_(nameservers)&&this.savedNameserversType_!==NameserversType.CUSTOM){type=NameserversType.GOOGLE;nameservers=this.GOOGLE_NAMESERVERS}else{type=NameserversType.CUSTOM}}else{type=NameserversType.AUTOMATIC;nameservers=this.clearEmptyNameServers_(nameservers)}this.setNameservers_(type,nameservers,false)},setNameservers_(nameserversType,nameservers,sendNameservers){if(nameserversType===NameserversType.CUSTOM){for(let i=nameservers.length;i<this.MAX_NAMESERVERS;++i){nameservers[i]=this.EMPTY_NAMESERVER}}else{nameservers=this.clearEmptyNameServers_(nameservers)}this.nameservers_=nameservers;this.nameserversType_=nameserversType;if(sendNameservers){this.sendNameServers_()}},computeCanChangeConfigType_(managedProperties){if(!managedProperties){return false}if(this.isNetworkPolicyEnforced(managedProperties.nameServersConfigType)){return false}return true},canEditCustomNameServers_(nameserversType,managedProperties){if(!managedProperties){return false}if(nameserversType!==NameserversType.CUSTOM){return false}if(this.isNetworkPolicyEnforced(managedProperties.nameServersConfigType)){return false}if(managedProperties.staticIpConfig&&managedProperties.staticIpConfig.nameServers&&this.isNetworkPolicyEnforced(managedProperties.staticIpConfig.nameServers)){return false}return true},showNameservers_(nameserversType,type,nameservers){if(nameserversType!==type){return false}return type===NameserversType.CUSTOM||nameservers.length>0},getNameserversString_(nameservers){return nameservers.join(", ")},getCustomNameServers_(){const policyEnforcedNameservers=this.getPolicyEnforcedNameservers_();if(policyEnforcedNameservers!==null){return policyEnforcedNameservers.slice()}if(this.savedCustomNameservers_.length>0){return this.savedCustomNameservers_}const policyRecommendedNameservers=this.getPolicyRecommendedNameservers_();if(policyRecommendedNameservers!==null){return policyRecommendedNameservers.slice()}return this.nameservers_},onTypeChange_(){const type=this.$$("#nameserverType").selected;this.nameserversType_=type;this.savedNameserversType_=type;if(type===NameserversType.CUSTOM){this.setNameservers_(type,this.getCustomNameServers_(),true);return}this.sendNameServers_()},onValueChange_(){this.savedCustomNameservers_=this.nameservers_.slice();this.sendNameServers_()},sendNameServers_(){const type=this.nameserversType_;if(type===NameserversType.CUSTOM){this.fire("nameservers-change",{field:"nameServers",value:this.nameservers_})}else if(type===NameserversType.GOOGLE){this.nameservers_=this.GOOGLE_NAMESERVERS;this.fire("nameservers-change",{field:"nameServers",value:this.GOOGLE_NAMESERVERS})}else{if(!OncMojo.connectionStateIsConnected(this.managedProperties.connectionState)){this.nameservers_=[]}else{this.nameservers_=this.clearEmptyNameServers_(this.nameservers_)}this.fire("nameservers-change",{field:"nameServersConfigType",value:"DHCP"})}},clearEmptyNameServers_(nameservers){return nameservers.filter((nameserver=>!!nameserver&&nameserver!==this.EMPTY_NAMESERVER))},doNothing_(event){event.stopPropagation()},getCustomNameServerInputA11yLabel_(index){return this.i18n("networkNameserversCustomInputA11yLabel",index+1)}});// Copyright 2021 The Chromium Authors. All rights reserved.
const ErrorType={NONE:"none",INCORRECT_PIN:"incorrect-pin",INCORRECT_PUK:"incorrect-puk",MISMATCHED_PIN:"mismatched-pin",INVALID_PIN:"invalid-pin",INVALID_PUK:"invalid-puk"};const DIGITS_ONLY_REGEX=/^[0-9]+$/;const PIN_MIN_LENGTH=4;const PUK_MIN_LENGTH=8;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="sim-lock-dialogs">.dialog-error {
  color: red;
        font-size: 125%;
        font-weight: 500;
        margin-bottom: 10px;
}

#enter-pin-description {
  margin-bottom: 16px;
}

.pinEntrySubtext {
  font-size: var(--cr-form-field-label-font-size);
        font-weight: 400;
        margin-top: -10px;
}

:host([has-error-text_]) .pinEntrySubtext {
  color: red;
}

#changePinOld {
  margin-top: 24px;
}

#unlockPin {
  margin-top: 24px;
}

#puk-warning-container {
  display: flex;
        margin-bottom: 24px;
        margin-top: 20px;
}

#puk-warning-icon {
  --iron-icon-fill-color: var(--google-red-600);
        --iron-icon-height: 24px;
        --iron-icon-width: 24px;
        margin-inline-end: 4px;
}

:host([has-error-text_]) #puk-warning-container {
  color: var(--google-red-600);
}

</style>
    <!-- Enter PIN dialog -->
    <cr-dialog id="enterPinDialog" on-cancel="onCancel_" close-text="[[i18n('close')]]">
      <div slot="title">[[i18n('networkSimEnterPinTitle')]]</div>
      <div slot="body">
        <div id="enter-pin-description" aria-hidden="true">
          [[i18n('networkSimEnterPinDescription')]]
        </div>
        <network-password-input id="enterPin" value="{{pin_}}" on-enter="sendEnterPin_" disabled="[[inProgress_]]" invalid="[[hasErrorText_]]" aria-labeledby="pinEntrySubtext">
        </network-password-input>
        <div class="pinEntrySubtext" aria-live="assertive">
          [[getPinEntrySubtext_(error_, deviceState)]]
        </div>
      </div>
      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onCancel_">
          [[i18n('cancel')]]
        </cr-button>
        <cr-button class="action-button" aria-describedby="enter-pin-description" on-click="sendEnterPin_" disabled="[[!enterPinEnabled_]]">
          [[i18n('networkSimEnter')]]
        </cr-button>
      </div>
    </cr-dialog>

    <!-- Change PIN dialog -->
    <cr-dialog id="changePinDialog" on-cancel="onCancel_" close-text="[[i18n('close')]]">
      <div slot="title">[[i18n('networkSimChangePinTitle')]]</div>
      <div slot="body">
        <network-password-input id="changePinOld" value="{{pin_}}" label="[[i18n('networkSimEnterOldPin')]]" disabled="[[inProgress_]]" invalid="[[isOldPinInvalid_(error_, deviceState)]]" error-message="[[getOldPinErrorMessage_(error_, deviceState)]]" allow-error-message="">
        </network-password-input>
        <network-password-input id="changePinNew1" value="{{pin_new1_}}" label="[[i18n('networkSimEnterNewPin')]]" disabled="[[inProgress_]]" allow-error-message="">
        </network-password-input>
        <network-password-input id="changePinNew2" value="{{pin_new2_}}" label="[[i18n('networkSimReEnterNewPin')]]" on-enter="sendChangePin_" disabled="[[inProgress_]]" invalid="[[isSecondNewPinInvalid_(error_, deviceState)]]" error-message="[[getSecondNewPinErrorMessage_(error_, deviceState)]]" allow-error-message="">
        </network-password-input>
      </div>
      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onCancel_">
          [[i18n('cancel')]]
        </cr-button>
        <cr-button class="action-button" on-click="sendChangePin_" disabled="[[!changePinEnabled_]]">
          [[i18n('networkSimChange')]]
        </cr-button>
      </div>
    </cr-dialog>

    <!-- Unlock PIN dialog -->
    <cr-dialog id="unlockPinDialog" on-cancel="onCancel_" close-text="[[i18n('close')]]">
      <div slot="title">[[i18n('networkSimLockedTitle')]]</div>
      <div slot="body">
        <network-password-input id="unlockPin" value="{{pin_}}" on-enter="sendUnlockPin_" disabled="[[inProgress_]]">
        </network-password-input>
        <div class="pinEntrySubtext" aria-live="assertive">
          [[getPinEntrySubtext_(error_, deviceState)]]
        </div>
      </div>
      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onCancel_">
          [[i18n('cancel')]]
        </cr-button>
        <cr-button class="action-button" on-click="sendUnlockPin_" disabled="[[!enterPinEnabled_]]">
          [[i18n('networkSimUnlock')]]
        </cr-button>
      </div>
    </cr-dialog>

    <!-- Unlock PUK dialog -->
    <cr-dialog id="unlockPukDialog" on-cancel="onCancel_" close-text="[[i18n('close')]]">
      <div slot="title">[[i18n('networkSimLockedTitle')]]</div>
      <div slot="body">
        <div id="puk-subtitle">
          [[i18n('networkSimPukDialogSubtitle')]]
        </div>
        <div id="puk-warning-container">
          <template is="dom-if" if="[[hasErrorText_]]">
            <iron-icon id="puk-warning-icon" icon="cellular-setup:warning">
            </iron-icon>
          </template>
          <div aria-live="assertive">
            [[getPukWarningMessage_(error_, deviceState)]]
          </div>
        </div>
        <network-password-input id="unlockPuk" value="{{puk_}}" label="[[i18n('networkSimEnterPuk')]]" disabled="[[inProgress_]]" invalid="[[isPukInvalid_(error_, deviceState)]]" error-message="[[getPukErrorMessage_(error_, deviceState)]]" allow-error-message="">
        </network-password-input>
        <network-password-input id="unlockPin1" value="{{pin_new1_}}" label="[[i18n('networkSimEnterNewPin')]]" disabled="[[inProgress_]]" allow-error-message="">
        </network-password-input>
        <network-password-input id="unlockPin2" value="{{pin_new2_}}" label="[[i18n('networkSimReEnterNewPin')]]" on-enter="sendUnlockPuk_" disabled="[[inProgress_]]" invalid="[[isSecondNewPinInvalid_(error_, deviceState)]]" error-message="[[getSecondNewPinErrorMessage_(error_, deviceState)]]" allow-error-message="">
        </network-password-input>
      </div>
      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onCancel_">
          [[i18n('cancel')]]
        </cr-button>
        <cr-button class="action-button" on-click="sendUnlockPuk_" disabled="[[!enterPukEnabled_]]" aria-describedby="puk-subtitle">
          [[i18n('networkSimUnlock')]]
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"sim-lock-dialogs",behaviors:[I18nBehavior],properties:{deviceState:{type:Object,value:null,observer:"deviceStateChanged_"},isDialogOpen:{type:Boolean,value:false,notify:true},showChangePin:{type:Boolean,value:false},inProgress_:{type:Boolean,value:false,observer:"updateSubmitButtonEnabled_"},error_:{type:Object,value:ErrorType.NONE,observer:"updateSubmitButtonEnabled_"},hasErrorText_:{type:Boolean,computed:"computeHasErrorText_(error_, deviceState)",reflectToAttribute:true},pendingError_:{type:Object},enterPinEnabled_:Boolean,changePinEnabled_:Boolean,enterPukEnabled_:Boolean,pin_:{type:String,observer:"pinOrPukChange_"},pin_new1_:{type:String,observer:"pinOrPukChange_"},pin_new2_:{type:String,observer:"pinOrPukChange_"},puk_:{type:String,observer:"pinOrPukChange_"}},networkConfig_:null,created(){this.networkConfig_=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote()},attached(){if(!this.deviceState){return}this.updateDialogVisibility_()},deviceStateChanged_(newDeviceState,oldDeviceState){if(!oldDeviceState||!newDeviceState){return}if(this.pendingError_){this.error_=this.pendingError_;this.pendingError_=undefined}this.updateDialogVisibility_()},updateDialogVisibility_(){const simLockStatus=this.deviceState.simLockStatus;if(!simLockStatus){this.isDialogOpen=false;return}if(!simLockStatus.lockEnabled){this.showEnterPinDialog_();this.isDialogOpen=true;return}if(simLockStatus.lockType==="sim-puk"){if(this.$.unlockPukDialog.open){return}this.closeDialogs_(true);this.showUnlockPukDialog_()}else if(simLockStatus.lockType==="sim-pin"){this.showUnlockPinDialog_()}else if(this.showChangePin){this.showChangePinDialog_()}else{this.showEnterPinDialog_()}this.isDialogOpen=true},showEnterPinDialog_(){if(this.$.enterPinDialog.open){return}this.$.enterPin.value="";this.$.enterPinDialog.showModal();requestAnimationFrame((()=>{this.focusDialogInput_()}))},showChangePinDialog_(){if(this.$.changePinDialog.open){return}this.$.changePinOld.value="";this.$.changePinNew1.value="";this.$.changePinNew2.value="";this.$.changePinDialog.showModal();requestAnimationFrame((()=>{this.focusDialogInput_()}))},showUnlockPukDialog_(){if(this.$.unlockPukDialog.open){return}this.error_=ErrorType.NONE;this.$.unlockPuk.value="";this.$.unlockPin1.value="";this.$.unlockPin2.value="";this.$.unlockPukDialog.showModal();requestAnimationFrame((()=>{this.$.unlockPuk.focus()}))},showUnlockPinDialog_(){if(this.$.unlockPinDialog.open){return}this.error_=ErrorType.NONE;this.$.unlockPin.value="";this.$.unlockPinDialog.showModal();requestAnimationFrame((()=>{this.$.unlockPin.focus()}))},pinOrPukChange_(){this.error_=ErrorType.NONE;this.updateSubmitButtonEnabled_()},sendEnterPin_(event){event.stopPropagation();if(!this.enterPinEnabled_){return}const pin=this.$.enterPin.value;if(!this.validatePin_(pin)){return}const isPinRequired=!!this.deviceState&&!!this.deviceState.simLockStatus&&!this.deviceState.simLockStatus.lockEnabled;const simState={currentPinOrPuk:pin,requirePin:isPinRequired};this.setCellularSimState_(simState)},sendChangePin_(event){event.stopPropagation();const newPin=this.$.changePinNew1.value;if(!this.validatePin_(newPin,this.$.changePinNew2.value)){return}const simState={currentPinOrPuk:this.$.changePinOld.value,newPin:newPin,requirePin:true};this.setCellularSimState_(simState)},sendUnlockPuk_(event){event.stopPropagation();const puk=this.$.unlockPuk.value;if(!this.validatePuk_(puk)){return}const pin=this.$.unlockPin1.value;if(!this.validatePin_(pin,this.$.unlockPin2.value)){return}this.unlockCellularSim_(pin,puk)},sendUnlockPin_(event){event.stopPropagation();const pin=this.$.unlockPin.value;if(!this.validatePin_(pin)){return}this.unlockCellularSim_(pin)},setCellularSimState_(cellularSimState){this.setInProgress_();this.networkConfig_.setCellularSimState(cellularSimState).then((response=>{this.inProgress_=false;if(!response.success){this.pendingError_=ErrorType.INCORRECT_PIN;this.focusDialogInput_()}else{this.error_=ErrorType.NONE;this.closeDialogs_()}}));this.fire("user-action-setting-change")},closeDialogs_(skipIsDialogOpenUpdate){if(this.$.enterPinDialog.open){this.$.enterPinDialog.close()}if(this.$.changePinDialog.open){this.$.changePinDialog.close()}if(this.$.unlockPinDialog.open){this.$.unlockPinDialog.close()}if(this.$.unlockPukDialog.open){this.$.unlockPukDialog.close()}this.isDialogOpen=skipIsDialogOpenUpdate?skipIsDialogOpenUpdate:false},closeDialogsForTest(){this.closeDialogs_()},onCancel_(event){event.stopPropagation();this.closeDialogs_()},setInProgress_(){this.error_=ErrorType.NONE;this.inProgress_=true},updateSubmitButtonEnabled_(){const hasError=this.error_!==ErrorType.NONE;this.enterPinEnabled_=!this.inProgress_&&!!this.pin_&&!hasError;this.changePinEnabled_=!this.inProgress_&&!!this.pin_&&!!this.pin_new1_&&!!this.pin_new2_&&!hasError;this.enterPukEnabled_=!this.inProgress_&&!!this.puk_&&!!this.pin_new1_&&!!this.pin_new2_&&!hasError},unlockCellularSim_(pin,opt_puk){this.setInProgress_();const cellularSimState={currentPinOrPuk:opt_puk||pin,requirePin:false};if(opt_puk){cellularSimState.newPin=pin}this.networkConfig_.setCellularSimState(cellularSimState).then((response=>{this.inProgress_=false;if(!response.success){this.pendingError_=opt_puk?ErrorType.INCORRECT_PUK:ErrorType.INCORRECT_PIN;this.focusDialogInput_()}else{this.error_=ErrorType.NONE;this.closeDialogs_()}}))},focusDialogInput_(){if(this.$.enterPinDialog.open){this.$.enterPin.focus()}else if(this.$.changePinDialog.open){if(this.isSecondNewPinInvalid_()){this.$.changePinNew2.focus()}else{this.$.changePinOld.focus()}}else if(this.$.unlockPinDialog.open){this.$.unlockPin.focus()}else if(this.$.unlockPukDialog.open){this.$.unlockPuk.focus()}},validatePin_(pin1,opt_pin2){if(!pin1.length){return false}if(pin1.length<PIN_MIN_LENGTH||!DIGITS_ONLY_REGEX.test(pin1)){this.error_=ErrorType.INVALID_PIN;this.focusDialogInput_();return false}if(opt_pin2!==undefined&&pin1!==opt_pin2){this.error_=ErrorType.MISMATCHED_PIN;this.focusDialogInput_();return false}return true},validatePuk_(puk){if(puk.length<PUK_MIN_LENGTH||!DIGITS_ONLY_REGEX.test(puk)){this.error_=ErrorType.INVALID_PUK;return false}return true},getErrorMsg_(){if(this.error_===ErrorType.NONE){return""}else if(this.error_===ErrorType.MISMATCHED_PIN){return this.i18n("networkSimErrorPinMismatch")}let errorStringId="";switch(this.error_){case ErrorType.INCORRECT_PIN:errorStringId="networkSimErrorIncorrectPin";break;case ErrorType.INCORRECT_PUK:errorStringId="networkSimErrorIncorrectPuk";break;case ErrorType.INVALID_PIN:errorStringId="networkSimErrorInvalidPin";break;case ErrorType.INVALID_PUK:errorStringId="networkSimErrorInvalidPuk";break;default:assertNotReached()}const retriesLeft=this.getNumRetriesLeft_();if(retriesLeft!==1&&(this.error_===ErrorType.INCORRECT_PIN||this.error_===ErrorType.INVALID_PIN)){errorStringId+="Plural"}return this.i18n(errorStringId,retriesLeft)},getNumRetriesLeft_(){if(!this.deviceState||!this.deviceState.simLockStatus){return 0}return this.deviceState.simLockStatus.retriesLeft},computeHasErrorText_(){return!!this.getErrorMsg_()},getPinEntrySubtext_(){const errorMessage=this.getErrorMsg_();if(errorMessage){return errorMessage}return this.i18n("networkSimEnterPinSubtext")},isOldPinInvalid_(){return this.error_===ErrorType.INCORRECT_PIN||this.error_===ErrorType.INVALID_PIN},getOldPinErrorMessage_(){if(this.isOldPinInvalid_()){return this.getErrorMsg_()}return""},isSecondNewPinInvalid_(){return this.error_===ErrorType.MISMATCHED_PIN},getSecondNewPinErrorMessage_(){if(this.isSecondNewPinInvalid_()){return this.getErrorMsg_()}return""},isPukInvalid_(){return this.error_===ErrorType.INCORRECT_PUK||this.error_===ErrorType.INVALID_PUK},getPukErrorMessage_(){if(this.isPukInvalid_()){return this.getErrorMsg_()}return""},getPukWarningMessage_(){if(this.isPukInvalid_()){const retriesLeft=this.getNumRetriesLeft_();if(retriesLeft===1){return this.i18n("networkSimPukDialogWarningWithFailure",retriesLeft)}return this.i18n("networkSimPukDialogWarningWithFailures",retriesLeft)}return this.i18n("networkSimPukDialogWarningNoFailures")}});// Copyright 2015 The Chromium Authors. All rights reserved.
const TOGGLE_DEBOUNCE_MS=500;const State={SIM_MISSING:0,SIM_LOCKED:1,SIM_UNLOCKED:2};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="network-shared iron-flex" scope="network-siminfo">:host {
  cursor: default
}

iron-icon {
  margin-inline-end: 10px;
}

cr-toggle {
  margin-inline-start: var(--cr-button-edge-spacing);
}

.error {
  color: red;
        font-weight: 500;
}

.separator {
  border-inline-start: var(--cr-separator-line);
        flex-shrink: 0;
        height: calc(var(--cr-section-min-height) - 9px);
        margin-inline-end: var(--cr-section-padding);
        margin-inline-start: var(--cr-section-padding);
}

.pin-required-subtext {
  color: var(--google-grey-700);
}

</style>

    <!-- SIM missing UI -->
    <template is="dom-if" if="[[eq_(State.SIM_MISSING, state_)]]" restamp="">
      <div id="simMissing" class="property-box two-line">
        <div class="start layout horizontal center">
          <iron-icon id="simMissingIcon" icon="cr:sim-card-alert"></iron-icon>
          <div class="error">[[i18n('networkSimCardMissing')]]</div>
        </div>
      </div>
    </template>

    <!-- SIM locked -->
    <template is="dom-if" if="[[eq_(State.SIM_LOCKED, state_)]]" restamp="">
      <div id="simLocked" class="property-box two-line">
        <div class="start layout horizontal center" hidden="[[isUpdatedCellularUiEnabled_]]">
          <iron-icon icon="cr:sim-lock"></iron-icon>
          <div class="error">[[i18n('networkSimCardLocked')]]</div>
        </div>
        <div class="separator" hidden="[[isUpdatedCellularUiEnabled_]]"></div>
        <cr-button id="unlockPinButton" on-click="onUnlockPinTap_" disabled="[[disabled]]">
          [[i18n('networkSimUnlock')]]
        </cr-button>
      </div>
    </template>

    <!-- SIM unlocked -->
    <template is="dom-if" if="[[eq_(State.SIM_UNLOCKED, state_)]]" restamp="">
      <div class="property-box two-line">
        <div class="flex layout vertical" aria-hidden="true">
          <div id="pinRequiredLabel">
            [[i18n('networkSimLockEnable')]]
          </div>
          <div id="pinRequiredSublabel" class="pin-required-subtext">
            [[i18n('networkSimLockEnableSublabel')]]
          </div>
        </div>
        <cr-button id="changePinButton" on-click="onChangePinTap_" hidden$="[[!showChangePinButton_(deviceState, isActiveSim_)]]" disabled="[[disabled]]">
          [[i18n('networkSimChangePin')]]
        </cr-button>
        <template is="dom-if" if="[[!isActiveSim_]]" restamp="">
          <iron-icon id="help-icon" tabindex="0" icon="cr:help-outline" aria-labelledby="pinRequiredLabel pinRequiredSublabel inActiveSimLockTooltip">
          </iron-icon>
          <paper-tooltip id="inActiveSimLockTooltip" for="help-icon" position="bottom" aria-hidden="true" fit-to-visible-bounds="">
              [[i18n('networkSimLockedTooltip')]]
          </paper-tooltip>
          <div class="separator"></div>
        </template>
        <cr-toggle id="simLockButton" disabled="[[isSimLockButtonDisabled_(disabled, isActiveSim_)]]" on-change="onSimLockEnabledChange_" checked="{{lockEnabled_}}" aria-labelledby="pinRequiredLabel pinRequiredSublabel">
        </cr-toggle>
      </div>
    </template>

    <template is="dom-if" if="[[isDialogOpen_]]" restamp="">
      <sim-lock-dialogs show-change-pin="[[showChangePin_]]" is-dialog-open="{{isDialogOpen_}}" device-state="[[deviceState]]">
      </sim-lock-dialogs>
    </template>
<!--_html_template_end_-->`,is:"network-siminfo",behaviors:[I18nBehavior],properties:{deviceState:{type:Object,value:null,observer:"deviceStateChanged_"},networkState:{type:Object,value:null},disabled:{type:Boolean,value:false},State:{type:Object,value:State},lockEnabled_:{type:Boolean,value:false},isDialogOpen_:{type:Boolean,value:false,observer:"onDialogOpenChanged_"},showChangePin_:{type:Boolean,value:false},isActiveSim_:{type:Boolean,value:false,computed:"computeIsActiveSim_(networkState, deviceState)"},isUpdatedCellularUiEnabled_:{type:Boolean,value(){return loadTimeData.getBoolean("updatedCellularActivationUi")}},state_:{type:Number,value:State.SIM_UNLOCKED,computed:"computeState_(networkState, deviceState, deviceState.*, "+"isUpdatedCellularUiEnabled_, isActiveSim_)"}},setLockEnabled_:undefined,getSimLockToggle(){return this.$$("#simLockButton")},getUnlockButton(){return this.$$("#unlockPinButton")},onDialogOpenChanged_(){if(this.isDialogOpen_){return}this.delayUpdateLockEnabled_();this.updateFocus_()},updateFocus_(){const state=this.computeState_();switch(state){case State.SIM_LOCKED:if(this.$$("#unlockPinButton")){this.$$("#unlockPinButton").focus()}break;case State.SIM_UNLOCKED:if(this.$$("#simLockButton")){this.$$("#simLockButton").focus()}break}},deviceStateChanged_(){if(!this.deviceState){return}const simLockStatus=this.deviceState.simLockStatus;if(!simLockStatus){return}const lockEnabled=this.isActiveSim_&&simLockStatus.lockEnabled;if(lockEnabled!==this.lockEnabled_){this.setLockEnabled_=lockEnabled;this.updateLockEnabled_()}else{this.setLockEnabled_=undefined}},updateLockEnabled_(){if(this.setLockEnabled_===undefined||this.isDialogOpen_){return}this.lockEnabled_=this.setLockEnabled_;this.setLockEnabled_=undefined},delayUpdateLockEnabled_(){setTimeout((()=>{this.updateLockEnabled_()}),TOGGLE_DEBOUNCE_MS)},onSimLockEnabledChange_(event){if(!this.deviceState){return}this.lockEnabled_=!this.lockEnabled_;this.showSimLockDialog_(false)},onChangePinTap_(event){event.stopPropagation();if(!this.deviceState){return}this.showSimLockDialog_(true)},onUnlockPinTap_(event){event.stopPropagation();this.showSimLockDialog_(true)},showSimLockDialog_(showChangePin){this.showChangePin_=showChangePin;this.isDialogOpen_=true},computeIsActiveSim_(){const mojom=chromeos.networkConfig.mojom;if(!this.networkState||this.networkState.type!==mojom.NetworkType.kCellular){return false}const iccid=this.networkState.typeState.cellular.iccid;if(!iccid||!this.deviceState||!this.deviceState.simInfos){return false}const isActiveSim=this.deviceState.simInfos.find((simInfo=>simInfo.iccid===iccid&&simInfo.isPrimary));return!!isActiveSim},showChangePinButton_(){if(!this.deviceState||!this.deviceState.simLockStatus){return false}return this.deviceState.simLockStatus.lockEnabled&&this.isActiveSim_},isSimLockButtonDisabled_(){return this.disabled||!this.isActiveSim_},computeState_(){const simLockStatus=this.deviceState&&this.deviceState.simLockStatus;if(!this.isUpdatedCellularUiEnabled_&&!simLockStatus){return State.SIM_MISSING}if(this.isActiveSim_&&simLockStatus&&!!simLockStatus.lockType){return State.SIM_LOCKED}return State.SIM_UNLOCKED},eq_(state1,state2){return state1===state2}});// Copyright 2016 The Chromium Authors. All rights reserved.
let StoredAccount;let SyncStatus;const StatusAction={NO_ACTION:"noAction",REAUTHENTICATE:"reauthenticate",SIGNOUT_AND_SIGNIN:"signOutAndSignIn",UPGRADE_CLIENT:"upgradeClient",ENTER_PASSPHRASE:"enterPassphrase",RETRIEVE_TRUSTED_VAULT_KEYS:"retrieveTrustedVaultKeys",CONFIRM_SYNC_SETTINGS:"confirmSyncSettings"};const PageStatus={SPINNER:"spinner",CONFIGURE:"configure",DONE:"done",PASSPHRASE_FAILED:"passphraseFailed"};const PROMO_IMPRESSION_COUNT_KEY="signin-promo-count";class SyncBrowserProxy{getPromoImpressionCount(){}incrementPromoImpressionCount(){}attemptUserExit(){}turnOnSync(){}turnOffSync(){}startKeyRetrieval(){}getSyncStatus(){}getStoredAccounts(){}didNavigateToSyncPage(){}didNavigateAwayFromSyncPage(didAbort){}setSyncDatatypes(syncPrefs){}setEncryptionPassphrase(passphrase){}setDecryptionPassphrase(passphrase){}startSyncingWithEmail(email,isDefaultPromoAccount){}openActivityControlsUrl(){}sendSyncPrefsChanged(){}sendOfferTrustedVaultOptInChanged(){}}class SyncBrowserProxyImpl{getPromoImpressionCount(){return parseInt(window.localStorage.getItem(PROMO_IMPRESSION_COUNT_KEY),10)||0}incrementPromoImpressionCount(){window.localStorage.setItem(PROMO_IMPRESSION_COUNT_KEY,(this.getPromoImpressionCount()+1).toString())}attemptUserExit(){return chrome.send("AttemptUserExit")}turnOnSync(){return chrome.send("TurnOnSync")}turnOffSync(){return chrome.send("TurnOffSync")}startKeyRetrieval(){chrome.send("SyncStartKeyRetrieval")}getSyncStatus(){return sendWithPromise("SyncSetupGetSyncStatus")}getStoredAccounts(){return sendWithPromise("SyncSetupGetStoredAccounts")}didNavigateToSyncPage(){chrome.send("SyncSetupShowSetupUI")}didNavigateAwayFromSyncPage(didAbort){chrome.send("SyncSetupDidClosePage",[didAbort])}setSyncDatatypes(syncPrefs){return sendWithPromise("SyncSetupSetDatatypes",JSON.stringify(syncPrefs))}setEncryptionPassphrase(passphrase){return sendWithPromise("SyncSetupSetEncryptionPassphrase",passphrase)}setDecryptionPassphrase(passphrase){return sendWithPromise("SyncSetupSetDecryptionPassphrase",passphrase)}startSyncingWithEmail(email,isDefaultPromoAccount){chrome.send("SyncSetupStartSyncingWithEmail",[email,isDefaultPromoAccount])}openActivityControlsUrl(){chrome.metricsPrivate.recordUserAction("Signin_AccountSettings_GoogleActivityControlsClicked")}sendSyncPrefsChanged(){chrome.send("SyncPrefsDispatch")}sendOfferTrustedVaultOptInChanged(){chrome.send("SyncOfferTrustedVaultOptInDispatch")}}addSingletonGetter(SyncBrowserProxyImpl);// Copyright 2019 The Chromium Authors. All rights reserved.
class OsSyncBrowserProxyImpl{didNavigateToOsSyncPage(){chrome.send("DidNavigateToOsSyncPage")}didNavigateAwayFromOsSyncPage(){chrome.send("DidNavigateAwayFromOsSyncPage")}sendOsSyncPrefsChanged(){chrome.send("OsSyncPrefsDispatch")}setOsSyncFeatureEnabled(enabled){return chrome.send("SetOsSyncFeatureEnabled",[enabled])}setOsSyncDatatypes(osSyncPrefs){return chrome.send("SetOsSyncDatatypes",[osSyncPrefs])}}addSingletonGetter(OsSyncBrowserProxyImpl);// Copyright 2017 The Chromium Authors. All rights reserved.
class InternetPageBrowserProxy{showCarrierAccountDetail(guid){}showCellularSetupUI(guid){}configureThirdPartyVpn(guid){}addThirdPartyVpn(appId){}requestGmsCoreNotificationsDisabledDeviceNames(){}setGmsCoreNotificationsDisabledDeviceNamesCallback(callback){}}class InternetPageBrowserProxyImpl{showCarrierAccountDetail(guid){chrome.send("showCarrierAccountDetail",[guid])}showCellularSetupUI(guid){chrome.send("showCellularSetupUI",[guid])}configureThirdPartyVpn(guid){chrome.send("configureThirdPartyVpn",[guid])}addThirdPartyVpn(appId){chrome.send("addThirdPartyVpn",[appId])}requestGmsCoreNotificationsDisabledDeviceNames(){chrome.send("requestGmsCoreNotificationsDisabledDeviceNames")}setGmsCoreNotificationsDisabledDeviceNamesCallback(callback){addWebUIListener("sendGmsCoreNotificationsDisabledDeviceNames",callback)}}addSingletonGetter(InternetPageBrowserProxyImpl);// Copyright 2015 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="network-shared cr-hidden-style iron-flex" scope="network-proxy-exclusions">#container {
  align-self: stretch;
        border: 1px solid lightgrey;
        height: 100px;
        margin-top: 10px;
        overflow-y: auto;
        padding: 5px;
}

cr-icon-button {
  --cr-icon-button-margin-end: 0;
}

</style>
    <div id="container">
      <template is="dom-repeat" items="[[exclusions]]">
        <div class="layout horizontal center">
          <div class="flex">[[item]]</div>
          <cr-icon-button class="icon-clear" hidden="[[!editable]]" title="[[i18n('networkProxyExceptionRemoveA11yLabel', item)]]" on-click="onRemoveTap_">
          </cr-icon-button>
        </div>
      </template>
    </div>
<!--_html_template_end_-->`,is:"network-proxy-exclusions",behaviors:[I18nBehavior],properties:{editable:{type:Boolean,value:false},exclusions:{type:Array,value(){return[]},notify:true}},onRemoveTap_(event){const index=event.model.index;this.splice("exclusions",index,1);this.fire("proxy-exclusions-change")}});// Copyright 2015 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="network-shared" scope="network-proxy-input">cr-input {
  margin: 0 var(--cr-button-edge-spacing);
}

#container {
  align-items: center;
        display: flex;
        flex: 0 1 auto;
        flex-direction: row;
}

#label {
  flex: 1;
}

#host {
  width: 200px;
}

#port {
  width: 50px;
}

</style>
    <div id="container">
      <div id="label">[[label]]</div>
      <cr-input id="host" readonly="[[!editable]]" aria-label="[[i18n('networkProxyHostInputA11yLabel', label)]]" value="{{value.host.activeValue}}" on-change="onValueChange_">
      </cr-input>
      <div>[[i18n('networkProxyPort')]]</div>
      <cr-input id="port" readonly="[[!editable]]" aria-label="[[i18n('networkProxyPortInputA11yLabel', label)]]" value="{{value.port.activeValue}}" on-change="onValueChange_">
      </cr-input>
    </div>
<!--_html_template_end_-->`,is:"network-proxy-input",behaviors:[I18nBehavior],properties:{editable:{type:Boolean,value:false},label:{type:String,value:"Proxy"},value:{type:Object,value(){return{host:OncMojo.createManagedString(""),port:OncMojo.createManagedInt(80)}},notify:true}},focus(){this.$$("cr-input").focus()},onValueChange_(){let port=parseInt(this.value.port.activeValue,10);if(isNaN(port)){port=80}this.value.port.activeValue=port;this.fire("proxy-input-change",this.value)}});// Copyright 2017 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="network-shared cr-hidden-style iron-flex iron-flex-alignment md-select" scope="network-proxy">network-proxy-input {
  margin-bottom: 10px;
}

network-proxy-exclusions {
  margin: 10px 0;
}

#addException {
  margin-top: 10px;
}

#manualProxy {
  padding-inline-start: var(--cr-section-padding);
}

#proxyType {
  width: 320px;
}

</style>

    <!-- Proxy type dropdown -->
    <div class="property-box">
      <div class="start">[[i18n('networkProxyConnectionType')]]</div>
      <select id="proxyType" class="md-select" on-change="onTypeChange_" value="[[proxy_.type.activeValue]]" disabled="[[!isEditable_('type', managedProperties, editable,
              useSharedProxies)]]" aria-label="[[i18n('networkProxyConnectionType')]]">
        <template is="dom-repeat" items="[[proxyTypes_]]">
          <option value="[[item]]">[[getProxyTypeDesc_(item)]]</option>
        </template>
      </select>
    </div>

    <!-- Autoconfiguration (PAC) -->
    <div class="property-box indented" hidden$="[[!matches_(proxy_.type.activeValue, 'PAC')]]">
      <cr-input id="pacInput" class="flex" label="[[i18n('networkProxyAutoConfig')]]" value="{{proxy_.pac.activeValue}}" on-change="onPACChange_" disabled="[[!isEditable_('pac', managedProperties, editable,
              useSharedProxies)]]">
      </cr-input>
    </div>

    <!-- Web Proxy Auto Discovery (WPAD) -->
    <div class="property-box indented" hidden$="[[!matches_(proxy_.type.activeValue, 'WPAD')]]">
      <div>[[i18n('networkProxyWpad')]]</div>
      <div class="middle">[[wpad_]]</div>
    </div>

    <!-- Manual -->
    <div class="property-box indented" hidden$="[[!matches_(proxy_.type.activeValue, 'Manual')]]">
      <div id="networkProxyToggleLabel" class="flex">
        [[i18n('networkProxyUseSame')]]
      </div>
      <cr-toggle checked="{{useSameProxy_}}" disabled="[[!isEditable_('type', managedProperties, editable,
              useSharedProxies)]]" aria-labelledby="networkProxyToggleLabel">
      </cr-toggle>
    </div>

    <div id="manualProxy" class="layout vertical start" hidden$="[[!matches_(proxy_.type.activeValue, 'Manual')]]">
      <div hidden$="[[!useSameProxy_]]" class="layout vertical">
        <network-proxy-input id="sameProxyInput" on-proxy-input-change="onProxyInputChange_" editable="[[isEditable_('manual.httpProxy.host', managedProperties,
                editable, useSharedProxies)]]" value="{{proxy_.manual.httpProxy}}" label="[[i18n('networkProxy')]]">
        </network-proxy-input>
      </div>
      <div hidden$="[[useSameProxy_]]" class="layout vertical">
        <network-proxy-input id="httpProxyInput" on-proxy-input-change="onProxyInputChange_" editable="[[isEditable_('manual.httpProxy.host', managedProperties,
                editable, useSharedProxies)]]" value="{{proxy_.manual.httpProxy}}" label="[[i18n('networkProxyHttp')]]">
        </network-proxy-input>
        <network-proxy-input id="secureHttpProxyInput" on-proxy-input-change="onProxyInputChange_" editable="[[isEditable_('manual.secureHttpProxy.host',
                managedProperties, editable, useSharedProxies)]]" value="{{proxy_.manual.secureHttpProxy}}" label="[[i18n('networkProxyShttp')]]">
        </network-proxy-input>
        <network-proxy-input id="socksProxyInput" on-proxy-input-change="onProxyInputChange_" editable="[[isEditable_('manual.socks.host', managedProperties,
                editable, useSharedProxies)]]" value="{{proxy_.manual.socks}}" label="[[i18n('networkProxySocks')]]">
        </network-proxy-input>
      </div>

      <div hidden="[[!isEditable_('type', managedProperties, editable,
          useSharedProxies)]]">
        <div>[[i18n('networkProxyExceptionList')]]</div>
        <network-proxy-exclusions on-proxy-exclusions-change="onProxyExclusionsChange_" exclusions="{{proxy_.excludeDomains.activeValue}}" editable="[[isEditable_('excludeDomains', managedProperties,
                editable, useSharedProxies)]]">
        </network-proxy-exclusions>
        <div id="addException" class="layout horizontal center">
          <cr-input id="proxyExclusion" class="flex" value="{{proxyExclusionInputValue_}}" aria-label="[[i18n('networkProxyExceptionInputA11yLabel')]]" on-keypress="onAddProxyExclusionKeypress_">
            <cr-button id="proxyExclusionButton" on-click="onAddProxyExclusionTap_" slot="suffix" disabled="[[shouldProxyExclusionButtonBeDisabled_(
                    proxyExclusionInputValue_)]]">
              [[i18n('networkProxyAddException')]]
            </cr-button>
          </cr-input>
        </div>
      </div>

      <cr-button id="saveManualProxy" on-click="onSaveProxyTap_" class="action-button" disabled="[[!isSaveManualProxyEnabled_(managedProperties,
              proxyIsUserModified_, proxy_.*)]]">
        [[i18n('save')]]
      </cr-button>
    </div>

<!--_html_template_end_-->`,is:"network-proxy",behaviors:[CrPolicyNetworkBehaviorMojo,I18nBehavior],properties:{managedProperties:{type:Object,observer:"managedPropertiesChanged_"},editable:{type:Boolean,value:false},useSharedProxies:{type:Boolean,value:false,observer:"updateProxy_"},proxy_:{type:Object,value(){return this.createDefaultProxySettings_()}},wpad_:{type:String,value:""},useSameProxy_:{type:Boolean,value:false,observer:"useSameProxyChanged_"},proxyTypes_:{type:Array,value:["Direct","PAC","WPAD","Manual"],readOnly:true},proxyExclusionInputValue_:{type:String,value:""}},savedManual_:undefined,savedExcludeDomains_:undefined,proxyIsUserModified_:false,attached(){this.reset()},reset(){this.proxyIsUserModified_=false;this.updateProxy_()},managedPropertiesChanged_(newValue,oldValue){if((newValue&&newValue.guid)!==(oldValue&&oldValue.guid)){this.savedManual_=undefined;this.savedExcludeDomains_=undefined}if(this.proxyIsUserModified_||this.isInputEditInProgress_()){return}this.updateProxy_()},isInputEditInProgress_:function(){if(!this.editable){return false}const activeElement=this.shadowRoot.activeElement;if(!activeElement){return false}let property=null;switch(activeElement.id){case"sameProxyInput":case"httpProxyInput":property="manual.httpProxy.host";break;case"secureHttpProxyInput":property="manual.secureHttpProxy.host";break;case"socksProxyInput":property="manual.socks.host";break;case"pacInput":property="pac";break}if(!property){return false}return this.isEditable_(property)},proxyMatches_(a,b){return!!a&&!!b&&a.host.activeValue===b.host.activeValue&&a.port.activeValue===b.port.activeValue},createDefaultProxyLocation_(port){return{host:OncMojo.createManagedString(""),port:OncMojo.createManagedInt(port)}},validateProxy_(inputProxy){const proxy=Object.assign({},inputProxy);const type=proxy.type.activeValue;if(type==="PAC"){if(!proxy.pac){proxy.pac=OncMojo.createManagedString("")}}else if(type==="Manual"){proxy.manual=proxy.manual||this.savedManual_||{};if(!proxy.manual.httpProxy){proxy.manual.httpProxy=this.createDefaultProxyLocation_(80)}if(!proxy.manual.secureHttpProxy){proxy.manual.secureHttpProxy=this.createDefaultProxyLocation_(80)}if(!proxy.manual.socks){proxy.manual.socks=this.createDefaultProxyLocation_(1080)}proxy.excludeDomains=proxy.excludeDomains||this.savedExcludeDomains_||{activeValue:[],policySource:chromeos.networkConfig.mojom.PolicySource.kNone}}return proxy},updateProxy_(){if(!this.managedProperties){return}let proxySettings=this.managedProperties.proxySettings;if(this.isShared_()&&proxySettings&&!this.isControlled(proxySettings.type)&&!this.useSharedProxies){proxySettings=null}const proxy=proxySettings?this.validateProxy_(proxySettings):this.createDefaultProxySettings_();if(proxy.type.activeValue==="WPAD"){const ipv4=this.managedProperties?OncMojo.getIPConfigForType(this.managedProperties,"IPv4"):null;this.wpad_=ipv4&&ipv4.webProxyAutoDiscoveryUrl||this.i18n("networkProxyWpadNone")}this.async((()=>this.setProxy_(proxy)))},setProxy_(proxy){this.proxy_=proxy;if(proxy.manual){const manual=proxy.manual;const httpProxy=manual.httpProxy;if(this.proxyMatches_(httpProxy,manual.secureHttpProxy)&&this.proxyMatches_(httpProxy,manual.socks)){this.useSameProxy_=true}else if(!manual.secureHttpProxy.host.activeValue&&!manual.socks.host.activeValue){this.useSameProxy_=true}}this.proxyIsUserModified_=false},useSameProxyChanged_(){this.proxyIsUserModified_=true},createDefaultProxySettings_(){return{type:OncMojo.createManagedString("Direct")}},getProxyLocation_(location){if(!location){return undefined}return{host:location.host.activeValue,port:location.port.activeValue}},sendProxyChange_(){const mojom=chromeos.networkConfig.mojom;const proxyType=OncMojo.getActiveString(this.proxy_.type);if(!proxyType||proxyType==="PAC"&&!this.proxy_.pac){return}const proxy={type:proxyType,excludeDomains:OncMojo.getActiveValue(this.proxy_.excludeDomains)};if(proxyType==="Manual"){let manual={};if(this.proxy_.manual){this.savedManual_=Object.assign({},this.proxy_.manual);manual={httpProxy:this.getProxyLocation_(this.proxy_.manual.httpProxy),secureHttpProxy:this.getProxyLocation_(this.proxy_.manual.secureHttpProxy),socks:this.getProxyLocation_(this.proxy_.manual.socks)}}if(this.proxy_.excludeDomains){this.savedExcludeDomains_=Object.assign({},this.proxy_.excludeDomains)}const defaultProxy=manual.httpProxy||{host:"",port:80};if(this.useSameProxy_){manual.secureHttpProxy=Object.assign({},defaultProxy);manual.socks=Object.assign({},defaultProxy)}else{if(manual.httpProxy&&!manual.httpProxy.host){delete manual.httpProxy}if(manual.secureHttpProxy&&!manual.secureHttpProxy.host){delete manual.secureHttpProxy}if(manual.socks&&!manual.socks.host){delete manual.socks}}proxy.manual=manual}else if(proxyType==="PAC"){proxy.pac=OncMojo.getActiveString(this.proxy_.pac)}this.fire("proxy-change",proxy);this.proxyIsUserModified_=false},onTypeChange_(event){if(!this.proxy_||!this.proxy_.type){return}const target=event.target;const type=target.value;this.proxy_.type.activeValue=type;this.set("proxy_",this.validateProxy_(this.proxy_));let proxyTypeChangeIsReady;let elementToFocus;switch(type){case"Direct":case"WPAD":proxyTypeChangeIsReady=true;break;case"PAC":elementToFocus=this.$$("#pacInput");proxyTypeChangeIsReady=!!OncMojo.getActiveString(this.proxy_.pac);break;case"Manual":proxyTypeChangeIsReady=false;elementToFocus=this.$$("#manualProxy network-proxy-input");break}if(proxyTypeChangeIsReady){this.sendProxyChange_()}else{this.proxyIsUserModified_=true}if(elementToFocus){this.async((()=>{elementToFocus.focus()}))}},onPACChange_(){this.sendProxyChange_()},onProxyInputChange_(){this.proxyIsUserModified_=true},onAddProxyExclusionTap_(){assert(this.proxyExclusionInputValue_);this.push("proxy_.excludeDomains.activeValue",this.proxyExclusionInputValue_);this.proxyExclusionInputValue_="";this.proxyIsUserModified_=true},onAddProxyExclusionKeypress_(event){if(event.key!=="Enter"){return}event.stopPropagation();this.onAddProxyExclusionTap_()},shouldProxyExclusionButtonBeDisabled_(proxyExclusionInputValue){return!proxyExclusionInputValue},onProxyExclusionsChange_(event){this.proxyIsUserModified_=true},onSaveProxyTap_(){this.sendProxyChange_()},getProxyTypeDesc_(proxyType){if(proxyType==="Manual"){return this.i18n("networkProxyTypeManual")}if(proxyType==="PAC"){return this.i18n("networkProxyTypePac")}if(proxyType==="WPAD"){return this.i18n("networkProxyTypeWpad")}return this.i18n("networkProxyTypeDirect")},isEditable_(propertyName){if(!this.editable||this.isShared_()&&!this.useSharedProxies){return false}const property=this.get("proxySettings."+propertyName,this.managedProperties);if(!property){return true}return this.isPropertyEditable_(property)},isPropertyEditable_(property){return!!property&&!this.isNetworkPolicyEnforced(property)&&!this.isExtensionControlled(property)},isShared_(){if(!this.managedProperties){return false}const source=this.managedProperties.source;return source===chromeos.networkConfig.mojom.OncSource.kDevice||source===chromeos.networkConfig.mojom.OncSource.kDevicePolicy},isSaveManualProxyEnabled_(){if(!this.proxyIsUserModified_){return false}const manual=this.proxy_.manual;const httpHost=this.get("httpProxy.host.activeValue",manual);if(this.useSameProxy_){return!!httpHost}return!!httpHost||!!this.get("secureHttpProxy.host.activeValue",manual)||!!this.get("socks.host.activeValue",manual)},matches_(property,value){return property===value}});// Copyright 2016 The Chromium Authors. All rights reserved.
class ExtensionControlBrowserProxyImpl{disableExtension(extensionId){chrome.send("disableExtension",[extensionId])}manageExtension(extensionId){window.open("chrome://extensions?id="+extensionId)}}addSingletonGetter(ExtensionControlBrowserProxyImpl);// Copyright 2016 The Chromium Authors. All rights reserved.
Polymer({is:"extension-controlled-indicator",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="extension-controlled-indicator">:host {
  align-items: center;
    display: flex;
    margin-inline-start: 36px;
    min-height: var(--settings-row-min-height);
}

img {
  margin-inline-end: 16px;
}

:host > span {
  flex: 1;
    margin-inline-end: 8px;
}

</style>
<img role="presentation" src="chrome://extension-icon/[[extensionId]]/20/1">
<span inner-h-t-m-l="[[getLabel_(extensionId, extensionName)]]"></span>
<template is="dom-if" if="[[extensionCanBeDisabled]]" restamp="">
  <cr-button on-click="onDisableTap_">Disable</cr-button>
</template>
<!--_html_template_end_-->`,behaviors:[I18nBehavior],properties:{extensionCanBeDisabled:Boolean,extensionId:String,extensionName:String},getLabel_(extensionId,extensionName){if(this.extensionId===undefined||this.extensionName===undefined){return""}const manageUrl="chrome://extensions/?id="+this.extensionId;return this.i18nAdvanced("controlledByExtension",{substitutions:['<a href="'+manageUrl+'" target="_blank">'+this.extensionName+"</a>"]})},onDisableTap_(){assert(this.extensionCanBeDisabled);ExtensionControlBrowserProxyImpl.getInstance().disableExtension(assert(this.extensionId));this.fire("extension-disable")}});// Copyright 2017 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="internet-shared cr-hidden-style iron-flex
        iron-flex-alignment" scope="network-proxy-section">cr-policy-network-indicator-mojo {
  margin-inline-end: 10px;
}

extension-controlled-indicator {
  margin-inline-start: 0;
        width: 100%;
}

.settings-box:first-of-type {
  border-top: none;
}

</style>

    <!-- Policy indicator. Only one dom-if below will be shown. -->
    <template is="dom-if" if="[[shouldShowNetworkPolicyIndicator_(managedProperties)]]">
      <div class="settings-box">
        <div class="layout horizontal center">
          <cr-policy-network-indicator-mojo property="[[managedProperties.proxySettings.type]]" no-extension-indicator="">
          </cr-policy-network-indicator-mojo>
          <div>This proxy is enforced by your administrator</div>
        </div>
      </div>
    </template>
    <template is="dom-if" if="[[shouldShowExtensionIndicator_(managedProperties)]]">
      <div class="settings-box">
        <extension-controlled-indicator extension-id="[[prefs.proxy.extensionId]]" extension-name="[[prefs.proxy.controlledByName]]" extension-can-be-disabled="[[prefs.proxy.extensionCanBeDisabled]]">
        </extension-controlled-indicator>
      </div>
    </template>

    <!-- Allow shared proxies -->
    <settings-toggle-button id="allowShared" class="indented" hidden$="[[!shouldShowAllowShared_(managedProperties.source)]]" pref="{{prefs.settings.use_shared_proxies}}" label="Allow proxies for shared networks" on-settings-boolean-control-change="onAllowSharedProxiesChange_" no-set-pref="" disabled="[[disabled]]">
    </settings-toggle-button>

    <div class="settings-box single-column stretch continuation indented">
      <network-proxy editable="[[!disabled]]" managed-properties="[[managedProperties]]" use-shared-proxies="[[useSharedProxies_]]">
      </network-proxy>
    </div>

    <!-- Confirm Allow shared proxies dialog -->
    <cr-dialog id="confirmAllowSharedDialog" close-text="Close" on-cancel="onAllowSharedDialogCancel_" on-close="onAllowSharedDialogClose_">
      <div slot="title">
        [[getAllowSharedDialogTitle_(prefs.settings.use_shared_proxies.value)]]
      </div>
      <div slot="body">
        Changing this setting will affect all shared networks
      </div>
      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onAllowSharedDialogCancel_">
          Cancel
        </cr-button>
        <cr-button class="action-button" on-click="onAllowSharedDialogConfirm_">
          Confirm
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"network-proxy-section",behaviors:[CrPolicyNetworkBehaviorMojo,I18nBehavior,PrefsBehavior,RouteObserverBehavior],properties:{managedProperties:Object,disabled:{type:Boolean,value:false},useSharedProxies_:Boolean},observers:["useSharedProxiesChanged_(prefs.settings.use_shared_proxies.value)"],getAllowSharedToggle(){return this.$$("#allowShared")},currentRouteChanged(newRoute){if(newRoute===routes.NETWORK_DETAIL){this.$$("network-proxy").reset()}},useSharedProxiesChanged_(){const pref=this.getPref("settings.use_shared_proxies");this.useSharedProxies_=!!pref&&!!pref.value},isShared_(){const mojom=chromeos.networkConfig.mojom;return this.managedProperties.source===mojom.OncSource.kDevice||this.managedProperties.source===mojom.OncSource.kDevicePolicy},getProxySettingsTypeProperty_(){const proxySettings=this.managedProperties.proxySettings;return proxySettings?proxySettings.type:undefined},getAllowSharedDialogTitle_(allowShared){if(allowShared){return this.i18n("networkProxyAllowSharedDisableWarningTitle")}return this.i18n("networkProxyAllowSharedEnableWarningTitle")},shouldShowNetworkPolicyIndicator_(){const property=this.getProxySettingsTypeProperty_();return!!property&&!this.isExtensionControlled(property)&&this.isNetworkPolicyEnforced(property)},shouldShowExtensionIndicator_(){const property=this.getProxySettingsTypeProperty_();return!!property&&this.isExtensionControlled(property)},shouldShowAllowShared_(property){if(!this.isShared_()){return false}return true},onAllowSharedProxiesChange_(event){this.$.confirmAllowSharedDialog.showModal()},onAllowSharedDialogConfirm_(){this.$.allowShared.sendPrefChange();this.$.confirmAllowSharedDialog.close()},onAllowSharedDialogCancel_(){this.$.allowShared.resetToPrefValue();this.$.confirmAllowSharedDialog.close()},onAllowSharedDialogClose_(){this.$.allowShared.focus()}});// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
function signalStrengthToBarCount(strength){if(strength>75){return 4}if(strength>50){return 3}if(strength>25){return 2}if(strength>0){return 1}return 0}Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared iron-flex" scope="tether-connection-dialog">[slot=title] {
  margin-top: 9px;
}

[slot=body] {
  border-top: solid 2px rgba(0, 0, 0, .14);
}

[slot=body] > * {
  margin-inline-start: 5px;
}

iron-icon {
  --iron-icon-fill-color: #4285F4;
}

#host-device-text-container {
  display: flex;
        flex-direction: column;
        margin-inline-start: 18px;
}

#availability-title {
  color: black;
        margin-top: 5px;
        opacity: 0.54;
}

#host-device-container {
  align-items: center;
        display: flex;
        margin-top: 12px;
        min-height: 46px;
}

#tether-explanation, #tether-carrier-warning, #tether-description-title {
  margin-top: var(--cr-section-vertical-margin);
}

#tether-carrier-warning {
  font-weight: 600;
}

#tether-description-list {
  padding-inline-start: 16px;
}

#host-device-lost-container {
  color: var(--google-red-500);
        font-weight: 500;
}

</style>
    <cr-dialog id="dialog" close-text="Close">
      <div slot="title">Connect to new hotspot?</div>
      <div slot="body">
        <span id="availability-title">
          Available device:
        </span>
        <div id="host-device-container">
          <iron-icon id="host-device-signal-strength-icon" icon="[[getSignalStrengthIconName_(managedProperties)]]" aria-label$="[[getSignalStrengthLabel_(managedProperties)]]">
          </iron-icon>
          <div id="host-device-text-container">
            <span id="host-device-text-name" aria-describedby="host-device-signal-strength-icon
                hostDeviceTextBattery">
              [[getDeviceName_(managedProperties)]]
            </span>
            <span id="hostDeviceTextBattery" class="secondary" aria-hidden="true">
              [[getBatteryPercentageString_(managedProperties)]]
            </span>
          </div>
          <div class="flex"></div>
          <div id="host-device-lost-container" hidden$="[[!outOfRange]]">
            <iron-icon icon="os-settings:alert-device-out-of-range">
            </iron-icon>
            Unable to detect your phone
          </div>
        </div>
        <div id="tether-explanation">
          [[getExplanation_(managedProperties)]]
        </div>
        <div id="tether-carrier-warning">
          Some carriers might block this feature.
        </div>
        <div id="tether-description-title">
          [[getDescriptionTitle_(managedProperties)]]
        </div>
        <ul id="tether-description-list">
          <li>Use mobile data</li>
          <li>[[getBatteryDescription_(managedProperties)]]</li>
          <li hidden$="[[!shouldShowDisconnectFromWifi_(managedProperties)]]">
            Disconnect from Wi-Fi
          </li>
        </ul>
      </div>
      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onNotNowTap_">
          Not now
        </cr-button>
        <cr-button id="connectButton" class="action-button" on-click="onConnectTap_" disabled="[[outOfRange]]">
          Connect
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"tether-connection-dialog",behaviors:[I18nBehavior],properties:{managedProperties:Object,outOfRange:Boolean},open(){const dialog=this.getDialog_();if(!dialog.open){this.getDialog_().showModal()}this.$.connectButton.focus()},close(){const dialog=this.getDialog_();if(dialog.open){dialog.close()}},getDialog_(){return this.$.dialog},onNotNowTap_(){this.getDialog_().cancel()},onConnectTap_(){this.fire("tether-connect")},shouldShowDisconnectFromWifi_(managedProperties){return true},getBatteryPercentageAsString_(managedProperties){return managedProperties?managedProperties.typeProperties.tether.batteryPercentage.toString():"0"},getSignalStrengthIconName_(managedProperties){const signalStrength=managedProperties?managedProperties.typeProperties.tether.signalStrength:0;return"os-settings:signal-cellular-"+signalStrengthToBarCount(signalStrength)+"-bar"},getSignalStrengthLabel_(managedProperties){const signalStrength=managedProperties?managedProperties.typeProperties.tether.signalStrength:0;const networkTypeString=this.i18n("OncTypeTether");return this.i18n("networkIconLabelSignalStrength",networkTypeString,signalStrength)},getDeviceName_(managedProperties){return managedProperties?OncMojo.getNetworkName(managedProperties):""},getBatteryPercentageString_(managedProperties){return managedProperties?this.i18n("tetherConnectionBatteryPercentage",this.getBatteryPercentageAsString_(managedProperties)):""},getExplanation_(managedProperties){return managedProperties?this.i18n("tetherConnectionExplanation",HTMLEscape(OncMojo.getNetworkName(managedProperties))):""},getDescriptionTitle_(managedProperties){return managedProperties?this.i18n("tetherConnectionDescriptionTitle",HTMLEscape(OncMojo.getNetworkName(managedProperties))):""},getBatteryDescription_(managedProperties){return managedProperties?this.i18n("tetherConnectionDescriptionBattery",this.getBatteryPercentageAsString_(managedProperties)):""}});// Copyright 2015 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="internet-shared settings-shared iron-flex" scope="settings-internet-detail-page">:host {
  padding-bottom: 40px;
}

iron-icon {
  margin-inline-end: 10px;
}

cr-policy-indicator {
  margin-inline-start: var(--settings-controlled-by-spacing);
}

cr-policy-network-indicator-mojo {
  margin: 0 var(--settings-controlled-by-spacing);
}

#networkState[connected] {
  color: var(--google-green-500);
}

#networkState[error] {
  color: var(--google-red-500);
}

paper-spinner-lite {
  height: var(--cr-icon-size);
        width: var(--cr-icon-size);
}

.warning {
  color: var(--cr-secondary-text-color);
          margin-inline-start: var(--settings-controlled-by-spacing);
}

#mac-address-container {
  border-top: none;
}

</style>
    <!-- Title section: Icon + name + connection state. -->
    <div id="titleDiv" class="settings-box first">
      <div class="start layout horizontal center">
        <network-icon show-technology-badge="[[showTechnologyBadge_]]" network-state="[[getNetworkState_(managedProperties_)]]">
        </network-icon>
        <div id="networkState" class="title settings-box-text" connected$="[[isConnectedState_(managedProperties_)]]" error$="[[isOutOfRangeOrNotEnabled_(outOfRange_, deviceState_)]]">
          [[getStateText_(managedProperties_, propertiesReceived_,
              outOfRange_, deviceState_)]]
        </div>
        <template is="dom-if" if="[[isPolicySource(managedProperties_.source))]]">
          <cr-policy-indicator indicator-type="[[getIndicatorTypeForSource(
                  managedProperties_.source)]]">
          </cr-policy-indicator>
        </template>
      </div>
      <cr-button id="forgetButton" on-click="onForgetTap_" hidden$="[[!showForget_(managedProperties_)]]" disabled="[[disableForget_(managedProperties_,
              prefs.vpn_config_allowed, disabled_)]]">
        Forget
      </cr-button>
      <cr-button id="viewAccountButton" on-click="onViewAccountTap_" hidden$="[[!showViewAccount_(managedProperties_)]]" disabled="[[disabled_]]">
        View Account
      </cr-button>
      <cr-button id="activateButton" on-click="onActivateTap_" hidden$="[[!showActivate_(managedProperties_)]]" disabled="[[disabled_]]">
        Activate
      </cr-button>
      <cr-button id="configureButton" on-click="onConfigureTap_" hidden$="[[!showConfigure_(managedProperties_, globalPolicy,
              managedNetworkAvailable)]]" disabled="[[disableConfigure_(managedProperties_,
              prefs.vpn_config_allowed, disabled_)]]" deep-link-focus-id$="[[Setting.kConfigureEthernet]]">
        Configure
      </cr-button>
      <!-- Use policy properties from vpn_config_allowed to indicate when that
          pref disables buttons in this row. -->
      <controlled-button id="connectDisconnect" class="action-button" on-click="onConnectDisconnectTap_" hidden$="[[shouldConnectDisconnectButtonBeHidden_(
              managedProperties_, globalPolicy, managedNetworkAvailable,
              deviceState_)]]" disabled="[[shouldConnectDisconnectButtonBeDisabled_(
              managedProperties_, defaultNetwork, propertiesReceived_,
              outOfRange_, globalPolicy, managedNetworkAvailable,
              deviceState_, disabled_)]]" label="[[getConnectDisconnectButtonLabel_(managedProperties_,
              globalPolicy,managedNetworkAvailable, deviceState_)]]" pref="[[getFakeVpnConfigPrefForEnforcement_(managedProperties_,
              prefs.vpn_config_allowed)]]" deep-link-focus-id$="[[Setting.kDisconnectWifiNetwork]]
              [[Setting.kDisconnectCellularNetwork]]
              [[Setting.kDisconnectTetherNetwork]]">
      </controlled-button>
    </div>


    <!-- Start of NOTICES section. -->
    <!-- If row ordering changes, messagesDividerClass_() must be updated. -->
    <template is="dom-if" if="[[isBlockedByPolicy_(managedProperties_,
                                globalPolicy, managedNetworkAvailable)]]">
      <!-- Disabled by policy -->
      <div class="settings-box continuation">
        <iron-icon class="policy" icon="cr20:domain"></iron-icon>
        <div class="settings-box-text">Connecting to this network is disabled by your administrator</div>
      </div>
    </template>

    <template is="dom-if" if="[[isSecondaryUser_]]">
      <!-- Non primary users. -->
      <div class$="settings-box single-column
                  [[messagesDividerClass_('secondary', managedProperties_,
                      globalPolicy, managedNetworkAvailable,
                      isSecondaryUser_, isWifiSyncEnabled_)]]">
        <div class="layout horizontal center">
          <iron-icon class="policy" icon="cr:group"></iron-icon>
          <div class="settings-box-text">
            [[i18n('networkPrimaryUserControlled', primaryUserEmail_)]]
          </div>
        </div>
      </div>
    </template>


    <template is="dom-if" if="[[showShared_(managedProperties_, globalPolicy,
            managedNetworkAvailable)]]">
      <!-- Shared network. -->
      <div class$="settings-box settings-box-text
                  [[messagesDividerClass_('shared', managedProperties_,
                      globalPolicy, managedNetworkAvailable,
                      isSecondaryUser_, isWifiSyncEnabled_)]]">
          [[sharedString_(managedProperties_)]]
      </div>
    </template>
    <template is="dom-if" if="[[showSynced_(managedProperties_, globalPolicy,
            managedNetworkAvailable, isWifiSyncEnabled_)]]">
      <!-- Synced network. -->
      <div class$="settings-box settings-box-text
                  [[messagesDividerClass_('synced', managedProperties_,
                      globalPolicy, managedNetworkAvailable,
                      isSecondaryUser_, isWifiSyncEnabled_)]]">
          <settings-localized-link localized-string="[[syncedString_(managedProperties_)]]">
          </settings-localized-link>
      </div>
    </template>
    <!-- End of NOTICES section -->

    <template is="dom-if" if="[[!isSecondaryUser_]]">
      <template is="dom-if" if="[[showConfigurableSections_]]" restamp="">
        <!-- Prefer this network. -->
        <template is="dom-if" if="[[showPreferNetwork_(managedProperties_, globalPolicy,
                managedNetworkAvailable)]]">
          <div class="settings-box" on-click="onPreferNetworkRowClicked_" actionable$="[[!isNetworkPolicyEnforced(
                  managedProperties_.priority)]]">
            <div id="preferNetworkToggleLabel" class="start settings-box-text">
              Prefer this network
            </div>
            <cr-policy-network-indicator-mojo property="[[managedProperties_.priority]]">
            </cr-policy-network-indicator-mojo>
            <cr-toggle id="preferNetworkToggle" checked="{{preferNetwork_}}" disabled="[[shouldPreferNetworkToggleBeDisabled_(
                    managedProperties_.priority, disabled_)]]" aria-labelledby="preferNetworkToggleLabel" deep-link-focus-id$="[[Setting.kPreferWifiNetwork]]">
            </cr-toggle>
          </div>
        </template>
        <!-- Hidden. -->
        <template is="dom-if" if="[[showHiddenNetwork_(managedProperties_, globalPolicy,
                managedNetworkAvailable)]]">
          <settings-toggle-button id="hiddenToggle" class="hr" pref="{{hiddenPref_}}" label="Hidden network" sub-label="Using a hidden network isn&#39;t recommended for security reasons." sub-label-icon="cr20:warning" learn-more-url="http://support.google.com/chromebook?p=hidden_networks" deep-link-focus-id$="[[Setting.kWifiHidden]]">
          </settings-toggle-button>
        </template>
        <!-- Autoconnect. -->
        <template is="dom-if" if="[[showAutoConnect_(managedProperties_, globalPolicy,
                managedNetworkAvailable)]]">
          <settings-toggle-button id="autoConnectToggle" class="hr" pref="{{autoConnectPref_}}" label="[[getAutoConnectToggleLabel_(managedProperties_)]]" deep-link-focus-id$="[[Setting.kWifiAutoConnectToNetwork]]
                  [[Setting.kCellularAutoConnectToNetwork]]" disabled="[[disabled_]]">
          </settings-toggle-button>
          <!-- Hidden Network Warning -->
          <template is="dom-if" if="[[showHiddenNetworkWarning_(autoConnectPref_.*,
                  managedProperties_)]]" restamp="">
            <div class="warning">
              <iron-icon icon="cr:warning"></iron-icon>
              [[i18n('hiddenNetworkWarning')]]
            </div>
          </template>
        </template>
        <!-- Always-on VPN. -->
        <template is="dom-if" if="[[showAlwaysOnVpn_(managedProperties_)]]">
          <settings-toggle-button id="alwaysOnVpnToggle" class="hr" pref="{{alwaysOnVpn_}}" label="Always connect through this VPN" disabled="[[disabled_]]">
          </settings-toggle-button>
        </template>
        <!-- Data roaming (Cellular only). -->
        <template is="dom-if" if="[[isCellular_(managedProperties_)]]">
          <settings-toggle-button id="allowDataRoaming" class="hr" pref="{{prefs.cros.signed.data_roaming_enabled}}" label="Allow mobile data roaming" sub-label="[[getRoamingDetails_(managedProperties_)]]" deep-link-focus-id$="[[Setting.kCellularRoaming]]" disabled="[[disabled_]]">
          </settings-toggle-button>
        </template>
        <!-- SIM Info (Cellular only). -->
        <!-- TODO(crbug/1093185): Remove when updatedCellularActivationUi
            flag launches -->
        <template is="dom-if" if="[[showCellularSim_(managedProperties_)]]" restamp="">
          <div class="settings-box single-column stretch">
            <network-siminfo id="cellularSimInfo" network-state="[[getNetworkState_(managedProperties_)]]" device-state="[[deviceState_]]" disabled="[[disabled_]]">
            </network-siminfo>
          </div>
        </template>
        <!-- IP Address. -->
        <div class="settings-box two-line single-column stretch settings-box-text" hidden$="[[!showIpAddress_(ipAddress_, managedProperties_)]]">
          <div>IP Address</div>
          <div class="secondary">[[ipAddress_]]</div>
        </div>
        <!-- Properties to always show if present. -->
        <template is="dom-if" if="[[hasInfoFields_(managedProperties_)]]">
          <div class="settings-box single-column stretch">
            <network-property-list-mojo id="infoFields" fields="[[getInfoFields_(managedProperties_)]]" edit-field-types="[[getInfoEditFieldTypes_(
                  managedProperties_)]]" property-dict="[[managedProperties_]]" on-property-change="onNetworkPropertyChange_" disabled="[[disabled_]]">
            </network-property-list-mojo>
          </div>
        </template>
      </template>
      <template is="dom-if" if="[[hasAdvancedSection_(managedProperties_,
                                 propertiesReceived_, showMeteredToggle_,
                                 deviceState_)]]">
        <!-- Advanced toggle. -->
        <cr-expand-button aria-label="Show advanced network properties" class="settings-box" expanded="{{advancedExpanded_}}">
          Advanced
        </cr-expand-button>

        <!-- Advanced section -->
        <iron-collapse opened="[[advancedExpanded_]]">
          <div class="settings-box single-column stretch indented first">
             <!-- SIM Info (Cellular only). -->
            <template is="dom-if" if="[[showCellularSimUpdatedUi_(managedProperties_)]]" restamp="">
              <div class="single-column stretch">
                <network-siminfo id="cellularSimInfoAdvanced" network-state="[[getNetworkState_(managedProperties_)]]" device-state="[[deviceState_]]" disabled="[[disabled_]]">
                </network-siminfo>
              </div>
            </template>
            <!-- Metered (WiFi and Cellular only). -->
            <template is="dom-if" if="[[showMetered_(managedProperties_, showMeteredToggle_)]]">
              <network-config-toggle id="meteredToggle" policy-on-left="" property="[[managedProperties_.metered]]" label="Metered network" sub-label="Helps reduce network data usage by pausing automatic app and system updates" checked="{{meteredOverride_}}" on-checked-changed="meteredChanged_" deep-link-focus-id$="[[Setting.kWifiMetered]]
                      [[Setting.kCellularMetered]]" disabled="[[disabled_]]">
              </network-config-toggle>
            </template>
            <!-- Advanced properties -->
            <template is="dom-if" if="[[hasAdvancedFields_(managedProperties_)]]">
              <network-property-list-mojo id="advancedFields" fields="[[getAdvancedFields_(managedProperties_)]]" property-dict="[[managedProperties_]]" disabled="[[disabled_]]">
              </network-property-list-mojo>
            </template>
            <!-- Device properties -->
            <template is="dom-if" if="[[hasDeviceFields_(managedProperties_, deviceState_)]]">
              <network-property-list-mojo id="deviceFields" fields="[[getDeviceFields_(managedProperties_,
                      deviceState_)]]" property-dict="[[managedProperties_]]" disabled="[[disabled_]]">
              </network-property-list-mojo>
            </template>
          </div>
        </iron-collapse>
      </template>

      <template is="dom-if" if="[[showConfigurableSections_]]" restamp="">
        <template is="dom-if" if="[[hasNetworkSection_(managedProperties_,
            globalPolicy, managedNetworkAvailable)]]">
          <!-- Network toggle -->
          <cr-expand-button id="configurableSetions" aria-label="Show network address settings" class="settings-box" expanded="{{networkExpanded_}}">
            <div class="settings-row">
              <div class="start">
                Network
              </div>
              <template is="dom-if" if="[[showScanningSpinner_(
                  managedProperties_, deviceState_)]]">
                <paper-spinner-lite active=""></paper-spinner-lite>
              </template>
            </div>
          </cr-expand-button>

          <iron-collapse opened="[[networkExpanded_]]">
            <div class="settings-box single-column stretch indented first">
              <!-- Choose Mobile Network (Cellular only). -->
              <template is="dom-if" if="[[showCellularChooseNetwork_(managedProperties_)]]">
                <network-choose-mobile device-state="[[deviceState_]]" managed-properties="[[managedProperties_]]" disabled="[[disabled_]]">
                </network-choose-mobile>
              </template>

              <!-- APN -->
              <template is="dom-if" if="[[isCellular_(managedProperties_)]]">
                <network-apnlist on-apn-change="onApnChange_" managed-properties="[[managedProperties_]]" disabled="[[disabled_]]">
                </network-apnlist>
              </template>

              <!-- IP Config, Nameservers -->
              <template is="dom-if" if="[[isRememberedOrConnected_(managedProperties_)]]">
                <network-ip-config on-ip-change="onIPConfigChange_" managed-properties="[[managedProperties_]]" disabled="[[disabled_]]">
                </network-ip-config>
                <network-nameservers on-nameservers-change="onIPConfigChange_" managed-properties="[[managedProperties_]]" disabled="[[disabled_]]">
                </network-nameservers>
              </template>
            </div>

            <!-- MAC Address. -->
            <div class="settings-box two-line single-column stretch indented" id="mac-address-container" hidden$="[[!shouldShowMacAddress_(deviceState_)]]">
              <div>MAC address</div>
              <div class="secondary">[[getMacAddress_(deviceState_)]]</div>
            </div>
          </iron-collapse>
        </template>

        <template is="dom-if" if="[[hasProxySection_(managedProperties_,
            globalPolicy, managedNetworkAvailable)]]">
          <!-- Proxy toggle -->
          <cr-expand-button aria-label="Show proxy settings" class="settings-box" expanded="{{proxyExpanded_}}">
            Proxy
          </cr-expand-button>

          <iron-collapse opened="[[proxyExpanded_]]">
            <network-proxy-section prefs="{{prefs}}" on-proxy-change="onProxyChange_" managed-properties="[[managedProperties_]]" disabled="[[disabled_]]">
            </network-proxy-section>
          </iron-collapse>
        </template>
      </template>
    </template>
    <template is="dom-if" if="[[showConfigurableSections_]]" restamp="">
      <template is="dom-if" if="[[isTether_(managedProperties_)]]" restamp="">
        <tether-connection-dialog id="tetherDialog" managed-properties="[[managedProperties_]]" on-tether-connect="onTetherConnect_" out-of-range="[[outOfRange_]]">
        </tether-connection-dialog>
      </template>
    </template>
<!--_html_template_end_-->`,is:"settings-internet-detail-page",behaviors:[NetworkListenerBehavior,CrPolicyNetworkBehaviorMojo,DeepLinkingBehavior,RouteObserverBehavior,I18nBehavior,WebUIListenerBehavior],properties:{guid:String,prefs:{type:Object,notify:true},showConfigurableSections_:{type:Boolean,value:true,computed:"computeShowConfigurableSections_(deviceState_, managedProperties_)"},isWifiSyncEnabled_:Boolean,managedProperties_:{type:Object,observer:"managedPropertiesChanged_"},deviceState_:{type:Object,value:null},isSecondaryUser_:{type:Boolean,value(){return loadTimeData.getBoolean("isSecondaryUser")},readOnly:true},primaryUserEmail_:{type:String,value(){return loadTimeData.getBoolean("isSecondaryUser")?loadTimeData.getString("primaryUserEmail"):""},readOnly:true},outOfRange_:{type:Boolean,value:false},defaultNetwork:{type:Object,value:null},globalPolicy:Object,managedNetworkAvailable:{type:Boolean,value:false},autoConnectPref_:{type:Object,observer:"autoConnectPrefChanged_",value(){return{key:"fakeAutoConnectPref",type:chrome.settingsPrivate.PrefType.BOOLEAN,value:false}}},hiddenPref_:{type:Object,observer:"hiddenPrefChanged_",value(){return{key:"fakeHiddenPref",type:chrome.settingsPrivate.PrefType.BOOLEAN,value:false}}},alwaysOnVpn_:{type:Object,observer:"alwaysOnVpnChanged_",value(){return{key:"fakeAlwaysOnPref",type:chrome.settingsPrivate.PrefType.BOOLEAN,value:false}}},meteredOverride_:{type:Boolean,value:false},preferNetwork_:{type:Boolean,value:false,observer:"preferNetworkChanged_"},ipAddress_:{type:String,value:""},showTechnologyBadge_:{type:Boolean,value(){return loadTimeData.valueExists("showTechnologyBadge")&&loadTimeData.getBoolean("showTechnologyBadge")}},showMeteredToggle_:{type:Boolean,value(){return loadTimeData.valueExists("showMeteredToggle")&&loadTimeData.getBoolean("showMeteredToggle")}},showHiddenToggle_:{type:Boolean,value(){return loadTimeData.valueExists("showHiddenToggle")&&loadTimeData.getBoolean("showHiddenToggle")}},isUpdatedCellularUiEnabled_:{type:Boolean,value(){return loadTimeData.getBoolean("updatedCellularActivationUi")}},disabled_:{type:Boolean,value:false,computed:"computeDisabled_(deviceState_.*)"},advancedExpanded_:Boolean,networkExpanded_:Boolean,proxyExpanded_:Boolean,supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kConfigureEthernet,chromeos.settings.mojom.Setting.kEthernetAutoConfigureIp,chromeos.settings.mojom.Setting.kEthernetDns,chromeos.settings.mojom.Setting.kEthernetProxy,chromeos.settings.mojom.Setting.kDisconnectWifiNetwork,chromeos.settings.mojom.Setting.kPreferWifiNetwork,chromeos.settings.mojom.Setting.kForgetWifiNetwork,chromeos.settings.mojom.Setting.kWifiAutoConfigureIp,chromeos.settings.mojom.Setting.kWifiDns,chromeos.settings.mojom.Setting.kWifiHidden,chromeos.settings.mojom.Setting.kWifiProxy,chromeos.settings.mojom.Setting.kWifiAutoConnectToNetwork,chromeos.settings.mojom.Setting.kCellularSimLock,chromeos.settings.mojom.Setting.kCellularRoaming,chromeos.settings.mojom.Setting.kCellularApn,chromeos.settings.mojom.Setting.kDisconnectCellularNetwork,chromeos.settings.mojom.Setting.kCellularAutoConfigureIp,chromeos.settings.mojom.Setting.kCellularDns,chromeos.settings.mojom.Setting.kCellularProxy,chromeos.settings.mojom.Setting.kCellularAutoConnectToNetwork,chromeos.settings.mojom.Setting.kDisconnectTetherNetwork,chromeos.settings.mojom.Setting.kWifiMetered,chromeos.settings.mojom.Setting.kCellularMetered])}},observers:["updateAlwaysOnVpnPrefValue_(prefs.arc.vpn.always_on.*)","updateAlwaysOnVpnPrefEnforcement_(managedProperties_,"+"prefs.vpn_config_allowed.*)","updateAutoConnectPref_(globalPolicy)","autoConnectPrefChanged_(autoConnectPref_.*)","alwaysOnVpnChanged_(alwaysOnVpn_.*)","hiddenPrefChanged_(hiddenPref_.*)"],didSetFocus_:false,propertiesReceived_:false,shouldShowConfigureWhenNetworkLoaded_:false,browserProxy_:null,osSyncBrowserProxy_:null,syncBrowserProxy_:null,networkConfig_:null,applyingChanges_:false,pendingSimLockDeepLink_:false,attached(){if(loadTimeData.getBoolean("splitSettingsSyncEnabled")){this.addWebUIListener("os-sync-prefs-changed",this.handleOsSyncPrefsChanged_.bind(this));this.osSyncBrowserProxy_.sendOsSyncPrefsChanged()}else{this.addWebUIListener("sync-prefs-changed",this.handleSyncPrefsChanged_.bind(this));this.syncBrowserProxy_.sendSyncPrefsChanged()}},created(){this.browserProxy_=InternetPageBrowserProxyImpl.getInstance();this.networkConfig_=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote();if(loadTimeData.getBoolean("splitSettingsSyncEnabled")){this.osSyncBrowserProxy_=OsSyncBrowserProxyImpl.getInstance()}else{this.syncBrowserProxy_=SyncBrowserProxyImpl.getInstance()}},afterRenderShowDeepLink(settingId,elementCallback){afterNextRender(this,(()=>{const deepLinkElement=elementCallback();if(!deepLinkElement||deepLinkElement.hidden){console.warn(`Element with deep link id ${settingId} not focusable.`);return}this.showDeepLinkElement(deepLinkElement)}))},beforeDeepLinkAttempt(settingId){if(settingId===chromeos.settings.mojom.Setting.kCellularApn){this.networkExpanded_=true;this.afterRenderShowDeepLink(settingId,(()=>this.$$("network-apnlist").getApnSelect()));return false}if(settingId===chromeos.settings.mojom.Setting.kEthernetAutoConfigureIp||settingId===chromeos.settings.mojom.Setting.kWifiAutoConfigureIp||settingId===chromeos.settings.mojom.Setting.kCellularAutoConfigureIp){this.networkExpanded_=true;this.afterRenderShowDeepLink(settingId,(()=>this.$$("network-ip-config").getAutoConfigIpToggle()));return false}if(settingId===chromeos.settings.mojom.Setting.kEthernetDns||settingId===chromeos.settings.mojom.Setting.kWifiDns||settingId===chromeos.settings.mojom.Setting.kCellularDns){this.networkExpanded_=true;this.afterRenderShowDeepLink(settingId,(()=>this.$$("network-nameservers").getNameserverRadioButtons()));return false}if(settingId===chromeos.settings.mojom.Setting.kEthernetProxy||settingId===chromeos.settings.mojom.Setting.kWifiProxy||settingId===chromeos.settings.mojom.Setting.kCellularProxy){this.proxyExpanded_=true;this.afterRenderShowDeepLink(settingId,(()=>this.$$("network-proxy-section").getAllowSharedToggle()));return false}if(settingId===chromeos.settings.mojom.Setting.kWifiMetered||settingId===chromeos.settings.mojom.Setting.kCellularMetered){this.advancedExpanded_=true;return true}if(settingId===chromeos.settings.mojom.Setting.kForgetWifiNetwork){this.afterRenderShowDeepLink(settingId,(()=>{const forgetButton=this.$$("#forgetButton");if(forgetButton&&!forgetButton.hidden){return forgetButton}return this.$$("#connectDisconnect")}));return false}if(settingId===chromeos.settings.mojom.Setting.kCellularSimLock){this.advancedExpanded_=true;this.pendingSimLockDeepLink_=true;return false}return true},currentRouteChanged(route,oldRoute){if(route!==routes.NETWORK_DETAIL){return}const queryParams=Router.getInstance().getQueryParameters();const guid=queryParams.get("guid")||"";if(!guid){console.warn("No guid specified for page:"+route);this.close()}this.shouldShowConfigureWhenNetworkLoaded_=queryParams.get("showConfigure")==="true";const type=queryParams.get("type")||"WiFi";const name=queryParams.get("name")||type;this.init(guid,type,name);this.attemptDeepLink()},handleSyncPrefsChanged_(syncPrefs){this.isWifiSyncEnabled_=!!syncPrefs&&syncPrefs.wifiConfigurationsSynced},handleOsSyncPrefsChanged_(osSyncFeatureEnabled,osSyncPrefs){this.isWifiSyncEnabled_=osSyncFeatureEnabled&&!!osSyncPrefs&&osSyncPrefs.osWifiConfigurationsSynced},init(guid,type,name){this.guid=guid;this.propertiesReceived_=false;this.deviceState_=null;this.managedProperties_=OncMojo.getDefaultManagedProperties(OncMojo.getNetworkTypeFromString(type),this.guid,name);this.didSetFocus_=false;this.getNetworkDetails_()},close(){if(!this.guid){return}this.guid="";requestAnimationFrame((()=>{this.managedProperties_=undefined;this.propertiesReceived_=false;Router.getInstance().navigateToPreviousRoute()}))},onActiveNetworksChanged(networks){if(!this.guid||!this.managedProperties_){return}if(this.managedProperties_.connectionState!==chromeos.networkConfig.mojom.ConnectionStateType.kNotConnected||networks.find((network=>network.guid===this.guid))){this.getNetworkDetails_()}},onNetworkStateChanged(network){if(!this.guid||!this.managedProperties_){return}if(network.guid===this.guid){this.getNetworkDetails_()}},onNetworkStateListChanged(){if(!this.guid||!this.managedProperties_){return}this.checkNetworkExists_()},onDeviceStateListChanged(){if(!this.guid||!this.managedProperties_){return}this.getDeviceState_()},managedPropertiesChanged_(){if(!this.managedProperties_){return}this.updateAutoConnectPref_();this.updateHiddenPref_();const metered=this.managedProperties_.metered;if(metered&&metered.activeValue!==this.meteredOverride_){this.meteredOverride_=metered.activeValue}const priority=this.managedProperties_.priority;if(priority){const preferNetwork=priority.activeValue>0;if(preferNetwork!==this.preferNetwork_){this.preferNetwork_=preferNetwork}}const ipv4=OncMojo.getIPConfigForType(this.managedProperties_,"IPv4");this.ipAddress_=ipv4&&ipv4.ipAddress||"";const networkName=OncMojo.getNetworkName(this.managedProperties_);this.parentNode.pageTitle=networkName;flush();if(!this.didSetFocus_&&!Router.getInstance().getQueryParameters().has("search")&&!this.getDeepLinkSettingId()){this.didSetFocus_=true;const button=this.$$("#titleDiv .action-button:not([hidden])");if(button){afterNextRender(this,(()=>button.focus()))}}if(this.shouldShowConfigureWhenNetworkLoaded_&&this.managedProperties_.type===chromeos.networkConfig.mojom.NetworkType.kTether){this.shouldShowConfigureWhenNetworkLoaded_=false;setTimeout((()=>this.showTetherDialog_()))}},deviceStatesMatch_(a,b){return a.type===b.type&&a.macAddress===b.macAddress&&a.simAbsent===b.simAbsent&&a.deviceState===b.deviceState&&a.managedNetworkAvailable===b.managedNetworkAvailable&&OncMojo.ipAddressMatch(a.ipv4Address,b.ipv4Address)&&OncMojo.ipAddressMatch(a.ipv6Address,b.ipv6Address)&&OncMojo.simLockStatusMatch(a.simLockStatus,b.simLockStatus)&&OncMojo.simInfosMatch(a.simInfos,b.simInfos)&&a.inhibitReason===b.inhibitReason},getDeviceState_(){if(!this.managedProperties_){return}const type=this.managedProperties_.type;this.networkConfig_.getDeviceStateList().then((response=>{if(!this.guid){return}const devices=response.result;const newDeviceState=devices.find((device=>device.type===type))||null;let shouldGetNetworkDetails=false;if(!this.deviceState_||!newDeviceState){this.deviceState_=newDeviceState;shouldGetNetworkDetails=!!this.deviceState_}else if(!this.deviceStatesMatch_(this.deviceState_,newDeviceState)){shouldGetNetworkDetails=this.deviceState_.deviceState!==newDeviceState.deviceState;this.deviceState_=newDeviceState}else if(this.deviceState_.scanning!==newDeviceState.scanning){this.deviceState_.scanning=newDeviceState.scanning;if(type===chromeos.networkConfig.mojom.NetworkType.kCellular){shouldGetNetworkDetails=true}}else if(type===chromeos.networkConfig.mojom.NetworkType.kCellular){shouldGetNetworkDetails=true}if(shouldGetNetworkDetails){this.getNetworkDetails_()}if(this.pendingSimLockDeepLink_){this.pendingSimLockDeepLink_=false;this.deepLinkToSimLockElement_()}}))},deepLinkToSimLockElement_(){const settingId=chromeos.settings.mojom.Setting.kCellularSimLock;const simLockStatus=this.deviceState_.simLockStatus;afterNextRender(this,(()=>{if(simLockStatus&&!!simLockStatus.lockType){this.afterRenderShowDeepLink(settingId,(()=>this.$$("network-siminfo").getUnlockButton()));return}this.afterRenderShowDeepLink(settingId,(()=>this.$$("network-siminfo").getSimLockToggle()))}))},autoConnectPrefChanged_(){if(!this.propertiesReceived_){return}const config=this.getDefaultConfigProperties_();config.autoConnect={value:!!this.autoConnectPref_.value};this.setMojoNetworkProperties_(config)},hiddenPrefChanged_(){if(!this.propertiesReceived_){return}recordSettingChange(chromeos.settings.mojom.Setting.kWifiHidden,{boolValue:!!this.hiddenPref_.value});const config=this.getDefaultConfigProperties_();config.typeConfig.wifi.hiddenSsid=this.hiddenPref_.value?chromeos.networkConfig.mojom.HiddenSsidMode.kEnabled:chromeos.networkConfig.mojom.HiddenSsidMode.kDisabled;this.setMojoNetworkProperties_(config)},getPolicyEnforcement_(policySource){switch(policySource){case chromeos.networkConfig.mojom.PolicySource.kUserPolicyEnforced:case chromeos.networkConfig.mojom.PolicySource.kDevicePolicyEnforced:return chrome.settingsPrivate.Enforcement.ENFORCED;case chromeos.networkConfig.mojom.PolicySource.kUserPolicyRecommended:case chromeos.networkConfig.mojom.PolicySource.kDevicePolicyRecommended:return chrome.settingsPrivate.Enforcement.RECOMMENDED;default:return undefined}},getPolicyController_(policySource){switch(policySource){case chromeos.networkConfig.mojom.PolicySource.kDevicePolicyEnforced:case chromeos.networkConfig.mojom.PolicySource.kDevicePolicyRecommended:return chrome.settingsPrivate.ControlledBy.DEVICE_POLICY;case chromeos.networkConfig.mojom.PolicySource.kUserPolicyEnforced:case chromeos.networkConfig.mojom.PolicySource.kUserPolicyRecommended:return chrome.settingsPrivate.ControlledBy.USER_POLICY;default:return undefined}},updateAutoConnectPref_(){if(!this.managedProperties_){return}const autoConnect=OncMojo.getManagedAutoConnect(this.managedProperties_);if(!autoConnect){return}let enforcement;let controlledBy;if(this.globalPolicy&&this.globalPolicy.allowOnlyPolicyNetworksToAutoconnect){enforcement=chrome.settingsPrivate.Enforcement.ENFORCED;controlledBy=chrome.settingsPrivate.ControlledBy.DEVICE_POLICY}else{enforcement=this.getPolicyEnforcement_(autoConnect.policySource);controlledBy=this.getPolicyController_(autoConnect.policySource)}if(this.autoConnectPref_&&this.autoConnectPref_.value===autoConnect.activeValue&&enforcement===this.autoConnectPref_.enforcement&&controlledBy===this.autoConnectPref_.controlledBy){return}const newPrefValue={key:"fakeAutoConnectPref",value:autoConnect.activeValue,type:chrome.settingsPrivate.PrefType.BOOLEAN};if(enforcement){newPrefValue.enforcement=enforcement;newPrefValue.controlledBy=controlledBy}this.autoConnectPref_=newPrefValue},updateHiddenPref_(){if(!this.managedProperties_){return}if(this.managedProperties_.type!==chromeos.networkConfig.mojom.NetworkType.kWiFi){return}const hidden=this.managedProperties_.typeProperties.wifi.hiddenSsid;if(!hidden){return}const enforcement=this.getPolicyEnforcement_(hidden.policySource);const controlledBy=this.getPolicyController_(hidden.policySource);if(this.hiddenPref_&&this.hiddenPref_.value===hidden.activeValue&&enforcement===this.hiddenPref_.enforcement&&controlledBy===this.hiddenPref_.controlledBy){return}const newPrefValue={key:"fakeHiddenPref",value:hidden.activeValue,type:chrome.settingsPrivate.PrefType.BOOLEAN};if(enforcement){newPrefValue.enforcement=enforcement;newPrefValue.controlledBy=controlledBy}this.hiddenPref_=newPrefValue},meteredChanged_(e){if(!this.propertiesReceived_){return}const config=this.getDefaultConfigProperties_();config.metered={value:e.detail.value};this.setMojoNetworkProperties_(config)},preferNetworkChanged_(){if(!this.propertiesReceived_){return}const config=this.getDefaultConfigProperties_();config.priority={value:this.preferNetwork_?1:0};this.setMojoNetworkProperties_(config)},checkNetworkExists_(){const filter={filter:chromeos.networkConfig.mojom.FilterType.kVisible,networkType:chromeos.networkConfig.mojom.NetworkType.kAll,limit:chromeos.networkConfig.mojom.NO_LIMIT};this.networkConfig_.getNetworkState(this.guid).then((response=>{if(response.result){return}this.outOfRange_=true;if(this.managedProperties_){this.managedProperties_.connectionState=chromeos.networkConfig.mojom.ConnectionStateType.kNotConnected}}))},getNetworkDetails_(){assert(this.guid);if(this.isSecondaryUser_){this.networkConfig_.getNetworkState(this.guid).then((response=>{this.getStateCallback_(response.result)}))}else{this.networkConfig_.getManagedProperties(this.guid).then((response=>{this.getPropertiesCallback_(response.result)}))}},getPropertiesCallback_(properties){if(!this.guid){return}if(!properties){this.close();return}this.updateManagedProperties_(properties);if(this.isArcVpn_(this.managedProperties_)&&!this.isConnectedState_(this.managedProperties_)){this.guid="";this.close()}this.propertiesReceived_=true;this.outOfRange_=false;if(!this.deviceState_){this.getDeviceState_()}},updateManagedProperties_(properties){this.applyingChanges_=true;if(this.managedProperties_&&this.managedProperties_.type===chromeos.networkConfig.mojom.NetworkType.kCellular&&this.deviceState_&&this.deviceState_.scanning){properties.typeProperties.cellular=this.managedProperties_.typeProperties.cellular}this.managedProperties_=properties;afterNextRender(this,(()=>{this.applyingChanges_=false}))},getStateCallback_(networkState){if(!networkState){this.close();return}const managedProperties=OncMojo.getDefaultManagedProperties(networkState.type,networkState.guid,networkState.name);managedProperties.connectable=networkState.connectable;managedProperties.connectionState=networkState.connectionState;switch(networkState.type){case chromeos.networkConfig.mojom.NetworkType.kCellular:managedProperties.typeProperties.cellular.signalStrength=networkState.typeState.cellular.signalStrength;managedProperties.typeProperties.cellular.simLocked=networkState.typeState.cellular.simLocked;break;case chromeos.networkConfig.mojom.NetworkType.kTether:managedProperties.typeProperties.tether.signalStrength=networkState.typeState.tether.signalStrength;break;case chromeos.networkConfig.mojom.NetworkType.kWiFi:managedProperties.typeProperties.wifi.signalStrength=networkState.typeState.wifi.signalStrength;break}this.updateManagedProperties_(managedProperties);this.propertiesReceived_=true;this.outOfRange_=false},getNetworkState_(properties){if(!properties){return undefined}return OncMojo.managedPropertiesToNetworkState(properties)},getDefaultConfigProperties_(){return OncMojo.getDefaultConfigProperties(this.managedProperties_.type)},setMojoNetworkProperties_(config){if(!this.propertiesReceived_||!this.guid||this.applyingChanges_){return}this.networkConfig_.setProperties(this.guid,config).then((response=>{if(!response.success){console.error("Unable to set properties: "+JSON.stringify(config));this.getNetworkDetails_()}}));recordSettingChange()},getStateText_(managedProperties,propertiesReceived,outOfRange,deviceState){if(!managedProperties||!propertiesReceived){return""}if(this.isOutOfRangeOrNotEnabled_(outOfRange,deviceState)){return managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kTether?this.i18n("tetherPhoneOutOfRange"):this.i18n("networkOutOfRange")}return this.i18n(OncMojo.getConnectionStateString(managedProperties.connectionState))},getAutoConnectToggleLabel_(managedProperties){return this.isCellular_(managedProperties)?this.i18n("networkAutoConnectCellular"):this.i18n("networkAutoConnect")},getRoamingDetails_(managedProperties){if(!this.isCellular_(managedProperties)){return""}if(!managedProperties.typeProperties.cellular.allowRoaming){return this.i18n("networkAllowDataRoamingDisabled")}return managedProperties.typeProperties.cellular.roamingState==="Roaming"?this.i18n("networkAllowDataRoamingEnabledRoaming"):this.i18n("networkAllowDataRoamingEnabledHome")},isConnectedState_(managedProperties){return!!managedProperties&&OncMojo.connectionStateIsConnected(managedProperties.connectionState)},isRemembered_(managedProperties){return!!managedProperties&&managedProperties.source!==chromeos.networkConfig.mojom.OncSource.kNone},isRememberedOrConnected_(managedProperties){return this.isRemembered_(managedProperties)||this.isConnectedState_(managedProperties)},isCellular_(managedProperties){return!!managedProperties&&managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kCellular},isTether_(managedProperties){return!!managedProperties&&managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kTether},isBlockedByPolicy_(managedProperties,globalPolicy,managedNetworkAvailable){if(!managedProperties||!globalPolicy||managedProperties.type!==chromeos.networkConfig.mojom.NetworkType.kWiFi||this.isPolicySource(managedProperties.source)){return false}const hexSsid=OncMojo.getActiveString(managedProperties.typeProperties.wifi.hexSsid);return!!globalPolicy.allowOnlyPolicyNetworksToConnect||!!globalPolicy.allowOnlyPolicyNetworksToConnectIfAvailable&&!!managedNetworkAvailable||!!hexSsid&&!!globalPolicy.blockedHexSsids&&globalPolicy.blockedHexSsids.includes(hexSsid)},showConnect_(managedProperties,globalPolicy,managedNetworkAvailable,deviceState){if(!managedProperties){return false}if(this.isBlockedByPolicy_(managedProperties,globalPolicy,managedNetworkAvailable)){return false}if(this.isArcVpn_(managedProperties)){return false}if(managedProperties.connectionState!==chromeos.networkConfig.mojom.ConnectionStateType.kNotConnected){return false}if(deviceState&&deviceState.deviceState!==chromeos.networkConfig.mojom.DeviceStateType.kEnabled){return false}const isEthernet=managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kEthernet;return OncMojo.isNetworkConnectable(managedProperties)&&!isEthernet},showDisconnect_(managedProperties){if(!managedProperties||managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kEthernet){return false}return managedProperties.connectionState!==chromeos.networkConfig.mojom.ConnectionStateType.kNotConnected},showForget_(managedProperties){if(!managedProperties||this.isSecondaryUser_){return false}const type=managedProperties.type;if(type!==chromeos.networkConfig.mojom.NetworkType.kWiFi&&type!==chromeos.networkConfig.mojom.NetworkType.kVPN){return false}if(this.isArcVpn_(managedProperties)){return false}return!this.isPolicySource(managedProperties.source)&&this.isRemembered_(managedProperties)},showActivate_(managedProperties){if(!managedProperties||this.isSecondaryUser_){return false}if(!this.isCellular_(managedProperties)){return false}const activation=managedProperties.typeProperties.cellular.activationState;return activation===chromeos.networkConfig.mojom.ActivationStateType.kNotActivated||activation===chromeos.networkConfig.mojom.ActivationStateType.kPartiallyActivated},showConfigure_(managedProperties,globalPolicy,managedNetworkAvailable){if(!managedProperties||this.isSecondaryUser_){return false}if(this.isBlockedByPolicy_(managedProperties,globalPolicy,managedNetworkAvailable)){return false}const type=managedProperties.type;if(type===chromeos.networkConfig.mojom.NetworkType.kCellular||type===chromeos.networkConfig.mojom.NetworkType.kTether){return false}if(type===chromeos.networkConfig.mojom.NetworkType.kWiFi&&managedProperties.typeProperties.wifi.security===chromeos.networkConfig.mojom.SecurityType.kNone){return false}if(type===chromeos.networkConfig.mojom.NetworkType.kWiFi&&managedProperties.connectionState!==chromeos.networkConfig.mojom.ConnectionStateType.kNotConnected){return false}if(this.isArcVpn_(managedProperties)&&!this.isConnectedState_(managedProperties)){return false}return true},disableForget_(managedProperties,vpnConfigAllowed){if(this.disabled_||!managedProperties){return true}return managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kVPN&&vpnConfigAllowed&&!vpnConfigAllowed.value},disableConfigure_(managedProperties,vpnConfigAllowed){if(this.disabled_||!managedProperties){return true}if(managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kVPN&&vpnConfigAllowed&&!vpnConfigAllowed.value){return true}return this.isPolicySource(managedProperties.source)&&!this.hasRecommendedFields_(managedProperties)},hasRecommendedFields_(managedProperties){if(!managedProperties){return false}for(const value of Object.values(managedProperties)){if(typeof value!=="object"||value===null){continue}if("activeValue"in value){if(this.isNetworkPolicyRecommended(value)){return true}}else if(this.hasRecommendedFields_(value)){return true}}return false},showViewAccount_(managedProperties){if(!managedProperties||this.isSecondaryUser_){return false}if(!this.isCellular_(managedProperties)||this.showActivate_(managedProperties)){return false}const paymentPortal=managedProperties.typeProperties.cellular.paymentPortal;if(!paymentPortal||!paymentPortal.url){return false}if(!this.isConnectedState_(managedProperties)){const technology=managedProperties.typeProperties.cellular.networkTechnology;if(technology!=="LTE"&&technology!=="LTEAdvanced"){return false}if(!managedProperties.typeProperties.cellular.mdn){return false}}return true},enableConnect_(managedProperties,defaultNetwork,propertiesReceived,outOfRange,globalPolicy,managedNetworkAvailable,deviceState){if(!this.showConnect_(managedProperties,globalPolicy,managedNetworkAvailable,deviceState)){return false}if(!propertiesReceived||outOfRange){return false}if(managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kVPN&&!defaultNetwork){return false}if(managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kCellular&&managedProperties.typeProperties.cellular.simLocked){return false}return true},updateAlwaysOnVpnPrefValue_(){this.alwaysOnVpn_.value=this.prefs.arc&&this.prefs.arc.vpn&&this.prefs.arc.vpn.always_on&&this.prefs.arc.vpn.always_on.lockdown&&this.prefs.arc.vpn.always_on.lockdown.value},getFakeVpnConfigPrefForEnforcement_(){const fakeAlwaysOnVpnEnforcementPref={key:"fakeAlwaysOnPref",type:chrome.settingsPrivate.PrefType.BOOLEAN,value:false};if(this.managedProperties_&&this.managedProperties_.type===chromeos.networkConfig.mojom.NetworkType.kVPN&&this.prefs&&this.prefs.vpn_config_allowed&&!this.prefs.vpn_config_allowed.value){fakeAlwaysOnVpnEnforcementPref.enforcement=chrome.settingsPrivate.Enforcement.ENFORCED;fakeAlwaysOnVpnEnforcementPref.controlledBy=this.prefs.vpn_config_allowed.controlledBy}return fakeAlwaysOnVpnEnforcementPref},updateAlwaysOnVpnPrefEnforcement_(){const prefForEnforcement=this.getFakeVpnConfigPrefForEnforcement_();this.alwaysOnVpn_.enforcement=prefForEnforcement.enforcement;this.alwaysOnVpn_.controlledBy=prefForEnforcement.controlledBy},getTetherDialog_(){return this.$$("#tetherDialog")},handleConnectTap_(){if(this.managedProperties_.type===chromeos.networkConfig.mojom.NetworkType.kTether&&!this.managedProperties_.typeProperties.tether.hasConnectedToHost){this.showTetherDialog_();return}this.fireNetworkConnect_(false)},onTetherConnect_(){this.getTetherDialog_().close();this.fireNetworkConnect_(true)},fireNetworkConnect_(bypassDialog){assert(this.managedProperties_);const networkState=OncMojo.managedPropertiesToNetworkState(this.managedProperties_);this.fire("network-connect",{networkState:networkState,bypassConnectionDialog:bypassDialog});recordSettingChange()},handleDisconnectTap_(){this.networkConfig_.startDisconnect(this.guid).then((response=>{if(!response.success){console.error("Disconnect failed for: "+this.guid)}}));recordSettingChange()},onConnectDisconnectTap_(){if(this.enableConnect_(this.managedProperties_,this.defaultNetwork,this.propertiesReceived_,this.outOfRange_,this.globalPolicy,this.managedNetworkAvailable,this.deviceState_)){this.handleConnectTap_();return}if(this.showDisconnect_(this.managedProperties_)){this.handleDisconnectTap_();return}},shouldConnectDisconnectButtonBeHidden_(){return!this.showConnect_(this.managedProperties_,this.globalPolicy,this.managedNetworkAvailable,this.deviceState_)&&!this.showDisconnect_(this.managedProperties_)},shouldConnectDisconnectButtonBeDisabled_(){if(this.disabled_){return true}if(this.enableConnect_(this.managedProperties_,this.defaultNetwork,this.propertiesReceived_,this.outOfRange_,this.globalPolicy,this.managedNetworkAvailable,this.deviceState_)){return false}if(this.showDisconnect_(this.managedProperties_)){return false}return true},getConnectDisconnectButtonLabel_(){if(this.showConnect_(this.managedProperties_,this.globalPolicy,this.managedNetworkAvailable,this.deviceState_)){return this.i18n("networkButtonConnect")}if(this.showDisconnect_(this.managedProperties_)){return this.i18n("networkButtonDisconnect")}return""},onForgetTap_(){this.networkConfig_.forgetNetwork(this.guid).then((response=>{if(!response.success){console.error("Froget network failed for: "+this.guid)}this.close()}));if(this.managedProperties_.type===chromeos.networkConfig.mojom.NetworkType.kWiFi){recordSettingChange(chromeos.settings.mojom.Setting.kForgetWifiNetwork)}else{recordSettingChange()}},onActivateTap_(){this.browserProxy_.showCellularSetupUI(this.guid)},onConfigureTap_(){if(this.managedProperties_&&(this.isThirdPartyVpn_(this.managedProperties_)||this.isArcVpn_(this.managedProperties_))){this.browserProxy_.configureThirdPartyVpn(this.guid);recordSettingChange();return}this.fire("show-config",{guid:this.guid,type:OncMojo.getNetworkTypeString(this.managedProperties_.type),name:OncMojo.getNetworkName(this.managedProperties_)})},onViewAccountTap_(){this.browserProxy_.showCarrierAccountDetail(this.guid)},CR_EXPAND_BUTTON_TAG:"CR-EXPAND-BUTTON",showTetherDialog_(){this.getTetherDialog_().open()},showHiddenNetworkWarning_(){return loadTimeData.getBoolean("showHiddenNetworkWarning")&&!!this.autoConnectPref_&&!!this.autoConnectPref_.value&&!!this.managedProperties_&&this.managedProperties_.type===chromeos.networkConfig.mojom.NetworkType.kWiFi&&!!OncMojo.getActiveValue(this.managedProperties_.typeProperties.wifi.hiddenSsid)},onNetworkPropertyChange_(e){if(!this.propertiesReceived_){return}const field=e.detail.field;const value=e.detail.value;const config=this.getDefaultConfigProperties_();const valueType=typeof value;if(valueType!=="string"&&valueType!=="number"&&valueType!=="boolean"&&!Array.isArray(value)){console.error("Unexpected property change event, Key: "+field+" Value: "+JSON.stringify(value));return}OncMojo.setConfigProperty(config,field,value);const vpnConfig=config.typeConfig.vpn;if(vpnConfig){if(vpnConfig.openVpn&&vpnConfig.openVpn.saveCredentials===undefined){vpnConfig.openVpn.saveCredentials=false}if(vpnConfig.l2tp&&vpnConfig.l2tp.saveCredentials===undefined){vpnConfig.l2tp.saveCredentials=false}}this.setMojoNetworkProperties_(config)},onApnChange_(event){if(!this.propertiesReceived_){return}const config=this.getDefaultConfigProperties_();const apn=event.detail;config.typeConfig.cellular={apn:apn};this.setMojoNetworkProperties_(config)},onIPConfigChange_(event){if(!this.managedProperties_){return}const config=OncMojo.getUpdatedIPConfigProperties(this.managedProperties_,event.detail.field,event.detail.value);if(config){this.setMojoNetworkProperties_(config)}},onProxyChange_(event){if(!this.propertiesReceived_){return}const config=this.getDefaultConfigProperties_();config.proxySettings=event.detail;this.setMojoNetworkProperties_(config)},propertiesMissingOrBlockedByPolicy_(){return!this.managedProperties_||this.isBlockedByPolicy_(this.managedProperties_,this.globalPolicy,this.managedNetworkAvailable)},sharedString_(managedProperties){if(!managedProperties.typeProperties.wifi){return this.i18n("networkShared")}else if(managedProperties.typeProperties.wifi.isConfiguredByActiveUser){return this.i18n("networkSharedOwner")}else{return this.i18n("networkSharedNotOwner")}},syncedString_(managedProperties){if(!managedProperties.typeProperties.wifi){return""}else if(!managedProperties.typeProperties.wifi.isSyncable){return this.i18nAdvanced("networkNotSynced")}else if(managedProperties.source===chromeos.networkConfig.mojom.OncSource.kUser){return this.i18nAdvanced("networkSyncedUser")}else{return this.i18nAdvanced("networkSyncedDevice")}},messagesDividerClass_(name,managedProperties,globalPolicy,managedNetworkAvailable,isSecondaryUser,isWifiSyncEnabled){let first;if(this.isBlockedByPolicy_(managedProperties,globalPolicy,managedNetworkAvailable)){first="policy"}else if(isSecondaryUser){first="secondary"}else if(this.showShared_(managedProperties,globalPolicy,managedNetworkAvailable)){first="shared"}else if(this.showSynced_(managedProperties,globalPolicy,managedNetworkAvailable,isWifiSyncEnabled)){first="synced"}return first===name?"continuation":""},showSynced_(managedProperties,globalPolicy,managedNetworkAvailable,isWifiSyncEnabled){return!this.propertiesMissingOrBlockedByPolicy_()&&isWifiSyncEnabled&&!!managedProperties.typeProperties.wifi},showShared_(managedProperties,globalPolicy,managedNetworkAvailable){return!this.propertiesMissingOrBlockedByPolicy_()&&(managedProperties.source===chromeos.networkConfig.mojom.OncSource.kDevice||managedProperties.source===chromeos.networkConfig.mojom.OncSource.kDevicePolicy)},showAutoConnect_(managedProperties,globalPolicy,managedNetworkAvailable){return!!managedProperties&&managedProperties.type!==chromeos.networkConfig.mojom.NetworkType.kEthernet&&this.isRemembered_(managedProperties)&&!this.isArcVpn_(managedProperties)&&!this.isBlockedByPolicy_(managedProperties,globalPolicy,managedNetworkAvailable)},showHiddenNetwork_(managedProperties,globalPolicy,managedNetworkAvailable){if(!this.showHiddenToggle_){return false}if(!managedProperties){return false}if(managedProperties.type!==chromeos.networkConfig.mojom.NetworkType.kWiFi){return false}if(!this.isRemembered_(managedProperties)){return false}if(this.isBlockedByPolicy_(managedProperties,globalPolicy,managedNetworkAvailable)){return false}return true},showMetered_(){const managedProperties=this.managedProperties_;return this.showMeteredToggle_&&!!managedProperties&&this.isRemembered_(managedProperties)&&(managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kCellular||managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kWiFi)},showAlwaysOnVpn_(managedProperties){return this.isArcVpn_(managedProperties)&&this.prefs.arc&&this.prefs.arc.vpn&&this.prefs.arc.vpn.always_on&&this.prefs.arc.vpn.always_on.vpn_package&&OncMojo.getActiveValue(managedProperties.typeProperties.vpn.host)===this.prefs.arc.vpn.always_on.vpn_package.value},alwaysOnVpnChanged_(){if(this.prefs&&this.prefs.arc&&this.prefs.arc.vpn&&this.prefs.arc.vpn.always_on&&this.prefs.arc.vpn.always_on.lockdown){this.set("prefs.arc.vpn.always_on.lockdown.value",!!this.alwaysOnVpn_&&this.alwaysOnVpn_.value)}},showPreferNetwork_(managedProperties,globalPolicy,managedNetworkAvailable){if(!managedProperties){return false}const type=managedProperties.type;if(type===chromeos.networkConfig.mojom.NetworkType.kEthernet||type===chromeos.networkConfig.mojom.NetworkType.kCellular||this.isArcVpn_(managedProperties)){return false}return this.isRemembered_(managedProperties)&&!this.isBlockedByPolicy_(managedProperties,globalPolicy,managedNetworkAvailable)},shouldPreferNetworkToggleBeDisabled_(){return this.disabled_||this.isNetworkPolicyEnforced(this.managedProperties_.priority)},onPreferNetworkRowClicked_(event){event.stopPropagation();const preferNetworkToggle=this.shadowRoot.querySelector("#preferNetworkToggle");if(!preferNetworkToggle||preferNetworkToggle.disabled){return}this.preferNetwork_=!this.preferNetwork_;recordSettingChange()},hasVisibleFields_(fields){for(let i=0;i<fields.length;++i){const key=OncMojo.getManagedPropertyKey(fields[i]);const value=this.get(key,this.managedProperties_);if(value!==undefined&&value!==""){return true}}return false},hasInfoFields_(){return this.getInfoEditFieldTypes_().length>0||this.hasVisibleFields_(this.getInfoFields_())},getInfoFields_(){if(!this.managedProperties_){return[]}const fields=[];switch(this.managedProperties_.type){case chromeos.networkConfig.mojom.NetworkType.kCellular:if(!this.isUpdatedCellularUiEnabled_){fields.push("cellular.activationState")}fields.push("cellular.servingOperator.name");break;case chromeos.networkConfig.mojom.NetworkType.kTether:fields.push("tether.batteryPercentage","tether.signalStrength","tether.carrier");break;case chromeos.networkConfig.mojom.NetworkType.kVPN:const vpnType=this.managedProperties_.typeProperties.vpn.type;switch(vpnType){case chromeos.networkConfig.mojom.VpnType.kExtension:fields.push("vpn.providerName");break;case chromeos.networkConfig.mojom.VpnType.kArc:fields.push("vpn.type");fields.push("vpn.providerName");break;case chromeos.networkConfig.mojom.VpnType.kOpenVPN:fields.push("vpn.type","vpn.host","vpn.openVpn.username","vpn.openVpn.extraHosts");break;case chromeos.networkConfig.mojom.VpnType.kL2TPIPsec:fields.push("vpn.type","vpn.host","vpn.l2tp.username");break}break;case chromeos.networkConfig.mojom.NetworkType.kWiFi:break}if(OncMojo.isRestrictedConnectivity(this.managedProperties_.portalState)){fields.push("portalState")}return fields},getInfoEditFieldTypes_(){if(!this.managedProperties_){return[]}const editFields={};const type=this.managedProperties_.type;if(type===chromeos.networkConfig.mojom.NetworkType.kVPN){const vpnType=this.managedProperties_.typeProperties.vpn.type;if(vpnType!==chromeos.networkConfig.mojom.VpnType.kExtension){editFields["vpn.host"]="String"}if(vpnType===chromeos.networkConfig.mojom.VpnType.kOpenVPN){editFields["vpn.openVpn.username"]="String";editFields["vpn.openVpn.extraHosts"]="StringArray"}}return editFields},getAdvancedFields_(){if(!this.managedProperties_){return[]}const fields=[];const type=this.managedProperties_.type;switch(type){case chromeos.networkConfig.mojom.NetworkType.kCellular:if(this.isUpdatedCellularUiEnabled_){fields.push("cellular.activationState")}fields.push("cellular.networkTechnology");break;case chromeos.networkConfig.mojom.NetworkType.kWiFi:fields.push("wifi.ssid","wifi.bssid","wifi.signalStrength","wifi.security","wifi.eap.outer","wifi.eap.inner","wifi.eap.subjectMatch","wifi.eap.identity","wifi.eap.anonymousIdentity","wifi.frequency");break}return fields},getDeviceFields_(){if(!this.managedProperties_||this.managedProperties_.type!==chromeos.networkConfig.mojom.NetworkType.kCellular){return[]}const fields=[];const networkState=OncMojo.managedPropertiesToNetworkState(this.managedProperties_);if(!this.isUpdatedCellularUiEnabled_||isActiveSim(networkState,this.deviceState_)){fields.push("cellular.homeProvider.name","cellular.homeProvider.country")}fields.push("cellular.firmwareRevision","cellular.hardwareRevision","cellular.esn","cellular.iccid","cellular.imei","cellular.meid","cellular.min");return fields},hasAdvancedSection_(){if(!this.managedProperties_||!this.propertiesReceived_){return false}if(this.showMetered_()){return true}if(this.managedProperties_.type===chromeos.networkConfig.mojom.NetworkType.kTether){return false}return this.hasAdvancedFields_()||this.hasDeviceFields_()},hasAdvancedFields_(){return this.hasVisibleFields_(this.getAdvancedFields_())},hasDeviceFields_(){return this.hasVisibleFields_(this.getDeviceFields_())},hasNetworkSection_(managedProperties,globalPolicy,managedNetworkAvailable){if(!managedProperties||managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kTether){return false}if(this.isBlockedByPolicy_(managedProperties,globalPolicy,managedNetworkAvailable)){return false}if(managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kCellular){return true}return this.isRememberedOrConnected_(managedProperties)},hasProxySection_(managedProperties,globalPolicy,managedNetworkAvailable){if(!managedProperties||managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kTether){return false}if(this.isBlockedByPolicy_(managedProperties,globalPolicy,managedNetworkAvailable)){return false}return this.isRememberedOrConnected_(managedProperties)},showCellularChooseNetwork_(managedProperties){return!!managedProperties&&managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kCellular&&managedProperties.typeProperties.cellular.supportNetworkScan},showScanningSpinner_(){if(!this.managedProperties_||this.managedProperties_.type!==chromeos.networkConfig.mojom.NetworkType.kCellular){return false}return!!this.deviceState_&&this.deviceState_.scanning},showCellularSim_(managedProperties){return!!managedProperties&&!this.isUpdatedCellularUiEnabled_&&managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kCellular&&managedProperties.typeProperties.cellular.family!=="CDMA"},showCellularSimUpdatedUi_(managedProperties){return!!managedProperties&&this.isUpdatedCellularUiEnabled_&&managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kCellular&&managedProperties.typeProperties.cellular.family!=="CDMA"},isArcVpn_(managedProperties){return!!managedProperties&&managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kVPN&&managedProperties.typeProperties.vpn.type===chromeos.networkConfig.mojom.VpnType.kArc},isThirdPartyVpn_(managedProperties){return!!managedProperties&&managedProperties.type===chromeos.networkConfig.mojom.NetworkType.kVPN&&managedProperties.typeProperties.vpn.type===chromeos.networkConfig.mojom.VpnType.kExtension},showIpAddress_(ipAddress,managedProperties){if(this.isArcVpn_(managedProperties)){return false}if(this.isCellular_(managedProperties)){return false}return!!ipAddress&&this.isConnectedState_(managedProperties)},allPropertiesMatch_(curValue,newValue){for(const key in newValue){if(newValue[key]!==curValue[key]){return false}}return true},isOutOfRangeOrNotEnabled_(outOfRange,deviceState){return outOfRange||!!deviceState&&deviceState.deviceState!==chromeos.networkConfig.mojom.DeviceStateType.kEnabled},computeShowConfigurableSections_(){if(!this.isUpdatedCellularUiEnabled_||!this.managedProperties_||!this.deviceState_){return true}const mojom=chromeos.networkConfig.mojom;const networkState=OncMojo.managedPropertiesToNetworkState(this.managedProperties_);assert(networkState);if(networkState.type!==mojom.NetworkType.kCellular){return true}return isActiveSim(networkState,this.deviceState_)},computeDisabled_(){if(!this.isUpdatedCellularUiEnabled_){return false}if(!this.deviceState_||this.deviceState_.type!==chromeos.networkConfig.mojom.NetworkType.kCellular){return false}return OncMojo.deviceIsInhibited(this.deviceState_)},shouldShowMacAddress_(){return!!this.getMacAddress_()},getMacAddress_(){if(!this.deviceState_){return""}const MISSING_MAC_ADDRESS="00:00:00:00:00:00";if(this.deviceState_&&this.deviceState_.macAddress&&this.deviceState_.macAddress!==MISSING_MAC_ADDRESS){return this.deviceState_.macAddress}return""}});// Copyright 2015 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="internet-shared iron-flex" scope="settings-internet-known-networks-page">cr-policy-indicator {
  margin-inline-start: var(--settings-controlled-by-spacing);
}

</style>

    <div class="settings-box first">
      <div class="settings-box-text">Preferred networks will be preferred over other known networks if more than one is available</div>
    </div>

    <div class="settings-box settings-box-text">
      <div class="secondary">Preferred networks</div>
    </div>
    <div class="list-frame vertical-list" hidden$="[[havePreferred_(networkStateList_)]]">
      <div class="list-item settings-box-text">
        None
      </div>
    </div>
    <div id="preferredNetworkList" class="list-frame vertical-list" hidden$="[[!havePreferred_(networkStateList_)]]">
      <template is="dom-repeat" items="[[networkStateList_]]" filter="networkIsPreferred_">
        <div class="list-item">
          <cr-link-row embedded="" label="[[getNetworkDisplayName_(item)]]" on-click="fireShowDetails_" role-description="Subpage button" deep-link-focus-id$="[[Setting.kForgetWifiNetwork]]">
            <template is="dom-if" if="[[isPolicySource(item.source))]]">
              <cr-policy-indicator on-click="doNothing_" indicator-type="[[getIndicatorTypeForSource(item.source)]]">
              </cr-policy-indicator>
            </template>
          </cr-link-row>
          <div class="separator"></div>
          <cr-icon-button class="icon-more-vert" tabindex$="[[tabindex]]" on-click="onMenuButtonTap_" title="More actions">
          </cr-icon-button>
        </div>
      </template>
    </div>

    <div class="settings-box settings-box-text">
      <div class="secondary">All networks</div>
    </div>
    <div id="notPreferredNetworkList" class="list-frame vertical-list" hidden$="[[!haveNotPreferred_(networkStateList_)]]">
      <template is="dom-repeat" items="[[networkStateList_]]" filter="networkIsNotPreferred_">
        <div class="list-item">
          <cr-link-row embedded="" label="[[getNetworkDisplayName_(item)]]" on-click="fireShowDetails_" role-description="Subpage button" deep-link-focus-id$="[[Setting.kPreferWifiNetwork]]
                  [[Setting.kForgetWifiNetwork]]">
            <template is="dom-if" if="[[isPolicySource(item.source))]]">
              <cr-policy-indicator on-click="doNothing_" indicator-type="[[getIndicatorTypeForSource(item.source)]]">
              </cr-policy-indicator>
            </template>
          </cr-link-row>
          <div class="separator"></div>
          <cr-icon-button class="icon-more-vert" tabindex$="[[tabindex]]" on-click="onMenuButtonTap_" title="More actions">
          </cr-icon-button>
        </div>
      </template>
    </div>

    <cr-action-menu id="dotsMenu" role-description="Menu">
      <button class="dropdown-item" hidden="[[!showAddPreferred_]]" on-click="onAddPreferredTap_">
        Add to preferred
      </button>
      <button class="dropdown-item" hidden="[[!showRemovePreferred_]]" on-click="onRemovePreferredTap_">
        Remove from preferred
      </button>
      <button class="dropdown-item" disabled="[[!enableForget_]]" on-click="onForgetTap_">
        Forget
      </button>
    </cr-action-menu>

<!--_html_template_end_-->`,is:"settings-internet-known-networks-page",behaviors:[DeepLinkingBehavior,NetworkListenerBehavior,CrPolicyNetworkBehaviorMojo,RouteObserverBehavior],properties:{networkType:{type:Number,observer:"networkTypeChanged_"},networkStateList_:{type:Array,value(){return[]}},showAddPreferred_:Boolean,showRemovePreferred_:Boolean,enableForget_:Boolean,pendingSettingId_:{type:Number,value:null},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kPreferWifiNetwork,chromeos.settings.mojom.Setting.kForgetWifiNetwork])}},selectedGuid_:"",networkConfig_:null,created(){this.networkConfig_=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote()},currentRouteChanged(route,oldRoute){if(route!==routes.KNOWN_NETWORKS){return}this.attemptDeepLink().then((result=>{if(!result.deepLinkShown&&result.pendingSettingId){this.pendingSettingId_=result.pendingSettingId}}))},onNetworkStateListChanged(){this.refreshNetworks_()},networkTypeChanged_(){this.refreshNetworks_()},refreshNetworks_(){if(this.networkType===undefined){return}const filter={filter:chromeos.networkConfig.mojom.FilterType.kConfigured,limit:chromeos.networkConfig.mojom.NO_LIMIT,networkType:this.networkType};this.networkConfig_.getNetworkStateList(filter).then((response=>{this.networkStateList_=response.result;if(!this.pendingSettingId_){return}this.showDeepLink(this.pendingSettingId_).then((result=>{if(result.deepLinkShown){this.pendingSettingId_=null}}))}))},networkIsPreferred_(networkState){return networkState.priority>0},networkIsNotPreferred_(networkState){return networkState.priority===0},havePreferred_(){return this.networkStateList_.find((state=>this.networkIsPreferred_(state)))!==undefined},haveNotPreferred_(){return this.networkStateList_.find((state=>this.networkIsNotPreferred_(state)))!==undefined},getNetworkDisplayName_(networkState){return OncMojo.getNetworkStateDisplayName(networkState)},onMenuButtonTap_(event){const button=event.target;const networkState=event.model.item;this.selectedGuid_=networkState.guid;this.networkConfig_.getManagedProperties(this.selectedGuid_).then((response=>{const properties=response.result;if(!properties){console.error("Properties not found for: "+this.selectedGuid_);return}if(properties.priority&&this.isNetworkPolicyEnforced(properties.priority)){this.showAddPreferred_=false;this.showRemovePreferred_=false}else{const preferred=this.networkIsPreferred_(networkState);this.showAddPreferred_=!preferred;this.showRemovePreferred_=preferred}this.enableForget_=!this.isPolicySource(networkState.source);this.$.dotsMenu.showAt(button)}));event.stopPropagation()},setProperties_(config){this.networkConfig_.setProperties(this.selectedGuid_,config).then((response=>{if(!response.success){console.error("Unable to set properties for: "+this.selectedGuid_+": "+JSON.stringify(config))}}));recordSettingChange()},onRemovePreferredTap_(){assert(this.networkType!==undefined);const config=OncMojo.getDefaultConfigProperties(this.networkType);config.priority={value:0};this.setProperties_(config);this.$.dotsMenu.close()},onAddPreferredTap_(){assert(this.networkType!==undefined);const config=OncMojo.getDefaultConfigProperties(this.networkType);config.priority={value:1};this.setProperties_(config);this.$.dotsMenu.close()},onForgetTap_(){this.networkConfig_.forgetNetwork(this.selectedGuid_).then((response=>{if(!response.success){console.error("Froget network failed for: "+this.selectedGuid_)}}));if(this.networkType===chromeos.networkConfig.mojom.NetworkType.kWiFi){recordSettingChange(chromeos.settings.mojom.Setting.kForgetWifiNetwork)}else{recordSettingChange()}this.$.dotsMenu.close()},fireShowDetails_(event){const networkState=event.model.item;this.fire("show-detail",networkState);event.stopPropagation()},doNothing_(event){event.stopPropagation()}});const template$5=document.createElement("template");template$5.innerHTML=`<dom-module id="os-settings-icons" assetpath="chrome://resources/">\n  <template>\n    <style scope="os-settings-icons">cr-icon-button.icon-add-circle {\n  --cr-icon-button-fill-color: var(--google-blue-500);\n        --cr-icon-image: url(chrome://os-settings/images/icon_add_circle.svg);\n}\n\ncr-icon-button.icon-add-wifi {\n  --cr-icon-button-fill-color: var(--google-blue-500);\n        --cr-icon-image: url(chrome://os-settings/images/icon_add_wifi.svg);\n}\n\ncr-icon-button.icon-add-cellular {\n  --cr-icon-button-fill-color: var(--google-blue-500);\n        --cr-icon-image: url(chrome://os-settings/images/icon_add_cellular.svg);\n}\n\n</style>\n  </template>\n</dom-module>\n`;document.body.appendChild(template$5.content.cloneNode(true));// Copyright 2020 The Chromium Authors. All rights reserved.
const ESimManagerListenerBehavior={observer_:null,attached(){observeESimManager(this)},onAvailableEuiccListChanged(){},onProfileListChanged(euicc){},onEuiccChanged(euicc){},onProfileChanged(profile){}};// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared iron-flex" scope="settings-internet-detail-menu">cr-action-menu.dropdown-item {
  min-height: 36px;
}

cr-action-menu hr {
  border: none;
        border-top: var(--cr-separator-line);
        margin: 6px 0 0 0;
}

</style>
    <template is="dom-if" if="[[shouldShowDotsMenuButton_(eSimNetworkState_, isGuest_)]]" restamp="">
      <cr-icon-button class="icon-more-vert" title="More actions" id="moreNetworkDetail" on-click="onDotsClick_" disabled="[[isDotsMenuButtonDisabled_(deviceState.*)]]">
      </cr-icon-button>
    </template>
    <cr-lazy-render id="menu">
      <template>
        <cr-action-menu role-description="Menu">
          <button class="dropdown-item" id="renameBtn" on-click="onRenameESimProfileTap_" role="menuitem">
            Rename Profile
          </button>
          <hr>
          <button class="dropdown-item" on-click="onRemoveESimProfileTap_" role="menuitem" id="removeBtn">
            Remove Profile
          </button>
        </cr-action-menu>
      </template>
    </cr-lazy-render>
<!--_html_template_end_-->`,is:"settings-internet-detail-menu",behaviors:[RouteObserverBehavior,ESimManagerListenerBehavior,DeepLinkingBehavior],properties:{deviceState:Object,eSimNetworkState_:{type:Object,value:null},isUpdatedCellularUiEnabled_:{type:Boolean,value(){return loadTimeData.getBoolean("updatedCellularActivationUi")}},isGuest_:{type:Boolean,value(){return loadTimeData.getBoolean("isGuest")}},guid_:{type:String,value:""},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kCellularRenameESimNetwork,chromeos.settings.mojom.Setting.kCellularRemoveESimNetwork])}},beforeDeepLinkAttempt(settingId){afterNextRender(this,(()=>{const menu=this.$.menu.get();menu.showAt(this.$$("#moreNetworkDetail"));afterNextRender(this,(()=>{let element;if(settingId===chromeos.settings.mojom.Setting.kCellularRenameESimNetwork){element=this.$$("#renameBtn")}else{element=this.$$("#removeBtn")}if(!element){console.warn("Deep link element could not be found");return}this.showDeepLinkElement(element);return}))}));return false},currentRouteChanged(route,oldRoute){this.eSimNetworkState_=null;this.guid_="";if(route!==routes.NETWORK_DETAIL||!this.isUpdatedCellularUiEnabled_){return}const queryParams=Router.getInstance().getQueryParameters();const guid=queryParams.get("guid")||"";if(!guid){console.error("No guid specified for page:"+route);return}this.guid_=guid;this.setESimNetworkState_();this.attemptDeepLink()},onProfileChanged(profile){this.setESimNetworkState_()},setESimNetworkState_(){const networkConfig=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote();networkConfig.getNetworkState(this.guid_).then((response=>{if(!response.result||response.result.type!==chromeos.networkConfig.mojom.NetworkType.kCellular||!response.result.typeState.cellular.eid||!response.result.typeState.cellular.iccid){this.eSimNetworkState_=null;console.warn("Unable to find eSIM network with GUID: ",this.guid_);return}this.eSimNetworkState_=response.result}))},onDotsClick_(e){const menu=this.$.menu.get();menu.showAt(e.target)},shouldShowDotsMenuButton_(){if(!this.isUpdatedCellularUiEnabled_){return false}if(this.isGuest_){return false}return!!this.eSimNetworkState_},isDotsMenuButtonDisabled_(){if(!this.deviceState||!this.isUpdatedCellularUiEnabled_){return false}return OncMojo.deviceIsInhibited(this.deviceState)},onRenameESimProfileTap_(e){this.closeMenu_();this.fire("show-esim-profile-rename-dialog",{networkState:this.eSimNetworkState_})},onRemoveESimProfileTap_(e){this.closeMenu_();this.fire("show-esim-remove-profile-dialog",{networkState:this.eSimNetworkState_})},closeMenu_(){const actionMenu=this.$$("cr-action-menu");actionMenu.close()}});// Copyright 2016 The Chromium Authors. All rights reserved.
const NetworkList={};NetworkList.CustomItemType={OOBE:1,ESIM_PENDING_PROFILE:2,ESIM_INSTALLING_PROFILE:3};// Copyright 2015 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style internet-shared iron-flex" scope="network-list-item">:host {
  display: inline-flex;
        outline: none;
        --network-list-item-disabled-opacity: 0.4;
}

#divOuter {
  height: var(--cr-network-row-height, 48px);
        overflow: auto;
        padding-inline-end: var(--cr-icon-ripple-padding);
}

:host([disabled_]) {
  cursor: auto;
        pointer-events: none;
}

:host([disabled_]) #networkIconContainer, :host([disabled_]) #networkStateText, :host([disabled_]) #divText, :host([is-e-sim-pending-profile_]) #divText, :host([is-e-sim-pending-profile_]) #divIcon, :host([is-p-sim-unactivated-network_]) #divText, :host([is-p-sim-unactivated-network_]) #networkIconContainer, :host([is-p-sim-activating-network_]) #divText, :host([is-p-sim-activating-network_]) #networkIconContainer {
  opacity: var(--network-list-item-disabled-opacity);
}

:host(:not([is-e-sim-pending-profile_]) :not([is-e-sim-installing-profile_])) #divIcon {
  height: 24px;
        width: 24px;
}

:host([is-e-sim-pending-profile_]) #divIcon, :host([is-e-sim-installing-profile_]) #divIcon {
  height: 20px;
        padding-inline-end: 20px;
        width: 20px;
}

#divDetail {
  display: flex;
        flex: 1 0 auto;
        flex-direction: row;
}

#divText {
  display: flex;
        flex: 1 0 auto;
        flex-direction: column;
        justify-content: center;
        margin-inline-start: 20px;
}

#networkStateText {
  font-size: inherit;
}

#networkStateText[active] {
  color: var(--google-green-500);
}

.warning {
  color: var(--google-yellow-700);
}

cr-policy-indicator {
  padding: 0 var(--cr-controlled-by-spacing);
}

#wrapper {
  height: 100%;
}

cr-button iron-icon {
  margin-inline-end: 8px;
}

:host(:not([disabled_])) cr-button iron-icon {
  --iron-icon-fill-color: #1A73E8;
}

:host([disabled_]) cr-button iron-icon {
  --iron-icon-fill-color: var(--google-grey-600);
}

paper-spinner-lite {
  height: 20px;
        margin-inline-end: 16px;
        width: 20px;
}

.separator {
  margin: 0 0 0 32px;
}

</style>
    <div id="wrapper" focus-row-container="" class="layout horizontal center flex">
      <div id="divOuter" class="layout horizontal center flex" actionable="" focus-row-control="" selectable="" aria-label$="[[rowLabel]]" aria-live="[[getLiveStatus_(isFocused)]]" role="button" focus-type="rowWrapper" on-keydown="onKeydown_" on-click="onSelected_">
        <div id="networkIconContainer">
          <template is="dom-if" if="[[networkState]]">
            <network-icon is-list-item="" show-technology-badge="[[showTechnologyBadge]]" network-state="[[networkState]]">
            </network-icon>
          </template>
        </div>
        <template is="dom-if" if="[[item.polymerIcon]]">
          <iron-icon id="divIcon" icon="[[item.polymerIcon]]"></iron-icon>
        </template>
        <div id="divText" class="layout horizontal flex">
          <div id="itemTitle" aria-hidden="true">
            [[itemTitle_]]
          </div>
          <div id="networkStateText" class$="[[getNetworkStateTextClass_(networkState.*,
                  isPSimUnavailableNetwork_)]]" hidden$="[[!isStateTextVisible_(networkState.*,
                  isPSimUnavailableNetwork_)]]" active$="[[isStateTextActive_(networkState.*,
                           activationUnavailable)]]">
            [[getNetworkStateText_(networkState.*, activationUnavailable,
                deviceState.*, isPSimUnavailableNetwork_)]]
          </div>
        </div>
        <template is="dom-if" if="[[isPolicySource(networkState.source)]]">
          <cr-policy-indicator indicator-type="[[getIndicatorTypeForSource(
              networkState.source)]]">
          </cr-policy-indicator>
        </template>
        <!-- This can only be shown if isUpdatedCellularUiEnabled_ is enabled. -->
        <template is="dom-if" if="[[shouldShowActivateButton_(isPSimPendingActivationNetwork_,
              showButtons)]]" restamp="">
          <cr-button id="activateButton" aria-label$="[[getActivateBtnA11yLabel_(item)]]" on-click="onActivateButtonClick_" disabled="[[disabled_]]">
            [[i18n('networkListItemActivate')]]
          </cr-button>
          <div class="separator"></div>
        </template>
        <!-- This can only be shown if isUpdatedCellularUiEnabled_ is enabled. -->
        <template is="dom-if" if="[[isPSimActivatingNetwork_]]" restamp="">
          <paper-spinner-lite id="activatingPSimSpinner" active="">
          </paper-spinner-lite>
          [[i18n('networkListItemActivating')]]
          <div class="separator" hidden$="[[!showButtons]]"></div>
        </template>
        <template is="dom-if" if="[[isSubpageButtonVisible_(networkState, showButtons, disabled_,
              networkState.typeState.cellular.simLocked,
              isPSimPendingActivationNetwork_, isPSimActivatingNetwork_)]]" restamp="">
          <div>
            <cr-icon-button class="subpage-arrow" id="subpageButton" on-click="onSubpageArrowClick_" tabindex$="[[tabindex]]" aria-label$="[[buttonLabel]]" focus-row-control="" focus-type="subpageButton">
            </cr-icon-button>
          </div>
        </template>
        <template is="dom-if" if="[[shouldShowUnlockButton_(networkState,
          networkState.typeState.cellular.simLocked, showButtons)]]" restamp="">
          <cr-button id="unlockButton" aria-label$="[[getUnlockBtnA11yLabel_(item)]]" on-click="onUnlockButtonClick_" disabled="[[disabled_]]">
              [[i18n('networkListItemUnlock')]]
          </cr-button>
        </template>
        <template is="dom-if" if="[[shouldShowInstallButton_(
            isESimPendingProfile_, showButtons)]]" restamp="">
          <cr-button id="installButton" aria-label$="[[getInstallBtnA11yLabel_(item)]]" on-click="onInstallButtonClick_" disabled="[[disabled_]]">
            <iron-icon icon="network:download"></iron-icon>
            [[i18n('networkListItemDownload')]]
          </cr-button>
        </template>
        <template is="dom-if" if="[[isESimInstallingProfile_]]" restamp="">
          <paper-spinner-lite id="installingESimSpinner" active="">
          </paper-spinner-lite>
          [[i18n('networkListItemAddingProfile')]]
        </template>
      </div>
    </div>
    <template is="dom-if" if="[[isCellularUnlockDialogOpen_]]" restamp="">
      <sim-lock-dialogs is-dialog-open="{{isCellularUnlockDialogOpen_}}" device-state="[[deviceState]]">
      </sim-lock-dialogs>
    </template>
<!--_html_template_end_-->`,is:"network-list-item",behaviors:[CrPolicyNetworkBehaviorMojo,I18nBehavior,FocusRowBehavior],properties:{disabled_:{type:Boolean,reflectToAttribute:true,observer:"disabledChanged_",computed:"computeDisabled_(deviceState, deviceState.inhibitReason)"},item:{type:Object,observer:"itemChanged_"},networkState:{type:Object,observer:"networkStateChanged_"},showButtons:{type:Boolean,reflectToAttribute:true},tabindex:{type:Number,value:-1},rowLabel:{type:String,notify:true,computed:"getRowLabel_(item, networkState, subtitle_, isPSimPendingActivationNetwork_)"},buttonLabel:{type:String,computed:"getButtonLabel_(item)"},role:{type:String,reflectToAttribute:true,value:"button"},connectionState_:Number,showTechnologyBadge:{type:Boolean,value:true},activationUnavailable:{type:Boolean,value:false},deviceState:Object,managedProperties_:Object,itemTitle_:{type:String,value:""},subtitle_:{type:String,value:""},isUpdatedCellularUiEnabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("updatedCellularActivationUi")}},isPSimPendingActivationNetwork_:{type:Boolean,reflectToAttribute:true,value:false,computed:"computeIsPSimPendingActivationNetwork_(managedProperties_)"},isPSimUnavailableNetwork_:{type:Boolean,reflectToAttribute:true,value:false,computed:"computeIsPSimUnavailableNetwork_(managedProperties_)"},isPSimActivatingNetwork_:{type:Boolean,reflectToAttribute:true,value:false,computed:"computeIsPSimActivatingNetwork_(networkState.*)"},isESimPendingProfile_:{type:Boolean,reflectToAttribute:true,value:false,computed:"computeIsESimPendingProfile_(item, item.customItemType)"},isESimInstallingProfile_:{type:Boolean,reflectToAttribute:true,value:false,computed:"computeIsESimInstallingProfile_(item, item.customItemType)"},isCellularUnlockDialogOpen_:{type:Boolean,value:false}},networkConfig_:null,created(){this.networkConfig_=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote()},attached(){this.listen(this,"keydown","onKeydown_")},detached(){this.unlisten(this,"keydown","onKeydown_")},async itemChanged_(){if(this.item&&!this.item.hasOwnProperty("customItemType")){this.networkState=this.item}else{this.networkState=undefined}await this.setSubtitle_();this.setItemTitle_()},async setSubtitle_(){const mojom=chromeos.networkConfig.mojom;if(this.item.hasOwnProperty("customItemSubtitle")&&this.item.customItemSubtitle){const item=this.item;this.subtitle_=item.customItemSubtitle;return}if(!this.isUpdatedCellularUiEnabled_){return}this.subtitle_="";if(!this.networkState||this.networkState.type!==mojom.NetworkType.kCellular||!this.networkState.typeState.cellular.eid||!this.networkState.typeState.cellular.iccid){return}const properties=await getESimProfileProperties(this.networkState.typeState.cellular.iccid);if(!properties){return}if(!this.networkState||!this.networkState.typeState.cellular||this.networkState.typeState.cellular.iccid!==properties.iccid){return}this.subtitle_=properties.serviceProvider.data.map((charCode=>String.fromCharCode(charCode))).join("")},networkStateChanged_(){if(!this.networkState){this.managedProperties_=undefined;return}if(this.networkState.guid){this.networkConfig_.getManagedProperties(this.networkState.guid).then((response=>{this.managedProperties_=response.result}))}else{this.managedProperties_=undefined}const connectionState=this.networkState.connectionState;if(connectionState===this.connectionState_){return}this.connectionState_=connectionState;this.fire("network-connect-changed",this.networkState)},setItemTitle_(){const itemName=this.getItemName_();const subtitle=this.getSubtitle();if(!subtitle){this.itemTitle_=itemName;return}this.itemTitle_=this.i18n("networkListItemTitle",itemName,subtitle)},getItemName_(){if(this.item.hasOwnProperty("customItemName")){const item=this.item;return this.i18nExists(item.customItemName)?this.i18n(item.customItemName):item.customItemName}return OncMojo.getNetworkStateDisplayName(this.item)},getButtonLabel_(){return this.i18n("networkListItemSubpageButtonLabel",this.getItemName_())},computeDisabled_(){if(!this.deviceState||!this.isUpdatedCellularUiEnabled_){return false}return OncMojo.deviceIsInhibited(this.deviceState)},getRowLabel_(){if(!this.item){return""}const NetworkType=chromeos.networkConfig.mojom.NetworkType;const OncSource=chromeos.networkConfig.mojom.OncSource;const SecurityType=chromeos.networkConfig.mojom.SecurityType;const status=this.getNetworkStateText_();const isManaged=this.item.source===OncSource.kDevicePolicy||this.item.source===OncSource.kUserPolicy;let index;let total;if(this.parentElement.items){index=this.parentElement.items.indexOf(this.item)+1;total=this.parentElement.items.length}else{index=0;total=1}switch(this.item.type){case NetworkType.kCellular:if(isManaged){if(status){if(this.subtitle_){return this.i18n("networkListItemLabelCellularManagedWithConnectionStatusAndProviderName",index,total,this.getItemName_(),this.subtitle_,status,this.item.typeState.cellular.signalStrength)}return this.i18n("networkListItemLabelCellularManagedWithConnectionStatus",index,total,this.getItemName_(),status,this.item.typeState.cellular.signalStrength)}if(this.subtitle_){return this.i18n("networkListItemLabelCellularManagedWithProviderName",index,total,this.getItemName_(),this.subtitle_,this.item.typeState.cellular.signalStrength)}return this.i18n("networkListItemLabelCellularManaged",index,total,this.getItemName_(),this.item.typeState.cellular.signalStrength)}if(status){if(this.isPSimPendingActivationNetwork_){return this.i18n("networkListItemLabelCellularUnactivatedWithConnectionStatus",index,total,this.getItemName_(),status,this.item.typeState.cellular.signalStrength)}if(this.subtitle_){return this.i18n("networkListItemLabelCellularWithConnectionStatusAndProviderName",index,total,this.getItemName_(),this.subtitle_,status,this.item.typeState.cellular.signalStrength)}return this.i18n("networkListItemLabelCellularWithConnectionStatus",index,total,this.getItemName_(),status,this.item.typeState.cellular.signalStrength)}if(this.isPSimPendingActivationNetwork_){return this.i18n("networkListItemLabelCellularUnactivated",index,total,this.getItemName_(),this.item.typeState.cellular.signalStrength)}if(this.subtitle_){return this.i18n("networkListItemLabelCellularWithProviderName",index,total,this.getItemName_(),this.subtitle_,this.item.typeState.cellular.signalStrength)}return this.i18n("networkListItemLabelCellular",index,total,this.getItemName_(),this.item.typeState.cellular.signalStrength);case NetworkType.kEthernet:if(isManaged){if(status){return this.i18n("networkListItemLabelCellularManagedWithConnectionStatus",index,total,this.getItemName_(),status)}return this.i18n("networkListItemLabelEthernetManaged",index,total,this.getItemName_())}if(status){return this.i18n("networkListItemLabelEthernetWithConnectionStatus",index,total,this.getItemName_(),status)}return this.i18n("networkListItemLabel",index,total,this.getItemName_());case NetworkType.kTether:if(status){if(this.subtitle_){return this.i18n("networkListItemLabelTetherWithConnectionStatusAndProviderName",index,total,this.getItemName_(),this.subtitle_,status,this.item.typeState.tether.signalStrength,this.item.typeState.tether.batteryPercentage)}return this.i18n("networkListItemLabelTetherWithConnectionStatus",index,total,this.getItemName_(),status,this.item.typeState.tether.signalStrength,this.item.typeState.tether.batteryPercentage)}if(this.subtitle_){return this.i18n("networkListItemLabelTetherWithProviderName",index,total,this.getItemName_(),this.subtitle_,this.item.typeState.tether.signalStrength,this.item.typeState.tether.batteryPercentage)}return this.i18n("networkListItemLabelTether",index,total,this.getItemName_(),this.item.typeState.tether.signalStrength,this.item.typeState.tether.batteryPercentage);case NetworkType.kWiFi:const secured=this.item.typeState.wifi.security===SecurityType.kNone?this.i18n("wifiNetworkStatusUnsecured"):this.i18n("wifiNetworkStatusSecured");if(isManaged){if(status){return this.i18n("networkListItemLabelWifiManagedWithConnectionStatus",index,total,this.getItemName_(),secured,status,this.item.typeState.wifi.signalStrength)}return this.i18n("networkListItemLabelWifiManaged",index,total,this.getItemName_(),secured,this.item.typeState.wifi.signalStrength)}if(status){return this.i18n("networkListItemLabelWifiWithConnectionStatus",index,total,this.getItemName_(),secured,status,this.item.typeState.wifi.signalStrength)}return this.i18n("networkListItemLabelWifi",index,total,this.getItemName_(),secured,this.item.typeState.wifi.signalStrength);default:if(this.isESimPendingProfile_){if(this.subtitle_){return this.i18n("networkListItemLabelESimPendingProfileWithProviderName",index,total,this.getItemName_(),this.subtitle_)}return this.i18n("networkListItemLabelESimPendingProfile",index,total,this.getItemName_())}else if(this.isESimInstallingProfile_){if(this.subtitle_){return this.i18n("networkListItemLabelESimPendingProfileWithProviderNameInstalling",index,total,this.getItemName_(),this.subtitle_)}return this.i18n("networkListItemLabelESimPendingProfileInstalling",index,total,this.getItemName_())}return this.i18n("networkListItemLabel",index,total,this.getItemName_())}},isStateTextVisible_(){return!!this.networkState&&!!this.getNetworkStateText_()},getNetworkStateText_(){const mojom=chromeos.networkConfig.mojom;if(!this.networkState){return""}if(this.networkState.type===mojom.NetworkType.kCellular){if(this.networkState.typeState.cellular.simLocked){return this.isUpdatedCellularUiEnabled_?this.i18n("networkListItemUpdatedCellularSimCardLocked"):this.i18n("networkListItemSimCardLocked")}if(!this.isUpdatedCellularUiEnabled_&&this.shouldShowNotAvailableText_()){return this.i18n("networkListItemNotAvailable")}if(!this.isUpdatedCellularUiEnabled_&&this.isCellularNetworkScanning_()){return this.i18n("networkListItemScanning")}if(this.isPSimUnavailableNetwork_){return this.i18n("networkListItemUnavailableSimNetwork")}}const connectionState=this.networkState.connectionState;if(OncMojo.connectionStateIsConnected(connectionState)){return this.i18n("networkListItemConnected")}if(connectionState===mojom.ConnectionStateType.kConnecting){return this.i18n("networkListItemConnecting")}return""},getNetworkStateTextClass_(){const mojom=chromeos.networkConfig.mojom;if(this.networkState&&this.networkState.type===mojom.NetworkType.kCellular&&this.networkState.typeState.cellular.simLocked&&this.isUpdatedCellularUiEnabled_){return"warning"}if(this.isPSimUnavailableNetwork_){return"warning"}return"cr-secondary-text"},getSubtitle(){return this.subtitle_?this.subtitle_:""},isSubpageButtonVisible_(networkState,showButtons,disabled_){if(!this.showButtons){return false}if(this.isPSimPendingActivationNetwork_||this.isPSimActivatingNetwork_){return true}return!!networkState&&!disabled_&&!this.shouldShowUnlockButton_()},isStateTextActive_(){if(!this.networkState){return false}if(this.shouldShowNotAvailableText_()){return false}return OncMojo.connectionStateIsConnected(this.networkState.connectionState)},onKeydown_(event){if(event.key!=="Enter"&&event.key!==" "){return}this.onSelected_(event);event.preventDefault()},onSelected_(event){if(this.disabled_){event.stopImmediatePropagation();return}if(this.isSubpageButtonVisible_(this.networkState,this.showButtons,this.disabled_)&&this.$$("#subpageButton")===this.shadowRoot.activeElement){this.fireShowDetails_(event)}else if(this.shouldShowInstallButton_()){this.onInstallButtonClick_(event)}else if(this.shouldShowUnlockButton_()){this.onUnlockButtonClick_()}else if(this.item&&this.item.hasOwnProperty("customItemName")){this.fire("custom-item-selected",this.item)}else if(this.shouldShowActivateButton_()){this.fireShowDetails_(event)}else if(this.showButtons&&(this.isPSimUnavailableNetwork_||this.isPSimActivatingNetwork_)){this.fireShowDetails_(event)}else{this.fire("selected",this.item);this.focusRequested_=true}},onSubpageArrowClick_(event){this.fireShowDetails_(event)},fireShowDetails_(event){assert(this.networkState);this.fire("show-detail",this.networkState);event.stopPropagation()},shouldShowNotAvailableText_(){if(!this.networkState||!this.activationUnavailable){return false}const mojom=chromeos.networkConfig.mojom;return this.networkState.type===mojom.NetworkType.kCellular&&this.networkState.typeState.cellular.activationState!==mojom.ActivationStateType.kActivated},getLiveStatus_(isFocused){return this.isFocused?"polite":"off"},onInstallButtonClick_(event){if(this.disabled_){return}this.fire("install-profile",{iccid:this.item.customData.iccid});event.stopPropagation()},computeIsESimPendingProfile_(){return!!this.item&&this.item.hasOwnProperty("customItemType")&&this.item.customItemType===NetworkList.CustomItemType.ESIM_PENDING_PROFILE},computeIsESimInstallingProfile_(){return!!this.item&&this.item.hasOwnProperty("customItemType")&&this.item.customItemType===NetworkList.CustomItemType.ESIM_INSTALLING_PROFILE},isUnactivatedPSimNetwork_(cellularProperties){if(!cellularProperties||cellularProperties.eid){return false}return cellularProperties.activationState===chromeos.networkConfig.mojom.ActivationStateType.kNotActivated},hasPaymentPortalInfo_(cellularProperties){if(!cellularProperties){return false}return!!(cellularProperties.paymentPortal&&cellularProperties.paymentPortal.url)},computeIsPSimPendingActivationNetwork_(managedProperties){if(!this.isUpdatedCellularUiEnabled_){return false}if(!managedProperties){return false}const cellularProperties=managedProperties.typeProperties.cellular;return this.isUnactivatedPSimNetwork_(cellularProperties)&&this.hasPaymentPortalInfo_(cellularProperties)},shouldShowActivateButton_(){if(!this.showButtons){return false}return this.isPSimPendingActivationNetwork_},getActivateBtnA11yLabel_(){return this.i18n("networkListItemActivateA11yLabel",this.getItemName_())},onActivateButtonClick_(event){this.fire("show-cellular-setup",{pageName:CellularSetupPageName.PSIM_FLOW_UI});event.stopPropagation()},computeIsPSimUnavailableNetwork_(managedProperties){if(!this.isUpdatedCellularUiEnabled_){return false}if(!managedProperties){return false}const cellularProperties=managedProperties.typeProperties.cellular;return this.isUnactivatedPSimNetwork_(cellularProperties)&&!this.hasPaymentPortalInfo_(cellularProperties)},computeIsPSimActivatingNetwork_(){if(!this.isUpdatedCellularUiEnabled_){return false}if(!this.networkState||!this.networkState.typeState.cellular||this.networkState.typeState.cellular.eid){return false}return this.networkState.typeState.cellular.activationState===chromeos.networkConfig.mojom.ActivationStateType.kActivating},isCellularNetworkScanning_(){if(!this.deviceState||!this.deviceState.scanning){return false}const iccid=this.networkState&&this.networkState.typeState.cellular&&this.networkState.typeState.cellular.iccid;if(!iccid){return false}return this.deviceState.simInfos.some((simInfo=>simInfo.iccid===iccid&&simInfo.isPrimary))},onUnlockButtonClick_(){this.isCellularUnlockDialogOpen_=true},shouldShowUnlockButton_(){if(!this.showButtons){return false}if(!this.networkState||!this.networkState.typeState.cellular||!this.isUpdatedCellularUiEnabled_){return false}return this.networkState.typeState.cellular.simLocked},getUnlockBtnA11yLabel_(){return this.i18n("networkListItemUnlockA11YLabel",this.getItemName_())},shouldShowInstallButton_(){if(!this.showButtons){return false}return this.isESimPendingProfile_},getInstallBtnA11yLabel_(){return this.i18n("networkListItemDownloadA11yLabel",this.getItemName_())},disabledChanged_(newValue,oldValue){if(!newValue&&oldValue===undefined){return}if(this.disabled_){this.blur()}this.setAttribute("aria-disabled",!!this.disabled_)}});// Copyright 2015 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style iron-flex" scope="network-list">network-list-item {
  align-items: center;
}

#container {
  overflow-x: hidden;
        overflow-y: auto;
}

#networkList {
  height: 100%;
}

#container[no-bottom-scroll-border] {
  border-bottom-color: transparent;
}

iron-list > *:not(:first-of-type) {
  border-top: var(--cr-separator-line);
}

</style>
    <div id="container" class="layout vertical flex" scrollable="" no-bottom-scroll-border$="[[noBottomScrollBorder]]">
      <iron-list id="networkList" items="[[listItems_]]" scroll-target="container" preserve-focus="">
        <template>
          <network-list-item item="[[item]]" show-technology-badge="[[showTechnologyBadge]]" show-buttons="[[showButtons]]" tabindex$="[[tabIndex]]" focus-row-index="[[index]]" iron-list-tab-index="[[tabIndex]]" activation-unavailable="[[activationUnavailable]]" last-focused="{{lastFocused_}}" list-blurred="{{listBlurred_}}" device-state="[[deviceState]]">
          </network-list-item>
        </template>
      </iron-list>
    </div>
<!--_html_template_end_-->`,is:"network-list",properties:{networks:{type:Array,value(){return[]}},customItems:{type:Array,value(){return[]}},showButtons:{type:Boolean,value:false,reflectToAttribute:true},showTechnologyBadge:{type:Boolean,value:true},selectedItem:{type:Object,observer:"selectedItemChanged_"},activationUnavailable:Boolean,deviceState:Object,listItems_:{type:Array,value(){return[]}},lastFocused_:Object,listBlurred_:Boolean},behaviors:[CrScrollableBehavior,ListPropertyUpdateBehavior],observers:["updateListItems_(networks, customItems)"],resizeObserver_:null,attached(){this.resizeObserver_=new ResizeObserver((entries=>{const networkList=this.$$("#networkList");if(networkList){networkList.notifyResize()}}));this.resizeObserver_.observe(this)},detached(){this.resizeObserver_.disconnect()},focusRequested_:false,focus(){this.focusRequested_=true;this.focusFirstItem_()},updateListItems_:function(){const beforeNetworks=this.customItems.filter((n=>n.showBeforeNetworksList===true));const afterNetworks=this.customItems.filter((n=>n.showBeforeNetworksList===false));const newList=beforeNetworks.concat(this.networks,afterNetworks);this.updateList("listItems_",(item=>item.guid),newList);this.updateScrollableContents();if(this.focusRequested_){this.async((function(){this.focusFirstItem_()}))}},focusFirstItem_(){const item=this.$$("network-list-item");if(!item){return}item.focus();this.focusRequested_=false}});// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const QR_CODE_TILE_SIZE=5;const QR_CODE_FILL_STYLE="#000000";Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style iron-flex" scope="cellular-eid-dialog">:host {
  --cr-dialog-body-padding-horizontal: 24px;
        --cr-dialog-button-container-padding-bottom: 20px;
        --cr-dialog-button-container-padding-horizontal: 24px;
        --cr-dialog-width: 320px;
        --cr-dialog-title-slot-padding-bottom: 12px;
        --cr-dialog-title-slot-padding-end: 24px;
        --cr-dialog-title-slot-padding-start: 24px;
        --cr-dialog-title-font-size: calc(16 / 13 * 100%);
}

.cellular-network-list-header {
  border-top: var(--cr-separator-line);
        padding: 16px 0 8px 0;
}

.cellular-network-content {
  margin: 8px 0 8px 32px;
}

.cellular-not-setup {
  color: var(--google-grey-700);
        font-size: smaller;
        margin-bottom: 16px;
}

#qrCodeCanvas {
  display: block;
        margin: 20px auto 16px auto;
        max-width: calc(var(--cr-dialog-width) -
            var(--cr-dialog-title-slot-padding-start) -
            var(--cr-dialog-title-slot-padding-end));
}

#eid {
  margin-top: 16px;
}

</style>
    <cr-dialog id="eidDialog" show-on-attach="">
      <div slot="title">[[i18n('eidPopupTitle')]]</div>
      <div slot="body" aria-label="[[getA11yLabel_(eid_)]]">
        <div id="eidDescription" aria-hidden="true">
          [[i18n('eidPopupDescription')]]
        </div>
        <div id="eid" aria-hidden="true">[[eid_]]</div>
        <canvas id="qrCodeCanvas" width="[[canvasSize_]]" height="[[canvasSize_]]">
        </canvas>
      </div>
      <div slot="button-container">
        <cr-button id="done" class="action-button" on-click="onDonePressed_">
          [[i18n('done')]]
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"cellular-eid-dialog",behaviors:[I18nBehavior],properties:{euicc:Object,canvasSize_:Number,eid_:String},canvasContext_:null,attached(){if(!this.euicc){return}this.euicc.getEidQRCode().then(this.updateQRCode_.bind(this));this.euicc.getProperties().then(this.updateEid_.bind(this));requestAnimationFrame((()=>{this.$.done.focus()}))},onDonePressed_(){this.$.eidDialog.close()},updateQRCode_(response){if(!response||!response.qrCode){return}this.canvasSize_=response.qrCode.size*QR_CODE_TILE_SIZE;flush();const context=this.getCanvasContext_();context.clearRect(0,0,this.canvasSize_,this.canvasSize_);context.fillStyle=QR_CODE_FILL_STYLE;let index=0;for(let x=0;x<response.qrCode.size;x++){for(let y=0;y<response.qrCode.size;y++){if(response.qrCode.data[index]){context.fillRect(x*QR_CODE_TILE_SIZE,y*QR_CODE_TILE_SIZE,QR_CODE_TILE_SIZE,QR_CODE_TILE_SIZE)}index++}}},updateEid_(response){if(!response||!response.properties){return}this.eid_=response.properties.eid},getCanvasContext_(){if(this.canvasContext_){return this.canvasContext_}return this.$.qrCodeCanvas.getContext("2d")},setCanvasContextForTest(canvasContext){this.canvasContext_=canvasContext},getA11yLabel_(eid){return this.i18n("eidPopupA11yLabel",eid)}});// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const SmartLockSignInEnabledState={ENABLED:"enabled",DISABLED:"disabled"};const MultiDeviceSettingsMode={NO_ELIGIBLE_HOSTS:0,NO_HOST_SET:1,HOST_SET_WAITING_FOR_SERVER:2,HOST_SET_WAITING_FOR_VERIFICATION:3,HOST_SET_VERIFIED:4};const MultiDeviceFeature={BETTER_TOGETHER_SUITE:0,INSTANT_TETHERING:1,MESSAGES:2,SMART_LOCK:3,PHONE_HUB:4,PHONE_HUB_NOTIFICATIONS:5,PHONE_HUB_TASK_CONTINUATION:6,WIFI_SYNC:7,ECHE:8};const MultiDeviceFeatureState={PROHIBITED_BY_POLICY:0,DISABLED_BY_USER:1,ENABLED_BY_USER:2,NOT_SUPPORTED_BY_CHROMEBOOK:3,NOT_SUPPORTED_BY_PHONE:4,UNAVAILABLE_NO_VERIFIED_HOST:5,UNAVAILABLE_INSUFFICIENT_SECURITY:6,UNAVAILABLE_SUITE_DISABLED:7,FURTHER_SETUP_REQUIRED:8,UNAVAILABLE_TOP_LEVEL_FEATURE_DISABLED:9};const PhoneHubNotificationAccessStatus={PROHIBITED:0,AVAILABLE_BUT_NOT_GRANTED:1,ACCESS_GRANTED:2};let MultiDevicePageContentData;// Copyright 2018 The Chromium Authors. All rights reserved.
class MultiDeviceBrowserProxy{showMultiDeviceSetupDialog(){}getPageContentData(){}setFeatureEnabledState(feature,enabled,opt_authToken){}removeHostDevice(){}retryPendingHostSetup(){}setUpAndroidSms(){}getSmartLockSignInEnabled(){}setSmartLockSignInEnabled(enabled,opt_authToken){}getSmartLockSignInAllowed(){}getAndroidSmsInfo(){}attemptNotificationSetup(){}cancelNotificationSetup(){}}class MultiDeviceBrowserProxyImpl{showMultiDeviceSetupDialog(){chrome.send("showMultiDeviceSetupDialog")}getPageContentData(){return sendWithPromise("getPageContentData")}setFeatureEnabledState(feature,enabled,opt_authToken){return sendWithPromise("setFeatureEnabledState",feature,enabled,opt_authToken)}removeHostDevice(){chrome.send("removeHostDevice")}retryPendingHostSetup(){chrome.send("retryPendingHostSetup")}setUpAndroidSms(){chrome.send("setUpAndroidSms")}getSmartLockSignInEnabled(){return sendWithPromise("getSmartLockSignInEnabled")}setSmartLockSignInEnabled(enabled,opt_authToken){chrome.send("setSmartLockSignInEnabled",[enabled,opt_authToken])}getSmartLockSignInAllowed(){return sendWithPromise("getSmartLockSignInAllowed")}getAndroidSmsInfo(){return sendWithPromise("getAndroidSmsInfo")}attemptNotificationSetup(){chrome.send("attemptNotificationSetup")}cancelNotificationSetup(){chrome.send("cancelNotificationSetup")}}addSingletonGetter(MultiDeviceBrowserProxyImpl);// Copyright 2021 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-flex iron-positioning" scope="esim-install-error-dialog">:host {
  --cr-dialog-width: 372px;
}

paper-spinner-lite {
  height: 20px;
        position: absolute;
        right: 16px;
        top: 6px;
        width: 20px;
}

#confirmationCodeMessage {
  margin-bottom: 30px;
}

#cancel {
  margin-inline-end: 8px;
}

</style>
    <cr-dialog id="installErrorDialog" show-on-attach="">
      <div slot="title">Set up new network</div>
      <div slot="body">
        <div id="genericErrorContainer" hidden$="[[isConfirmationCodeError_(errorCode)]]">
          Profile could not be downloaded. Please try again later or contact carrier for help.
        </div>
        <template is="dom-if" if="[[isConfirmationCodeError_(errorCode)]]" restamp="">
          <div id="confirmationCodeErrorContainer">
            <div id="confirmationCodeMessage">
              Please enter your confirmation code.
            </div>
            <div class="relative">
              <cr-input id="confirmationCode" value="{{confirmationCode_}}" spellcheck="false" disabled="[[isInstallInProgress_]]" error-message="Unable to connect to this profile. For technical support, please contact your carrier." invalid="[[isConfirmationCodeInvalid_]]">
              </cr-input>
              <paper-spinner-lite active="" hidden$="[[!isInstallInProgress_]]">
              </paper-spinner-lite>
            </div>
          </div>
        </template>
      </div>
      <div slot="button-container">
        <cr-button id="cancel" on-click="onCancelClicked_" class="cancel-button" hidden$="[[!isConfirmationCodeError_(errorCode)]]">
          Cancel
        </cr-button>
        <cr-button id="done" on-click="onDoneClicked_" disabled="[[isDoneButtonDisabled_(errorCode, confirmationCode_, isInstallInProgress_)]]" class="action-button">
          Done
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"esim-install-error-dialog",behaviors:[I18nBehavior],properties:{errorCode:{type:Object,value:null},profile:{type:Object,value:null},confirmationCode_:{type:String,value:"",observer:"onConfirmationCodeChanged_"},isInstallInProgress_:{type:Boolean,value:false},isConfirmationCodeInvalid_:{type:Boolean,value:false}},onConfirmationCodeChanged_(){this.isConfirmationCodeInvalid_=false},onDoneClicked_(event){if(!this.isConfirmationCodeError_()){this.$.installErrorDialog.close();return}this.isInstallInProgress_=true;this.isConfirmationCodeInvalid_=false;this.profile.installProfile(this.confirmationCode_).then((response=>{this.isInstallInProgress_=false;if(response.result===chromeos.cellularSetup.mojom.ESimOperationResult.kSuccess){this.$.installErrorDialog.close();return}this.isConfirmationCodeInvalid_=true}))},onCancelClicked_(event){this.$.installErrorDialog.close()},isConfirmationCodeError_(){return this.errorCode===chromeos.cellularSetup.mojom.ProfileInstallResult.kErrorNeedsConfirmationCode},isDoneButtonDisabled_(){return this.isConfirmationCodeError_()&&(!this.confirmationCode_||this.isInstallInProgress_)}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style os-settings-icons settings-shared iron-flex" scope="cellular-networks-list">:host > div {
  padding-inline-end: calc(var(--cr-section-padding) -
            var(--cr-icon-ripple-padding));
        padding-inline-start: var(--cr-section-padding);
}

.cellular-network-list-separator {
  border-top: var(--cr-separator-line);
        padding: 0;
}

.cellular-network-list-header {
  align-items: center;
        display: flex;
        height: 72px;
}

.esim-list-title {
  align-self: center;
}

.cellular-network-content {
  margin-inline-start: 32px;
}

.cellular-not-setup {
  color: var(--google-grey-700);
        font-size: small;
        margin-bottom: 16px;
}

.flex {
  display: flex;
}

.flex-column {
  display: flex;
        flex-direction: column;
}

#eidPopupButton {
  --cr-icon-button-size: 18px;
        cursor: pointer;
        margin-inline-start: 4px;
}

:host-context([dir='rtl']) #addESimButton {
  transform: scaleX(1);
}

#alignEnd {
  align-items: center;
        display: flex;
        margin-inline-end: 12px;
        margin-inline-start: auto;
}

#inhibitedSubtext {
  color: var(--cr-secondary-text-color);
}

paper-spinner-lite {
  height: 20px;
        width: 20px;
}

.separator {
  margin-inline-end: 0;
        margin-inline-start: 24px;
}

</style>
    <template is="dom-if" if="[[shouldShowEsimSection_(euicc_,
        cellularDeviceState, cellularDeviceState.*)]]" restamp="">
      <div class="cellular-network-list-separator"></div>
        <div class="cellular-network-list-header flex settings-box-text">
          <div class="flex-column">
            <div class="flex header-row">
              eSIM
            </div>
            <div id="inhibitedSubtext" class="header-row secondary-box-text" hidden="[[!isDeviceInhibited_]]" aria-live="assertive">
              [[getInhibitedSubtextMessage_(isDeviceInhibited_)]]
            </div>
          </div>
          <div id="alignEnd">
            <template is="dom-if" if="[[canShowSpinner]]" restamp="">
              <paper-spinner-lite id="inhibitedSpinner" active="[[isDeviceInhibited_]]">
              </paper-spinner-lite>
            </template>
            <template is="dom-if" if="[[showAddESimButton_(cellularDeviceState,
                globalPolicy)]]" restamp="">
              <cr-icon-button class="icon-add-cellular add-button" aria-label="Add Cellularâ€¦" id="addESimButton" disabled="[[isDeviceInhibited_]]" on-click="onAddEsimButtonTap_">
              </cr-icon-button>
              <div class="separator"></div>
            </template>
            <cr-icon-button id="moreESim" class="icon-more-vert" title="More actions" on-click="onESimDotsClick_">
            </cr-icon-button>
            <cr-lazy-render id="menu">
              <template>
                <cr-action-menu>
                  <button class="dropdown-item" on-click="onShowEidDialogTap_" role="menuitem">
                    Show device EID
                  </button>
                </cr-action-menu>
              </template>
            </cr-lazy-render>
            <template is="dom-if" if="[[shouldShowEidDialog_]]" restamp="">
              <cellular-eid-dialog class="eid-dialog" on-close="onCloseEidDialog_" euicc="[[euicc_]]">
              </cellular-eid-dialog>
            </template>
          </div>
        </div>
      
      <template is="dom-if" if="[[shouldShowNetworkSublist_(eSimNetworks_,
          eSimPendingProfileItems_)]]" restamp="">
        <div class="cellular-network-content">
          <network-list id="esimNetworkList" show-buttons="" show-technology-badge="[[showTechnologyBadge]]" networks="[[eSimNetworks_]]" custom-items="[[eSimPendingProfileItems_]]" device-state="[[cellularDeviceState]]">
          </network-list>
        </div>
      </template>
      <template is="dom-if" if="[[!shouldShowNetworkSublist_(eSimNetworks_,
          eSimPendingProfileItems_)]]" restamp="">
        <div id="eSimNoNetworkFound" class="cellular-network-content cellular-not-setup">
          <settings-localized-link link-disabled="[[isDeviceInhibited_]]" on-link-clicked="onEsimLearnMoreClicked_" localized-string="No available eSIM profiles. Download a new &lt;a href=&quot;#&quot; id=&quot;cellularEsimLink&quot;&gt;profile.&lt;/a&gt;">
          </settings-localized-link>
        </div>
      </template>
    </template>
    <template is="dom-if" if="[[shouldShowPSimSection_(cellularDeviceState,
          cellularDeviceState.*)]]" restamp="">
      <div class="cellular-network-list-separator"></div>
      <div class="cellular-network-list-header settings-box-text">
        SIM
      </div>
      <template is="dom-if" if="[[shouldShowNetworkSublist_(pSimNetworks_)]]" restamp="">
        <div class="cellular-network-content">
          <network-list id="psimNetworkList" show-buttons="" show-technology-badge="[[showTechnologyBadge]]" networks="[[pSimNetworks_]]" device-state="[[cellularDeviceState]]">
          </network-list>
        </div>
      </template>
      <template is="dom-if" if="[[!shouldShowNetworkSublist_(pSimNetworks_)]]" restamp="">
        <div id="pSimNoNetworkFound" class="cellular-network-content cellular-not-setup">
          No SIM card inserted
        </div>
      </template>
    </template>
    <template is="dom-if" if="[[shouldShowTetherSection_(multiDevicePageContentData_)]]" restamp="">
      <div class="cellular-network-list-separator"></div>
      <div class="cellular-network-list-header settings-box-text">
        Instant Tethering
      </div>
      <template is="dom-if" if="[[shouldShowNetworkSublist_(tetherNetworks_)]]" restamp="">
        <div class="cellular-network-content">
          <network-list id="tetherNetworkList" show-buttons="" show-technology-badge="[[showTechnologyBadge]]" networks="[[tetherNetworks_]]" device-state="[[tetherDeviceState]]">
          </network-list>
        </div>
      </template>
      <template is="dom-if" if="[[!shouldShowNetworkSublist_(tetherNetworks_)]]" restamp="">
        <div id="tetherNetworksNotSetup" class="cellular-network-content cellular-not-setup">
          <settings-localized-link localized-string="[[i18nAdvanced('tetherNetworkNotSetup')]]">
          </settings-localized-link>
        </div>
      </template>
    </template>

    <template is="dom-if" if="[[shouldShowInstallErrorDialog_]]" restamp="">
      <esim-install-error-dialog id="installErrorDialog" on-close="onCloseInstallErrorDialog_" error-code="[[eSimProfileInstallError_]]" profile="[[installingESimProfile_]]">
      </esim-install-error-dialog>
    </template>
<!--_html_template_end_-->`,is:"cellular-networks-list",behaviors:[ESimManagerListenerBehavior,I18nBehavior,WebUIListenerBehavior],properties:{networks:{type:Array,value(){return[]},observer:"onNetworksListChanged_"},showTechnologyBadge:Boolean,cellularDeviceState:Object,isConnectedToNonCellularNetwork:{type:Boolean},canShowSpinner:{type:Boolean},tetherDeviceState:Object,globalPolicy:Object,eSimNetworks_:{type:Array,value(){return[]}},profilesMap_:{type:Object,value(){return new Map}},eSimPendingProfileItems_:{type:Array,value(){return[]}},pSimNetworks_:{type:Array,value(){return[]}},tetherNetworks_:{type:Array,value(){return[]}},shouldShowEidDialog_:{type:Boolean,value:false},shouldShowInstallErrorDialog_:{type:Boolean,value:false},euicc_:{type:Object,value:null},installingESimProfile_:{type:Object,value:null},eSimProfileInstallError_:{type:Object,value:null},multiDevicePageContentData_:{type:Object,value:null},isDeviceInhibited_:{type:Boolean,computed:"computeIsDeviceInhibited_(cellularDeviceState,"+"cellularDeviceState.inhibitReason)"}},listeners:{"install-profile":"installProfile_"},networkConfig_:null,created(){this.networkConfig_=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote();this.fetchESimPendingProfileList_()},ready(){this.addWebUIListener("settings.updateMultidevicePageContentData",this.onMultiDevicePageContentDataChanged_.bind(this));const browserProxy=MultiDeviceBrowserProxyImpl.getInstance();browserProxy.getPageContentData().then(this.onMultiDevicePageContentDataChanged_.bind(this))},onProfileListChanged(euicc){this.fetchESimPendingProfileListForEuicc_(euicc)},onAvailableEuiccListChanged(){this.fetchESimPendingProfileList_()},onProfileChanged(profile){profile.getProperties().then((response=>{const eSimPendingProfileItem=this.eSimPendingProfileItems_.find((item=>item.customData.iccid===response.properties.iccid));if(!eSimPendingProfileItem){return}eSimPendingProfileItem.customItemType=response.properties.state===chromeos.cellularSetup.mojom.ProfileState.kInstalling?NetworkList.CustomItemType.ESIM_INSTALLING_PROFILE:NetworkList.CustomItemType.ESIM_PENDING_PROFILE}))},fetchESimPendingProfileList_(){getEuicc().then((euicc=>{if(!euicc){return}this.euicc_=euicc;this.fetchESimPendingProfileListForEuicc_(euicc)}))},shouldShowEsimSection_(){if(!this.cellularDeviceState){return false}const{eSimSlots:eSimSlots}=getSimSlotCount(this.cellularDeviceState);return!!this.euicc_&&eSimSlots>0},fetchESimPendingProfileListForEuicc_(euicc){getPendingESimProfiles(euicc).then(this.processESimPendingProfiles_.bind(this))},processESimPendingProfiles_(profiles){this.profilesMap_=new Map;const eSimPendingProfilePromises=profiles.map(this.createESimPendingProfilePromise_.bind(this));Promise.all(eSimPendingProfilePromises).then((eSimPendingProfileItems=>{this.eSimPendingProfileItems_=eSimPendingProfileItems}))},createESimPendingProfilePromise_(profile){return profile.getProperties().then((response=>{this.profilesMap_.set(response.properties.iccid,profile);return this.createESimPendingProfileItem_(response.properties)}))},createESimPendingProfileItem_(properties){return{customItemType:properties.state===chromeos.cellularSetup.mojom.ProfileState.kInstalling?NetworkList.CustomItemType.ESIM_INSTALLING_PROFILE:NetworkList.CustomItemType.ESIM_PENDING_PROFILE,customItemName:String.fromCharCode(...properties.name.data),customItemSubtitle:String.fromCharCode(...properties.serviceProvider.data),polymerIcon:"network:cellular-0",showBeforeNetworksList:false,customData:{iccid:properties.iccid}}},onNetworksListChanged_(){const mojom=chromeos.networkConfig.mojom;const pSimNetworks=[];const eSimNetworks=[];const tetherNetworks=[];for(const network of this.networks){if(network.type===mojom.NetworkType.kTether){tetherNetworks.push(network);continue}if(network.typeState.cellular&&network.typeState.cellular.eid){eSimNetworks.push(network)}else{pSimNetworks.push(network)}}this.eSimNetworks_=eSimNetworks;this.pSimNetworks_=pSimNetworks;this.tetherNetworks_=tetherNetworks},shouldShowNetworkSublist_(...lists){const totalListLength=lists.reduce(((accumulator,currentList)=>accumulator+currentList.length),0);return totalListLength>0},shouldShowPSimSection_(cellularDeviceState){const{pSimSlots:pSimSlots}=getSimSlotCount(cellularDeviceState);return pSimSlots>0},onMultiDevicePageContentDataChanged_(newData){this.multiDevicePageContentData_=newData},shouldShowTetherSection_(pageContentData){if(!pageContentData){return false}return pageContentData.instantTetheringState===MultiDeviceFeatureState.ENABLED_BY_USER},onEsimLearnMoreClicked_(event){event.detail.event.preventDefault();event.stopPropagation();this.fire("show-cellular-setup",{pageName:CellularSetupPageName.ESIM_FLOW_UI})},onESimDotsClick_(e){const menu=this.$$("#menu").get();menu.showAt(e.target)},onShowEidDialogTap_(){const actionMenu=this.$$("cr-action-menu");actionMenu.close();this.shouldShowEidDialog_=true},onCloseEidDialog_(){this.shouldShowEidDialog_=false},installProfile_(event){if(!this.isConnectedToNonCellularNetwork){this.fire("show-error-toast",this.i18n("eSimNoConnectionErrorToast"));return}this.installingESimProfile_=this.profilesMap_.get(event.detail.iccid);this.installingESimProfile_.installProfile("").then((response=>{if(response.result===chromeos.cellularSetup.mojom.ProfileInstallResult.kSuccess){this.eSimProfileInstallError_=null;this.installingESimProfile_=null}else{this.eSimProfileInstallError_=response.result;this.showInstallErrorDialog_()}}))},showInstallErrorDialog_(){this.shouldShowInstallErrorDialog_=true},onCloseInstallErrorDialog_(){this.shouldShowInstallErrorDialog_=false},showAddESimButton_(cellularDeviceState,globalPolicy){assert(!!this.euicc_);if(!this.deviceIsEnabled_(cellularDeviceState)){return false}return globalPolicy&&!globalPolicy.allowOnlyPolicyNetworksToConnect},deviceIsEnabled_(cellularDeviceState){const mojom=chromeos.networkConfig.mojom;return!!cellularDeviceState&&cellularDeviceState.deviceState===mojom.DeviceStateType.kEnabled},computeIsDeviceInhibited_(){if(!this.cellularDeviceState){return false}return OncMojo.deviceIsInhibited(this.cellularDeviceState)},onAddEsimButtonTap_(){this.fire("show-cellular-setup",{pageName:CellularSetupPageName.ESIM_FLOW_UI})},getAddEsimButton(){return this.$$("#addESimButton")},getInhibitedSubtextMessage_(){if(!this.cellularDeviceState){return""}const mojom=chromeos.networkConfig.mojom.InhibitReason;const inhibitReason=this.cellularDeviceState.inhibitReason;switch(inhibitReason){case mojom.kInstallingProfile:return this.i18n("cellularNetworkInstallingProfile");case mojom.kRenamingProfile:return this.i18n("cellularNetworkRenamingProfile");case mojom.kRemovingProfile:return this.i18n("cellularNetworkRemovingProfile");case mojom.kConnectingToProfile:return this.i18n("cellularNetworkConnectingToProfile");case mojom.kRefreshingProfileList:return this.i18n("cellularNetworRefreshingProfileListProfile")}return""}});// Copyright 2021 The Chromium Authors. All rights reserved.
const mojom$1=chromeos.networkConfig.mojom;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared network-shared md-select" scope="network-always-on-vpn">#lockdown {
  border-top: var(--cr-separator-line);
}

</style>
    <!-- Always-on VPN enable/disable toggle -->
    <div class="property-box">
      <div class="start text-area" aria-hidden="true">
        <div class="label" id="alwaysOnVpnEnableLabel">
          Always-on VPN
        </div>
        <div class="secondary" id="alwaysOnVpnEnableSublabel">
          Automatically connects when you log in
        </div>
      </div>
      <cr-toggle id="alwaysOnVpnEnableToggle" disabled="[[shouldDisableAlwaysOnVpn_(networks)]]" checked="[[computeAlwaysOnVpnEnabled_(mode, networks)]]" on-change="onAlwaysOnEnableChanged_" aria-labelledby="alwaysOnVpnEnableLabel" aria-describedby="alwaysOnVpnEnableSublabel">
      </cr-toggle>
    </div>
    <!-- Always-on VPN options -->
    <template is="dom-if" if="[[shouldShowAlwaysOnVpnOptions_(
            mode, networks)]]">
      <!-- Service selector -->
      <div class="property-box indented two-line">
        <div class="start text-area" aria-hidden="true">
          <div class="label" id="alwaysOnVpnServiceLabel">
            VPN service
          </div>
        </div>
        <select id="alwaysOnVpnServiceSelect" class="md-select" on-change="onAlwaysOnVpnServiceChanged_" aria-labelledby="alwaysOnVpnServiceLabel">
          <template is="dom-repeat" items="[[getAlwaysOnVpnListOptions_(
                    service, networks)]]">
            <option value="[[item.value]]" selected="[[item.selected]]">
              [[item.name]]
            </option>
          </template>
        </select>
      </div>
      <!-- Lockdown toggle -->
      <div id="lockdown" class="property-box indented two-line">
        <div class="start text-area" aria-hidden="true">
          <div class="label" id="alwaysOnVpnLockdownLabel">
            Block traffic without VPN
          </div>
          <div class="secondary" id="alwaysOnVpnLockdownSublabel">
            Chrome browser and Android traffic will be blocked unless a VPN is connected
          </div>
        </div>
        <cr-toggle id="alwaysOnVpnLockdownToggle" checked="[[computeAlwaysOnVpnLockdown_(mode)]]" on-change="onAlwaysOnVpnLockdownChanged_" aria-labelledby="alwaysOnVpnLockdownLabel" aria-describedby="alwaysOnVpnLockdownSublabel">
        </cr-toggle>
      </div>
    </template>
<!--_html_template_end_-->`,is:"network-always-on-vpn",behaviors:[I18nBehavior],properties:{networks:Array,mode:{type:Number,notify:true},service:{type:String,notify:true}},shouldDisableAlwaysOnVpn_(){return this.networks.length===0},shouldShowAlwaysOnVpnOptions_(){return!this.shouldDisableAlwaysOnVpn_()&&this.mode!==mojom$1.AlwaysOnVpnMode.kOff},computeAlwaysOnVpnEnabled_(){return!this.shouldDisableAlwaysOnVpn_()&&this.mode!==mojom$1.AlwaysOnVpnMode.kOff},onAlwaysOnEnableChanged_(event){if(!event.target.checked){this.mode=mojom$1.AlwaysOnVpnMode.kOff;return}this.mode=mojom$1.AlwaysOnVpnMode.kBestEffort},computeAlwaysOnVpnLockdown_(){return this.mode===mojom$1.AlwaysOnVpnMode.kStrict},onAlwaysOnVpnLockdownChanged_(event){if(this.mode===mojom$1.AlwaysOnVpnMode.kOff){return}this.mode=event.target.checked?mojom$1.AlwaysOnVpnMode.kStrict:mojom$1.AlwaysOnVpnMode.kBestEffort},getAlwaysOnVpnListOptions_(){const options=[];const currentService=this.service;let serviceIsInList=false;if(!this.networks){return options}this.networks.forEach((state=>{options.push({name:state.name,value:state.guid,selected:currentService===state.guid});serviceIsInList|=currentService===state.guid}));if(!serviceIsInList){options.unshift({name:"",value:"",selected:true})}return options},onAlwaysOnVpnServiceChanged_(event){this.service=event.target.value}});// Copyright 2017 The Chromium Authors. All rights reserved.
const mojom$2=chromeos.networkConfig.mojom;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style os-settings-icons settings-shared iron-flex" scope="settings-internet-subpage">#networkListDiv {
  min-height: var(--settings-row-min-height);
}

:host(:not([is-showing-vpn_])) #networkListDiv {
  margin-top: var(--cr-section-vertical-margin);
}

#cellularNetworkList {
  margin-top: calc(-1*var(--cr-section-vertical-margin));
}

#networkListDiv > * {
  padding-inline-end: calc(var(--cr-section-padding) -
            var(--cr-icon-ripple-padding));
        padding-inline-start: var(--cr-section-padding);
}

.add-button {
  margin-inline-end: var(--settings-control-label-spacing);
}

#onOff {
  font-weight: 500;
}

#onOff[on] {
  color: var(--cr-toggle-color);
}

.vpn-header {
  margin-bottom: 8px;
        margin-inline-end: 12px;
        margin-inline-start: 4px;
        margin-top: 8px;
}

.no-networks {
  margin: 4px;
}

network-list {
  flex: 1;
}

network-always-on-vpn {
  width: 100%;
}

#gmscore-notifications-container {
  border-top: var(--cr-separator-line);
        margin: 10px 0;
        padding-bottom: var(--cr-section-padding);
        padding-top: var(--cr-section-padding);
}

#gmscore-notifications-container[no-networks-text-below] {
  border-bottom: var(--cr-separator-line);
        margin-top: 0;
}

#gmscore-notifications-device-string {
  margin-top: 5px;
}

#gmscore-notifications-instructions {
  margin: 0;
        padding-inline-start: 15px;
}

#cellularNetworkList {
  padding-inline-end: 0;
        padding-inline-start: 0;
}

</style>
    <template is="dom-if" if="[[enableToggleIsVisible_(deviceState)]]">
      <div class="settings-box first">
        <div id="onOff" class="start" on$="[[deviceIsEnabled_(deviceState)]]" aria-hidden="true">
          [[getOffOnString_(deviceState,
            'On', 'Off')]]
        </div>
        <!-- The add button in this row is only shown for WiFi networks. -->
        <cr-icon-button class="icon-add-wifi add-button" id="addWifiButton" hidden$="[[!showAddWifiButton_(deviceState, globalPolicy)]]" aria-label="Add Wi-Fiâ€¦" on-click="onAddWifiButtonTap_" tabindex$="[[tabindex]]" deep-link-focus-id$="[[Setting.kWifiAddNetwork]]">
        </cr-icon-button>
        <cr-toggle id="deviceEnabledButton" aria-label$="[[getToggleA11yString_(deviceState)]]" checked="[[deviceIsEnabled_(deviceState)]]" disabled="[[!enableToggleIsEnabled_(deviceState,
              deviceState.inhibitReason)]]" on-change="onDeviceEnabledChange_" deep-link-focus-id$="[[Setting.kWifiOnOff]]
                [[Setting.kMobileOnOff]]">
        </cr-toggle>
      </div>
    </template>

    <template is="dom-if" if="[[knownNetworksIsVisible_(deviceState)]]">
      <cr-link-row id="knownNetworksSubpageButton" class="hr" label="Known networks" on-click="onKnownNetworksTap_" role-description="Subpage button">
      </cr-link-row>
    </template>

    <template is="dom-if" if="[[deviceIsEnabled_(deviceState)]]">
      <div id="networkListDiv" class="layout vertical flex">
        <!-- VPN only header for built-in VPNs. -->
        <template is="dom-if" if="[[isShowingVpn_]]">
          <div class="vpn-header layout horizontal center">
            <div class="flex settings-box-text">OpenVPN / L2TP</div>
            <template is="dom-if" if="[[!vpnIsEnabled_]]">
              <cr-policy-indicator indicator-type="devicePolicy">
              </cr-policy-indicator>
            </template>
            <cr-icon-button class="icon-add-circle" disabled="[[!vpnIsEnabled_]]" aria-label="Add OpenVPN / L2TPâ€¦" on-click="onAddVpnButtonTap_" tabindex$="[[tabindex]]">
            </cr-icon-button>
          </div>
        </template>

        <!-- List of networks (empty if no networks exist). -->
        <template is="dom-if" if="[[shouldShowNetworkList_(networkStateList_, deviceState)]]">
          <network-list id="networkList" show-buttons="" show-technology-badge="[[showTechnologyBadge_]]" networks="[[networkStateList_]]" on-selected="onNetworkSelected_" device-state="[[deviceState]]">
          </network-list>
        </template>

        <!-- List of cellular and instant tethering networks -->
        <template is="dom-if" if="[[shouldShowCellularNetworkList_(networkStateList_,
                                                 deviceState)]]">
          <cellular-networks-list id="cellularNetworkList" networks="[[networkStateList_]]" show-technology-badge="[[showTechnologyBadge_]]" on-selected="onNetworkSelected_" cellular-device-state="[[deviceState]]" tether-device-state="[[tetherDeviceState]]" global-policy="[[globalPolicy]]" is-connected-to-non-cellular-network="[[isConnectedToNonCellularNetwork]]" can-show-spinner="[[!isCellularSetupActive]]">
          </cellular-networks-list>
        </template>

        <!-- Instructions for how to enable "Google Play Services" notifications
            (needed for Instant Tethering). -->
        <template is="dom-if" if="[[showGmsCoreNotificationsSection_(
            notificationsDisabledDeviceNames_)]]">
          <div id="gmscore-notifications-container" no-networks-text-below$="[[!networkStateList_.length]]">
            <div>To use Instant Tethering, turn on notifications for Google Play Services.</div>
            <div id="gmscore-notifications-device-string" class="cr-secondary-text">
              [[getGmsCoreNotificationsDevicesString_(
                  notificationsDisabledDeviceNames_)]]
            </div>
            <ol id="gmscore-notifications-instructions" class="cr-secondary-text">
              <li>Go to Settings &gt; Apps &amp; notifications &gt; Notifications.</li>
              <li>Tap App notifications &gt; Google Play services.</li>
              <li>Turn on Google Play services.</li>
              <li>Scroll to the bottom of the screen and turn on Instant Tethering, if it appears. If it doesn&#39;t, you&#39;re all set.</li>
            </ol>
          </div>
        </template>

        <!-- Text shown if no networks exist. -->
        <settings-localized-link class="no-networks" hidden="[[hideNoNetworksMessage_(networkStateList_, deviceState)]]" localized-string="[[getNoNetworksInnerHtml_(deviceState, tetherDeviceState)]]">
        </settings-localized-link>

        <template is="dom-if" if="[[isShowingVpn_]]">
          <!-- Third party VPNs. -->
          <template is="dom-repeat" items="[[getVpnProviders_(vpnProviders, thirdPartyVpns_)]]">
            <div id="[[item.providerName]]" class="vpn-header layout horizontal center">
              <div class="flex settings-box-text">[[item.providerName]]</div>
              <cr-icon-button class="icon-add-circle" aria-label$="[[getAddThirdPartyVpnA11yString_(item)]]" on-click="onAddThirdPartyVpnTap_" tabindex$="[[tabindex]]">
              </cr-icon-button>
            </div>
            <network-list show-buttons="" hidden$="[[!haveThirdPartyVpnNetwork_(thirdPartyVpns_, item)]]" networks="[[getThirdPartyVpnNetworks_(thirdPartyVpns_, item)]]" on-selected="onNetworkSelected_">
            </network-list>
            <div hidden$="[[haveThirdPartyVpnNetwork_(thirdPartyVpns_, item)]]" class="no-networks settings-box-text">
              None
            </div>
          </template>
        </template>
      </div>

      <template is="dom-if" if="[[shouldShowVpnPreferences_(isManaged_, isShowingVpn_)]]">
        <div class="settings-box first">
          <h2>VPN Preferences</h2>
        </div>
        <div class="settings-box first">
          <network-always-on-vpn id="alwaysOnVpnSelector" networks="[[getAlwaysOnVpnNetworks_(deviceState,
                networkStateList_, thirdPartyVpns_)]]" mode="{{alwaysOnVpnMode_}}" service="{{alwaysOnVpnService_}}">
          </network-always-on-vpn>
        </div>
      </template>

      <template is="dom-if" if="[[tetherToggleIsVisible_(deviceState, tetherDeviceState)]]">
        <div class="settings-box two-line" actionable="" on-click="onTetherEnabledChange_">
          <div class="start settings-box-text">
            Get data connection
            <div id="tetherSecondary" class="secondary">
              Let this device find other devices with your Google Account that have a mobile data connection
            </div>
          </div>
          <cr-toggle id="tetherEnabledButton" aria-label="Get data connection" aria-describedby="tetherSecondary" checked="[[deviceIsEnabled_(tetherDeviceState)]]" disabled="[[!tetherToggleIsEnabled_(deviceState,
                         tetherDeviceState)]]" on-change="onTetherEnabledChange_">
          </cr-toggle>
        </div>
      </template>
    </template>

<!--_html_template_end_-->`,is:"settings-internet-subpage",behaviors:[NetworkListenerBehavior,CrPolicyNetworkBehaviorMojo,DeepLinkingBehavior,RouteObserverBehavior,RouteOriginBehavior,I18nBehavior],properties:{defaultNetwork:Object,deviceState:Object,tetherDeviceState:Object,globalPolicy:Object,vpnProviders:Array,showSpinner:{type:Boolean,notify:true,value:false},isConnectedToNonCellularNetwork:{type:Boolean},isCellularSetupActive:{type:Boolean},networkStateList_:{type:Array,value(){return[]}},thirdPartyVpns_:{type:Object,value(){return{}}},isShowingVpn_:{type:Boolean,computed:"computeIsShowingVpn_(deviceState)",reflectToAttribute:true},isManaged_:{type:Boolean,value(){return loadTimeData.getBoolean("isManaged")}},alwaysOnVpnMode_:Number,alwaysOnVpnService_:String,notificationsDisabledDeviceNames_:{type:Array,value(){return[]}},showTechnologyBadge_:{type:Boolean,value(){return loadTimeData.valueExists("showTechnologyBadge")&&loadTimeData.getBoolean("showTechnologyBadge")}},isUpdatedCellularUiEnabled_:{type:Boolean,value(){return loadTimeData.getBoolean("updatedCellularActivationUi")}},hasCompletedScanSinceLastEnabled_:{type:Boolean,value:false},vpnIsEnabled_:{type:Boolean,value:false},pendingSettingId_:{type:Number,value:null},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kWifiOnOff,chromeos.settings.mojom.Setting.kWifiAddNetwork,chromeos.settings.mojom.Setting.kMobileOnOff,chromeos.settings.mojom.Setting.kInstantTetheringOnOff,chromeos.settings.mojom.Setting.kAddESimNetwork])}},route_:routes.INTERNET_NETWORKS,observers:["deviceStateChanged_(deviceState)","onAlwaysOnVpnChanged_(alwaysOnVpnMode_, alwaysOnVpnService_)"],scanIntervalId_:null,browserProxy_:null,networkConfig_:null,created(){this.browserProxy_=InternetPageBrowserProxyImpl.getInstance();this.networkConfig_=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote()},ready(){this.browserProxy_.setGmsCoreNotificationsDisabledDeviceNamesCallback(this.onNotificationsDisabledDeviceNamesReceived_.bind(this));this.browserProxy_.requestGmsCoreNotificationsDisabledDeviceNames();this.addFocusConfig_(routes.KNOWN_NETWORKS,"#knownNetworksSubpageButton")},detached(){this.stopScanning_()},beforeDeepLinkAttempt(settingId){if(settingId===chromeos.settings.mojom.Setting.kAddESimNetwork){afterNextRender(this,(()=>{const deepLinkElement=this.$$("cellular-networks-list").getAddEsimButton();if(!deepLinkElement||deepLinkElement.hidden){console.warn(`Element with deep link id ${settingId} not focusable.`);return}this.showDeepLinkElement(deepLinkElement)}));return false}if(settingId===chromeos.settings.mojom.Setting.kInstantTetheringOnOff){afterNextRender(this,(()=>{const tetherEnabled=this.$$("#tetherEnabledButton");if(tetherEnabled){this.showDeepLinkElement(tetherEnabled);return}const deviceEnabled=this.$$("#deviceEnabledButton");if(deviceEnabled){this.showDeepLinkElement(deviceEnabled);return}console.warn(`Element with deep link id ${settingId} not focusable.`)}));return false}return true},currentRouteChanged(newRoute,oldRoute){if(newRoute!==routes.INTERNET_NETWORKS){this.stopScanning_();return}this.init();RouteOriginBehaviorImpl.currentRouteChanged.call(this,newRoute,oldRoute);this.attemptDeepLink().then((result=>{if(!result.deepLinkShown&&result.pendingSettingId){this.pendingSettingId_=result.pendingSettingId}}))},init(){this.networkStateList_=[];this.thirdPartyVpns_={};this.hasCompletedScanSinceLastEnabled_=false;this.showSpinner=false;this.getNetworkStateList_();this.updateScanning_();this.updateAlwaysOnVpnPreferences_()},onActiveNetworksChanged(networks){this.getNetworkStateList_()},onNetworkStateListChanged(){this.getNetworkStateList_();this.updateAlwaysOnVpnPreferences_()},onVpnProvidersChanged(){if(this.deviceState.type!==mojom$2.NetworkType.kVPN){return}this.getNetworkStateList_()},deviceStateChanged_(){if(this.deviceState!==undefined){if(this.deviceState.type===mojom$2.NetworkType.kVPN){this.vpnIsEnabled_=this.deviceState.deviceState===chromeos.networkConfig.mojom.DeviceStateType.kEnabled}this.hasCompletedScanSinceLastEnabled_=this.showSpinner&&!this.deviceState.scanning&&this.deviceState.deviceState===mojom$2.DeviceStateType.kEnabled;if(this.shouldShowCellularNetworkList_()&&this.isDeviceInhibited_()){this.showSpinner=false}else{this.showSpinner=!!this.deviceState.scanning}}if(Router.getInstance().getCurrentRoute()!==routes.INTERNET_NETWORKS){this.stopScanning_();return}this.getNetworkStateList_();this.updateScanning_()},updateScanning_(){if(!this.deviceState){return}if(this.shouldStartScan_()){this.startScanning_();return}},shouldStartScan_(){if(this.deviceState.type===mojom$2.NetworkType.kWiFi){return true}if(this.deviceState.type===mojom$2.NetworkType.kTether||this.deviceState.type===mojom$2.NetworkType.kCellular&&this.tetherDeviceState){return true}return false},startScanning_(){if(this.scanIntervalId_!=null){return}const INTERVAL_MS=10*1e3;let type=this.deviceState.type;if(type===mojom$2.NetworkType.kCellular&&this.tetherDeviceState){type=mojom$2.NetworkType.kTether}this.networkConfig_.requestNetworkScan(type);this.scanIntervalId_=window.setInterval((()=>{this.networkConfig_.requestNetworkScan(type)}),INTERVAL_MS)},stopScanning_(){if(this.scanIntervalId_==null){return}window.clearInterval(this.scanIntervalId_);this.scanIntervalId_=null},getNetworkStateList_(){if(!this.deviceState){return}const filter={filter:chromeos.networkConfig.mojom.FilterType.kVisible,limit:chromeos.networkConfig.mojom.NO_LIMIT,networkType:this.deviceState.type};this.networkConfig_.getNetworkStateList(filter).then((response=>{this.onGetNetworks_(response.result);if(!this.pendingSettingId_){return}this.showDeepLink(this.pendingSettingId_).then((result=>{if(result.deepLinkShown){this.pendingSettingId_=null}}))}))},onGetNetworks_(networkStates){if(!this.deviceState){return}if(this.deviceState.type===mojom$2.NetworkType.kCellular&&this.tetherDeviceState){const filter={filter:chromeos.networkConfig.mojom.FilterType.kVisible,limit:chromeos.networkConfig.mojom.NO_LIMIT,networkType:mojom$2.NetworkType.kTether};this.networkConfig_.getNetworkStateList(filter).then((response=>{this.set("networkStateList_",networkStates.concat(response.result))}));return}if(this.deviceState.type===mojom$2.NetworkType.kVPN){const builtinNetworkStates=[];const thirdPartyVpns={};networkStates.forEach((state=>{assert(state.type===mojom$2.NetworkType.kVPN);switch(state.typeState.vpn.type){case mojom$2.VpnType.kL2TPIPsec:case mojom$2.VpnType.kOpenVPN:builtinNetworkStates.push(state);break;case mojom$2.VpnType.kArc:if(!OncMojo.connectionStateIsConnected(state.connectionState)){break}case mojom$2.VpnType.kExtension:const providerId=state.typeState.vpn.providerId;thirdPartyVpns[providerId]=thirdPartyVpns[providerId]||[];thirdPartyVpns[providerId].push(state);break}}));networkStates=builtinNetworkStates;this.thirdPartyVpns_=thirdPartyVpns}this.set("networkStateList_",networkStates)},getVpnProviders_(vpnProviders,thirdPartyVpns){const configuredProviders=[];for(const vpnList of Object.values(thirdPartyVpns)){assert(vpnList.length>0);const vpn=vpnList[0].typeState.vpn;const provider={type:vpn.type,providerId:vpn.providerId,providerName:vpn.providerName||vpn.providerId,appId:"",lastLaunchTime:{internalValue:0}};configuredProviders.push(provider)}const unconfiguredProviders=[];for(const provider of vpnProviders){const idx=configuredProviders.findIndex((p=>p.providerId===provider.providerId));if(idx>=0){configuredProviders[idx]=provider}else{unconfiguredProviders.push(provider)}}return configuredProviders.concat(unconfiguredProviders)},onNotificationsDisabledDeviceNamesReceived_(notificationsDisabledDeviceNames){this.notificationsDisabledDeviceNames_=notificationsDisabledDeviceNames},deviceIsEnabled_(deviceState){return!!deviceState&&(deviceState.type===mojom$2.NetworkType.kVPN||deviceState.deviceState===mojom$2.DeviceStateType.kEnabled)},getOffOnString_(deviceState,onstr,offstr){return this.deviceIsEnabled_(deviceState)?onstr:offstr},enableToggleIsVisible_(deviceState){return!!deviceState&&deviceState.type!==mojom$2.NetworkType.kEthernet&&deviceState.type!==mojom$2.NetworkType.kVPN},enableToggleIsEnabled_(deviceState){if(!deviceState){return false}if(deviceState.deviceState===chromeos.networkConfig.mojom.DeviceStateType.kProhibited){return false}if(OncMojo.deviceStateIsIntermediate(deviceState.deviceState)){return false}return!this.isDeviceInhibited_()},isDeviceInhibited_(){if(!this.deviceState||!this.isUpdatedCellularUiEnabled_){return false}return OncMojo.deviceIsInhibited(this.deviceState)},getToggleA11yString_(deviceState){if(!this.enableToggleIsVisible_(deviceState)){return""}switch(deviceState.type){case mojom$2.NetworkType.kTether:case mojom$2.NetworkType.kCellular:return this.i18n("internetToggleMobileA11yLabel");case mojom$2.NetworkType.kWiFi:return this.i18n("internetToggleWiFiA11yLabel")}assertNotReached$1();return""},getAddThirdPartyVpnA11yString_(provider){return this.i18n("internetAddThirdPartyVPN",provider.providerName||"")},allowAddConnection_(deviceState,globalPolicy){if(!this.deviceIsEnabled_(deviceState)){return false}return globalPolicy&&!globalPolicy.allowOnlyPolicyNetworksToConnect},showAddWifiButton_(deviceState,globalPolicy){if(!deviceState||deviceState.type!==mojom$2.NetworkType.kWiFi){return false}return this.allowAddConnection_(deviceState,globalPolicy)},onAddWifiButtonTap_(){assert(this.deviceState,"Device state is falsey - Wifi expected.");const type=this.deviceState.type;assert(type===mojom$2.NetworkType.kWiFi,"Wifi type expected.");this.fire("show-config",{type:OncMojo.getNetworkTypeString(type)})},onAddVpnButtonTap_(){assert(this.deviceState,"Device state is falsey - VPN expected.");const type=this.deviceState.type;assert(type===mojom$2.NetworkType.kVPN,"VPN type expected.");this.fire("show-config",{type:OncMojo.getNetworkTypeString(type)})},onAddThirdPartyVpnTap_(event){const provider=event.model.item;this.browserProxy_.addThirdPartyVpn(provider.appId);recordSettingChange()},knownNetworksIsVisible_(deviceState){return!!deviceState&&deviceState.type===mojom$2.NetworkType.kWiFi},onKnownNetworksTap_(){assert(this.deviceState.type===mojom$2.NetworkType.kWiFi);this.fire("show-known-networks",this.deviceState.type)},onDeviceEnabledChange_(event){assert(this.deviceState);this.fire("device-enabled-toggled",{enabled:!this.deviceIsEnabled_(this.deviceState),type:this.deviceState.type})},getThirdPartyVpnNetworks_(thirdPartyVpns,provider){return thirdPartyVpns[provider.providerId]||[]},haveThirdPartyVpnNetwork_(thirdPartyVpns,provider){const list=this.getThirdPartyVpnNetworks_(thirdPartyVpns,provider);return!!list.length},onNetworkSelected_(e){assert(this.globalPolicy);assert(this.defaultNetwork!==undefined);const networkState=e.detail;e.target.blur();if(this.canAttemptConnection_(networkState)){this.fire("network-connect",{networkState:networkState});recordSettingChange();return}this.fire("show-detail",networkState)},isBlockedByPolicy_(state){if(state.type!==mojom$2.NetworkType.kWiFi||this.isPolicySource(state.source)||!this.globalPolicy){return false}return!!this.globalPolicy.allowOnlyPolicyNetworksToConnect||!!this.globalPolicy.allowOnlyPolicyNetworksToConnectIfAvailable&&!!this.deviceState&&!!this.deviceState.managedNetworkAvailable||!!this.globalPolicy.blockedHexSsids&&this.globalPolicy.blockedHexSsids.includes(state.typeState.wifi.hexSsid)},canAttemptConnection_(state){if(state.connectionState!==mojom$2.ConnectionStateType.kNotConnected){return false}if(this.isBlockedByPolicy_(state)){return false}if(state.type===mojom$2.NetworkType.kVPN&&(!this.defaultNetwork||!OncMojo.connectionStateIsConnected(this.defaultNetwork.connectionState))){return false}if(state.type===mojom$2.NetworkType.kCellular&&state.typeState.cellular.simLocked){return false}return true},tetherToggleIsVisible_(deviceState,tetherDeviceState){if(this.isUpdatedCellularUiEnabled_){return false}return!!deviceState&&deviceState.type===mojom$2.NetworkType.kCellular&&!!tetherDeviceState},tetherToggleIsEnabled_(deviceState,tetherDeviceState){return this.tetherToggleIsVisible_(deviceState,tetherDeviceState)&&this.enableToggleIsEnabled_(tetherDeviceState)&&tetherDeviceState.deviceState!==chromeos.networkConfig.mojom.DeviceStateType.kUninitialized},onTetherEnabledChange_(event){this.fire("device-enabled-toggled",{enabled:!this.deviceIsEnabled_(this.tetherDeviceState),type:mojom$2.NetworkType.kTether});event.stopPropagation()},matchesType_(typeString,device){return!!device&&device.type===OncMojo.getNetworkTypeFromString(typeString)},shouldShowNetworkList_(networkStateList){if(this.shouldShowCellularNetworkList_()){return false}if(!!this.deviceState&&this.deviceState.type===mojom$2.NetworkType.kVPN){return this.shouldShowVpnList_()}return this.networkStateList_.length>0},shouldShowVpnList_(){return this.vpnIsEnabled_&&this.networkStateList_.length>0},shouldShowCellularNetworkList_(){if(!this.isUpdatedCellularUiEnabled_){return false}return!!this.deviceState&&this.deviceState.type===mojom$2.NetworkType.kCellular},hideNoNetworksMessage_(networkStateList){return this.shouldShowCellularNetworkList_()||this.shouldShowNetworkList_(networkStateList)},getNoNetworksInnerHtml_(deviceState,tetherDeviceState){const type=deviceState.type;if(type===mojom$2.NetworkType.kTether||type===mojom$2.NetworkType.kCellular&&this.tetherDeviceState){return this.i18nAdvanced("internetNoNetworksMobileData")}if(type===mojom$2.NetworkType.kVPN){return this.i18n("internetNoNetworks")}return this.hasCompletedScanSinceLastEnabled_?this.i18n("internetNoNetworks"):this.i18n("networkScanningLabel")},showGmsCoreNotificationsSection_(notificationsDisabledDeviceNames){return notificationsDisabledDeviceNames.length>0},getGmsCoreNotificationsDevicesString_(notificationsDisabledDeviceNames){if(notificationsDisabledDeviceNames.length===1){return this.i18n("gmscoreNotificationsOneDeviceSubtitle",notificationsDisabledDeviceNames[0])}if(notificationsDisabledDeviceNames.length===2){return this.i18n("gmscoreNotificationsTwoDevicesSubtitle",notificationsDisabledDeviceNames[0],notificationsDisabledDeviceNames[1])}return this.i18n("gmscoreNotificationsManyDevicesSubtitle")},computeIsShowingVpn_(){if(!this.deviceState){return false}return this.matchesType_(OncMojo.getNetworkTypeString(mojom$2.NetworkType.kVPN),this.deviceState)},shouldShowVpnPreferences_(){if(!this.deviceState){return false}return!this.isManaged_&&this.isShowingVpn_},getAlwaysOnVpnNetworks_(){if(!this.deviceState||this.deviceState.type!==mojom$2.NetworkType.kVPN){return[]}const alwaysOnVpnList=this.networkStateList_.slice();for(const vpnList of Object.values(this.thirdPartyVpns_)){assert(vpnList.length>0);if(vpnList[0].typeState.vpn.type===mojom$2.VpnType.kArc){continue}alwaysOnVpnList.push(...vpnList)}return alwaysOnVpnList},updateAlwaysOnVpnPreferences_(){if(!this.deviceState||this.deviceState.type!==mojom$2.NetworkType.kVPN){return}this.networkConfig_.getAlwaysOnVpn().then((result=>{this.alwaysOnVpnMode_=result.properties.mode;this.alwaysOnVpnService_=result.properties.serviceGuid}))},onAlwaysOnVpnChanged_(){if(this.alwaysOnVpnMode_===undefined||this.alwaysOnVpnService_===undefined){return}const properties={mode:this.alwaysOnVpnMode_,serviceGuid:this.alwaysOnVpnService_};this.networkConfig_.setAlwaysOnVpn(properties)}});// Copyright 2015 The Chromium Authors. All rights reserved.
const mojom$3=chromeos.networkConfig.mojom;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="internet-shared iron-flex" scope="network-summary-item">network-siminfo {
  padding-inline-start: var(--cr-section-padding);
}

#outerBox {
  padding: 0 var(--cr-section-padding);
}

#details {
  align-items: center;
        display: flex;
        flex: auto;
}

.network-state {
  color: var(--cr-secondary-text-color);
        font-size: inherit;
}

.locked-warning-message {
  color: var(--google-yellow-800);
        font-size: inherit;
}

</style>
    <div class="settings-box two-line no-padding">
      <div actionable$="[[isItemActionable_(activeNetworkState,
                            deviceState, networkStateList)]]" class="flex layout horizontal center link-wrapper" on-click="onShowDetailsTap_">
        <div id="details" no-flex$="[[showSimInfo_(deviceState)]]" aria-hidden="true">
          <network-icon id="networkIcon" show-technology-badge="[[showTechnologyBadge_]]" network-state="[[activeNetworkState]]" device-state="[[deviceState]]">
          </network-icon>
          <div class="flex settings-box-text">
            <div id="networkTitleText">
              [[getTitleText_(activeNetworkState)]]
            </div>
            <div id="networkState" class$="[[getNetworkStateClass_(deviceState, deviceState.*)]]">
              [[getNetworkStateText_(activeNetworkState, deviceState.*)]]
            </div>
          </div>
        </div>

        <template is="dom-if" if="[[showSimInfo_(deviceState)]]" restamp="">
          <network-siminfo on-click="doNothing_" network-state="[[activeNetworkState]]" device-state="[[deviceState]]">
          </network-siminfo>
        </template>

        <template is="dom-if" if="[[showPolicyIndicator_(activeNetworkState)]]">
          <cr-policy-indicator id="policyIndicator" icon-aria-label="[[getTitleText_(activeNetworkState)]]" indicator-type="[[getPolicyIndicatorType_(activeNetworkState)]]" on-click="doNothing_">
          </cr-policy-indicator>
        </template>

        <template is="dom-if" if="[[showArrowButton_(activeNetworkState,
                                      deviceState, networkStateList)]]">
          <cr-icon-button class="subpage-arrow" aria-labelledby="networkTitleText" aria-describedby="networkState networkIcon" aria-roledescription="Subpage button">
          </cr-icon-button>
        </template>
      </div>

      <template is="dom-if" if="[[enableToggleIsVisible_(deviceState)]]">
        <div class="separator"></div>
        <cr-toggle id="deviceEnabledButton" class="margin-matches-padding" aria-label$="[[getToggleA11yString_(deviceState)]]" aria-describedby$="[[getToggleA11yDescribedBy_(deviceState)]]" checked="[[deviceIsEnabled_(deviceState)]]" disabled="[[!enableToggleIsEnabled_(deviceState)]]" on-change="onDeviceEnabledChange_">
        </cr-toggle>
      </template>
    </div>
<!--_html_template_end_-->`,is:"network-summary-item",behaviors:[CrPolicyNetworkBehaviorMojo,I18nBehavior],properties:{deviceState:{type:Object,notify:true},tetherDeviceState:Object,activeNetworkState:Object,networkStateList:{type:Array,value(){return[]}},networkTitleText:String,showTechnologyBadge_:{type:Boolean,value(){return loadTimeData.valueExists("showTechnologyBadge")&&loadTimeData.getBoolean("showTechnologyBadge")}},isUpdatedCellularUiEnabled_:{type:Boolean,value(){return loadTimeData.getBoolean("updatedCellularActivationUi")}}},getDeviceEnabledToggle(){return this.$$("#deviceEnabledButton")},getNetworkStateText_(){if(this.shouldShowLockedWarningMessage_(this.deviceState)){return this.i18n("networkSimLockedSubtitle")}if(OncMojo.deviceIsInhibited(this.deviceState)){return this.i18n("internetDeviceBusy")}const stateText=this.getConnectionStateText_(this.activeNetworkState,this.deviceState);if(stateText){return stateText}const deviceState=this.deviceState;if(deviceState){if(deviceState.type===mojom$3.NetworkType.kCellular&&!this.isUpdatedCellularUiEnabled_){if(deviceState.scanning){return this.i18n("internetMobileSearching")}if(deviceState.deviceState===mojom$3.DeviceStateType.kUninitialized){return this.i18n("internetDeviceInitializing")}if(deviceState.deviceState===mojom$3.DeviceStateType.kDisabling){return this.i18n("internetDeviceDisabling")}}if(deviceState.type===mojom$3.NetworkType.kTether){if(deviceState.deviceState===mojom$3.DeviceStateType.kUninitialized){return this.i18n("tetherEnableBluetooth")}}if(deviceState.deviceState===mojom$3.DeviceStateType.kEnabled){return this.networkStateList.length>0?this.i18n("networkListItemNotConnected"):this.i18n("networkListItemNoNetwork")}if(deviceState.deviceState===mojom$3.DeviceStateType.kEnabling){return this.i18n("internetDeviceEnabling")}}return this.i18n("deviceOff")},getConnectionStateText_(networkState,deviceState){if(!networkState||!networkState.guid){return""}const connectionState=networkState.connectionState;const name=OncMojo.getNetworkStateDisplayName(networkState);if(OncMojo.connectionStateIsConnected(connectionState)){return networkState.type===mojom$3.NetworkType.kEthernet?this.i18n("networkListItemConnected"):name}if(connectionState===mojom$3.ConnectionStateType.kConnecting){return name?this.i18n("networkListItemConnectingTo",name):this.i18n("networkListItemConnecting")}if(networkState.type===mojom$3.NetworkType.kCellular&&deviceState&&!this.isUpdatedCellularUiEnabled_){if(deviceState.simAbsent){return this.i18n("deviceOff")}if(deviceState.scanning){return this.i18n("internetMobileSearching")}}return this.i18n("networkListItemNotConnected")},showPolicyIndicator_(activeNetworkState){return activeNetworkState!==undefined&&OncMojo.connectionStateIsConnected(activeNetworkState.connectionState)||this.isPolicySource(activeNetworkState.source)||this.isProhibitedVpn_()},getPolicyIndicatorType_(activeNetworkState){if(this.isProhibitedVpn_()){return this.getIndicatorTypeForSource(chromeos.networkConfig.mojom.OncSource.kDevicePolicy)}return this.getIndicatorTypeForSource(activeNetworkState.source)},showSimInfo_(deviceState){if(!deviceState||deviceState.type!==mojom$3.NetworkType.kCellular){return false}const{pSimSlots:pSimSlots,eSimSlots:eSimSlots}=getSimSlotCount(deviceState);if(this.isUpdatedCellularUiEnabled_){if(eSimSlots>0){return false}return this.simLocked_(deviceState)}return this.simLockedOrAbsent_(deviceState)},getNetworkStateClass_(deviceState){if(this.shouldShowLockedWarningMessage_(deviceState)){return"locked-warning-message"}return"network-state"},shouldShowLockedWarningMessage_(deviceState){if(!deviceState||deviceState.type!==mojom$3.NetworkType.kCellular||!deviceState.simLockStatus||!this.isUpdatedCellularUiEnabled_){return false}const{eSimSlots:eSimSlots}=getSimSlotCount(deviceState);if(eSimSlots>0){return false}return!!deviceState.simLockStatus.lockType},simLockedOrAbsent_(deviceState){if(!deviceState){return false}if(deviceState.simAbsent){return true}return this.simLocked_(deviceState)},simLocked_(deviceState){if(!deviceState){return false}if(!deviceState.simLockStatus){return false}const simLockType=deviceState.simLockStatus.lockType;return simLockType==="sim-pin"||simLockType==="sim-puk"},deviceIsEnabled_(deviceState){return!!deviceState&&(deviceState.type===mojom$3.NetworkType.kVPN||deviceState.deviceState===mojom$3.DeviceStateType.kEnabled||OncMojo.deviceIsInhibited(deviceState))},enableToggleIsVisible_(deviceState){if(!deviceState){return false}switch(deviceState.type){case mojom$3.NetworkType.kEthernet:case mojom$3.NetworkType.kVPN:return false;case mojom$3.NetworkType.kTether:return true;case mojom$3.NetworkType.kWiFi:return deviceState.deviceState!==mojom$3.DeviceStateType.kUninitialized;case mojom$3.NetworkType.kCellular:if(deviceState.deviceState===mojom$3.DeviceStateType.kUninitialized){return false}return!this.showSimInfo_(deviceState)}assertNotReached$1();return false},enableToggleIsEnabled_(deviceState){return this.enableToggleIsVisible_(deviceState)&&deviceState.deviceState!==mojom$3.DeviceStateType.kProhibited&&!OncMojo.deviceIsInhibited(deviceState)&&!OncMojo.deviceStateIsIntermediate(deviceState.deviceState)},getToggleA11yString_(deviceState){if(!this.enableToggleIsVisible_(deviceState)){return""}switch(deviceState.type){case mojom$3.NetworkType.kTether:case mojom$3.NetworkType.kCellular:return this.i18n("internetToggleMobileA11yLabel");case mojom$3.NetworkType.kWiFi:return this.i18n("internetToggleWiFiA11yLabel")}assertNotReached$1();return""},getToggleA11yDescribedBy_(deviceState){if(this.enableToggleIsVisible_(deviceState)&&deviceState.type===mojom$3.NetworkType.kTether&&deviceState.deviceState===mojom$3.DeviceStateType.kUninitialized){return"networkState"}return""},isProhibitedVpn_(){return!!this.deviceState&&this.deviceState.type===mojom$3.NetworkType.kVPN&&this.builtInVpnProhibited_(this.deviceState)},isBuiltInVpnType_(vpnType){return vpnType===chromeos.networkConfig.mojom.VpnType.kL2TPIPsec||vpnType===chromeos.networkConfig.mojom.VpnType.kOpenVPN},hasNonBuiltInVpn_(networkStateList){const nonBuiltInVpnIndex=networkStateList.findIndex((networkState=>!this.isBuiltInVpnType_(networkState.typeState.vpn.type)));return nonBuiltInVpnIndex!==-1},builtInVpnProhibited_(deviceState){return!!deviceState&&deviceState.deviceState===chromeos.networkConfig.mojom.DeviceStateType.kProhibited},anyVpnExists_(deviceState,networkStateList){return this.hasNonBuiltInVpn_(networkStateList)||!this.builtInVpnProhibited_(deviceState)&&networkStateList.length>0},shouldShowDetails_(activeNetworkState,deviceState,networkStateList){if(!!deviceState&&deviceState.type===mojom$3.NetworkType.kVPN){return this.anyVpnExists_(deviceState,networkStateList)}return this.deviceIsEnabled_(deviceState)&&(!!activeNetworkState.guid||networkStateList.length>0)},shouldShowSubpage_(deviceState,networkStateList){if(!deviceState){return false}const type=deviceState.type;if(type===mojom$3.NetworkType.kTether||type===mojom$3.NetworkType.kCellular&&this.tetherDeviceState){return true}if(type===mojom$3.NetworkType.kCellular){if(this.isUpdatedCellularUiEnabled_){if(OncMojo.deviceIsInhibited(deviceState)){return true}const{pSimSlots:pSimSlots,eSimSlots:eSimSlots}=getSimSlotCount(deviceState);if(eSimSlots>0||pSimSlots>0){return true}}else if(this.simLockedOrAbsent_(deviceState)){return false}}if(type===mojom$3.NetworkType.kVPN){return this.anyVpnExists_(deviceState,networkStateList)}let minlen;if(type===mojom$3.NetworkType.kWiFi){minlen=0}else{minlen=2}return networkStateList.length>=minlen},onShowDetailsTap_(event){if(!this.deviceIsEnabled_(this.deviceState)){if(this.enableToggleIsEnabled_(this.deviceState)){const type=this.deviceState.type;this.fire("device-enabled-toggled",{enabled:true,type:type})}}else if(this.shouldShowSubpage_(this.deviceState,this.networkStateList)){this.fire("show-networks",this.deviceState.type)}else if(this.shouldShowDetails_(this.activeNetworkState,this.deviceState,this.networkStateList)){if(this.activeNetworkState.guid){this.fire("show-detail",this.activeNetworkState)}else if(this.networkStateList.length>0){this.fire("show-detail",this.networkStateList[0])}}event.stopPropagation()},isItemActionable_(activeNetworkState,deviceState,networkStateList){if(!this.deviceIsEnabled_(this.deviceState)){return this.enableToggleIsEnabled_(this.deviceState)}return this.shouldShowSubpage_(this.deviceState,this.networkStateList)||this.shouldShowDetails_(activeNetworkState,deviceState,networkStateList)},showArrowButton_(activeNetworkState,deviceState,networkStateList){if(this.showSimInfo_(deviceState)){return false}if(!this.deviceIsEnabled_(deviceState)){return false}return this.shouldShowSubpage_(deviceState,networkStateList)||this.shouldShowDetails_(activeNetworkState,deviceState,networkStateList)},onDeviceEnabledChange_(event){assert(this.deviceState);const deviceIsEnabled=this.deviceIsEnabled_(this.deviceState);this.fire("device-enabled-toggled",{enabled:!deviceIsEnabled,type:this.deviceState.type});this.deviceState.deviceState=deviceIsEnabled?mojom$3.DeviceStateType.kDisabling:mojom$3.DeviceStateType.kEnabling},getTitleText_(){return this.networkTitleText||this.getNetworkTypeString_(this.activeNetworkState.type)},doNothing_(event){event.stopPropagation()},getNetworkTypeString_(type){if(type===mojom$3.NetworkType.kCellular||type===mojom$3.NetworkType.kTether){type=mojom$3.NetworkType.kMobile}return this.i18n("OncType"+OncMojo.getNetworkTypeString(type))}});// Copyright 2015 The Chromium Authors. All rights reserved.
const mojom$4=chromeos.networkConfig.mojom;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="network-summary">network-summary-item:first-child {
  --cr-separator-line: 0;
}

</style>
    <div id="summary">
      <template is="dom-repeat" items="[[activeNetworkStates_]]">
        <network-summary-item id="[[getTypeString_(item)]]" active-network-state="[[item]]" device-state="[[get(item.type, deviceStates)]]" network-state-list="[[get(item.type, networkStateLists_)]]" tether-device-state="[[getTetherDeviceState_(deviceStates)]]">
        </network-summary-item>
      </template>
    </div>
<!--_html_template_end_-->`,is:"network-summary",behaviors:[NetworkListenerBehavior],properties:{defaultNetwork:{type:Object,value:null,notify:true},deviceStates:{type:Object,value(){const result={};result[chromeos.networkConfig.mojom.NetworkType.kWiFi]={deviceState:chromeos.networkConfig.mojom.DeviceStateType.kDisabled,type:chromeos.networkConfig.mojom.NetworkType.kWiFi};return result},notify:true},activeNetworkStates_:{type:Array,value(){return[OncMojo.getDefaultNetworkState(mojom$4.NetworkType.kWiFi)]}},networkStateLists_:{type:Object,value(){const result={};result[mojom$4.NetworkType.kWiFi]=[];return result}}},networkConfig_:null,activeNetworkIds_:null,created(){this.networkConfig_=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote()},attached(){this.getNetworkLists_()},onActiveNetworksChanged(networks){if(!this.activeNetworkIds_){return}networks.forEach((network=>{const index=this.activeNetworkStates_.findIndex((state=>state.guid===network.guid));if(index!==-1){this.set(["activeNetworkStates_",index],network)}}))},onNetworkStateListChanged(){this.getNetworkLists_()},onDeviceStateListChanged(){this.getNetworkLists_()},getNetworkRow(networkType){const networkTypeString=OncMojo.getNetworkTypeString(networkType);return this.$$(`#${networkTypeString}`)},getNetworkLists_(){this.networkConfig_.getDeviceStateList().then((response=>{this.getNetworkStates_(response.result)}))},getNetworkStates_(deviceStateList){const filter={filter:chromeos.networkConfig.mojom.FilterType.kVisible,limit:chromeos.networkConfig.mojom.NO_LIMIT,networkType:mojom$4.NetworkType.kAll};this.networkConfig_.getNetworkStateList(filter).then((response=>{this.updateNetworkStates_(response.result,deviceStateList)}))},updateNetworkStates_(networkStates,deviceStateList){const newDeviceStates={};for(const device of deviceStateList){newDeviceStates[device.type]=device}const orderedNetworkTypes=[mojom$4.NetworkType.kEthernet,mojom$4.NetworkType.kWiFi,mojom$4.NetworkType.kCellular,mojom$4.NetworkType.kTether,mojom$4.NetworkType.kVPN];const activeNetworkStatesByType=new Map;const newNetworkStateLists={};for(const type of orderedNetworkTypes){newNetworkStateLists[type]=[]}let firstConnectedNetwork=null;networkStates.forEach((function(networkState){const type=networkState.type;if(!activeNetworkStatesByType.has(type)){activeNetworkStatesByType.set(type,networkState);if(!firstConnectedNetwork&&networkState.type!==mojom$4.NetworkType.kVPN&&OncMojo.connectionStateIsConnected(networkState.connectionState)){firstConnectedNetwork=networkState}}newNetworkStateLists[type].push(networkState)}),this);this.defaultNetwork=firstConnectedNetwork;const newActiveNetworkStates=[];this.activeNetworkIds_=new Set;for(const type of orderedNetworkTypes){const device=newDeviceStates[type];if(!device){continue}if(device.type===mojom$4.NetworkType.kVPN&&!activeNetworkStatesByType.has(device.type)){continue}if(type===mojom$4.NetworkType.kTether&&newDeviceStates[mojom$4.NetworkType.kCellular]){newNetworkStateLists[mojom$4.NetworkType.kCellular]=newNetworkStateLists[mojom$4.NetworkType.kCellular].concat(newNetworkStateLists[mojom$4.NetworkType.kTether]);continue}const networkState=this.getActiveStateForType_(activeNetworkStatesByType,type);if(networkState.source===mojom$4.OncSource.kNone&&device.deviceState===mojom$4.DeviceStateType.kProhibited){networkState.source=chromeos.networkConfig.mojom.OncSource.kDevicePolicy}newActiveNetworkStates.push(networkState);this.activeNetworkIds_.add(networkState.guid)}this.deviceStates=newDeviceStates;this.networkStateLists_=newNetworkStateLists;this.activeNetworkStates_=newActiveNetworkStates;this.fire("active-networks-updated")},getActiveStateForType_(activeStatesByType,type){let activeState=activeStatesByType.get(type);if(!activeState&&type===mojom$4.NetworkType.kCellular){activeState=activeStatesByType.get(mojom$4.NetworkType.kTether)}return activeState||OncMojo.getDefaultNetworkState(type)},getTypeString_(network){return OncMojo.getNetworkTypeString(network.type)},getTetherDeviceState_(deviceStates){return this.deviceStates[mojom$4.NetworkType.kTether]}});// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const MAX_INPUT_LENGTH=20;const MIN_INPUT_LENGTH=1;const EMOJI_REGEX_EXP=/(\u00a9|\u00ae|[\u2000-\u3300]|\ud83c[\ud000-\udfff]|\ud83d[\ud000-\udfff]|\ud83e[\ud000-\udfff])/gi;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-positioning" scope="esim-rename-dialog">:host {
  --cr-dialog-width: 416px;
        --cr-dialog-title-slot-padding-bottom: 10px;
}

#body {
  overflow: hidden;
        padding: 0 20px 2px 20px;
}

#warningMessage {
  --iron-icon-fill-color: var(--google-grey-600);
        --iron-icon-height: 16px;
        --iron-icon-width: 16px;
        font-size: smaller;
        padding-bottom: 12px;
}

#warningMessage iron-icon {
  float: left;
        padding-inline-end: 4px;
}

:host-context([dir='rtl']) #warningMessage iron-icon {
  float: right;
}

#warningMessage div {
  overflow: hidden;
}

#inputContainer {
  margin-top: 12px;
}

#inputInfo {
  background-color: white;
        color: var(--google-grey-700);
        font-size: var(--cr-form-field-label-font-size);
        font-weight: 400;
        height: 30px;
        line-height: var(--cr-form-field-label-line-height);
        padding-top: 8px;
        position: absolute;
        top: 50px;
        width: 100%;
}

#inputInfo.error {
  color: var(--google-red-600);
}

#inputSubtitle {
  display: block;
        width: 260px;
}

#inputCount {
  position: absolute;
        right: 0;
        top: 8px;
}

:host-context([dir='rtl']) #inputCount {
  left: 0;
        right: auto;
}

#cancel {
  margin-inline-end: 8px;
}

</style>
    <cr-dialog id="profileRenameDialog" show-on-attach="">
      <div slot="title">Rename Profile</div>
      <div id="body" slot="body">
        <div id="warningMessage" hidden$="[[!showCellularDisconnectWarning]]">
          <iron-icon icon="cr:info-outline"></iron-icon>
          <div>This may cause your mobile network to briefly disconnect</div>
        </div>
        <template is="dom-if" if="[[!errorMessage_]]" restamp="">
          <div id="inputContainer" class="relative">
            <!-- Set error-message so then it is read out by ChromeVox
              when cr-input is invalid. Since we already display the error
              message in #inputInfo, this is visually hidden by #inputInfo. -->
            <cr-input id="eSimprofileName" value="{{esimProfileName_}}" spellcheck="false" disabled="[[isRenameInProgress_]]" invalid="[[isInputInvalid_]]" label="New profile name" aria-label="[[i18n('eSimRenameProfileDialogLabel')]]" aria-description="[[i18n('eSimRenameProfileInputA11yLabel',
                    MAX_INPUT_LENGTH)]]" error-message="[[i18n('eSimRenameProfileInputA11yLabel',
                    MAX_INPUT_LENGTH)]]">
            </cr-input>
            <div id="inputInfo" class$="[[getInputInfoClass_(isInputInvalid_)]]" aria-hidden="true">
              <span id="inputSubtitle">Name can use letters, numbers, and special characters</span>
              <span id="inputCount">
                [[getInputCountString_(esimProfileName_)]]
              </span>
            </div>
          </div>
        </template>
        <div id="errorMessage" aria-live="polite" hidden$="[[!errorMessage_]]">
          [[errorMessage_]]
        </div>
      </div>
      <div slot="button-container">
        <template is="dom-if" if="[[!errorMessage_]]" restamp="">
          <cr-button id="cancel" on-click="onCancelTap_" disabled="[[isRenameInProgress_]]" class="cancel-button">
            Cancel
          </cr-button>
        </template>
        <cr-button id="done" on-click="onRenameDialogDoneTap_" disabled="[[isDoneButtonDisabled_(isRenameInProgress_,
                esimProfileName_)]]" aria-label$="[[getDoneBtnA11yLabel_(esimProfileName_)]]" aria-describedby="warningMessage" class="action-button">
          Done
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"esim-rename-dialog",behaviors:[I18nBehavior],properties:{MAX_INPUT_LENGTH:{type:Number,value:MAX_INPUT_LENGTH},networkState:{type:Object,value:null},showCellularDisconnectWarning:{type:Boolean,value:false},esimProfileName_:{type:String,value:"",observer:"onEsimProfileNameChanged_"},errorMessage_:{type:String,value:""},isRenameInProgress_:{type:Boolean,value:false},isInputInvalid_:{type:Boolean,value:false}},esimProfileRemote_:null,attached(){this.init_()},async init_(){if(!(this.networkState&&this.networkState.type===chromeos.networkConfig.mojom.NetworkType.kCellular)){return}this.esimProfileRemote_=await getESimProfile(this.networkState.typeState.cellular.iccid);if(!this.esimProfileRemote_){this.errorMessage_=this.i18n("eSimRenameProfileDialogError")}this.esimProfileName_=this.networkState.name;if(!this.errorMessage_){this.$$("#eSimprofileName").focus()}},convertString16ToJSString_(str){return str.data.map((ch=>String.fromCodePoint(ch))).join("")},async onRenameDialogDoneTap_(event){if(this.errorMessage_){this.$.profileRenameDialog.close();return}this.isRenameInProgress_=true;const name={data:Array.from(this.esimProfileName_,(c=>c.charCodeAt()))};this.esimProfileRemote_.setProfileNickname(name).then((response=>{this.handleSetProfileNicknameResponse_(response.result)}))},handleSetProfileNicknameResponse_(result){this.isRenameInProgress_=false;if(result===chromeos.cellularSetup.mojom.ESimOperationResult.kFailure){this.fire("show-error-toast",this.i18n("eSimRenameProfileDialogErrorToast"))}this.$.profileRenameDialog.close()},onCancelTap_(event){this.$.profileRenameDialog.close()},onEsimProfileNameChanged_(newValue,oldValue){if(oldValue){const sanitizedOldValue=oldValue.replace(EMOJI_REGEX_EXP,"");this.isInputInvalid_=sanitizedOldValue.length>MAX_INPUT_LENGTH}else{this.isInputInvalid_=false}const sanitizedProfileName=this.esimProfileName_.replace(EMOJI_REGEX_EXP,"");this.esimProfileName_=sanitizedProfileName.substring(0,MAX_INPUT_LENGTH)},getInputInfoClass_(isInputInvalid){return isInputInvalid?"error":""},getInputCountString_(esimProfileName){return this.i18n("eSimRenameProfileInputCharacterCount",esimProfileName.length.toLocaleString(undefined,{minimumIntegerDigits:2}),MAX_INPUT_LENGTH.toLocaleString())},isDoneButtonDisabled_(isRenameInProgress,esimProfileName){if(isRenameInProgress){return true}return esimProfileName.length<MIN_INPUT_LENGTH},getDoneBtnA11yLabel_(esimProfileName){return this.i18n("eSimRenameProfileDoneBtnA11yLabel",esimProfileName)}});// Copyright 2015 The Chromium Authors. All rights reserved.
const mojom$5=chromeos.networkConfig.mojom;const ESIM_PROFILE_LIMIT=5;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="os-settings-icons settings-shared" scope="settings-internet-page">iron-icon.policy {
  height: 24px;
        margin-inline-end: 12px;
        margin-inline-start: 4px;
        width: 24px;
}

cr-toast {
  --iron-icon-fill-color: var(--google-yellow-500);
}

cr-toast iron-icon {
  margin-inline-end: 16px;
}

</style>
    <settings-animated-pages id="pages" section="internet" focus-config="[[focusConfig_]]">
      <div route-path="default">
        <network-summary default-network="{{defaultNetwork}}" device-states="{{deviceStates}}" on-active-networks-updated="attemptDeepLink">
        </network-summary>
        <template is="dom-if" if="[[allowAddConnection_(globalPolicy_,
            managedNetworkAvailable)]]">
          <cr-expand-button aria-label="Add network connection" class="settings-box two-line" expanded="{{addConnectionExpanded_}}" id="expandAddConnections">
            <span aria-hidden="true">
              Add connection
            </span>
          </cr-expand-button>
          <template is="dom-if" if="[[addConnectionExpanded_]]">
            <div class="list-frame vertical-list">
              <template is="dom-if" if="[[wifiIsEnabled_(deviceStates)]]">
                <div actionable="" class="list-item" on-click="onAddWiFiTap_">
                  <div class="start settings-box-text" id="add-wifi-label" aria-hidden="true">
                    Add Wi-Fiâ€¦
                  </div>
                  <cr-icon-button class="icon-add-wifi" aria-labelledby="add-wifi-label"></cr-icon-button>
                </div>
              </template>
              <div actionable$="[[!vpnIsProhibited_]]" class="list-item" on-click="onAddVPNTap_">
                <div class="start settings-box-text" id="add-vpn-label" aria-hidden="true">
                  Add OpenVPN / L2TPâ€¦
                </div>
                <template is="dom-if" if="[[vpnIsProhibited_]]">
                  <cr-policy-indicator id="vpnPolicyIndicator" icon-aria-label="OpenVPN / L2TP" indicator-type="devicePolicy" on-click="doNothing_">
                  </cr-policy-indicator>
                </template>
                <cr-icon-button class="icon-add-circle" aria-labelledby="add-vpn-label" disabled="[[vpnIsProhibited_]]">
                </cr-icon-button>
              </div>
              <template is="dom-repeat" items="[[vpnProviders_]]">
                <div actionable="" class="list-item" on-click="onAddThirdPartyVpnTap_">
                  <div class="start settings-box-text">
                    [[getAddThirdPartyVpnLabel_(item)]]
                  </div>
                  <cr-icon-button class="icon-external" aria-label$="[[getAddThirdPartyVpnLabel_(item)]]">
                  </cr-icon-button>
                </div>
              </template>
            </div>
          </template>
        </template>
        <template is="dom-if" if="[[!allowAddConnection_(globalPolicy_,
            managedNetworkAvailable)]]">
          <div class="settings-box">
            <iron-icon class="policy" icon="cr20:domain"></iron-icon>
            <div class="settings-box-text">
              Add connection is disabled by your administrator
            </div>
          </div>
        </template>
      </div>

      <template is="dom-if" route-path="/networkDetail" no-search="" restamp="">
        <settings-subpage page-title="Network Details">
          <template is="dom-if" if="[[isUpdatedCellularUiEnabled_]]" restamp="">
            <settings-internet-detail-menu slot="subpage-title-extra" device-state="[[getDeviceState_(subpageType_, deviceStates)]]">
            </settings-internet-detail-menu>
          </template>
          <settings-internet-detail-page prefs="{{prefs}}" default-network="[[defaultNetwork]]" global-policy="[[globalPolicy_]]" managed-network-available="[[managedNetworkAvailable]]">
          </settings-internet-detail-page>
        </settings-subpage>
      </template>

      <template is="dom-if" route-path="/knownNetworks" no-search="" restamp="">
        <settings-subpage page-title="Known Networks">
          <settings-internet-known-networks-page network-type="[[knownNetworksType_]]">
          </settings-internet-known-networks-page>
        </settings-subpage>
      </template>

      <template is="dom-if" route-path="/networks" no-search="" restamp="">
        <settings-subpage page-title="[[getNetworksPageTitle_(subpageType_)]]" show-spinner="[[showSpinner_]]" spinner-title="Searching for networksâ€¦">
          <settings-internet-subpage default-network="[[defaultNetwork]]" device-state="[[getDeviceState_(subpageType_, deviceStates)]]" tether-device-state="[[getTetherDeviceState_(deviceStates)]]" global-policy="[[globalPolicy_]]" vpn-providers="[[vpnProviders_]]" show-spinner="{{showSpinner_}}" is-connected-to-non-cellular-network="[[isConnectedToNonCellularNetwork_]]" is-cellular-setup-active="[[showCellularSetupDialog_]]">
          </settings-internet-subpage>
        </settings-subpage>
      </template>

    </settings-animated-pages>

    <template is="dom-if" if="[[showInternetConfig_]]" restamp="">
      <internet-config id="configDialog" on-close="onInternetConfigClose_">
      </internet-config>
    </template>

    <template is="dom-if" if="[[showCellularSetupDialog_]]" restamp="">
      <os-settings-cellular-setup-dialog id="cellularSetupDialog" on-close="onCloseCellularSetupDialog_" page-name="[[cellularSetupDialogPageName_]]">
      </os-settings-cellular-setup-dialog>
    </template>

    <template is="dom-if" if="[[showESimProfileRenameDialog_]]" restamp="">
      <esim-rename-dialog id="esimRenameDialog" on-close="onCloseESimProfileRenameDialog_" network-state="[[eSimNetworkState_]]" show-cellular-disconnect-warning="[[hasActiveCellularNetwork_]]">
      </esim-rename-dialog>
    </template>

    <template is="dom-if" if="[[showESimRemoveProfileDialog_]]" restamp="">
      <esim-remove-profile-dialog id="esimRemoveProfileDialog" on-close="onCloseESimRemoveProfileDialog_" on-show-error-toast="onShowErrorToast_" network-state="[[eSimNetworkState_]]" show-cellular-disconnect-warning="[[hasActiveCellularNetwork_]]">
      </esim-remove-profile-dialog>
    </template>

    <template is="dom-if" if="[[showSimLockDialog_]]" restamp="">
      <sim-lock-dialogs is-dialog-open="{{showSimLockDialog_}}" device-state="[[getDeviceState_(subpageType_, deviceStates)]]">
      </sim-lock-dialogs>
    </template>

    <cr-toast id="errorToast" duration="5000">
      <iron-icon icon="cellular-setup:warning"></iron-icon>
      <span id="errorToastMessage">[[errorToastMessage_]]</span>
    </cr-toast>
<!--_html_template_end_-->`,is:"settings-internet-page",behaviors:[NetworkListenerBehavior,DeepLinkingBehavior,I18nBehavior,RouteObserverBehavior,WebUIListenerBehavior],properties:{prefs:{type:Object,notify:true},deviceStates:{type:Object,notify:true,observer:"onDeviceStatesChanged_"},defaultNetwork:{type:Object,notify:true},showSpinner_:Boolean,subpageType_:Number,knownNetworksType_:Number,addConnectionExpanded_:{type:Boolean,value:false},vpnIsProhibited_:{type:Boolean,value:false},globalPolicy_:Object,managedNetworkAvailable:{type:Boolean,value:false},vpnProviders_:{type:Array,value(){return[]}},showInternetConfig_:{type:Boolean,value:false},pendingShowCellularSetupDialogAttemptPageName_:{type:String,value:null},showCellularSetupDialog_:{type:Boolean,value:false},cellularSetupDialogPageName_:String,hasActiveCellularNetwork_:{type:Boolean,value:false},isConnectedToNonCellularNetwork_:{type:Boolean,value:false},showESimProfileRenameDialog_:{type:Boolean,value:false},showESimRemoveProfileDialog_:{type:Boolean,value:false},pendingShowSimLockDialog_:{type:Boolean,value:false},showSimLockDialog_:{type:Boolean,value:false},eSimNetworkState_:{type:Object,value:""},focusConfig_:{type:Object,value(){return new Map}},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kWifiOnOff,chromeos.settings.mojom.Setting.kMobileOnOff])},errorToastMessage_:{type:String,value:""},isUpdatedCellularUiEnabled_:{type:Boolean,value(){return loadTimeData.getBoolean("updatedCellularActivationUi")}}},detailType_:undefined,listeners:{"device-enabled-toggled":"onDeviceEnabledToggled_","network-connect":"onNetworkConnect_","show-cellular-setup":"onShowCellularSetupDialog_","show-config":"onShowConfig_","show-detail":"onShowDetail_","show-known-networks":"onShowKnownNetworks_","show-networks":"onShowNetworks_","show-esim-profile-rename-dialog":"onShowESimProfileRenameDialog_","show-esim-remove-profile-dialog":"onShowESimRemoveProfileDialog_","show-error-toast":"onShowErrorToast_"},browserProxy_:null,networkConfig_:null,created(){this.browserProxy_=InternetPageBrowserProxyImpl.getInstance();this.networkConfig_=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote()},attached(){this.networkConfig_.getGlobalPolicy().then((response=>{this.globalPolicy_=response.result}));this.onVpnProvidersChanged();this.onNetworkStateListChanged()},beforeDeepLinkAttempt(settingId){let networkType=null;if(settingId===chromeos.settings.mojom.Setting.kWifiOnOff){networkType=mojom$5.NetworkType.kWiFi}else if(settingId===chromeos.settings.mojom.Setting.kMobileOnOff){networkType=mojom$5.NetworkType.kCellular}afterNextRender(this,(()=>{const networkRow=this.$$("network-summary").getNetworkRow(networkType);if(networkRow&&networkRow.getDeviceEnabledToggle()){this.showDeepLinkElement(networkRow.getDeviceEnabledToggle());return}console.warn(`Element with deep link id ${settingId} not focusable.`)}));return false},currentRouteChanged(route,oldRoute){if(route===routes.INTERNET_NETWORKS){const queryParams=Router.getInstance().getQueryParameters();const type=queryParams.get("type");if(type){this.subpageType_=OncMojo.getNetworkTypeFromString(type)}if(!oldRoute&&queryParams.get("showCellularSetup")==="true"){const pageName=queryParams.get("showPsimFlow")==="true"?CellularSetupPageName.PSIM_FLOW_UI:CellularSetupPageName.ESIM_FLOW_UI;this.pendingShowCellularSetupDialogAttemptPageName_=pageName}this.pendingShowSimLockDialog_=!oldRoute&&!!queryParams.get("showSimLockDialog")&&this.subpageType_===mojom$5.NetworkType.kCellular&&this.isUpdatedCellularUiEnabled_}else if(route===routes.KNOWN_NETWORKS){const queryParams=Router.getInstance().getQueryParameters();const type=queryParams.get("type");if(type){this.knownNetworksType_=OncMojo.getNetworkTypeFromString(type)}}else if(route===routes.INTERNET){this.attemptDeepLink()}else if(route!==routes.BASIC){return}if(!routes.INTERNET||!routes.INTERNET.contains(oldRoute)){return}let element;if(route===routes.INTERNET_NETWORKS){const subPage=this.$$("settings-internet-subpage");if(subPage){element=subPage.$$("#networkList")}}else if(this.detailType_!==undefined){const rowForDetailType=this.$$("network-summary").getNetworkRow(this.detailType_);if(rowForDetailType){element=rowForDetailType.$$(".subpage-arrow")}}if(element){this.focusConfig_.set(oldRoute.path,element)}else{this.focusConfig_.delete(oldRoute.path)}},onNetworkStateListChanged(){hasActiveCellularNetwork().then((hasActive=>{this.hasActiveCellularNetwork_=hasActive}));this.updateIsConnectedToNonCellularNetwork_()},onVpnProvidersChanged(){this.networkConfig_.getVpnProviders().then((response=>{const providers=response.providers;providers.sort(this.compareVpnProviders_);this.vpnProviders_=providers}))},updateIsConnectedToNonCellularNetwork_(){return isConnectedToNonCellularNetwork().then((isConnected=>{this.isConnectedToNonCellularNetwork_=isConnected;return isConnected}))},onDeviceEnabledToggled_(event){this.networkConfig_.setNetworkTypeEnabledState(event.detail.type,event.detail.enabled);recordSettingChange()},onShowConfig_(event){const type=OncMojo.getNetworkTypeFromString(event.detail.type);if(!event.detail.guid){this.showConfig_(true,type)}else{this.showConfig_(false,type,event.detail.guid,event.detail.name)}},onShowCellularSetupDialog_(event){this.attemptShowCellularSetupDialog_(event.detail.pageName)},attemptShowCellularSetupDialog_(pageName){const cellularDeviceState=this.getDeviceState_(mojom$5.NetworkType.kCellular,this.deviceStates);if(!cellularDeviceState||cellularDeviceState.deviceState!==mojom$5.DeviceStateType.kEnabled){this.showErrorToast_(this.i18n("eSimMobileDataNotEnabledErrorToast"));return}if(pageName===CellularSetupPageName.PSIM_FLOW_UI){this.showCellularSetupDialog_=true;this.cellularSetupDialogPageName_=pageName}else{this.attemptShowESimSetupDialog_()}},async attemptShowESimSetupDialog_(){const numProfiles=await getNumESimProfiles();if(numProfiles>=ESIM_PROFILE_LIMIT){this.showErrorToast_(this.i18n("eSimProfileLimitReachedErrorToast",ESIM_PROFILE_LIMIT));return}this.updateIsConnectedToNonCellularNetwork_().then((isConnected=>{this.showCellularSetupDialog_=isConnected;if(!isConnected){this.showErrorToast_(this.i18n("eSimNoConnectionErrorToast"));return}this.cellularSetupDialogPageName_=CellularSetupPageName.ESIM_FLOW_UI}).bind(this))},onShowErrorToast_(event){this.showErrorToast_(event.detail)},showErrorToast_(message){this.errorToastMessage_=message;this.$.errorToast.show()},onCloseCellularSetupDialog_(){this.showCellularSetupDialog_=false},showConfig_(configAndConnect,type,opt_guid,opt_name){assert(type!==chromeos.networkConfig.mojom.NetworkType.kCellular&&type!==chromeos.networkConfig.mojom.NetworkType.kTether);if(this.showInternetConfig_){return}this.showInternetConfig_=true;setTimeout((()=>{const configDialog=this.$$("#configDialog");assert(!!configDialog);configDialog.type=OncMojo.getNetworkTypeString(type);configDialog.guid=opt_guid||"";configDialog.name=opt_name||"";configDialog.showConnect=configAndConnect;configDialog.open()}))},onInternetConfigClose_(){this.showInternetConfig_=false},onShowDetail_(event){const networkState=event.detail;this.detailType_=networkState.type;const params=new URLSearchParams;params.append("guid",networkState.guid);params.append("type",OncMojo.getNetworkTypeString(networkState.type));params.append("name",OncMojo.getNetworkStateDisplayName(networkState));Router.getInstance().navigateTo(routes.NETWORK_DETAIL,params)},onShowESimProfileRenameDialog_(event){this.eSimNetworkState_=event.detail.networkState;this.showESimProfileRenameDialog_=true},onCloseESimProfileRenameDialog_(){this.showESimProfileRenameDialog_=false},onShowESimRemoveProfileDialog_(event){this.eSimNetworkState_=event.detail.networkState;this.showESimRemoveProfileDialog_=true},onCloseESimRemoveProfileDialog_(){this.showESimRemoveProfileDialog_=false},onShowNetworks_(event){this.showNetworksSubpage_(event.detail)},getNetworksPageTitle_(){if(this.subpageType_===mojom$5.NetworkType.kCellular||this.subpageType_===mojom$5.NetworkType.kTether){return this.i18n("OncTypeMobile")}return this.i18n("OncType"+OncMojo.getNetworkTypeString(this.subpageType_))},getDeviceState_(subpageType,deviceStates){if(subpageType===undefined){return undefined}if(subpageType===mojom$5.NetworkType.kTether&&this.deviceStates[mojom$5.NetworkType.kCellular]){subpageType=mojom$5.NetworkType.kCellular}return deviceStates[subpageType]},getTetherDeviceState_(deviceStates){return deviceStates[mojom$5.NetworkType.kTether]},onDeviceStatesChanged_(newValue,oldValue){const wifiDeviceState=this.getDeviceState_(mojom$5.NetworkType.kWiFi,newValue);let managedNetworkAvailable=false;if(wifiDeviceState){managedNetworkAvailable=!!wifiDeviceState.managedNetworkAvailable}if(this.managedNetworkAvailable!==managedNetworkAvailable){this.managedNetworkAvailable=managedNetworkAvailable}const vpn=this.deviceStates[mojom$5.NetworkType.kVPN];this.vpnIsProhibited_=!!vpn&&vpn.deviceState===chromeos.networkConfig.mojom.DeviceStateType.kProhibited;if(this.detailType_&&!this.deviceStates[this.detailType_]){const detailPage=this.$$("settings-internet-detail-page");if(detailPage){detailPage.close()}}if(this.pendingShowCellularSetupDialogAttemptPageName_){this.attemptShowCellularSetupDialog_(this.pendingShowCellularSetupDialogAttemptPageName_);this.pendingShowCellularSetupDialogAttemptPageName_=null}if(this.pendingShowSimLockDialog_){this.showSimLockDialog_=true;this.pendingShowSimLockDialog_=false}},onShowKnownNetworks_(event){const type=event.detail;this.detailType_=type;this.knownNetworksType_=type;const params=new URLSearchParams;params.append("type",OncMojo.getNetworkTypeString(type));Router.getInstance().navigateTo(routes.KNOWN_NETWORKS,params)},onAddWiFiTap_(){this.showConfig_(true,chromeos.networkConfig.mojom.NetworkType.kWiFi)},onAddVPNTap_(){if(!this.vpnIsProhibited_){this.showConfig_(true,chromeos.networkConfig.mojom.NetworkType.kVPN)}},onAddThirdPartyVpnTap_(event){const provider=event.model.item;this.browserProxy_.addThirdPartyVpn(provider.appId);recordSettingChange()},showNetworksSubpage_(type){this.detailType_=type;const params=new URLSearchParams;params.append("type",OncMojo.getNetworkTypeString(type));this.subpageType_=type;Router.getInstance().navigateTo(routes.INTERNET_NETWORKS,params)},compareVpnProviders_(vpnProvider1,vpnProvider2){if(vpnProvider1.type<vpnProvider2.type){return-1}if(vpnProvider1.type>vpnProvider2.type){return 1}if(vpnProvider1.lastLaunchTime.internalValue>vpnProvider2.lastLaunchTime.internalValue){return-1}if(vpnProvider1.lastLaunchTime.internalValue<vpnProvider2.lastLaunchTime.internalValue){return 1}return 0},wifiIsEnabled_(deviceStates){const wifi=deviceStates[mojom$5.NetworkType.kWiFi];return!!wifi&&wifi.deviceState===chromeos.networkConfig.mojom.DeviceStateType.kEnabled},allowAddConnection_(globalPolicy,managedNetworkAvailable){if(!globalPolicy){return true}return!globalPolicy.allowOnlyPolicyNetworksToConnect&&(!globalPolicy.allowOnlyPolicyNetworksToConnectIfAvailable||!managedNetworkAvailable)},getAddThirdPartyVpnLabel_(provider){return this.i18n("internetAddThirdPartyVPN",provider.providerName||"")},onNetworkConnect_(event){const networkState=event.detail.networkState;const type=networkState.type;const displayName=OncMojo.getNetworkStateDisplayName(networkState);if(!event.detail.bypassConnectionDialog&&type===mojom$5.NetworkType.kTether&&!networkState.typeState.tether.hasConnectedToHost){const params=new URLSearchParams;params.append("guid",networkState.guid);params.append("type",OncMojo.getNetworkTypeString(type));params.append("name",displayName);params.append("showConfigure",true.toString());Router.getInstance().navigateTo(routes.NETWORK_DETAIL,params);return}if(OncMojo.networkTypeHasConfigurationFlow(type)&&(!OncMojo.isNetworkConnectable(networkState)||!!networkState.errorState)){this.showConfig_(true,type,networkState.guid,displayName);return}this.networkConfig_.startConnect(networkState.guid).then((response=>{switch(response.result){case mojom$5.StartConnectResult.kSuccess:return;case mojom$5.StartConnectResult.kInvalidGuid:case mojom$5.StartConnectResult.kInvalidState:case mojom$5.StartConnectResult.kCanceled:return;case mojom$5.StartConnectResult.kNotConfigured:if(OncMojo.networkTypeHasConfigurationFlow(type)){this.showConfig_(true,type,networkState.guid,displayName)}return;case mojom$5.StartConnectResult.kBlocked:case mojom$5.StartConnectResult.kUnknown:console.error("startConnect failed for: "+networkState.guid+" Error: "+response.message);return}assertNotReached$1()}))}});// Copyright 2016 The Chromium Authors. All rights reserved.
function getSupportedScaleFactors(){const supportedScaleFactors=[];if(!isIOS){supportedScaleFactors.push(1)}if(!isIOS&&!isAndroid){supportedScaleFactors.push(2)}else{supportedScaleFactors.push(window.devicePixelRatio)}return supportedScaleFactors}function getUrlForCss(s){const s2=s.replace(/(\(|\)|\,|\s|\'|\"|\\)/g,"\\$1");return`url("${s2}")`}function getImageSet(path){const supportedScaleFactors=getSupportedScaleFactors();const replaceStartIndex=path.indexOf("SCALEFACTOR");if(replaceStartIndex<0){return getUrlForCss(path)}let s="";for(let i=0;i<supportedScaleFactors.length;++i){const scaleFactor=supportedScaleFactors[i];const pathWithScaleFactor=path.substr(0,replaceStartIndex)+scaleFactor+path.substr(replaceStartIndex+"scalefactor".length);s+=getUrlForCss(pathWithScaleFactor)+" "+scaleFactor+"x";if(i!==supportedScaleFactors.length-1){s+=", "}}return"-webkit-image-set("+s+")"}function getImage(path){const chromeThemePath="chrome://theme";const isChromeThemeUrl=path.slice(0,chromeThemePath.length)===chromeThemePath;return isChromeThemeUrl?getImageSet(path+"@SCALEFACTORx"):getUrlForCss(path)}// Copyright 2018 The Chromium Authors. All rights reserved.
class AccountManagerBrowserProxy{getAccounts(){}addAccount(){}reauthenticateAccount(accountEmail){}migrateAccount(accountEmail){}removeAccount(account){}showWelcomeDialogIfRequired(){}}class AccountManagerBrowserProxyImpl{getAccounts(){return sendWithPromise("getAccounts")}addAccount(){chrome.send("addAccount")}reauthenticateAccount(accountEmail){chrome.send("reauthenticateAccount",[accountEmail])}migrateAccount(accountEmail){chrome.send("migrateAccount",[accountEmail])}removeAccount(account){chrome.send("removeAccount",[account])}showWelcomeDialogIfRequired(){chrome.send("showWelcomeDialogIfRequired")}}addSingletonGetter(AccountManagerBrowserProxyImpl);// Copyright 2019 The Chromium Authors. All rights reserved.
const KerberosErrorType={kNone:0,kUnknown:1,kDBusFailure:2,kNetworkProblem:3,kUnknownKrb5Error:4,kBadPrincipal:5,kBadPassword:6,kPasswordExpired:7,kPasswordRejected:8,kNoCredentialsCacheFound:9,kKerberosTicketExpired:10,kKdcDoesNotSupportEncryptionType:11,kContactingKdcFailed:12,kParseRequestFailed:13,kLocalIo:14,kUnknownPrincipalName:15,kDuplicatePrincipalName:16,kInProgress:17,kParsePrincipalFailed:18,kBadConfig:19,kJailFailure:20,kKerberosDisabled:21};const KerberosConfigErrorCode={kNone:0,kSectionNestedInGroup:1,kSectionSyntax:2,kExpectedOpeningCurlyBrace:3,kExtraCurlyBrace:4,kRelationSyntax:5,kKeyNotSupported:6,kSectionNotSupported:7,kKrb5FailedToParse:8,kTooManyNestedGroups:9};class KerberosAccountsBrowserProxyImpl{getAccounts(){return sendWithPromise("getKerberosAccounts")}addAccount(principalName,password,rememberPassword,config,allowExisting){return sendWithPromise("addKerberosAccount",principalName,password,rememberPassword,config,allowExisting)}removeAccount(account){return sendWithPromise("removeKerberosAccount",account.principalName)}validateConfig(krb5conf){return sendWithPromise("validateKerberosConfig",krb5conf)}setAsActiveAccount(account){chrome.send("setAsActiveKerberosAccount",[account.principalName])}}addSingletonGetter(KerberosAccountsBrowserProxyImpl);// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({is:"settings-textarea",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-hidden-style cr-input-style cr-shared-style" scope="settings-textarea">textarea {
  display: block;
    resize: none;
}

#input-container {
  background-color: var(--cr-input-background-color);
}

#underline {
  position: static;
}

</style>
<div id="label" class="cr-form-field-label" hidden="[[!label]]">
  [[label]]
</div>
<div id="input-container">
  <!-- The textarea is limited to |rows| height. If the content exceeds the
       bounds, it scrolls by default. No space or comments are allowed
       before the closing tag. -->
  <textarea id="input" autofocus="[[autofocus]]" rows="[[rows]]" value="{{value::input}}" aria-label$="[[label]]" on-focus="onInputFocusChange_" on-blur="onInputFocusChange_" on-change="onInputChange_" disabled="[[disabled]]"></textarea>
  <div id="underline"></div>
</div>
<!--_html_template_end_-->`,properties:{autofocus:{type:Boolean,value:false,reflectToAttribute:true},disabled:{type:Boolean,value:false,reflectToAttribute:true,observer:"onDisabledChanged_"},rows:{type:Number,value:3,reflectToAttribute:true},label:{type:String,value:""},value:{type:String,value:"",notify:true}},onInputChange_(e){this.fire("change",{sourceEvent:e})},onInputFocusChange_(){if(this.shadowRoot.activeElement===this.$.input){this.setAttribute("focused_","")}else{this.removeAttribute("focused_")}},onDisabledChanged_(){this.setAttribute("aria-disabled",this.disabled?"true":"false")}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared action-link" scope="kerberos-add-account-dialog">#advancedConfigDesc {
  align-items: center;
        display: flex;
}

#advancedConfigPolicyIndicator {
  margin-inline-start: 1em;
}

#credentials {
  margin-top: 16px;
}

#credentials > *:not(:last-child) {
  margin-bottom: var(--cr-form-field-bottom-spacing);
}

#general-error-container {
  display: flex;
        height: 56px;
}

#config-error-container {
  display: flex;
        height: 40px;
        margin-top: 16px;
}

#general-error-message, #config-error-message {
  color: var(--settings-error-color);
}

iron-icon[icon='cr:error'] {
  fill: var(--settings-error-color);
        margin-inline-end: 8px;
}

#rememberPasswordContainer {
  align-items: center;
        display: flex;
        margin-bottom: 32px;
}

#rememberPassword {
  margin-inline-end: 1em;
}

</style>

    <cr-dialog id="addDialog" hidden="[[showAdvancedConfig_]]">
      <div slot="title">[[title_]]</div>

      <div slot="body" spellcheck="false">
        <h2 class="start first">
          To automatically refresh a ticket, check â€œRemember password.â€ Your password will be stored on your device only.
        </h2>

        <div id="general-error-container" hidden="[[!showError_(generalErrorText_)]]">
          <iron-icon id="error-icon" icon="cr:error"></iron-icon>
          <div id="general-error-message">[[generalErrorText_]]</div>
        </div>

        <div id="credentials">
          <cr-input id="username" label="Kerberos username" value="{{username_}}" invalid="[[showError_(usernameErrorText_)]]" placeholder="user@example.com" error-message="[[usernameErrorText_]]">
          </cr-input>

          <cr-input id="password" type="password" label="Password" value="{{password_}}" invalid="[[showError_(passwordErrorText_)]]" error-message="[[passwordErrorText_]]" on-input="onPasswordInput_">
          </cr-input>

          <div id="rememberPasswordContainer">
            <cr-checkbox id="rememberPassword" checked="{{rememberPassword_}}" disabled="[[!rememberPasswordEnabled_]]">
              Remember password
            </cr-checkbox>
            <template is="dom-if" if="[[!rememberPasswordEnabled_]]">
              <cr-policy-indicator id="rememberPasswordPolicyIndicator" indicator-type="userPolicy">
              </cr-policy-indicator>
            </template>
          </div>

          <a is="action-link" id="advancedConfigButton" on-click="onAdvancedConfigClick_">
            Advanced
          </a>
        </div>
      </div>

      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onCancel_" id="cancel">
          Cancel
        </cr-button>
        <cr-button class="action-button" on-click="onAdd_" disabled="[[inProgress_]]">
          [[actionButtonLabel_]]
        </cr-button>
      </div>
    </cr-dialog>

    <template is="dom-if" if="[[showAdvancedConfig_]]" restamp="">
      <cr-dialog id="advancedConfigDialog" on-close="onAdvancedConfigClose_">
        <div slot="title">Configure Kerberos</div>

        <div slot="body">
          <h2 class="first" id="advancedConfigDesc">
            Edit the configuration file
            <template is="dom-if" if="[[isManaged_]]">
              <cr-policy-indicator id="advancedConfigPolicyIndicator" indicator-type="userPolicy">
              </cr-policy-indicator>
            </template>
          </h2>

          <settings-textarea id="config" value="{{editableConfig_}}" rows="12" spellcheck="false" disabled="[[isManaged_]]">
          </settings-textarea>

          <div id="config-error-container" hidden="[[!showError_(configErrorText_)]]">
            <iron-icon id="error-icon" icon="cr:error"></iron-icon>
            <div id="config-error-message">[[configErrorText_]]</div>
          </div>
        </div>

        <div slot="button-container">
          <cr-button class="cancel-button" on-click="onAdvancedConfigCancel_">
            Cancel
          </cr-button>
          <cr-button class="action-button" on-click="onAdvancedConfigSave_" disabled="[[inProgress_]]">
            Save
          </cr-button>
        </div>
      </cr-dialog>
    </template>
<!--_html_template_end_-->`,is:"kerberos-add-account-dialog",behaviors:[I18nBehavior],properties:{presetAccount:Object,accountWasRefreshed:{type:Boolean,value:false},username_:{type:String,value:""},password_:{type:String,value:""},editableConfig_:{type:String,value:""},rememberPassword_:{type:Boolean,value:false},generalErrorText_:{type:String,value:""},usernameErrorText_:{type:String,value:""},passwordErrorText_:{type:String,value:""},configErrorText_:{type:String,value:""},inProgress_:{type:Boolean,value:false},isManaged_:{type:Boolean,value:false},showAdvancedConfig_:{type:Boolean,value:false},rememberPasswordEnabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("kerberosRememberPasswordEnabled")}}},useRememberedPassword_:false,config_:"",title_:"",actionButtonLabel_:"",browserProxy_:null,created(){this.browserProxy_=KerberosAccountsBrowserProxyImpl.getInstance()},attached(){this.$.addDialog.showModal();if(this.presetAccount){this.title_=this.i18n("refreshKerberosAccount");this.actionButtonLabel_=this.i18n("addKerberosAccountRefreshButtonLabel");this.username_=this.presetAccount.principalName;this.isManaged_=this.presetAccount.isManaged;this.$.username.readonly=true;this.$.password.focus();if(this.presetAccount.passwordWasRemembered&&this.rememberPasswordEnabled_){const FAKE_PASSWORD="xxxxxxxx";this.password_=FAKE_PASSWORD;this.rememberPassword_=true;this.useRememberedPassword_=true}this.config_=this.presetAccount.config}else{this.title_=this.i18n("addKerberosAccount");this.actionButtonLabel_=this.i18n("add");this.config_=loadTimeData$1.getString("defaultKerberosConfig")}},onCancel_(){this.$.addDialog.cancel()},onAdd_(){assert(!this.inProgress_);this.inProgress_=true;this.usernameErrorText_="";this.passwordErrorText_="";const passwordToSubmit=this.useRememberedPassword_?"":this.password_;const allowExisting=!!this.presetAccount;this.browserProxy_.addAccount(this.username_,passwordToSubmit,this.rememberPassword_,this.config_,allowExisting).then((error=>{this.inProgress_=false;if(error===KerberosErrorType.kNone){this.accountWasRefreshed=this.presetAccount!=null;this.$.addDialog.close();return}this.updateErrorMessages_(error)}));recordSettingChange()},onPasswordInput_(){this.useRememberedPassword_=false},onAdvancedConfigClick_(){this.editableConfig_=this.config_;this.showAdvancedConfig_=true;flush();this.$$("#advancedConfigDialog").showModal()},onAdvancedConfigCancel_(){this.configErrorText_="";this.showAdvancedConfig_=false;this.$$("#advancedConfigDialog").cancel()},onAdvancedConfigSave_(){assert(!this.inProgress_);this.inProgress_=true;this.browserProxy_.validateConfig(this.editableConfig_).then((result=>{this.inProgress_=false;if(result.error===KerberosErrorType.kNone){this.showAdvancedConfig_=false;this.config_=this.editableConfig_;this.configErrorText_="";this.$$("#advancedConfigDialog").close();return}this.updateConfigErrorMessage_(result)}));recordSettingChange()},onAdvancedConfigClose_(event){this.showAdvancedConfig_=false;event.stopPropagation()},updateErrorMessages_(error){this.generalErrorText_="";this.usernameErrorText_="";this.passwordErrorText_="";switch(error){case KerberosErrorType.kNone:break;case KerberosErrorType.kNetworkProblem:this.generalErrorText_=this.i18n("kerberosErrorNetworkProblem");break;case KerberosErrorType.kParsePrincipalFailed:this.usernameErrorText_=this.i18n("kerberosErrorUsernameInvalid");break;case KerberosErrorType.kBadPrincipal:this.usernameErrorText_=this.i18n("kerberosErrorUsernameUnknown");break;case KerberosErrorType.kDuplicatePrincipalName:this.usernameErrorText_=this.i18n("kerberosErrorDuplicatePrincipalName");break;case KerberosErrorType.kContactingKdcFailed:this.usernameErrorText_=this.i18n("kerberosErrorContactingServer");break;case KerberosErrorType.kBadPassword:this.passwordErrorText_=this.i18n("kerberosErrorPasswordInvalid");break;case KerberosErrorType.kPasswordExpired:this.passwordErrorText_=this.i18n("kerberosErrorPasswordExpired");break;case KerberosErrorType.kKdcDoesNotSupportEncryptionType:this.generalErrorText_=this.i18n("kerberosErrorKdcEncType");break;default:this.generalErrorText_=this.i18n("kerberosErrorGeneral",error.toString())}},updateConfigErrorMessage_(result){assert(result.error!==KerberosErrorType.kNone);if(result.error!==KerberosErrorType.kBadConfig){this.configErrorText_=this.i18n("kerberosErrorGeneral",result.error.toString());return}let errorLine="";if(result.errorInfo.lineIndex!==undefined){const textArea=this.$$("#config").shadowRoot.querySelector("#input");errorLine=this.selectAndScrollTo_(textArea,result.errorInfo.lineIndex)}assert(result.errorInfo.code!==KerberosConfigErrorCode.kNone);this.configErrorText_=this.getConfigErrorString_(result.errorInfo.code,errorLine)},getConfigErrorString_(code,errorLine){switch(code){case KerberosConfigErrorCode.kSectionNestedInGroup:return this.i18n("kerberosConfigErrorSectionNestedInGroup",errorLine);case KerberosConfigErrorCode.kSectionSyntax:return this.i18n("kerberosConfigErrorSectionSyntax",errorLine);case KerberosConfigErrorCode.kExpectedOpeningCurlyBrace:return this.i18n("kerberosConfigErrorExpectedOpeningCurlyBrace",errorLine);case KerberosConfigErrorCode.kExtraCurlyBrace:return this.i18n("kerberosConfigErrorExtraCurlyBrace",errorLine);case KerberosConfigErrorCode.kRelationSyntax:return this.i18n("kerberosConfigErrorRelationSyntax",errorLine);case KerberosConfigErrorCode.kKeyNotSupported:return this.i18n("kerberosConfigErrorKeyNotSupported",errorLine);case KerberosConfigErrorCode.kSectionNotSupported:return this.i18n("kerberosConfigErrorSectionNotSupported",errorLine);case KerberosConfigErrorCode.kKrb5FailedToParse:return this.i18n("kerberosConfigErrorKrb5FailedToParse");case KerberosConfigErrorCode.kTooManyNestedGroups:return this.i18n("kerberosConfigErrorTooManyNestedGroups",errorLine);default:assertNotReached$1()}},selectAndScrollTo_(textArea,lineIndex){const lines=textArea.value.split("\n");assert(lineIndex>=0&&lineIndex<lines.length);let startPos=0;for(let i=0;i<lineIndex;i++){startPos+=lines[i].length+1}const trimmedLine=lines[lineIndex].trim();startPos+=lines[lineIndex].indexOf(trimmedLine);const endPos=startPos+trimmedLine.length;textArea.focus();textArea.setSelectionRange(startPos,endPos);const lineHeight=textArea.clientHeight/textArea.rows;const firstLine=Math.max(0,lineIndex-textArea.rows/2);textArea.scrollTop=lineHeight*firstLine;return lines[lineIndex]},showError_(errorText){return!!errorText}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared iron-flex iron-flex-alignment" scope="settings-kerberos-accounts">.account-icon {
  background: center no-repeat;
        border-radius: 20px;
        flex-shrink: 0;
        height: 40px;
        width: 40px;
}

#outer {
  margin-inline-end: var(--cr-section-padding);
        margin-inline-start: 60px;
}

#account-list-header {
  padding-bottom: 1em;
}

.account-toolbar, #remove-account-policy-indicator {
  margin-inline-start: 1em;
}

#add-account-policy-indicator {
  margin-inline-end: 1em;
}

#add-account-icon {
  -webkit-mask-image: url(chrome://resources/images/add.svg);
        background-color: currentColor;
        height: 24px;
        margin-inline-end: 0.5em;
        width: 24px;
}

#remove-account-container {
  align-items: center;
        display: flex;
}

.error-badge {
  left: 60%;
        position: relative;
        top: 60%;
}

.warning {
  color: red;
}

:host-context([dir='rtl']) .error-badge {
  left: auto;
        right: 60%;
}

</style>

    <div class="settings-box first">
      <h2 class="first">
        <!-- Inner div needed to get spacing right in front of 'Learn more'. -->
        <div inner-h-t-m-l="[[i18nAdvanced('kerberosAccountsDescription')]]">
        </div>
      </h2>
    </div>

    <div class="settings-box first">
      <div id="account-list-header" class="flex">
        <h2>Tickets</h2>
      </div>
      <template is="dom-if" if="[[!addAccountsAllowed_]]">
        <cr-policy-indicator id="add-account-policy-indicator" indicator-type="userPolicy">
        </cr-policy-indicator>
      </template>
      <cr-button id="add-account-button" on-click="onAddAccountClick_" disabled="[[!addAccountsAllowed_]]" deep-link-focus-id$="[[Setting.kAddKerberosTicket]]
              [[Setting.kAddKerberosTicketV2]]">
        <div id="add-account-icon"></div>
        Add a ticket
      </cr-button>
    </div>

    <div id="outer" class="layout vertical nowrap">
      <template is="dom-repeat" id="account-list" items="[[accounts_]]">
        <div class="settings-box account-list-item">

          <div class="account-icon" style="background-image: [[getIconImageSet_(item.pic)]]">
            <img class="error-badge" hidden$="[[item.isSignedIn]]" src="chrome://os-settings/images/error_badge.svg">
          </div>

          <div class="middle two-line no-min-width">
            <div class="flex text-elide">
              <span>[[item.principalName]]</span>

              <div class="secondary signed-in" hidden$="[[!item.isSignedIn]]">
                [[i18n('kerberosAccountsSignedIn', item.validForDuration)]]
              </div>
              <div class="secondary warning signed-out" hidden$="[[item.isSignedIn]]">
                Expired
              </div>
            </div>
          </div>

          <div class="secondary account-toolbar active-indicator" hidden$="[[!item.isActive]]">
            Active
          </div>

          <cr-button class="account-toolbar reauth-button" hidden$="[[item.isSignedIn]]" on-click="onReauthenticationClick_">
            Refresh
          </cr-button>

          <template is="dom-if" if="[[item.isManaged]]">
            <cr-policy-indicator indicator-type="userPolicy" class="account-toolbar account-policy-indicator">
            </cr-policy-indicator>
          </template>

          <!-- Hamburger menu -->
          <cr-icon-button class="icon-more-vert more-actions" title="More actions" on-click="onAccountActionsMenuButtonClick_" deep-link-focus-id$="[[Setting.kRemoveKerberosTicket]]
                  [[Setting.kRemoveKerberosTicketV2]]
                  [[Setting.kSetActiveKerberosTicket]]
                  [[Setting.kSetActiveKerberosTicketV2]]">
          </cr-icon-button>
        </div>
      </template>

      <div class="clear settings-box"></div>

      <cr-action-menu role-description="Menu">
        <button class="dropdown-item" on-click="onRefreshNowClick_">
          Refresh now
        </button>
        <button class="dropdown-item" on-click="onSetAsActiveAccountClick_">
          Set as active ticket
        </button>
        <button class="dropdown-item" on-click="onRemoveAccountClick_" disabled="[[selectedAccount_.isManaged]]">
          <div id="remove-account-container">
            Remove from this device
            <template is="dom-if" if="[[selectedAccount_.isManaged]]">
              <cr-policy-indicator id="remove-account-policy-indicator" indicator-type="userPolicy">
              </cr-policy-indicator>
            </template>
          </div>
        </button>
      </cr-action-menu>
    </div>

    <cr-toast id="account-toast" duration="3000">
      <!-- Gets displayed with black font without div and id :-/ -->
      <div id="account-toast-label">[[accountToastText_]]</div>
    </cr-toast>

    <template is="dom-if" if="[[showAddAccountDialog_]]" restamp="">
      <kerberos-add-account-dialog preset-account="[[selectedAccount_]]" on-close="onAddAccountDialogClosed_">
      </kerberos-add-account-dialog>
    </template>
<!--_html_template_end_-->`,is:"settings-kerberos-accounts",behaviors:[DeepLinkingBehavior,I18nBehavior,RouteObserverBehavior,WebUIListenerBehavior],properties:{accounts_:{type:Array,value(){return[]}},selectedAccount_:Object,showAddAccountDialog_:Boolean,addAccountsAllowed_:{type:Boolean,value(){return loadTimeData$1.getBoolean("kerberosAddAccountsAllowed")}},accountToastText_:{type:String,value:""},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kAddKerberosTicket,chromeos.settings.mojom.Setting.kRemoveKerberosTicket,chromeos.settings.mojom.Setting.kSetActiveKerberosTicket,chromeos.settings.mojom.Setting.kAddKerberosTicketV2,chromeos.settings.mojom.Setting.kRemoveKerberosTicketV2,chromeos.settings.mojom.Setting.kSetActiveKerberosTicketV2])}},browserProxy_:null,attached(){this.addWebUIListener("kerberos-accounts-changed",this.refreshAccounts_.bind(this))},ready(){this.browserProxy_=KerberosAccountsBrowserProxyImpl.getInstance();this.refreshAccounts_().then((()=>{const queryParams=Router.getInstance().getQueryParameters();const reauthPrincipal=queryParams.get("kerberos_reauth");const reauthAccount=this.accounts_.find((account=>account.principalName===reauthPrincipal));if(reauthAccount){this.selectedAccount_=reauthAccount;this.showAddAccountDialog_=true}}))},currentRouteChanged(route,oldRoute){if(route!==routes.KERBEROS_ACCOUNTS&&route!==routes.KERBEROS_ACCOUNTS_V2){return}this.attemptDeepLink()},getIconImageSet_(iconUrl){return getImage(iconUrl)},onAddAccountClick_(event){this.selectedAccount_=null;this.showAddAccountDialog_=true},onReauthenticationClick_(event){this.selectedAccount_=event.model.item;this.showAddAccountDialog_=true},onAddAccountDialogClosed_(){if(this.$$("kerberos-add-account-dialog").accountWasRefreshed){this.showToast_("kerberosAccountsAccountRefreshedTip")}this.showAddAccountDialog_=false;this.closeActionMenu_()},refreshAccounts_(){return this.browserProxy_.getAccounts().then((accounts=>{this.accounts_=accounts}))},onAccountActionsMenuButtonClick_(event){this.selectedAccount_=event.model.item;this.$$("cr-action-menu").showAt(event.target)},closeActionMenu_(){this.$$("cr-action-menu").close();this.selectedAccount_=null},onRemoveAccountClick_(){this.browserProxy_.removeAccount(this.selectedAccount_).then((error=>{if(error===KerberosErrorType.kNone){this.showToast_("kerberosAccountsAccountRemovedTip")}else{console.error("Unexpected error removing account: "+error)}}));recordSettingChange();this.closeActionMenu_()},onSetAsActiveAccountClick_(){this.browserProxy_.setAsActiveAccount(this.selectedAccount_);recordSettingChange();this.closeActionMenu_()},onRefreshNowClick_(){this.showAddAccountDialog_=true},showToast_(label){this.accountToastText_=this.i18n(label);this.$$("#account-toast").show()}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared iron-flex" scope="settings-kerberos-page"></style>
    <settings-animated-pages id="pages" section="kerberos" focus-config="[[focusConfig_]]">
      <div route-path="default">
        <cr-link-row id="kerberos-accounts-subpage-trigger" on-click="onKerberosAccountsTap_" label="Kerberos tickets" role-description="Subpage button">
          <cr-policy-indicator indicator-type="userPolicy">
          </cr-policy-indicator>
        </cr-link-row>
      </div>
      <template is="dom-if" route-path="/kerberos/kerberosAccounts">
        <settings-subpage associated-control="[[$$('#kerberos-accounts-subpage-trigger')]]" page-title="Kerberos tickets">
          <settings-kerberos-accounts></settings-kerberos-accounts>
        </settings-subpage>
      </template>
    </settings-animated-pages>
<!--_html_template_end_-->`,is:"settings-kerberos-page",behaviors:[I18nBehavior,WebUIListenerBehavior],properties:{focusConfig_:{type:Object,value(){const map=new Map;if(routes.KERBEROS_ACCOUNTS_V2){map.set(routes.KERBEROS_ACCOUNTS_V2.path,"#kerberos-accounts-subpage-trigger")}return map}}},onKerberosAccountsTap_(){Router.getInstance().navigateTo(routes.KERBEROS_ACCOUNTS_V2)}});// Copyright 2020 The Chromium Authors. All rights reserved.
let contactManager=null;let isTesting=false;function setContactManagerForTesting(testContactManager){contactManager=testContactManager;isTesting=true}function getContactManager(){if(!contactManager){contactManager=nearbyShare.mojom.ContactManager.getRemote()}return contactManager}function observeContactManager(observer){if(isTesting){getContactManager().addDownloadContactsObserver(observer);return null}const receiver=new nearbyShare.mojom.DownloadContactsObserverReceiver(observer);getContactManager().addDownloadContactsObserver(receiver.$.bindNewPipeAndPassRemote());return receiver}// Copyright 2020 The Chromium Authors. All rights reserved.
let nearbyShareSettings=null;let isTesting$1=false;function setNearbyShareSettingsForTesting(testNearbyShareSettings){nearbyShareSettings=testNearbyShareSettings;isTesting$1=true}function getNearbyShareSettings(){if(!nearbyShareSettings){nearbyShareSettings=nearbyShare.mojom.NearbyShareSettings.getRemote()}return nearbyShareSettings}function observeNearbyShareSettings(observer){if(isTesting$1){getNearbyShareSettings().addSettingsObserver(observer);return null}const receiver=new nearbyShare.mojom.NearbyShareSettingsObserverReceiver(observer);getNearbyShareSettings().addSettingsObserver(receiver.$.bindNewPipeAndPassRemote());return receiver}// Copyright 2020 The Chromium Authors. All rights reserved.
let NearbySettings;const NearbyShareSettingsBehavior={properties:{settings:{type:Object,notify:true,value:{}}},observers:["settingsChanged_(settings.*)"],nearbyShareSettings_:null,observerReceiver_:null,attached(){this.nearbyShareSettings_=getNearbyShareSettings();this.observerReceiver_=observeNearbyShareSettings(this);Promise.all([this.nearbyShareSettings_.getEnabled(),this.nearbyShareSettings_.getDeviceName(),this.nearbyShareSettings_.getDataUsage(),this.nearbyShareSettings_.getVisibility(),this.nearbyShareSettings_.getAllowedContacts(),this.nearbyShareSettings_.isOnboardingComplete()]).then((results=>{this.set("settings.enabled",results[0].enabled);this.set("settings.deviceName",results[1].deviceName);this.set("settings.dataUsage",results[2].dataUsage);this.set("settings.visibility",results[3].visibility);this.set("settings.allowedContacts",results[4].allowedContacts);this.set("settings.isOnboardingComplete",results[5].completed);this.onSettingsRetrieved()}))},detached(){if(this.observerReceiver_){this.observerReceiver_.$.close()}if(this.nearbyShareSettings_){this.nearbyShareSettings_.$.close()}},onEnabledChanged(enabled){this.set("settings.enabled",enabled)},onDeviceNameChanged(deviceName){this.set("settings.deviceName",deviceName)},onDataUsageChanged(dataUsage){this.set("settings.dataUsage",dataUsage)},onVisibilityChanged(visibility){this.set("settings.visibility",visibility)},onAllowedContactsChanged(allowedContacts){this.set("settings.allowedContacts",allowedContacts)},settingsChanged_(change){switch(change.path){case"settings.enabled":this.nearbyShareSettings_.setEnabled(change.value);break;case"settings.deviceName":this.nearbyShareSettings_.setDeviceName(change.value);break;case"settings.dataUsage":this.nearbyShareSettings_.setDataUsage(change.value);break;case"settings.visibility":this.nearbyShareSettings_.setVisibility(change.value);break;case"settings.allowedContacts":this.nearbyShareSettings_.setAllowedContacts(change.value);break}},onSettingsRetrieved(){}};// Copyright 2020 The Chromium Authors. All rights reserved.
let Account;class NearbyAccountManagerBrowserProxy{getAccounts(){}}class NearbyAccountManagerBrowserProxyImpl{getAccounts(){return sendWithPromise("getAccounts")}}addSingletonGetter(NearbyAccountManagerBrowserProxyImpl);// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-radio-button-style" scope="cr-card-radio-button">:host {
  background-color: var(--cr-card-background-color);
        border: solid 2px;
        border-radius: 8px;
        box-shadow: var(--cr-elevation-1);
        margin: var(--cr-card-radio-button-margin, 8px);
        width: var(--cr-card-radio-button-width, 200px);
}

paper-ripple {
  --paper-ripple-opacity: 0;
}

:host([checked]) {
  border-color: var(--cr-checked-color);
}

:host(:not([checked])) {
  border-color: var(--cr-card-background-color);
}

#button {
  height: var(--cr-card-radio-button-height, auto);
        padding: var(--cr-card-radio-button-padding, 24px);
        position: relative;
        width: 100%;
}

#checkMark {
  left: var(--cr-card-radio-button-checkmark-left, auto);
        position: absolute;
        right: var(--cr-card-radio-button-checkmark-right, var(--cr-button-edge-spacing));
        top: var(--cr-card-radio-button-checkmark-top, var(--cr-button-edge-spacing));
}

:host(:not([checked])) #checkMark {
  display: none;
}

#slottedContent {
  padding: var(--cr-card-radio-button-slotted-content-padding);
}

#checkMark {
  fill: var(--cr-checked-color);
}

</style>
    <div id="button" role="radio" aria-checked$="[[getAriaChecked_(checked)]]" aria-describedby="slotted-content" aria-disabled$="[[getAriaDisabled_(disabled)]]" tabindex$="[[buttonTabIndex_]]" aria-labelledby="slotted-content" on-keydown="onInputKeydown_">
      <iron-icon id="checkMark" icon="cr:check-circle"></iron-icon>
      <span id="slottedContent">
        <slot></slot>
      </span>
    </div>
<!--_html_template_end_-->`,is:"cr-card-radio-button",behaviors:[CrRadioButtonBehavior]});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_-->
    <style scope="nearby-page-template" include="cr-icons cr-shared-style">:host {
  --nearby-page-space-block: 24px;
        --nearby-page-space-inline: 24px;
}

#pageContainer {
  display: flex;
        flex-direction: column;
        height: 100%;
}

#header {
  margin-inline-end:  var(--nearby-page-space-inline);
        margin-inline-start: var(--nearby-page-space-inline);
        padding-block-end: 16px;
        padding-block-start: var(--nearby-page-space-block);
        position: relative;
}

#contentContainer {
  box-sizing: border-box;
        display: flex;
        flex-grow: 1;
        justify-content: center;
        overflow: hidden;
}

#pageTitle {
  color: var(--cr-primary-text-color);
        font-family: 'Google Sans';
        font-size: 16px;
        font-weight: normal;
        line-height: 24px;
        margin: 0;
}

#pageSubTitle {
  color: var(--cr-secondary-text-color);
        font-size: 14px;
        font-weight: inherit;
        line-height: 20px;
        margin: 0;
}

#a11yAnnouncedPageSubTitle {
  bottom: 16px;
        clip: rect(0,0,0,0); 
        font-size: 14px;
        position: absolute;
}

#actions {
  display: flex;
        justify-content: flex-end;
        padding-block-end: var(--nearby-page-space-block);
        padding-block-start: var(--nearby-page-space-block);
        padding-inline-end:  var(--nearby-page-space-inline);
        padding-inline-start: var(--nearby-page-space-inline);
}

#utilityButton {
  margin-inline-end: auto;
}

#utilityButton iron-icon {
  --iron-icon-fill-color: var(--text-color);
        margin-inline-end: 8px;
}

</style>
    <div id="pageContainer" role="dialog" aria-modal="true" aria-labelledby="[[getDialogAriaLabelledBy_(a11yAnnouncedSubTitle)]]">
      <div id="header">
        <h1 id="pageTitle">[[title]]</h1>
        <h2 id="pageSubTitle" aria-hidden$="[[getSubTitleAriaHidden_(a11yAnnouncedSubTitle)]]">
          [[subTitle]]
        </h2>
        <div id="a11yAnnouncedPageSubTitle" aria-live="polite">
          [[a11yAnnouncedSubTitle]]
        </div>
      </div>

      <div id="contentContainer">
        <slot name="content"></slot>
      </div>

      <div id="actions">
        <template is="dom-if" if="[[!closeOnly]]">
          <template is="dom-if" if="[[utilityButtonLabel]]">
            <cr-button id="utilityButton" class="cancel-button" on-click="onUtilityClick_" aria-label="[[utilityButtonLabel]]">
              <template is="dom-if" if="[[utilityButtonOpenInNew]]">
                <iron-icon id="openInNewIcon" icon="cr:open-in-new"></iron-icon>
              </template>
              <span>[[utilityButtonLabel]]</span>
            </cr-button>
          </template>
          <template is="dom-if" if="[[cancelButtonLabel]]">
            <cr-button id="cancelButton" class="cancel-button" on-click="onCancelClick_" aria-label="[[cancelButtonLabel]]">
              [[cancelButtonLabel]]
            </cr-button>
          </template>
          <template is="dom-if" if="[[actionButtonLabel]]">
            <cr-button id="actionButton" class="action-button" on-click="onActionClick_" disabled="[[actionDisabled]]" aria-label="[[actionButtonLabel]]">
              [[actionButtonLabel]]
            </cr-button>
          </template>
        </template>
        <template is="dom-if" if="[[closeOnly]]">
          <cr-button id="closeButton" class="action-button" on-click="onCloseClick_" aria-label="Close">
            Close
          </cr-button>
        </template>
      </div>
    </div>
<!--_html_template_end_-->`,is:"nearby-page-template",properties:{title:{type:String},subTitle:{type:String},a11yAnnouncedSubTitle:{type:String},actionButtonLabel:{type:String},actionButtonEventName:{type:String,value:"action"},actionDisabled:{type:Boolean,value:false},cancelButtonLabel:{type:String},cancelButtonEventName:{type:String,value:"cancel"},utilityButtonLabel:{type:String},utilityButtonOpenInNew:{type:Boolean,value:false},utilityButtonEventName:{type:String,value:"utility"},closeOnly:{type:Boolean,value:false}},onActionClick_(){this.fire(this.actionButtonEventName)},onCancelClick_(){this.fire(this.cancelButtonEventName)},onUtilityClick_(){this.fire(this.utilityButtonEventName)},onCloseClick_(){this.fire("close")},getDialogAriaLabelledBy_(){let labelIds="pageTitle";if(!this.a11yAnnouncedSubTitle){labelIds+=" pageSubTitle"}return labelIds},getSubTitleAriaHidden_(){if(this.a11yAnnouncedSubTitle){return"true"}return undefined}});const template$6=html`<iron-iconset-svg name="nearby20" size="20">
  <svg>
    <defs>
      <!--
      Keep these in sorted order by id="". See also http://goo.gl/Y1OdAq
      -->
      <g id="checked">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18ZM6.16667 9.40426L8.33333 11.617L13.8333 6L15 7.19149L8.33333 14L5 10.5957L6.16667 9.40426Z"></path>
      </g>
      <g id="contact-all">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M12.9981 6C12.9981 4.935 12.6229 3.9525 12 3.18C12.3152 3.075 12.6454 3 12.9981 3C14.6567 3 16 4.3425 16 6C16 7.6575 14.6567 9 12.9981 9C12.6754 9 12.3677 8.9325 12.075 8.8425C12.0525 8.835 12.03 8.8275 12 8.82C12.6229 8.0475 12.9981 7.065 12.9981 6ZM13.6602 10.1309C15.0302 11.0609 16.0002 12.3209 16.0002 14.0009V17.0009H20.0002V14.0009C20.0002 11.8209 16.4202 10.5309 13.6602 10.1309ZM7.5 5C6.675 5 6 5.675 6 6.5C6 7.325 6.675 8 7.5 8C8.325 8 9 7.325 9 6.5C9 5.675 8.325 5 7.5 5V5ZM7.5 13C5.475 13 3.15 13.86 3 14.34V15H12V14.3333C11.85 13.86 9.525 13 7.5 13V13ZM7.5 3C9.43375 3 11 4.56625 11 6.5C11 8.43375 9.43375 10 7.5 10C5.56625 10 4 8.43375 4 6.5C4 4.56625 5.56625 3 7.5 3ZM7.5 11C9.66938 11 14 12.1486 14 14.4286V17H1V14.4286C1 12.1486 5.33062 11 7.5 11Z"></path>
      </g>
      <g id="contact-group">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M7.5 3C9.425 3 11 4.575 11 6.5C11 8.425 9.425 10 7.5 10C5.575 10 4 8.425 4 6.5C4 4.575 5.575 3 7.5 3ZM7.5 5C6.67957 5 6 5.67957 6 6.5C6 7.32043 6.67957 8 7.5 8C8.32043 8 9 7.32043 9 6.5C9 5.67957 8.32043 5 7.5 5Z"></path>
        <path d="M15 6H17V8H19V10H17V12H15V10H13V8H15V6Z"></path>
        <path fill-rule="evenodd" clip-rule="evenodd" d="M7.5 11C9.60583 11 13.7789 12.0336 13.9916 14.0859L14 14.25V17H1V14.25C1 12.0887 5.33875 11 7.5 11ZM11.9947 14.3433C11.9867 14.3476 11.9693 14.3346 11.9329 14.3011L11.8432 14.2246C11.6159 14.0441 11.2636 13.85 10.8172 13.6713C9.79154 13.2607 8.42752 13 7.5 13C6.57248 13 5.20846 13.2607 4.18279 13.6713C3.73641 13.85 3.38414 14.0441 3.15679 14.2246L3.0671 14.3011C3.01855 14.3458 3.00384 14.3539 3 14.3335V15H12V14.3335L11.9947 14.3433Z"></path>
      </g>
      <g id="info">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M9 14H11V10H9V14ZM10 2C5.584 2 2 5.584 2 10C2 14.416 5.584 18 10 18C14.416 18 18 14.416 18 10C18 5.584 14.416 2 10 2ZM10 16C6.6925 16 4 13.3075 4 10C4 6.6925 6.6925 4 10 4C13.3075 4 16 6.6925 16 10C16 13.3075 13.3075 16 10 16ZM9 8H11V6H9V8Z"></path>
      </g>
      <g id="radar">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M14.0353 15.096C12.9268 15.975 11.5247 16.5 10 16.5C6.41015 16.5 3.5 13.5899 3.5 10C3.5 6.41015 6.41015 3.5 10 3.5C13.5899 3.5 16.5 6.41015 16.5 10C16.5 11.5247 15.975 12.9268 15.096 14.0354L14.0261 12.9654C14.6382 12.1358 15 11.1101 15 10C15 7.23858 12.7614 5 10 5C7.23858 5 5 7.23858 5 10C5 12.7614 7.23858 15 10 15C11.1101 15 12.1358 14.6382 12.9654 14.0261L14.0353 15.096ZM12.948 11.8874C13.2974 11.3428 13.5 10.6951 13.5 10C13.5 8.067 11.933 6.5 10 6.5C8.067 6.5 6.5 8.067 6.5 10C6.5 11.933 8.067 13.5 10 13.5C10.6951 13.5 11.3428 13.2974 11.8874 12.948L10.3885 11.4492C10.2646 11.4823 10.1344 11.5 10 11.5C9.17157 11.5 8.5 10.8284 8.5 10C8.5 9.17157 9.17157 8.5 10 8.5C10.8284 8.5 11.5 9.17157 11.5 10C11.5 10.1344 11.4823 10.2646 11.4492 10.3885L12.948 11.8874ZM18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10Z"></path>
      </g>
      <g id="visibility">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M13 10C13 11.6569 11.6569 13 10 13C8.34315 13 7 11.6569 7 10C7 8.34315 8.34315 7 10 7C11.6569 7 13 8.34315 13 10ZM11 10C11 10.5523 10.5523 11 10 11C9.44772 11 9 10.5523 9 10C9 9.44772 9.44772 9 10 9C10.5523 9 11 9.44772 11 10ZM10 16C14.3333 16 17.3333 14 19 10C17 6 14 4 10 4C6 4 3 6 1 10C2.66667 14 5.66667 16 10 16ZM10 6C12.9373 6 15.1315 7.29402 16.7641 10.0695C15.3775 12.7465 13.2078 14 10 14C6.79225 14 4.6225 12.7465 3.2359 10.0695C4.8685 7.29402 7.06265 6 10 6Z"></path>
      </g>
      <g id="visibility-off">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M17.3897 18.0247L1.9895 2.62442L2.01413 2.59979L2.00015 2.58582L0.585938 4.00003L3.29316 6.70725C2.42105 7.5893 1.65672 8.6869 1.00015 10C2.66682 14 5.66682 16 10.0002 16C10.8372 16 11.6245 15.9254 12.3621 15.7761L16.0002 19.4142L17.3897 18.0247ZM3.23605 10.0696C3.68277 9.31012 4.17153 8.66159 4.70605 8.12014L7.03328 10.4474C7.22745 11.7461 8.25408 12.7727 9.55281 12.9669L10.5721 13.9862C10.3852 13.9954 10.1946 14 10.0002 14C6.7924 14 4.62265 12.7465 3.23605 10.0696Z"></path>
        <path d="M16.1839 13.9904C17.3593 13.0152 18.298 11.6851 19.0002 10C17.0002 6.00003 14.0002 4.00003 10.0002 4.00003C8.81854 4.00003 7.7242 4.17455 6.71711 4.5236L8.34623 6.15272C8.86951 6.05045 9.42035 6.00003 10.0002 6.00003C12.9375 6.00003 15.1317 7.29405 16.7643 10.0696C16.2217 11.117 15.5593 11.9465 14.7617 12.5682L16.1839 13.9904Z" fill="#1A73E8"></path>
        <path d="M12.9133 10.7198L9.28043 7.08692C9.511 7.03014 9.75206 7.00003 10.0002 7.00003C11.657 7.00003 13.0002 8.34317 13.0002 10C13.0002 10.2481 12.97 10.4892 12.9133 10.7198Z" fill="#1A73E8"></path>
      </g>
    </defs>
  </svg>
</iron-iconset-svg>
<iron-iconset-svg name="nearby-share" size="24">
  <svg>
    <defs>
      <!-- Nearby Share icons -->
      <g id="done"><path d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"></path></g>

      <!--
      These icons are copied from Polymer's iron-icons and kept in sorted order.
      See http://goo.gl/Y1OdAq for instructions on adding additional icons.
      -->
      <g id="laptop"><path d="M20 18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z"></path></g>
      <g id="smartphone"><path d="M17 1.01L7 1c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z"></path></g>
      <g id="tablet"><path d="M21 4H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h18c1.1 0 1.99-.9 1.99-2L23 6c0-1.1-.9-2-2-2zm-2 14H5V6h14v12z"></path></g>
    </defs>
  </svg>
</iron-iconset-svg>
<iron-iconset-svg name="nearby-images" size="200">
  <svg>
    <defs>
      <g id="contacts-download-failed" fill="none" fill-rule="evenodd" width="201px" height="68px" viewBox="0 0 201 68">
        <g jetway-hook-id="1B21145A-F9D1-4FC9-BEEE-803947016D7B" id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"> <g jetway-hook-id="87118FA5-DB11-4BB8-938F-285C7F2DA7AB" id="video-ratio-copy" transform="translate(-206.000000, -428.000000)"> <g jetway-hook-id="1A3AB880-1975-46D9-A6D5-2983B8732278" id="Group-11" transform="translate(206.897142, 428.000000)"> <rect jetway-hook-id="12BF5872-2399-4F0F-A938-2A7AB3B4BBAA" id="Rectangle" x="0.59985893" y="0" width="199.004975" height="68"></rect> <g jetway-hook-id="0E1FB8BB-70D6-43E6-8F48-2B9D387903E6" id="Group-7" transform="translate(33.254500, 27.030184) rotate(-10.000000) translate(-33.254500, -27.030184) translate(14.846539, 13.030184)"> <path d="M2.74398265,2.89121433 L2.44143826,3.20740748 C2.37640796,3.2797921 2.31733987,3.35468978 2.26110956,3.43819735 C-0.284871666,6.61456733 0.651347997,11.3290812 4.16411114,13.436913 L4.51162283,13.6360701 L4.78058847,13.7801309 C4.8721099,13.8272111 4.96649826,13.8738556 5.06675572,13.921578 L5.38813761,14.0694922 L5.76274716,14.2329543 L7.03652882,14.7729995 L7.25522556,14.8723532 L7.62503508,15.0450442 C9.09384491,15.7674822 10.2367902,16.9892939 10.8219412,18.4691959 L11.5783363,20.4154202 L11.564194,20.3594679 C11.7185437,21.0085693 11.9683749,21.6266486 12.3604824,22.4026446 C13.1186853,23.8155861 14.1950938,24.997979 15.5341714,25.841272 C19.3910019,28.3305212 24.594255,27.6713345 27.7086249,24.2978202 C31.40018,20.2710069 30.8843935,14.0151181 26.6171361,10.6283896 C25.6508642,9.8313721 24.5264177,9.26980166 23.2520115,8.92187465 C22.6038775,8.73311394 21.9328205,8.63688205 21.0832818,8.59019051 L19.0182933,8.29002235 C17.4703363,8.06188317 16.0975946,7.26072153 14.9361966,5.9630837 L14.7432486,5.74122648 L14.5462129,5.50537935 L14.2030602,5.07759734 L13.5762547,4.27677864 C12.0192962,2.30016621 10.8947847,1.37000881 9.07690053,0.978925938 C6.77115833,0.522482977 4.35799502,1.25868211 2.74398265,2.89121433 Z M8.77649837,2.44817811 C10.1558007,2.74501212 11.046308,3.48160917 12.4043558,5.20569083 L13.1702553,6.18194157 L13.4020945,6.4687767 L13.6135941,6.72161431 L13.8242384,6.96365433 C15.2098976,8.51187255 16.8899554,9.49239049 18.804202,9.77450849 L20.9367181,10.0814941 C21.7475443,10.1289405 22.3125703,10.2099671 22.8487715,10.3660392 C23.9386443,10.6636944 24.8732497,11.1304545 25.6812446,11.7967771 C29.2794114,14.6526461 29.7119484,19.8988163 26.6127138,23.2795218 C23.992024,26.1182705 19.5895689,26.6760062 16.3336841,24.5746616 C15.2118952,23.868153 14.3123865,22.8800777 13.6826584,21.7069591 C13.3476223,21.0433984 13.1381769,20.525233 13.015854,20.0108172 L12.9851467,19.9122682 L12.2105828,17.9193562 C11.4794642,16.0702551 10.0567177,14.5578268 8.25385094,13.6839005 L7.57400148,13.3718181 L6.18408208,12.7822787 L5.86585661,12.6403502 L5.59188178,12.5103617 L5.34543233,12.3840061 L5.10978299,12.2529766 C2.27944894,10.6856684 1.4527661,7.05354124 3.3255603,4.50470055 L3.53421767,4.2299751 L3.66168652,4.09701301 C4.91858645,2.7186976 6.90164914,2.07711522 8.77649837,2.44817811 Z" jetway-hook-id="E455862C-A845-4647-AE5E-4083230B17A2" id="Path" fill="#E6E6E6" fill-rule="nonzero"></path> <path d="M21.1859758,14.6046694 C20.6990302,15.0921221 20.7805643,15.8646248 21.3089524,16.2715724 C24.6394894,18.7540243 29.3076345,18.513643 32.3492362,15.5076201 C35.3512182,12.5015668 35.6719225,7.82658687 33.2338674,4.49109547 C32.8276402,3.96231331 32.056125,3.88037788 31.6104658,4.32727618 L21.1859758,14.6046694 Z" jetway-hook-id="BA6B2400-DA04-4D25-853B-9DDF632E62B2" id="Path" fill="#D2E3FC" fill-rule="nonzero" transform="translate(27.859729, 11.001265) rotate(81.000000) translate(-27.859729, -11.001265) "></path> <path d="M20.6611995,9.75649662 C21.2867162,9.79833979 21.8833728,9.8775555 22.4800293,10.0512244 C23.6031578,10.3578509 24.6487974,10.8560521 25.5782849,11.622565 C27.5604437,13.1957144 28.6674315,15.4479511 28.8337201,17.7708131 C27.1899059,17.7142771 25.5438696,17.1798847 24.1111683,16.1404489 C22.0442733,14.6201035 20.8691502,12.3656607 20.6768247,10.010941 Z" jetway-hook-id="2FEB731F-1A21-47FB-9EBF-E2A34D55E502" id="Combined-Shape" fill="#2A84FC"></path> </g> <g jetway-hook-id="8A870B21-1A04-47EE-9497-4FA1BACFCCE0" id="Group-2" transform="translate(133.435680, 24.000000)"> <path d="M4.9706283,9.75458325 L10.9448473,9.76947377 C12.0455222,9.77221716 12.9371132,10.6638085 12.9398561,11.7644835 L12.9547484,17.7404388 C12.957501,18.8450048 12.0643047,19.742664 10.9597387,19.7454166 C10.9564157,19.7454249 10.9530927,19.7454249 10.9497697,19.7454166 L4.97555074,19.7305261 C3.87487578,19.7277827 2.98328478,18.8361913 2.98054186,17.7355163 L2.9656496,11.7595611 C2.96289699,10.654995 3.85609328,9.75733586 4.96065935,9.75458325 C4.96398233,9.75457496 4.96730533,9.75457497 4.9706283,9.75458325 Z" jetway-hook-id="C5780055-95B6-4507-B7B0-0DC9BC869B8F" id="Rectangle" fill="#D2E3FC" transform="translate(7.960199, 14.750000) rotate(44.000000) translate(-7.960199, -14.750000) "></path> <path d="M25.5835955,10.153513 C25.5453707,10.5659413 25.1817077,10.8691382 24.7713312,10.8307224 C24.3609548,10.7923065 24.0592663,10.4268251 24.097491,10.0143968 C24.1637439,9.29955708 24.1269574,8.57558219 24.0092374,7.95052834 L23.9699145,7.83309543 C23.8384578,7.44051581 24.0485564,7.01516756 24.4391828,6.88305352 C24.8298093,6.75093948 25.2530414,6.96208855 25.3844982,7.35466817 L25.4484077,7.56474048 C25.619007,8.42512136 25.663192,9.29470136 25.5835955,10.153513 Z M22.3611867,16.2989949 C22.0458941,16.5657662 21.5751141,16.5251539 21.30967,16.2082849 C21.044226,15.8914159 21.0846362,15.418282 21.3999288,15.1515107 C21.9826162,14.6584948 22.489378,14.0822183 22.903058,13.4434288 C23.1278799,13.0962671 23.5901641,12.9980023 23.9355987,13.2239483 C24.2810333,13.4498944 24.3788092,13.91449 24.1539872,14.2616517 C23.6604198,15.0238005 23.0560778,15.7110426 22.3611867,16.2989949 Z M15.7999466,18.483022 C15.3885737,18.4575528 15.0756342,18.1017549 15.1009766,17.6883251 C15.1263191,17.2748953 15.4803468,16.9603911 15.8917198,16.9858603 C16.5486408,17.026532 17.2113849,16.9795725 17.8808589,16.841205 L18.1573642,16.781529 C18.5587274,16.687372 18.9600461,16.9380387 19.0537346,17.3414087 C19.1474231,17.7447787 18.8980035,18.148104 18.4966403,18.2422609 L18.1749387,18.3117843 C17.3829319,18.4755143 16.5882088,18.5318254 15.7999466,18.483022 Z M9.5896663,15.4361643 C9.31509203,15.1272532 9.34168162,14.653132 9.64905582,14.3771848 C9.95643002,14.1012377 10.4281925,14.1279602 10.7027667,14.4368713 C11.2098701,15.0073903 11.7979213,15.4989246 12.4458533,15.8947114 C12.7980525,16.109851 12.910029,16.5711975 12.6959598,16.9251577 C12.4818906,17.279118 12.0228393,17.3916543 11.6706401,17.1765148 C10.8968839,16.7038688 10.1949561,16.1171485 9.5896663,15.4361643 Z M7.21786446,8.91099767 C7.22996064,8.49696253 7.57373846,8.17117566 7.98571372,8.18333232 C8.39768897,8.19548897 8.72185502,8.54098568 8.70975884,8.95502082 C8.69352944,9.51053041 8.73726862,10.0698313 8.8191952,10.5361768 L8.88155441,10.7478784 C8.91322947,10.9092742 8.94971065,11.0690429 8.99092673,11.227048 C9.09544368,11.6277218 8.85697702,12.0376836 8.45829652,12.1427231 C8.05961603,12.2477627 7.6516939,12.0081037 7.54717695,11.6074298 L7.49248465,11.3864781 C7.46788207,11.2809143 7.44843558,11.1867628 7.43882842,11.1222238 L7.37535443,10.9047217 C7.25067997,10.2420074 7.19847966,9.57451243 7.21786446,8.91099767 Z M10.0148689,2.56595303 C10.3116541,2.27853631 10.7840842,2.28733397 11.070071,2.58560315 C11.3560578,2.88387233 11.3473039,3.35866456 11.0505186,3.64608128 C10.5039106,4.17543473 10.0381137,4.78470027 9.66909324,5.45225467 C9.46893333,5.81434201 9.01460222,5.94479881 8.65431631,5.7436381 C8.29403039,5.54247738 8.16422263,5.08587462 8.36438255,4.72378728 C8.80516079,3.92642373 9.36159128,3.19860879 10.0148689,2.56595303 Z M16.4441786,0.000147161939 C16.8563249,0.00247499402 17.1885577,0.34014321 17.1862535,0.754350231 C17.1839252,1.16855725 16.847937,1.50245131 16.4357907,1.50012347 C15.9374829,1.497309 15.4384944,1.54258649 14.9303669,1.6381073 C14.675385,1.68649913 14.4245879,1.74721372 14.1785108,1.81995766 C13.7831084,1.93684432 13.3682875,1.70946003 13.2519824,1.31208064 C13.1356773,0.914701241 13.3619303,0.497806231 13.7573327,0.38091957 C14.0508685,0.294146129 14.3497984,0.221779248 14.6546763,0.16391903 C15.2571258,0.0506656556 15.8508084,-0.00320423587 16.4441786,0.000147161939 Z M22.8374949,2.63146338 C23.1325622,2.9206611 23.1384868,3.39549751 22.8507279,3.69204017 C22.562969,3.98858284 22.0904949,3.9945371 21.7954276,3.70533938 C21.2526889,3.17339711 20.6322745,2.72376057 19.9560695,2.37199479 C19.5900444,2.18158638 19.4469109,1.72902423 19.636372,1.36116895 C19.8258331,0.993313661 20.2761437,0.849464552 20.6421689,1.03987297 C21.448832,1.45950381 22.1892404,1.99610426 22.8374949,2.63146338 Z M25.4067408,7.43476949 C25.484186,7.84160483 25.2188033,8.23450567 24.813992,8.31233807 C24.4091808,8.39017048 24.0182346,8.12346091 23.9407895,7.71662557 C23.8801939,7.39830481 23.8003464,7.08654201 23.7018319,6.78239006 C23.5742575,6.38851891 23.7885451,5.96528666 24.1804567,5.83707437 C24.5723683,5.70886208 24.9934949,5.92422114 25.1210694,6.31809229 C25.2389335,6.68198396 25.3343869,7.05467974 25.4067408,7.43476949 Z" jetway-hook-id="8E3E9B8A-653B-4DD6-9A15-D936466D25D8" id="Path" fill="#4682F4" fill-rule="nonzero"></path> <path d="M10.7027667,14.4368713 C11.2098701,15.0073903 11.7979213,15.4989246 12.4458533,15.8947114 C12.7980525,16.109851 12.910029,16.5711975 12.6959598,16.9251577 C12.4818906,17.279118 12.0228393,17.3916543 11.6706401,17.1765148 C10.8968839,16.7038688 10.1949561,16.1171485 9.5896663,15.4361643 C9.31509203,15.1272532 9.34168162,14.653132 9.64905582,14.3771848 C9.95643002,14.1012377 10.4281925,14.1279602 10.7027667,14.4368713 Z M8.66356789,8.67146097 L8.68893532,8.75494072 C8.70445028,8.81891295 8.71177487,8.88601496 8.70975884,8.95502082 C8.69352944,9.51053041 8.73726862,10.0698313 8.8191952,10.5361768 L8.88155441,10.7478784 C8.91322947,10.9092742 8.94971065,11.0690429 8.99092673,11.227048 C9.09544368,11.6277218 8.85697702,12.0376836 8.45829652,12.1427231 C8.05961603,12.2477627 7.6516939,12.0081037 7.54717695,11.6074298 L7.49248465,11.3864781 C7.46788207,11.2809143 7.44843558,11.1867628 7.43882842,11.1222238 L7.37535443,10.9047217 C7.25067997,10.2420074 7.19847966,9.57451243 7.21786446,8.91099767 C7.22106639,8.80140013 7.24750899,8.69798608 7.29230522,8.6053868 C7.74034238,8.46626574 8.22746219,8.48784824 8.66356789,8.67146097 Z" jetway-hook-id="F16AAA22-7D99-4B23-A633-5DDC1E126B7F" id="Combined-Shape" fill="#FFFFFF" fill-rule="nonzero"></path> </g> <path d="M184.679027,16 C186.602189,16 188.162048,14.4331155 188.162048,12.5000436 C188.162048,10.5669717 186.602189,9 184.679027,9 C182.755866,9 181.196874,10.5669717 181.196874,12.5000436 C181.196874,14.4331155 182.755866,16 184.679027,16 Z" jetway-hook-id="03331C0A-4A06-459F-812B-E02279731F6E" id="Path" fill="#BDC1C6" fill-rule="nonzero"></path> <path d="M161.504103,5.71980142 L157.80198,8.19701491 C156.974261,8.74252475 156.505173,9.69075071 156.577255,10.677241 L156.83807,15.1619529 C156.910635,16.1493022 157.483515,17.017778 158.346863,17.4541214 L162.3233,19.4640297 C163.190323,19.9019757 164.232577,19.8317499 165.056312,19.2887647 L168.77554,16.7999548 C169.598834,16.2574579 170.068074,15.3088259 169.995506,14.3221249 L169.734717,9.83817108 C169.66269,8.85114926 169.0896,7.98227077 168.22632,7.54591162 L164.249838,5.53609082 C163.347745,5.09831338 162.303894,5.1686468 161.504103,5.71980142 Z M163.590106,6.88154339 L167.555711,8.88597696 C167.948197,9.08436549 168.212443,9.48499587 168.245456,9.93686939 L168.506272,14.4211881 C168.539494,14.8741133 168.32835,15.3009687 167.952738,15.548483 L164.233417,18.037354 C163.854982,18.2867875 163.379662,18.3188139 162.993737,18.1238775 L159.017456,16.1140478 C158.624763,15.9155773 158.360579,15.5150801 158.327303,15.0628652 L158.066516,10.5785382 C158.033519,10.1258105 158.244642,9.69904062 158.624809,9.44846924 L162.339723,6.96263505 C162.70243,6.71276965 163.176415,6.6808331 163.590106,6.88154339 Z" jetway-hook-id="FF182FA5-6273-4D44-A677-4A0EB6D1E767" id="Path" fill="#E6E6E6" fill-rule="nonzero" transform="translate(163.286427, 12.500492) rotate(30.000000) translate(-163.286427, -12.500492) "></path> <g jetway-hook-id="5A477986-0486-4487-AB24-5AC458D45302" id="Group-10" transform="translate(63.286426, 38.250000)"> <path d="M23.39801,0 L61.6766169,0 C63.3334712,-3.04359188e-16 64.6766169,1.34314575 64.6766169,3 L64.6766169,19 C64.6766169,20.6568542 63.3334712,22 61.6766169,22 L23.39801,22 C21.7411557,22 20.39801,20.6568542 20.39801,19 L20.39801,3 C20.39801,1.34314575 21.7411557,3.04359188e-16 23.39801,0 Z" jetway-hook-id="F405D252-A538-47DA-895B-6EDBBCF0C9AF" id="Rectangle" fill="#DADCE0"></path> <path d="M24.8756219,-4.54747351e-13 L24.8756219,22 L3,22 C1.34314575,22 2.02906125e-16,20.6568542 0,19 L0,3 C-2.02906125e-16,1.34314575 1.34314575,-4.54442992e-13 3,-4.54747351e-13 L8.955,-4.54747351e-13 L8.95522388,7.75 C8.95522388,8.30228475 8.50750863,8.75 7.95522388,8.75 L5.88831194,8.75 C5.3360272,8.75 4.88831194,9.19771525 4.88831194,9.75 C4.88831194,10.0143525 4.99298532,10.2679503 5.17944401,10.4553412 L11.728943,17.0375877 C12.1184922,17.4290847 12.7516552,17.4306636 13.1431522,17.0411144 C13.1443307,17.0399418 13.1455062,17.0387662 13.1466789,17.0375877 L19.6961779,10.4553412 C20.0857271,10.0638443 20.0841481,9.43068127 19.6926512,9.04113206 C19.5052602,8.85467338 19.2516624,8.75 18.9873099,8.75 L17.4179104,8.75 C16.8656257,8.75 16.4179104,8.30228475 16.4179104,7.75 L16.417,-4.54747351e-13 L24.8756219,-4.54747351e-13 Z" jetway-hook-id="A81AC2CC-45E4-4722-A8C7-3CBC85719C6F" id="Combined-Shape" fill="#9AA0A6"></path> </g> <path d="M60.1944516,25.9323381 L65.1763544,25.9438679 C66.0020717,25.9457789 66.6709715,26.6146815 66.6728789,27.4403989 L66.6728895,27.4449898 C66.6747914,28.268312 66.0088987,28.9372883 65.1855765,28.9391902 C65.1832786,28.9391955 65.1809806,28.9391955 65.1786827,28.9391902 L60.1967799,28.9276603 C59.3710626,28.9257493 58.7021629,28.2568467 58.7002554,27.4311294 L58.7002448,27.4265384 C58.698343,26.6032162 59.3642357,25.9342399 60.1875578,25.9323381 C60.1898558,25.9323327 60.1921537,25.9323328 60.1944516,25.9323381 Z" jetway-hook-id="E2E66CB5-B412-4A28-863F-984F61A22472" id="Rectangle" fill="#BCC1C7" transform="translate(62.686567, 27.435764) rotate(34.000000) translate(-62.686567, -27.435764) "></path> <path d="M102.201043,1.45212494 C102.608241,1.5161577 102.88669,1.89981643 102.822976,2.30905069 C102.759262,2.71828495 102.377512,2.99812606 101.970313,2.9340933 C101.192966,2.81185379 100.402917,2.75 99.6048341,2.75 C99.1926813,2.75 98.8585654,2.41421356 98.8585654,2 C98.8585654,1.58578644 99.1926813,1.25 99.6048341,1.25 C100.480245,1.25 101.347434,1.31789321 102.201043,1.45212494 Z M108.536645,3.85597311 C108.884433,4.07824255 108.987083,4.5417752 108.765919,4.89130227 C108.544755,5.24082934 108.083529,5.34399203 107.735741,5.12172259 C107.067996,4.69497093 106.367954,4.32123332 105.641678,4.00436584 C105.263613,3.83941996 105.090181,3.39769059 105.254306,3.01773568 C105.418432,2.63778078 105.857963,2.46348153 106.236028,2.62842742 C107.034066,2.9766037 107.803158,3.38720581 108.536645,3.85597311 Z M113.395807,8.59162347 C113.627584,8.93413491 113.539197,9.40062655 113.198389,9.6335617 C112.857582,9.86649686 112.393411,9.77766773 112.161635,9.43515628 C111.71652,8.77738012 111.220775,8.15522118 110.679385,7.57460255 C110.397561,7.27235781 110.412897,6.79773424 110.713638,6.51450113 C111.014379,6.23126803 111.486641,6.24668001 111.768465,6.54892475 C112.362803,7.18632808 112.907067,7.86937905 113.395807,8.59162347 Z M115.971376,14.8199372 C116.049185,15.2267025 115.784153,15.6198426 115.379412,15.6980401 C114.97467,15.7762377 114.583486,15.5098809 114.505677,15.1031156 C114.355825,14.3197211 114.145292,13.5523277 113.876524,12.8065083 C113.736176,12.4170498 113.93655,11.9869882 114.324071,11.8459389 C114.711592,11.7048895 115.139514,11.906265 115.279861,12.2957236 C115.575277,13.1154894 115.806687,13.9589788 115.971376,14.8199372 Z M115.871391,21.6639475 C115.781612,22.0682145 115.38274,22.3227939 114.980484,22.2325665 C114.578228,22.142339 114.324915,21.7414719 114.414694,21.3372048 C114.586258,20.564665 114.698045,19.7765355 114.748299,18.9778282 C114.774308,18.5644403 115.128844,18.2505138 115.540175,18.2766538 C115.951506,18.3027938 116.263871,18.6591016 116.237861,19.0724896 C116.182686,19.9494132 116.059893,20.8151369 115.871391,21.6639475 Z M113.061186,27.8848592 C112.817716,28.2190764 112.350756,28.2916549 112.018202,28.0469678 C111.685647,27.8022808 111.61343,27.3329862 111.8569,26.998769 C112.324452,26.3569472 112.741548,25.6794156 113.103927,24.972274 C113.292637,24.6040288 113.742653,24.4592513 114.109066,24.6489044 C114.475479,24.8385576 114.619536,25.2908236 114.430826,25.6590688 C114.032747,26.4358759 113.574638,27.1800304 113.061186,27.8848592 Z M108.042567,32.4478062 C107.687305,32.6577971 107.229923,32.5385911 107.020977,32.1815523 C106.812031,31.8245134 106.930644,31.3648451 107.285906,31.1548543 C107.968084,30.7516286 108.618038,30.2952036 109.229751,29.790208 C109.548231,29.5272887 110.018488,29.5736205 110.280099,29.893693 C110.54171,30.2137654 110.495609,30.6863735 110.177129,30.9492927 C109.50549,31.5037601 108.79178,32.004957 108.042567,32.4478062 Z M101.701817,34.6186135 C101.292877,34.6702306 100.919729,34.3789054 100.868369,33.9679205 C100.817009,33.5569356 101.106885,33.1819227 101.515825,33.1303057 C102.304499,33.0307581 103.080082,32.8696561 103.837299,32.6490876 C104.233159,32.5337779 104.64708,32.762814 104.761815,33.1606538 C104.876551,33.5584937 104.648655,33.9744836 104.252794,34.0897932 C103.420574,34.3322093 102.568259,34.5092499 101.701817,34.6186135 Z M94.9235428,34.0800461 C94.5279239,33.9639019 94.3008965,33.5474323 94.4164629,33.1498353 C94.5320294,32.7522383 94.946427,32.5240757 95.3420459,32.64022 C96.0990222,32.8624501 96.8744718,33.0252084 97.6631061,33.126394 C98.0719406,33.1788494 98.3610545,33.554456 98.30886,33.9653347 C98.2566655,34.3762133 97.8829277,34.6667728 97.4740932,34.6143174 C96.6076808,34.5031525 95.7555036,34.3242899 94.9235428,34.0800461 Z M88.9654996,30.8936549 C88.6483819,30.6290777 88.6047224,30.1562354 88.8679833,29.8375322 C89.1312443,29.5188289 89.6017341,29.4749511 89.9188517,29.7395284 C90.5278662,30.2476406 91.1753608,30.7074039 91.8553266,31.1141601 C92.2094886,31.3260202 92.3257015,31.7863074 92.1148954,32.1422402 C91.9040894,32.498173 91.4460922,32.614967 91.0919302,32.4031069 C90.3451619,31.9563893 89.634166,31.4515359 88.9654996,30.8936549 Z M84.7043082,25.5118406 C84.5192333,25.1417369 84.6677361,24.6909255 85.0359986,24.5049252 C85.404261,24.318925 85.8528295,24.4681703 86.0379044,24.838274 C86.3933353,25.5490473 86.8037848,26.2306956 87.2650557,26.8771149 C87.5052486,27.2137183 87.4284501,27.6822777 87.0935213,27.9236716 C86.7585926,28.1650655 86.2923643,28.087883 86.0521713,27.7512796 C85.5455993,27.0413759 85.094771,26.2926691 84.7043082,25.5118406 Z M82.9688392,19.0242203 C82.9440062,18.6107593 83.2573839,18.2553511 83.6687879,18.2303939 C84.0801919,18.2054367 84.4338319,18.5203813 84.4586649,18.9338423 C84.5066419,19.7326414 84.6161397,20.5209823 84.7854168,21.2938697 C84.8740165,21.6983994 84.6195361,22.0985189 84.217019,22.1875616 C83.8145019,22.2766043 83.4163731,22.0208516 83.3277734,21.6163219 C83.1417877,20.767146 83.0215126,19.9012134 82.9688392,19.0242203 Z M83.9382472,12.2723566 C84.0791739,11.8831093 84.5073949,11.682377 84.8947057,11.8240083 C85.2820164,11.9656396 85.4817501,12.3960018 85.3408234,12.7852491 C85.0709391,13.5306843 84.8592644,14.2977661 84.7082544,15.0809157 C84.6298429,15.487564 84.2382642,15.7533347 83.833639,15.6745311 C83.4290138,15.5957275 83.1645653,15.202191 83.2429769,14.7955427 C83.4089393,13.9348487 83.6416045,13.0917 83.9382472,12.2723566 Z M87.4902355,6.496564 C87.7733403,6.19553072 88.2456637,6.18214435 88.5451993,6.46666471 C88.8447349,6.75118508 88.8580547,7.2258701 88.5749499,7.52690338 C88.0311092,8.10518432 87.5327294,8.72520269 87.0848183,9.38104658 C86.851583,9.7225562 86.3870375,9.8093845 86.047227,9.57498302 C85.7074164,9.34058153 85.6210201,8.87371334 85.8542554,8.53220372 C86.3460595,7.81209051 86.8932111,7.13139674 87.4902355,6.496564 Z M93.0038149,2.61529826 C93.3822044,2.45110655 93.8213911,2.62628186 93.984766,3.00656328 C94.1481408,3.38684469 93.973837,3.82822737 93.5954475,3.99241909 C92.8686752,4.30778199 92.168031,4.68004551 91.499573,5.10536877 C91.1513433,5.32693872 90.690323,5.22284918 90.4698553,4.87287828 C90.2493877,4.52290738 90.3529594,4.05958198 90.7011892,3.83801202 C91.435466,3.3708099 92.2052263,2.96182387 93.0038149,2.61529826 Z M99.5635019,1.2500482 C99.9756535,1.24904404 100.31058,1.58401362 100.311584,1.99822596 C100.312583,2.4124383 99.97928,2.74903961 99.5671284,2.7500482 C98.8019914,2.7519144 98.0443058,2.8106502 97.2981843,2.92496126 C96.8907387,2.98738479 96.5100863,2.70603764 96.4479733,2.29655482 C96.3858604,1.887072 96.6658078,1.50451632 97.0732534,1.4420928 C97.8925553,1.31656999 98.7242126,1.25209989 99.5635019,1.2500482 Z" jetway-hook-id="72901C9F-A3F2-4C58-95C1-9C21572293AC" id="Oval" fill="#DADCE0" fill-rule="nonzero"></path> <path d="M100.102346,8 C100.651884,8 101.097371,8.44548781 101.097371,8.99502488 L101.09661,16.499 L108.555083,16.5 C109.107368,16.5 109.555083,16.9477153 109.555083,17.5 C109.555083,18.0522847 109.107368,18.5 108.555083,18.5 L101.09661,18.499 L101.097371,26.0049751 C101.097371,26.5545122 100.651884,27 100.102346,27 C99.5528094,27 99.1073216,26.5545122 99.1073216,26.0049751 L99.1066102,18.499 L91.6496102,18.5 C91.0973254,18.5 90.6496102,18.0522847 90.6496102,17.5 C90.6496102,16.9477153 91.0973254,16.5 91.6496102,16.5 L99.1066102,16.499 L99.1073216,8.99502488 C99.1073216,8.44548781 99.5528094,8 100.102346,8 Z" jetway-hook-id="5F57EA87-A7B8-4C83-BBFD-47F4FB7722B8" id="Combined-Shape" fill="#99A0A7" transform="translate(100.102346, 17.500000) rotate(26.000000) translate(-100.102346, -17.500000) "></path> <path d="M94.1321972,59.75 C126.153952,59.75 159.30016,61.3211366 193.570845,64.4632993 L196.68946,64.7532784 L196.550059,66.2467216 C161.216164,62.9155336 127.076869,61.25 94.1321972,61.25 C62.0356988,61.25 31.6400656,62.8308782 2.94539137,65.9923911 L0.683556197,66.2452681 L0.516161664,64.7547319 C29.9312465,61.4181563 61.136558,59.75 94.1321972,59.75 Z" jetway-hook-id="29AB6C55-96E1-452B-8A2D-ECECFA70A902" id="Path-35" fill="#D2E3FC" fill-rule="nonzero"></path> </g> </g> </g>
      </g>

      <g id="contacts-empty" fill="none" fill-rule="evenodd" width="200px" height="86px" viewBox="0 0 200 86">
        <g jetway-hook-id="1B21145A-F9D1-4FC9-BEEE-803947016D7B" id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"> <g jetway-hook-id="87118FA5-DB11-4BB8-938F-285C7F2DA7AB" id="video-ratio-copy" transform="translate(-207.000000, -511.000000)"> <g jetway-hook-id="BAC9FFF5-17FC-4983-A74E-7CA69E7AA580" id="Illo_Zero_contact" transform="translate(207.000000, 518.000000)"> <g jetway-hook-id="0F83DF5F-F409-4FE6-8C46-7F228F33FD31" id="glass" transform="translate(110.702644, 10.727953)"> <circle jetway-hook-id="40B770E9-C984-4FCB-8024-ADB6915AC3DE" id="Oval" fill="#D2E3FC" cx="16" cy="16" r="16"></circle> <rect jetway-hook-id="F634359F-92CD-4B63-BFEF-BBE4807259A1" id="Rectangle" fill="#D8D8D8" transform="translate(36.152671, 35.859670) rotate(-46.000000) translate(-36.152671, -35.859670) " x="34.1526708" y="27.3596699" width="4" height="17" rx="1"></rect> <path d="M27.8116966,23.2278245 L26.3116966,23.2278245 C24.7929135,23.2278245 23.5616966,24.4590415 23.5616966,25.9778245 L23.5616966,29.9778245 C23.5616966,31.4966076 24.7929135,32.7278245 26.3116966,32.7278245 L27.8116966,32.7278245 C30.1589068,32.7278245 32.0616966,30.8250347 32.0616966,28.4778245 L32.0616966,27.4778245 C32.0616966,25.1306144 30.1589068,23.2278245 27.8116966,23.2278245 Z M26.3116966,24.7278245 L27.8116966,24.7278245 C29.3304796,24.7278245 30.5616966,25.9590415 30.5616966,27.4778245 L30.5616966,28.4778245 C30.5616966,29.9966076 29.3304796,31.2278245 27.8116966,31.2278245 L26.3116966,31.2278245 C25.6213406,31.2278245 25.0616966,30.6681805 25.0616966,29.9778245 L25.0616966,25.9778245 C25.0616966,25.2874686 25.6213406,24.7278245 26.3116966,24.7278245 Z" jetway-hook-id="008E4C7A-ABA7-456E-B2E0-B2D975497AB7" id="Rectangle" fill="#FABD04" fill-rule="nonzero" transform="translate(27.811697, 27.977825) rotate(42.000000) translate(-27.811697, -27.977825) "></path> <path d="M25.9915923,23.6477298 C27.0078565,22.519054 28.7466739,22.4279265 29.8753497,23.4441907 L29.8753497,23.4441907 L30.0714669,23.6217978 C29.8280951,24.0701665 29.5639185,24.5056006 29.2802323,24.9268047 L28.8716538,24.558908 C28.3586194,24.0969697 27.5682478,24.1383913 27.1063095,24.6514257 L27.1063095,24.6514257 L24.4297871,27.624005 C23.9678488,28.1370395 24.0092704,28.927411 24.5223049,29.3893493 L24.5223049,29.3893493 L24.6227066,29.4800654 C24.1875963,29.7589678 23.738094,30.0173803 23.2755613,30.2539412 C22.3824587,29.2216234 22.3776643,27.6614035 23.3150698,26.6203091 L23.3150698,26.6203091 Z" jetway-hook-id="A3DBC112-B951-41B4-BBC1-81FA3AAFA8B5" id="Combined-Shape" fill="#FFFFFF" fill-rule="nonzero"></path> <path d="M17.0871617,19.4758659 L17.0871617,18.7798659 C17.0871617,18.2038659 17.1951617,17.7158659 17.4111617,17.3158659 C17.6271617,16.9158659 18.0071617,16.4678659 18.5511617,15.9718659 C19.2231617,15.3478659 19.7591617,14.7278659 20.1591617,14.1118659 C20.5591617,13.4958659 20.7591617,12.7638659 20.7591617,11.9158659 C20.7591617,11.0678659 20.5471617,10.2998659 20.1231617,9.61186591 C19.6991617,8.92386591 19.1071617,8.37986591 18.3471617,7.97986591 C17.5871617,7.57986591 16.7191617,7.37986591 15.7431617,7.37986591 C14.4311617,7.37986591 13.3511617,7.74786591 12.5031617,8.48386591 C11.6551617,9.21986591 11.0711617,10.0678659 10.7511617,11.0278659 L10.7511617,11.0278659 L13.0551617,11.9878659 C13.2631617,11.3638659 13.5871617,10.8478659 14.0271617,10.4398659 C14.4671617,10.0318659 15.0471617,9.82786591 15.7671617,9.82786591 C16.5191617,9.82786591 17.1111617,10.0318659 17.5431617,10.4398659 C17.9751617,10.8478659 18.1911617,11.3638659 18.1911617,11.9878659 C18.1911617,12.4998659 18.0671617,12.9398659 17.8191617,13.3078659 C17.5711617,13.6758659 17.1671617,14.1078659 16.6071617,14.6038659 C15.8071617,15.3238659 15.2511617,15.9558659 14.9391617,16.4998659 C14.6271617,17.0438659 14.4711617,17.7078659 14.4711617,18.4918659 L14.4711617,18.4918659 L14.4711617,19.4758659 L17.0871617,19.4758659 Z M15.7671617,25.0918659 C16.2631617,25.0918659 16.6831617,24.9158659 17.0271617,24.5638659 C17.3711617,24.2118659 17.5431617,23.7878659 17.5431617,23.2918659 C17.5431617,22.7958659 17.3711617,22.3718659 17.0271617,22.0198659 C16.6831617,21.6678659 16.2631617,21.4918659 15.7671617,21.4918659 C15.2711617,21.4918659 14.8471617,21.6638659 14.4951617,22.0078659 C14.1431617,22.3518659 13.9671617,22.7798659 13.9671617,23.2918659 C13.9671617,23.7878659 14.1431617,24.2118659 14.4951617,24.5638659 C14.8471617,24.9158659 15.2711617,25.0918659 15.7671617,25.0918659 Z" jetway-hook-id="7D6CA87B-D902-47EA-AAAF-EE6BF45DA3BE" id="?" fill="#4682F4" fill-rule="nonzero" transform="translate(15.755162, 16.235866) rotate(6.000000) translate(-15.755162, -16.235866) "></path> <path d="M16,3 C8.82029825,3 3,8.82029825 3,16 C3,23.1797017 8.82029825,29 16,29 C23.1797017,29 29,23.1797017 29,16 C29,8.82029825 23.1797017,3 16,3 Z M16,4 C22.627417,4 28,9.372583 28,16 C28,22.627417 22.627417,28 16,28 C9.372583,28 4,22.627417 4,16 C4,9.372583 9.372583,4 16,4 Z" jetway-hook-id="2D024BBB-D177-4B82-BC58-DF85C75B3AA4" id="Oval" fill="#FFFFFF" fill-rule="nonzero"></path> </g> <g jetway-hook-id="A0D557FE-1075-4B29-914E-7321D22DC556" id="Group-15"> <g jetway-hook-id="21F5BC8F-E389-4328-8C0B-58A1938AC1DD" id="Group-17" transform="translate(90.636527, 35.769915) rotate(-12.000000) translate(-90.636527, -35.769915) translate(53.636527, 0.291654)"> <path d="M8.83114634,14.8161913 L48.935198,6.29181195 C51.096062,5.83250613 53.2201293,7.21189158 53.6794351,9.37275559 L59.3924868,36.2505505 C59.8517926,38.4114145 58.4724072,40.5354819 56.3115432,40.9947877 L16.2074915,49.519167 C14.0466275,49.9784728 11.9225602,48.5990874 11.4632544,46.4382234 L5.7502027,19.5604284 C5.29089688,17.3995644 6.67028233,15.2754971 8.83114634,14.8161913 Z" jetway-hook-id="EB1DB367-5C69-4704-85D9-64CC6245C851" id="Rectangle-Copy-4" fill="#D2E3FC" transform="translate(32.571345, 27.905489) rotate(12.000000) translate(-32.571345, -27.905489) "></path> <path d="M15.2295742,25.7560991 L55.2712803,17.1118408 C57.4306733,16.6456681 59.5591149,18.0182944 60.0252876,20.1776874 C60.0270882,20.1860283 60.0288622,20.194375 60.0306094,20.2027274 L65.6624708,47.1246461 C66.1127687,49.2771995 64.7409299,51.3895489 62.5913024,51.8536134 L22.5495963,60.4978717 C20.3902033,60.9640444 18.2617617,59.5914181 17.795589,57.4320251 C17.7937884,57.4236842 17.7920144,57.4153375 17.7902672,57.4069852 L12.1584058,30.4850664 C11.7081079,28.3325131 13.0799467,26.2201636 15.2295742,25.7560991 Z" jetway-hook-id="F3495E78-46EF-45D0-802B-FDFD1AA927D3" id="Rectangle" fill="#FFFFFF" transform="translate(38.910438, 38.804856) rotate(25.000000) translate(-38.910438, -38.804856) "></path> <path d="M55.0641199,16.5299709 L14.9600683,24.9308085 C12.3940423,25.4683295 10.756022,27.9541039 11.3014477,30.4829411 L17.1229751,57.4741445 C17.6684007,60.0029817 20.1907307,61.6172625 22.7567567,61.0797416 L62.8608083,52.678904 C65.4268343,52.1413831 67.0648546,49.6556086 66.5194289,47.1267714 L60.6979015,20.135568 C60.1524759,17.6067308 57.6301459,15.99245 55.0641199,16.5299709 Z M59.2306801,20.4429157 L65.0522075,47.4341191 C65.4253935,49.1643761 64.3046428,50.8651692 62.5489408,51.2329467 L22.4448892,59.6337843 C20.6891871,60.0015618 18.9633824,58.8970538 18.5901965,57.1667968 L12.7686691,30.1755934 C12.3954831,28.4453364 13.5162338,26.7445433 15.2719358,26.3767658 L55.3759874,17.9759282 C57.1316895,17.6081508 58.8574942,18.7126587 59.2306801,20.4429157 Z" jetway-hook-id="7944401E-0269-4B38-B330-BD385FED8A90" id="Rectangle" fill="#D2E3FC" fill-rule="nonzero" transform="translate(38.910438, 38.804856) rotate(25.000000) translate(-38.910438, -38.804856) "></path> <g jetway-hook-id="56FDFA07-2ABB-4739-AF26-FBEFEFA00440" id="Group-14" transform="translate(58.075117, 26.030367)" fill="#4682F4" fill-rule="nonzero"> <path d="M2.80253991,0.25568634 L4.76869081,0.626478267 C6.39689163,0.933281294 7.46809619,2.50191184 7.16129316,4.13011266 C7.1561098,4.15762071 7.15054169,4.18505485 7.14459047,4.21240705 L4.28739248,17.3458222 C2.179929,14.6752635 0.924882546,11.3190271 0.924882546,7.67390722 C0.924882546,4.9921282 1.60421465,2.46671618 2.80253991,0.25568634 Z" jetway-hook-id="0079937D-7F77-4A27-8222-57873515EEFC" id="Combined-Shape"></path> </g> <g jetway-hook-id="CA4161A3-0523-4B26-8016-D846B7AD6514" id="Group-10" transform="translate(29.749621, 28.714095)" fill="#77AAF8"> <path d="M2.22220148,6.05827738 C-0.733844032,9.4753995 -0.319679249,14.607218 3.14744276,17.5202107 C6.61474361,20.4333535 11.8220301,20.0251911 14.7778608,16.6083173 C17.733844,13.1912672 17.3196792,8.05944863 13.8525572,5.146456 C10.3852882,2.23333984 5.17874789,2.64146233 2.22220148,6.05827738 Z M12.8794081,6.27139458 C15.7160725,8.65469187 16.0549363,12.8534739 13.636379,15.6492717 C11.2180332,18.444825 6.95750442,18.7787778 4.12059195,16.3952721 C1.28392753,14.0119748 0.945063705,9.81319276 3.36362097,7.01739496 C5.78261753,4.22181434 10.0425049,3.88789667 12.8794081,6.27139458 Z" jetway-hook-id="7027E108-5994-444C-A538-25E1893B51EC" id="Stroke-1" fill-rule="nonzero"></path> <path d="M5.68261234,11.1564023 C6.05790805,10.9836543 6.50424462,11.1434425 6.67953298,11.5132991 C7.11717709,12.4367237 7.86484556,13.0288489 8.56147974,13.057006 C9.25351428,13.0849963 9.99446453,12.5086788 10.2860754,11.6158858 C10.4129949,11.2273105 10.8355183,11.0137054 11.229808,11.1387854 C11.6240976,11.2638654 11.840844,11.6802653 11.7139246,12.0688407 C11.225881,13.56303 9.9044754,14.5908307 8.49999069,14.5340243 C7.1847226,14.4808629 5.97718167,13.5245359 5.32046702,12.1388748 C5.14517865,11.7690182 5.30731664,11.3291502 5.68261234,11.1564023 Z" jetway-hook-id="B40D8712-8E37-4CC4-9360-5A4C73296A65" id="Stroke-3" fill-rule="nonzero"></path> <path d="M13,5.94258851 C12.1158956,4.69634213 10.4311194,3.99676021 8.76667548,3.94537499 C7.10223155,3.89460887 5.4672344,4.42641495 4.05589252,5.20709884 C3.18931599,5.68628151 2.38023078,6.28680758 1.78498525,7.02725004 C1.47859856,7.40861505 1.21007201,7.83641249 1.06704482,8.28959299 C0.856009594,8.96255366 1.15117846,8.88949997 1.83967212,8.83811475 C4.33072909,8.65176594 6.7923393,8.18248886 9.14738022,7.4414273 C10.4710829,7.02601184 11.7597299,6.52454161 13,5.94258851" jetway-hook-id="354BD882-AA45-401B-BEF0-DA53ABEA7AEB" id="Fill-5"></path> <g jetway-hook-id="2B8DC94F-FFED-47D2-B1ED-136622670490" id="Group-9" transform="translate(4.000000, 0.000000)"> <path d="M2.81061883,4.75503791 C2.16691337,4.84487681 1.41569828,5.96582129 0.627970491,6.13665132 C0.72330922,6.11691399 -0.36801495,4.90136642 0.35006824,4.37730616 C1.06138982,3.85732948 1.93499008,3.54153213 2.75314513,3.23798554 C3.73628351,2.87386575 4.72347885,2.51859372 5.70391259,2.14562616 C6.66879461,1.77810338 7.61136332,1.35341039 8.58030231,0.998138369 C8.98058974,0.851129257 9.3889911,0.722496284 9.8055064,0.6272126 C10.3078942,0.511510984 10.8366522,0.445493003 11.3363353,0.572764781 C11.8360185,0.700717156 12.3032459,1.05530858 12.4486205,1.55282553 C12.6305079,2.17761426 12.2768756,2.83575227 11.8448086,3.31965727 C12.4959518,3.16448098 13.1754938,3.1290899 13.8394841,3.21688701 C14.2201628,3.26657064 14.6231549,3.37342449 14.8672491,3.6715263 C15.1106671,3.96962811 15.1370374,4.3936405 15.0761829,4.77545584 C14.8280318,6.31428733 13.4439298,7.36581084 12.1686898,8.25058791 C12.081465,8.31116111 11.9895071,8.3730955 11.8840259,8.38534626 C11.6960531,8.40712539 11.5317459,8.26556106 11.3917806,8.13692809 C8.86429002,5.8120062 7.99271823,4.0322431 2.81061883,4.75503791" jetway-hook-id="85E1A930-E96D-402E-85B8-CE9819F8D15C" id="Fill-7"></path> </g> </g> </g> </g> <path d="M95,56.75 C127.181864,56.75 160.493803,58.3211366 194.935841,61.4632993 L198.070049,61.7532784 L197.929951,63.2467216 C162.419387,59.9155336 128.109395,58.25 95,58.25 C62.743019,58.25 32.1954077,59.8308782 3.3572601,62.9923911 L1.08411575,63.2452681 L0.915884247,61.7547319 C30.4780445,58.4181563 61.8393825,56.75 95,56.75 Z" jetway-hook-id="5F489085-48F6-4160-AC18-4322F2EB2F02" id="Path-35" fill="#BBC0C7" fill-rule="nonzero"></path> <g jetway-hook-id="C77E9801-F22D-4F71-BD2B-650179A66387" id="Group-16" transform="translate(44.500000, 38.500000) rotate(-14.000000) translate(-44.500000, -38.500000) translate(32.000000, 30.000000)"> <path d="M8.47379613,-0.726359485 C6.22533146,-0.720600668 4.40402114,1.10070544 4.39825711,3.34917009 L4.37560179,12.2045686 C4.38133588,14.4443406 6.20011834,16.2538302 8.43796858,16.2481122 C10.6864332,16.2423398 12.5077436,14.4210337 12.5135076,12.172569 L12.5361629,3.31717055 C12.5306026,1.14527041 10.8202107,-0.62202996 8.67604381,-0.721918471 L8.47379613,-0.726359485 Z M8.47763795,0.773627043 C9.83068674,0.770170136 10.9404939,1.82032284 11.0303073,3.15131037 L11.0361629,3.33409071 L11.0135125,12.1687237 C11.0098645,13.5917644 9.85716742,14.7444588 8.43412676,14.7481121 C7.08107796,14.751569 5.97127082,13.7014163 5.88145736,12.3704288 L5.87560181,12.1876484 L5.89825218,3.35301538 C5.9019002,1.92997473 7.05459728,0.777280318 8.47763795,0.773627043 Z" jetway-hook-id="9C58E853-A834-4F27-9289-E7F446E62FC0" id="Rectangle" fill="#BDC1C6" fill-rule="nonzero" transform="translate(8.455882, 7.760876) rotate(-50.000000) translate(-8.455882, -7.760876) "></path> <circle jetway-hook-id="34D11793-C947-4799-8939-A91C1EAC8AF1" id="Oval" fill="#D2E3FC" cx="18.9602499" cy="10.861705" r="6"></circle> <path d="M13.768149,8.26511298 L13.7449828,8.24642317 C15.0505653,9.2372916 15.3056914,11.0989329 14.314823,12.4045153 C14.2557747,12.4823182 14.1929214,12.5571585 14.1264927,12.628763 C13.9116629,12.8603314 13.6729504,13.0578167 13.4174081,13.2206049 C13.1079404,12.5556324 12.9375514,11.8266341 12.9375514,11.0616407 C12.9375514,10.0424322 13.2400005,9.08711675 13.768149,8.26511298 Z" jetway-hook-id="B2D0A5F1-DB7F-47D9-BB38-3DF6D0976FFF" id="Combined-Shape" stroke="#FFFFFF" stroke-width="1.5" stroke-linejoin="round"></path> </g> <circle jetway-hook-id="58BFB6F9-7511-4BC4-A5A1-8ECDCD5D974C" id="Oval" fill="#E8EAED" cx="166.5" cy="27.5" r="4.5"></circle> <circle jetway-hook-id="6ADB3157-9AC8-4359-AA74-4D110894049E" id="Oval-Copy-3" fill="#9AA0A6" cx="17.5" cy="11.5" r="2.5"></circle> </g> </g> </g>
      </g>

      <g id="nearby-device-visibility" fill="none" fill-rule="evenodd">
        <path d="M0 0h200v200H0z"></path><path d="M150.441 100.728c0 26.949-21.772 48.794-48.63 48.794-26.858 0-48.63-21.845-48.63-48.794 0-26.95 21.772-48.795 48.63-48.795 26.858 0 48.63 21.845 48.63 48.795" fill="#D2E3FC"></path><path d="M176.711 53.44l-12.39-3.317a1.021 1.021 0 0 1-.722-1.25l3.32-12.383a1.022 1.022 0 0 1 1.252-.722l12.39 3.317c.544.146.868.707.722 1.251l-3.32 12.383a1.022 1.022 0 0 1-1.252.722" fill="#34A853"></path><path d="M31.832 148.371l-9.514 5.538c-3.553 2.068-4.77 6.644-2.72 10.223 2.053 3.584 6.603 4.813 10.161 2.742l9.514-5.538c3.48-2.026 4.718-6.454 2.844-9.998l-.124-.225c-2.053-3.584-6.603-4.813-10.161-2.742zm8.425 3.736c1.505 2.627.612 5.986-1.99 7.5l-9.514 5.539c-2.597 1.511-5.918.614-7.42-2.008-1.504-2.627-.61-5.986 1.991-7.5l9.514-5.539c2.529-1.471 5.743-.66 7.297 1.804l.122.204z" fill="#EA4335" fill-rule="nonzero"></path><path d="M26.693 54.6l-5.899-5.896a2.743 2.743 0 0 1-.711-2.653l2.159-8.054a2.745 2.745 0 0 1 1.943-1.941l8.058-2.158a2.75 2.75 0 0 1 2.655.71l5.9 5.896c.693.694.965 1.705.71 2.653L39.35 51.21a2.746 2.746 0 0 1-1.943 1.942l-8.058 2.158a2.751 2.751 0 0 1-2.655-.71" fill="#FBBC05"></path><path d="M26.536 141.312l-5.553-4.145a.552.552 0 0 1-.113-.773l4.149-5.55a.552.552 0 0 1 .773-.112l5.554 4.145a.552.552 0 0 1 .112.773l-4.149 5.55a.552.552 0 0 1-.773.112" fill="#F882FF"></path><path d="M102.004 29.332c-39.453 0-71.437 31.965-71.437 71.396 0 39.43 31.984 71.395 71.437 71.395 39.453 0 71.437-31.965 71.437-71.395 0-39.431-31.983-71.396-71.437-71.396zm0 2c38.35 0 69.437 31.07 69.437 69.396s-31.088 69.395-69.437 69.395-69.437-31.07-69.437-69.395c0-38.326 31.088-69.396 69.437-69.396z" fill="#4285F4" fill-rule="nonzero"></path><path d="M104.18 73.085a8.864 8.864 0 0 0-4.738 0l-19.099 7.12c-1.232.342-2.075 1.387-2.075 2.572v14.13c0 11.668 5.686 22.805 15.688 29.978 3.332 2.39 6.297 3.737 7.855 3.737 1.558 0 4.523-1.348 7.855-3.737 10.003-7.173 15.688-18.31 15.688-29.977V82.777c0-1.185-.842-2.23-2.075-2.573l-19.099-7.12z" fill="#4285F4"></path><path d="M101.768 94.59c-3.19 0-5.789 2.668-5.789 5.945 0 3.276 2.599 5.945 5.79 5.945 3.19 0 5.789-2.669 5.789-5.945 0-3.277-2.6-5.945-5.79-5.945zm-.193 9.115c-1.81 0-3.28-1.51-3.28-3.368 0-1.86 1.47-3.37 3.28-3.37 1.81 0 3.281 1.51 3.281 3.37 0 1.859-1.47 3.368-3.28 3.368zm.193-12.682c-6.14 0-11.384 3.944-13.508 9.512 2.124 5.567 7.368 9.512 13.508 9.512 6.14 0 11.384-3.945 13.509-9.512-2.125-5.568-7.368-9.512-13.509-9.512zm-.193 16.646c-4.726 0-8.942-2.763-11-7.134 2.058-4.371 6.274-7.134 11-7.134 4.727 0 8.942 2.763 11 7.134-2.058 4.37-6.273 7.134-11 7.134z" fill="#FFF" fill-rule="nonzero"></path>
      </g>

      <g id="nearby-onboarding-splash" fill="none" fill-rule="evenodd">
        <path d="M0 0h200v200H0z"></path><path d="M110.893 164.142l-6.065 12.062c1.606.235 2.96.506 4.06.814 4.544 1.27 10.262 2.852 15.561 5.64 7.226 3.802 10.566 4.087 10.02.856-3.964-3.923-4.913-5.674-2.848-5.254 2.065.42 5.403 1.107 10.015 2.062.624-.243.804-.791.539-1.644-.208-.67-3.266-2.054-4.064-3.237-.146-.216.396-.215 1.624.003 2.632.41 4.12.547 4.465.41 1.163-.466-.097-2.017-.003-2.827.054-.468.801-.549 1.216-.806.288-.179.267-.554.36-.741.42-.842-3.068-1.44-2.8-2.494.274-1.075 4.274-2.606 1.607-3.406-5.282-1.583-10.813.808-16.629.56-3.877-.166-9.563-.832-17.058-1.998z" fill="#D2E3FC"></path><path d="M141.354 171.58l.57.095 1.311.246c1.522.274 1.905.19 2.129-.434.02-.056-.109-.25-.638-.581-.664-.415-1.721-.839-3.074-1.237a.805.805 0 1 1 .454-1.543l.57.174c3.14.992 4.78 2.126 4.204 3.732-.561 1.563-1.636 1.851-3.696 1.512l-1.341-.249c-.275-.05-.504-.09-.735-.126a12.992 12.992 0 0 0-2.067-.174 32.862 32.862 0 0 0-4.908.396.806.806 0 0 1-.92-.672.803.803 0 0 1 .673-.918 34.47 34.47 0 0 1 5.148-.414c.753-.002 1.497.064 2.32.193z" fill="#4682F4" fill-rule="nonzero"></path><path d="M134.892 176.05a.803.803 0 1 1 .003-1.609l1.163.008c.546.006.966.015 1.232.028l.092.005a18.507 18.507 0 0 1 2.379.322l.654.138c.519.115 1.48.336 1.707.384l.395.079c1.162.217 1.48.119 1.591-.306.206-.791-.878-1.532-3.807-2.045a.804.804 0 1 1 .276-1.585c3.753.658 5.634 1.944 5.09 4.037-.428 1.64-1.63 1.868-3.876 1.394l-1.942-.436a18.28 18.28 0 0 0-2.16-.345l-.401-.031-.424-.016a88.28 88.28 0 0 0-1.972-.022z" fill="#4682F4" fill-rule="nonzero"></path><path d="M141.644 179.567c.18-.31.013-.618-.823-1.159-1.14-.736-3.19-1.51-6.125-2.293a.806.806 0 0 1-.571-.986.803.803 0 0 1 .984-.57c3.084.825 5.27 1.649 6.583 2.498 1.565 1.01 2.102 2.273 1.225 3.504-.514.722-1.262.731-2.752.368l-.552-.143c-.57-.153-1.557-.428-1.585-.435a32.331 32.331 0 0 0-2.211-.532 19.356 19.356 0 0 0-1.642-.258c-1.193-.132-2.08-.185-2.641-.16l-.234.016-.035.06a.798.798 0 0 1-.223.222l-.095.054a.805.805 0 0 1-1.075-.374c-.503-1.04.296-1.495 1.408-1.576.672-.05 1.687.005 3.07.158.58.065 1.169.158 1.778.28.61.12 1.21.262 1.896.443l2.295.625c.494.126.85.198 1.108.22l.186.012c.018.002.028.006.031.013v.013zm-13.848-1.352a.806.806 0 0 1-1.006-.534c-.452-1.475-.264-2.833.571-3.995.9-1.253 2.656-2.153 5.813-3.27l3.54-1.22.187-.068c.695-.257 1.397-.438 2.698-.713l1.718-.36c1.35-.292 2.061-.494 2.677-.773.748-.34.941-.604.836-.965-.172-.587-3.21-.75-7.838-.247l-.935.106c-.32.038-.647.079-.985.122l-5.142.7c-.596.077-1.065.135-1.254.15-2.193.181-7.982-.704-17.529-2.658a.804.804 0 1 1 .323-1.576l2.02.409c8.168 1.631 13.228 2.373 15.054 2.223l.305-.033c1.269-.15 5.264-.712 5.497-.742l1.029-.132c.332-.04.656-.08.973-.116l1.221-.13c5.403-.544 8.286-.313 8.807 1.474.376 1.29-.324 2.248-1.715 2.88l-.285.122c-.624.255-1.323.45-2.45.7l-2.466.52c-.771.17-1.286.304-1.735.454l-1.52.534c-1.005.347-2.173.743-2.13.728-3.045 1.058-4.745 1.9-5.405 2.818-.533.743-.649 1.579-.34 2.588a.804.804 0 0 1-.534 1.004z" fill="#4682F4" fill-rule="nonzero"></path><path d="M135.161 182.503c.791 1.153.728 2.38-.312 3.488-1.426 1.52-4.087.752-10.188-2.074l-3.96-1.853a66.2 66.2 0 0 0-2.227-.987c-3.772-1.591-8.276-2.854-13.51-3.787a.806.806 0 0 1-.652-.933.803.803 0 0 1 .932-.652c5.064.903 9.474 2.113 13.233 3.632l.62.257c.83.349 1.486.641 2.657 1.185l3.215 1.507 1.046.481c4.608 2.09 7.048 2.774 7.66 2.122.511-.545.531-.935.16-1.477-.356-.519-.985-1.053-2.102-1.825l-.786-.532c-1.524-1.024-2.835-2.028-3.934-3.013a.805.805 0 1 1 1.072-1.198 33.243 33.243 0 0 0 3.277 2.548l1.027.695c1.343.913 2.13 1.548 2.662 2.262l.11.154z" fill="#4682F4" fill-rule="nonzero"></path><path d="M92.163 196.078c.982.182 2.643.273 3.633.406.83.112 1.619-.175 2.423-.405.803-.232.747-.847.919-1.664.695-.113 1.406-.232 2.02-.574.616-.342 1.125-.96 1.137-1.661.007-.395-.558-.19-.444-.568.073-.236.66-1.04.785-1.255.527-.906.161-2.213-.76-2.716.363-.226.476-.726.358-1.135-.118-.409-.42-.74-.742-1.018-2.532-2.183-6.36-1.812-9.443-3.116.583-.446 1.347-.564 2.022-.851.675-.287 1.338-.898 1.241-1.624-.073-.554-.585-.969-1.125-1.117-.542-.148-1.115-.088-1.674-.049-3.745.265-7.532-.417-11.249.108-.252.037-.515.083-.717.238-.27.21-3.883-1.106-3.963-.774-.482 1.974-7.031-4.966-7.839-4.154-.807.812-11.512 9.186-11.706 10.15-.164.811 14.052 7.893 15.264 8.424 2.096.917 12.76 2.606 14.612 2.948 1.548.287 3.7.12 5.248.407z" fill="#D2E3FC"></path><path d="M87.628 192.91a.806.806 0 0 1 .445-1.548c4.335 1.25 7.827 1.874 10.84 1.8.923-.021 1.458-.12 1.76-.356.22-.172.26-.694.048-.846a.806.806 0 0 1-.184-1.124.803.803 0 0 1 1.122-.185c1.153.829 1.014 2.634.003 3.425-.67.523-1.447.667-2.71.697-3.209.078-6.845-.572-11.324-1.863zm-.619-10.486a.806.806 0 0 1 .433-1.551l.341.091c1.706.442 6.23 1.446 7.773 1.731.713.132 1.388.288 2.361.538l.836.219c1.116.292 1.938.623 2.638 1.14.524.388.923.874 1.114 1.442.183.543.153 1.141-.125 1.632-.527.932-1.542 1.258-2.914 1.245a10.974 10.974 0 0 1-1.039-.064l-1.324-.156c-.403-.053-.82-.12-1.435-.226l-1.496-.259-1.511-.258a35.12 35.12 0 0 1-3.64-.82.806.806 0 0 1 .433-1.552c1.282.359 2.228.567 3.841.848l3.05.523c.51.085.867.137 1.248.183l.719.084c.47.055.826.083 1.169.086.843.008 1.344-.153 1.5-.428.038-.067.044-.192 0-.324-.074-.22-.266-.454-.545-.66-.445-.328-1.011-.573-1.789-.795l-.8-.214-.913-.233c-.55-.136-1-.238-1.446-.324l-.639-.122c-2.01-.396-6.554-1.415-7.84-1.776z" fill="#4285F4" fill-rule="nonzero"></path><path d="M88.364 189.969a.806.806 0 0 1 .423-1.554c2.262.617 6.487 1.543 8.684 1.896 1.54.248 2.447.295 3.257.092.322-.081.51-.183.722-.395.12-.119.2-.406.171-.674-.037-.348-.215-.568-.462-.665l-.096-.03a.806.806 0 0 1 .39-1.563c.924.232 1.649.99 1.767 2.084.078.723-.14 1.497-.636 1.99-.425.423-.87.666-1.466.815-1.087.273-2.155.217-3.902-.064-2.255-.362-6.536-1.3-8.852-1.932zm-20.049-15.742a.806.806 0 0 1-.207-1.12.803.803 0 0 1 1.118-.207l.719.491c5.425 3.677 8.916 5.295 10.089 4.886 1.98-.69 3.677-.83 6.624-.68l4.398.28.608.03.294-.001.671-.012c.994-.007 1.669.11 2.315.521.71.453 1.16 1.257 1.056 2.078-.074.587-.414 1.102-.902 1.477-.446.344-1.076.6-1.943.84l-.503.13c-.52.126-1.46.338-1.569.365a.805.805 0 0 1-.394-1.562l1.556-.361.211-.052c.82-.212 1.391-.428 1.662-.637.172-.132.272-.284.287-.401.02-.154-.107-.38-.325-.518-.287-.183-.648-.259-1.235-.268l-.204-.001-.804.013c-.117 0-.213 0-.312-.004l-1.364-.076-2.767-.185c-3.14-.198-4.788-.125-6.595.465l-.237.08c-1.954.681-5.89-1.188-12.247-5.571zm-11.4 11.051a.806.806 0 0 1 .89-1.342c5.989 3.979 11.392 6.766 16.202 8.364l.532.172c3.514 1.113 6.104 1.57 11.318 2.09l4.4.419c1.719.173 2.897.325 4.1.538l.242.044c1.209.22 1.785.266 2.39.132.619-.137 1.118-.537 1.264-.985l.028-.113a.804.804 0 1 1 1.581.295c-.221 1.193-1.273 2.098-2.527 2.376-.756.167-1.398.149-2.457-.022l-1.265-.22c-1.168-.191-2.397-.337-4.238-.513l-2.742-.256c-5.96-.571-8.723-1.028-12.579-2.25-5.1-1.614-10.81-4.525-17.139-8.73z" fill="#4285F4" fill-rule="nonzero"></path><g fill-rule="nonzero"><path d="M78.868 136.46l-.531.008c-.323.008-.621.021-.894.039l-.49.038-.12.016-9.915.101-.382-.018c-3.068-.115-6.78.197-10.366 1.302-2.21.682-4.172 1.626-5.815 2.868-3.822 2.89-5.187 7.466-6.244 17.638-.966 9.309 1.07 16.723 5.068 22.384a24.107 24.107 0 0 0 3.667 4.132c.76.675 1.36 1.117 1.72 1.34.266.167.602.16.861-.005l.093-.07 14.23-12.368c.335-.292.37-.8.078-1.135a.806.806 0 0 0-1.049-.144l-.087.066-13.753 11.953-.117-.088c-.21-.16-.432-.341-.667-.542l-.24-.209a22.505 22.505 0 0 1-3.42-3.857c-3.777-5.348-5.707-12.376-4.781-21.291l.161-1.49c.988-8.676 2.303-12.65 5.453-15.032 1.481-1.12 3.276-1.983 5.318-2.613 3.194-.985 6.534-1.306 9.34-1.247l.704.024.18.009 10.07-.106.264-.026.102-.008c.311-.025.67-.044 1.071-.054a25.64 25.64 0 0 1 3.7.18c3.7.447 7.071 1.653 9.76 3.825 1.895 1.531 3.246 3.777 4.756 7.685l.373.991c.454 1.273 3.058 8.852 4.112 11.6a.805.805 0 0 0 .544.49l.109.02 8.336 1.035-7.493 14.353-.253-.054c-2.408-.554-5.444-2.118-9.083-4.702l-.422-.302c-4.065-2.937-5.343-7.106-3.845-12.686a.806.806 0 0 0-1.556-.416c-1.663 6.198-.174 11.06 4.457 14.405 4.444 3.21 8.108 5.03 11.03 5.445a.81.81 0 0 0 .77-.329l.058-.096 8.3-15.901a.804.804 0 0 0-.513-1.15l-.101-.02-9.004-1.117-.494-1.347a368.1 368.1 0 0 1-.94-2.636l-2.547-7.277c-1.739-4.697-3.268-7.372-5.58-9.24-2.953-2.386-6.604-3.692-10.58-4.173a27.422 27.422 0 0 0-3.403-.198z" fill="#4285F4"></path><path d="M61.551 153.314l-.1.002a.805.805 0 0 0-.742.764l.002.1 1.185 15.019a.802.802 0 0 0 .285.552l.087.064 6.522 4.123a.803.803 0 1 0 .95-1.294l-.088-.065-6.18-3.908-1.156-14.617a.805.805 0 0 0-.657-.728l-.108-.012z" fill="#4682F4"></path><path d="M63.276 165.48a.805.805 0 0 0-.101 1.601l.101.007h22.233a.805.805 0 0 0 .101-1.602l-.1-.006H63.275z" fill="#4682F4"></path></g><path d="M69.765 131.356h5.865l1.533 6.908c-.569 1.266-2.293 2.186-4.332 2.186-2.094 0-3.855-.97-4.376-2.287l1.31-6.807z" fill="#CFE3FF"></path><path d="M75.63 130.552h-5.865a.805.805 0 0 0-.791.652l-1.31 6.807a.803.803 0 0 0 .042.447c.666 1.684 2.762 2.796 5.125 2.796 2.296 0 4.343-1.05 5.067-2.661a.803.803 0 0 0 .051-.503l-1.533-6.908a.805.805 0 0 0-.786-.63zm-.647 1.608l1.329 5.987-.027.046c-.557.839-1.897 1.453-3.454 1.453l-.228-.004c-1.506-.058-2.771-.69-3.272-1.52l-.036-.065 1.135-5.897h4.553z" fill="#4285F4" fill-rule="nonzero"></path><path d="M76.445 122.877a6.147 6.147 0 0 1 .694 8.688 6.202 6.202 0 0 1-8.72.692 6.147 6.147 0 0 1-.694-8.689 6.202 6.202 0 0 1 8.72-.69z" fill="#CFE3FF"></path><path d="M67.112 123.046a6.95 6.95 0 0 0 .785 9.823 7.008 7.008 0 0 0 9.855-.781 6.95 6.95 0 0 0-.785-9.823 7.008 7.008 0 0 0-9.855.781zm8.811.444a5.344 5.344 0 0 1 .604 7.553 5.396 5.396 0 0 1-7.587.601 5.344 5.344 0 0 1-.603-7.553 5.396 5.396 0 0 1 7.586-.601z" fill="#4285F4" fill-rule="nonzero"></path><path fill="#4285F4" d="M66.246 124.853h11.057l-.299-2.25-4.155-1.117-2.297.041-2.571 1.65z"></path><path d="M81.62 121.472c-.335.523-.8 1.009-1.21 1.469l-1.697 1.912h-6.757l2.306-2.545c1.127-1.244 1.971-2.238 3.384-3.065 1.483-.869 3.377-1.116 4.163.034l.024.037c.355.55.274 1.401-.212 2.158" fill="#0F3EC1"></path><path d="M69.625 127.974c.4-.082.79.147.921.52l.03.106c.083.405.424.766.824.886l.121.03a.804.804 0 1 1-.275 1.584 2.827 2.827 0 0 1-2.249-2.178.804.804 0 0 1 .628-.948z" fill="#4285F4" fill-rule="nonzero"></path><g transform="translate(87.766 169.167)"><path d="M0 12.79L2.687 1.536A2 2 0 0 1 4.632 0h11.823a2 2 0 0 1 1.928 2.533l-3.88 14.02L0 12.79z" fill="#4682F4"></path><ellipse fill="#FFF" cx="6.285" cy="2.818" rx="1.007" ry="1.001"></ellipse></g><path d="M89.666 149.902c.488.11.795.595.685 1.082l-.412 1.874a39.22 39.22 0 0 0-.172.87 23.414 23.414 0 0 0-.372 2.834c-.129 2.02-.374 3.896-.757 5.674-.484 2.245-1.087 3.591-2.423 4.63a.907.907 0 0 1-1.271-.159.904.904 0 0 1 .158-1.27c.909-.706 1.363-1.72 1.764-3.582.318-1.475.537-3.028.67-4.69l.05-.72c.053-.81.153-1.625.303-2.51l.154-.84c.123-.641.252-1.23.54-2.509a.906.906 0 0 1 .97-.702l.113.018zM159.996 35.664h-5.559a.805.805 0 0 0-.737.48l-1.71 3.862a.804.804 0 0 0 .734 1.13l9.034.036a.804.804 0 0 0 .737-1.135l-1.765-3.9a.805.805 0 0 0-.734-.473zm-.522 1.608l1.036 2.286-6.55-.027 1.001-2.26h4.513z" fill="#4285F4" fill-rule="nonzero"></path><path d="M161.948 41.21l-.376-.071-1.578.03c-2.899.047-5.226.04-6.982-.021l-.323-.012c-12.927-.517-20.131 5.42-29.147 22.158a.804.804 0 0 1-.397.36l-.105.036-19.632 5.21 5.93 13.082.087.008c7.582.697 14.44-1.076 20.608-5.325l.439-.308c6.424-4.572 10.44-10.685 12.07-18.37a.805.805 0 0 1 1.576.333c-1.714 8.08-5.959 14.541-12.71 19.347-6.75 4.804-14.327 6.763-22.696 5.868a.806.806 0 0 1-.599-.374l-.05-.094-6.515-14.37a.803.803 0 0 1 .427-1.074l.1-.034 20.214-5.364.112-.206c8.97-16.498 16.507-22.78 29.546-22.514l1.744.054c1.767.045 4.052.043 6.855-.007l1.075-.021.147.01.31.056.39.08c.139.028.286.06.443.096.888.203 1.871.466 2.924.799 3.008.95 5.976 2.264 8.694 4.002 7.825 5.004 12.045 12.458 10.865 22.73-1.18 10.273-7.632 17.093-17.468 21.09-3.416 1.388-7.007 2.33-10.556 2.913a49.07 49.07 0 0 1-3.42.443l-.511.043-.742.049a.806.806 0 0 1-.826-.478l-.037-.104-5.588-19.616a.806.806 0 1 1 1.512-.542l.038.103 5.41 18.992.344-.026.251-.023a47.465 47.465 0 0 0 3.307-.428c3.438-.564 6.915-1.477 10.21-2.816 9.339-3.794 15.371-10.171 16.475-19.784 1.105-9.613-2.793-16.499-10.132-21.192-2.588-1.655-5.43-2.913-8.311-3.823a36.183 36.183 0 0 0-2.365-.662l-.431-.102a25.57 25.57 0 0 0-.606-.13z" fill="#4285F4" fill-rule="nonzero"></path><g fill="#4285F4" fill-rule="nonzero"><path d="M152.34 90.536c.23.38.11.875-.27 1.106l-3.443 2.127-.68.406-.49.283c-1.488.848-3.158 1.685-5.746 2.87l-.569.254c-1.158.505-1.873.71-2.765.739-1.447.046-2.845-.649-3.411-1.88a.804.804 0 1 1 1.408-.77l.053.096c.268.583 1.048.97 1.899.944.696-.022 1.31-.216 2.46-.732l.256-.116c2.689-1.231 4.354-2.072 5.857-2.94l.451-.265.52-.312c.554-.34 2.592-1.611 3.366-2.081a.803.803 0 0 1 1.104.27z"></path><path d="M145.072 91.074a.806.806 0 0 1-.333 1.09l-3.63 1.972c-.836.448-1.504.79-2.17 1.108-1.928.919-3.64 1.517-5.47 1.857-1.122.208-2.188.11-3.06-.383-1.26-.711-1.826-2.492-.811-3.658a.803.803 0 0 1 1.134-.078c.335.292.37.8.078 1.136-.266.306-.063.942.388 1.197.502.283 1.196.347 1.977.202 1.68-.312 3.263-.865 5.073-1.727l.484-.236a59.293 59.293 0 0 0 1.936-1.01l2.845-1.551.471-.253a.804.804 0 0 1 1.088.334z"></path><path d="M143.99 88.052a.806.806 0 0 1-.31 1.095l-.713.41-1.405.829c-.92.536-1.538.866-2.245 1.187-1.85.84-3.59 1.482-5.303 1.933l-.75.186-.715.166c-.634.14-1.054.204-1.551.231-1.406.08-2.565-.275-3.268-1.278-.648-.92-.53-2.234.165-3.135 1.224-1.586 3.911-2.467 7.583-2.904a.805.805 0 0 1 .19 1.6c-3.254.387-5.635 1.168-6.501 2.289-.288.373-.336.919-.122 1.224.318.453.954.647 1.863.596.446-.025.84-.09 1.529-.249l.633-.15c1.79-.428 3.615-1.083 5.583-1.976l.35-.164c.58-.278 1.156-.598 2.01-1.1l.97-.575c.368-.217.627-.366.912-.526a.803.803 0 0 1 1.094.31zm4.263-12.866a.805.805 0 0 1-.813.795c-3.483-.04-7.396.654-12.402 2.014l-.606.167c-1.284.355-1.901.552-2.54.843l-.138.064c-.477.225-.785.44-.974.692-.176.233-.227.516-.15.683.127.274.612.423 1.446.41l.718-.03 6.73-.366a.805.805 0 0 1 .068 1.609l-2.754.145-3.532.2c-.362.018-.663.033-.963.046-1.563.066-2.662-.23-3.172-1.338-.347-.75-.185-1.651.324-2.328.377-.501.881-.854 1.572-1.18.695-.329 1.291-.536 2.39-.85l.546-.153c5.433-1.507 9.646-2.283 13.456-2.238.444.005.8.37.794.815z"></path><path d="M142.915 84.726c.21.392.062.88-.33 1.09-4.438 2.373-7.59 3.063-12.93 2.921-.825-.022-1.339-.085-1.886-.289-.766-.285-1.391-.839-1.654-1.57-.431-1.202.238-2.558 1.377-3.236.584-.347 1.188-.525 2.052-.654l.856-.11c4.22-.512 6.293-1.111 10.039-2.917a.806.806 0 0 1 .698 1.451c-3.594 1.733-5.781 2.42-9.528 2.935l-1.56.197c-.827.107-1.321.237-1.736.483-.531.317-.826.913-.685 1.306.088.243.348.474.7.605.337.125.71.171 1.37.189 5.07.134 7.946-.495 12.13-2.732a.804.804 0 0 1 1.087.33z"></path></g><path d="M142.765 48.928a.806.806 0 0 1 1.475.646c-.578 1.314-.63 2.915-.27 4.932l.073.382c.063.317.123.59.218 1.007l.38 1.656c.312 1.414.436 2.243.471 3.256l.007.314c.002.16 0 .333-.002.54l-.016 1.037c-.001.648.026 1.024.106 1.448.173.915.67 1.642 1.244 1.851l.059.017 7.962.085c7.285.062 11.603.047 12.686-.037l.063-.006.01-.03c.035-.143.06-.348.067-.61l.003-.166c.003-.9-.166-2.256-.508-4.05a.804.804 0 0 1 1.582-.301l.12.645c.697 3.868.621 5.743-.748 6.057l-.131.023c-1.028.134-5.758.155-14.565.071l-6.666-.073-.17-.02c-1.35-.31-2.299-1.612-2.59-3.158l-.054-.314c-.067-.462-.086-.912-.08-1.618l.017-1.052c.002-.173.001-.319-.002-.46l-.004-.138c-.035-1.026-.18-1.875-.58-3.608l-.273-1.183c-.063-.279-.11-.498-.157-.728l-.028-.14c-.498-2.492-.473-4.516.301-6.275z" fill="#4285F4" fill-rule="nonzero"></path><g transform="translate(161.459 2.303)"><mask id="b" fill="#fff"><path id="a" d="M.008.144h30.71v26.652H.007z"></path></mask><path d="M.031 21.66c.255-2.568 2.554-4.442 5.135-4.182a4.682 4.682 0 0 1 3.421 2.037 4.695 4.695 0 0 1-.024-1.107c.255-2.568 2.554-4.442 5.13-4.181l.028.003c.964.097 1.783-.638 1.842-1.6.008-.125.02-.251.038-.378.31-2.172 2.166-3.863 4.365-4a4.6 4.6 0 0 1 1.472.143c.975.258 1.933-.483 1.994-1.484l.21-3.452c.163-2.651 3.1-4.178 5.379-2.795 2.277 1.383 2.258 4.683-.036 6.04l-3.811 2.254a1.61 1.61 0 0 0-.644 2.053c.325.718.47 1.527.384 2.366-.256 2.563-2.555 4.436-5.13 4.181l-.03-.003c-.942-.095-1.791.605-1.839 1.546a4.692 4.692 0 0 1-5.151 4.419 4.692 4.692 0 0 1-3.423-2.037c.05.36.064.73.026 1.107-.256 2.563-2.556 4.436-5.135 4.183-2.575-.26-4.457-2.55-4.201-5.113" fill="#4285F4" mask="url(#b)"></path></g><path d="M161.475 26.911a6.484 6.484 0 0 1 .733 9.17c-2.341 2.733-6.464 3.06-9.21.73a6.486 6.486 0 0 1-.733-9.17 6.554 6.554 0 0 1 9.21-.73" fill="#FFF"></path><path d="M151.653 27.118a7.289 7.289 0 0 0 .823 10.305c3.084 2.618 7.715 2.25 10.344-.82a7.288 7.288 0 0 0-.823-10.305c-3.084-2.617-7.714-2.25-10.344.82zm9.3.406a5.681 5.681 0 0 1 .643 8.034 5.747 5.747 0 0 1-8.076.64 5.683 5.683 0 0 1-.643-8.035 5.748 5.748 0 0 1 7.884-.796l.193.157z" fill="#4285F4" fill-rule="nonzero"></path><path d="M163.92 32.616c.85-1.668-2.037-5.655-4.051-6.672-2.014-1.018-6.642-.056-7.493 1.612 1.71 1.768 8.243 4.389 10.677 4.884l.866.176z" fill="#4285F4"></path><path d="M150.526 32.93a.806.806 0 0 1 1.043.18l.063.09c.277.454.758.755 1.199.755.442 0 .862-.225 1.05-.542l.05-.098a.806.806 0 0 1 1.485.623c-.418.994-1.478 1.625-2.585 1.625-1.034 0-2.02-.616-2.575-1.529a.803.803 0 0 1 .27-1.104z" fill="#4285F4" fill-rule="nonzero"></path><path d="M167.507 66.135a.805.805 0 0 1 .433 1.546l-.106.029-20.582 4.257a.805.805 0 0 1-.432-1.546l.105-.029 20.582-4.257z" fill="#4682F4" fill-rule="nonzero"></path><g fill="#4285F4" fill-rule="nonzero"><path d="M95.347 77.103a.806.806 0 0 1 .962-.61.803.803 0 0 1 .609.96c-.48 2.136-1.868 4.347-3.66 5.503l-.812.482c-.59.355-.932.637-1.146.966-.101.156-.136.288-.122.348.017.073.188.191.419.21.282.025.594-.046 1.156-.249l.903-.328c5.416-1.995 8.043-3.418 9.986-5.892.551-.702.944-1.426 1.083-2.05a.806.806 0 0 1 .961-.61.803.803 0 0 1 .61.959c-.199.893-.7 1.818-1.388 2.693-2.248 2.863-5.135 4.386-11.143 6.572l-.469.17c-.768.277-1.258.389-1.84.339-.864-.074-1.65-.615-1.845-1.443-.129-.545.019-1.102.34-1.595.335-.515.773-.902 1.414-1.312l.474-.287.375-.218c1.483-.863 2.725-2.788 3.133-4.608z"></path><path d="M83.987 77.326c1.354-2.038 3.087-3.135 6.81-4.776l.392-.172c4.907-2.135 8.03-3.214 11.302-3.63a.803.803 0 1 1 .201 1.596c-3.076.39-6.09 1.432-10.862 3.509l-.714.315c-3.208 1.434-4.7 2.408-5.788 4.047-.354.533-.485 1.327-.337 2.025l.664 3.258c.478 2.406.985 5.058 1.1 5.804l.012.086c.109.792.274 1.145.438 1.154.259.015.718-.6 1.018-1.502.282-.847.3-1.733.109-3.212l-.21-1.433-.089-.5c-.05-.3-.087-.59-.11-.867-.137-1.667.196-2.735.589-3.205.616-.928 1.614-1.338 3.586-1.714l1.785-.313c.724-.13 1.088-.217 1.48-.347a.804.804 0 1 1 .505 1.527l-.233.074c-.464.14-.93.237-1.847.396l-.827.142-.537.098c-1.44.277-2.2.563-2.56 1.01l-.06.081c-.175.213-.379.866-.276 2.117.013.154.03.314.054.48l.143.835.16 1.09c.265 1.893.265 3.047-.135 4.247-.517 1.553-1.354 2.675-2.64 2.602-1.18-.067-1.645-.843-1.877-2.15l-.11-.699c-.251-1.478-1.239-6.519-1.707-8.723-.234-1.107-.032-2.343.57-3.25z"></path><path d="M83.462 78.295a.803.803 0 1 1 1.388.814l-1.39 2.38c-1.383 2.392-2.463 4.338-3.33 6.014l-.114.229c-.108.233-.136.355-.118.421.018.067.257.263.373.279.19.026.441-.035.728-.184.611-.317 1.142-.857 1.777-1.744.438-.611.923-1.447 1.451-2.462a.803.803 0 1 1 1.428.74c-.56 1.078-1.077 1.97-1.57 2.658-.77 1.075-1.46 1.776-2.346 2.236-.558.29-1.125.427-1.689.35-.734-.1-1.514-.737-1.707-1.45-.165-.611-.026-1.073.357-1.811l.34-.65c1.108-2.1 2.53-4.606 4.422-7.82z"></path></g><path d="M57.963 76.556a1.512 1.512 0 0 1 2.027-.102l.108.098 17.27 17.198 24.354-7.42a1.51 1.51 0 0 1 1.835.866l.049.136a1.51 1.51 0 0 1-.869 1.834l-.137.049-25.22 7.683a1.51 1.51 0 0 1-1.394-.273l-.112-.101-17.91-17.836a1.506 1.506 0 0 1-.001-2.132z" fill="#4285F4" fill-rule="nonzero"></path><g><path d="M73.735 27.798a.957.957 0 0 1-.899-1.087 9.21 9.21 0 0 1 9.562-7.95c4.828.22 8.699 4.061 9.082 8.793a.922.922 0 0 1-.96 1.004l-16.785-.76z" fill="#F882FF"></path><path d="M46.537 44.15l-7.78 3.522c-1.1.499-1.249 1.981-.268 2.67l6.939 4.87c.98.69 2.354.068 2.473-1.118l.842-8.396c.12-1.187-1.107-2.047-2.206-1.549" fill="#D2E3FC"></path><path d="M45.335 46.642c-2.101-2.484-1.676-6.184.948-8.262l11.107-8.82c2.625-2.08 6.456-1.752 8.557.732s1.677 6.184-.948 8.263l-11.106 8.82c-2.625 2.08-6.456 1.75-8.558-.733" fill="#FABD04"></path><g transform="rotate(-102 42.988 6.811)"><mask id="d" fill="#fff"><path id="c" d="M3.798.549A5.982 5.982 0 0 0 .812 8.458l5.764 12.741a5.97 5.97 0 0 0 7.9 2.99 5.982 5.982 0 0 0 2.987-7.909L11.697 3.54A5.96 5.96 0 0 0 3.798.55"></path></mask><path d="M3.01-6.275c-.34 0-.687.118-.977.375L-4.024-.53c-.856.758-.57 2.16.514 2.523L4.162 4.56c.16.053.32.078.476.078.896 0 1.644-.83 1.45-1.785L4.472-5.084a1.484 1.484 0 0 0-1.461-1.19M2.817-4.19l1.398 6.865-6.638-2.22 5.24-4.645" fill="#FFF" mask="url(#d)"></path></g><path d="M43.26 66.655l-3.847-6.7a2.573 2.573 0 0 0-2.228-1.28l-7.868-.026a2.63 2.63 0 0 0-2.261 1.264l-4.022 6.673a2.504 2.504 0 0 0-.032 2.543l3.847 6.7a2.572 2.572 0 0 0 2.228 1.28l7.868.026a2.632 2.632 0 0 0 2.262-1.264l4.02-6.672a2.503 2.503 0 0 0 .033-2.544" fill="#38A953"></path><path d="M42.107 102.465h0v-.002a8.461 8.461 0 0 0-1.253-1.538l-1.343-1.65a6.942 6.942 0 0 1-1.515-5.197l.28-2.386.122-1.045-.055-.007a5.94 5.94 0 0 0-.06-.752c-.492-3.26-3.588-5.485-6.915-4.972-3.328.513-5.628 3.571-5.135 6.83.037.252.097.496.165.735l-.05.024.424.96.97 2.194a6.96 6.96 0 0 1 .088 5.417l-.795 1.98a8.491 8.491 0 0 0-.741 1.845l-.001.002h0a8.374 8.374 0 0 0-.038 4.236c1.006 4.032 4.942 6.764 9.169 6.373 5.048-.468 8.615-4.991 7.886-9.824a8.323 8.323 0 0 0-1.203-3.223z" stroke="#D2E3FC" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round"></path><path d="M40.532 135.356c-7.25-.375-12.761-6.448-12.311-13.564l.013-.21c.449-7.116 6.69-12.581 13.939-12.206 7.25.375 12.761 6.448 12.311 13.564l-.013.21c-.45 7.117-6.69 12.581-13.939 12.206" fill="#EA4335"></path><g transform="rotate(-103 70.313 56.882)"><mask id="f" fill="#fff"><path id="e" d="M1.258 10.212c-1.955 7.205 1.886 14.751 8.58 16.855l.196.063c6.694 2.104 13.705-2.03 15.66-9.234C27.65 10.691 23.81 3.145 17.117 1.04L16.92.978a11.78 11.78 0 0 0-3.546-.549C7.907.43 2.868 4.28 1.258 10.212z"></path></mask><path d="M28.924.89c-4.53.083-8.37 3.754-8.984 8.531-.727 5.66 3.137 10.797 8.463 11.23a8.667 8.667 0 0 0 3.378-.392l.274-.097.373-.145c.485-.2.925-.425 1.339-.683l.258-.17 1.826-.942a5.58 5.58 0 0 1 4.559-.274l3.188 1.201.11.034c.11.026.223.031.331.016l.02-.004.258.04c.092.013.183.022.275.03 3.737.304 6.968-2.686 7.245-6.64.278-3.947-2.488-7.413-6.216-7.717l-.31-.016h-.227l-.028-.01a.899.899 0 0 0-.324-.035l-.156.024-3.276.663-.275.048c-1.467.221-2.962-.153-4.2-1.061l-1.68-1.235-.225-.203a9.26 9.26 0 0 0-1.183-.869l-.317-.186A8.772 8.772 0 0 0 29.265.889h-.341zm.35 1.81a6.957 6.957 0 0 1 2.96.745l.296.157c.515.29.993.642 1.427 1.049l.083.068 1.714 1.26c1.723 1.265 3.848 1.744 5.905 1.328l3.01-.61.078.011.055.002.056-.001a4.46 4.46 0 0 1 .615.002c2.71.22 4.77 2.8 4.56 5.787-.21 2.979-2.592 5.184-5.294 4.964a4.622 4.622 0 0 1-.611-.097l-.111-.017-.079-.003-2.89-1.09a7.39 7.39 0 0 0-6.029.36l-1.87.968-.095.056a7.217 7.217 0 0 1-1.55.802l-.298.103a6.838 6.838 0 0 1-2.657.304c-4.266-.347-7.413-4.532-6.814-9.196.502-3.911 3.616-6.887 7.222-6.954l.316.001z" fill="#FFF" fill-rule="nonzero" mask="url(#f)"></path></g></g><g><g transform="rotate(9 44.073 633.419)"><mask id="h" fill="#fff"><path id="g" d="M0 .13h36.463v36.73H0z"></path></mask><path d="M35.644 27.522l-24.76 9.258a1.253 1.253 0 0 1-1.614-.745L.079 11.095a1.268 1.268 0 0 1 .74-1.627L25.58.21c.65-.243 1.372.09 1.614.745l9.191 24.94a1.268 1.268 0 0 1-.74 1.627" fill="#4285F4" mask="url(#h)"></path></g><path d="M121.048 11.073a4.033 4.033 0 0 0-1.246.577l-.217.161c-.247.196-.47.42-.664.668l-.548.544a2.164 2.164 0 0 1-1.531.64h-1.374l-.094.007a.686.686 0 0 0-.177.052l-.072.014-.12.03a3.055 3.055 0 0 0-2.149 3.73 3.024 3.024 0 0 0 3.71 2.157l.2-.064.06-.007a.65.65 0 0 0 .13-.042l.178-.099 1.076-.625a2.152 2.152 0 0 1 1.64-.217l.815.22c.218.091.522.173.835.22.667.097 1.35.027 2-.215 1.854-.691 2.95-2.67 2.562-4.618-.461-2.313-2.759-3.742-5.014-3.133zm3.732 3.388c.263 1.322-.485 2.672-1.737 3.139a2.723 2.723 0 0 1-1.965-.019l-.888-.244a3.459 3.459 0 0 0-2.636.35l-1.052.609-.072.024a1.717 1.717 0 0 1-2.31-1.157 1.748 1.748 0 0 1 1.224-2.136l.065-.016c.045-.01.094-.018.15-.025l.069-.016 1.215-.001a3.47 3.47 0 0 0 2.456-1.024l.598-.601.106-.127a3.04 3.04 0 0 1 .4-.388l.16-.117a2.734 2.734 0 0 1 4.217 1.749zm-21.012-1.449a3.139 3.139 0 0 0-2.443 3.69 3.11 3.11 0 0 0 3.669 2.451 3.139 3.139 0 0 0 2.442-3.689 3.111 3.111 0 0 0-3.668-2.452zm2.387 2.706a1.832 1.832 0 0 1-1.422 2.155 1.803 1.803 0 0 1-2.126-1.426 1.833 1.833 0 0 1 1.422-2.155 1.803 1.803 0 0 1 2.09 1.281l.036.145z" fill="#FFF" fill-rule="nonzero"></path><g transform="rotate(9 43.883 633.603)"><mask id="j" fill="#fff"><path id="i" d="M25.094.245L.89 9.568c-.687.265-1.037 1.056-.782 1.769l8.985 25.114c.255.712 1.018 1.075 1.704.811L35 27.939c.687-.265 1.037-1.056.782-1.769L26.798 1.056A1.329 1.329 0 0 0 25.555.16c-.153 0-.31.028-.461.086"></path></mask><path d="M13.402 18.342a.654.654 0 0 1 .782-.355l.09.035 25.268 11.894a.653.653 0 0 1-.467 1.217l-.09-.035-24.67-11.613-6.724 14.77a.654.654 0 0 1-.775.357l-.09-.033a.653.653 0 0 1-.358-.775l.034-.09 7-15.372z" fill="#FFF" fill-rule="nonzero" mask="url(#j)"></path></g></g>
      </g>
    </defs>
  </svg>
</iron-iconset-svg>
`;document.head.appendChild(template$6.content);// Copyright 2020 The Chromium Authors. All rights reserved.
const ContactsState={PENDING:"pending",FAILED:"failed",HAS_CONTACTS:"hascontacts",ZERO_CONTACTS:"zerocontacts"};const visibilityStringToValue=function(visibilityString){switch(visibilityString){case"all":return nearbyShare.mojom.Visibility.kAllContacts;case"some":return nearbyShare.mojom.Visibility.kSelectedContacts;case"none":return nearbyShare.mojom.Visibility.kNoOne;default:return null}};const visibilityValueToString=function(visibility){switch(visibility){case nearbyShare.mojom.Visibility.kAllContacts:return"all";case nearbyShare.mojom.Visibility.kSelectedContacts:return"some";case nearbyShare.mojom.Visibility.kNoOne:return"none";default:return null}};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-icons cr-shared-style" scope="nearby-contact-visibility">:host {
  --card-border-color: var(--google-grey-300);
        --cr-card-radio-button-padding: 4px 12px 4px 12px;
        --iron-icon-height: var(--cr-icon-size);
        --iron-icon-width: var(--cr-icon-size);
}

.grey-icon {
  fill: var(--google-grey-refresh-700);
}

.light-grey-icon {
  fill: var(--google-grey-refresh-500);
}

#main {
  display: flex;
        flex-direction: column;
        line-height: 20px;
}

#visibilityRadioGroup {
  display: flex;
        justify-content: center;
        margin-block-end: 16px;
}

cr-card-radio-button {
  border: 1px solid var(--card-border-color);
        box-shadow: none;
        flex: 1;
        margin-block-end: 0;
        margin-block-start: 0;
        margin-inline-end: 5px;
        margin-inline-start: 5px;
        padding: 0;
        width: auto;
        --cr-card-radio-button-checkmark-left: var(--cr-button-edge-spacing);
        --cr-card-radio-button-checkmark-right: auto;
        --cr-card-radio-button-checkmark-top: auto;
}

cr-card-radio-button[checked] {
  border: 2px solid var(--cr-checked-color);
}

cr-card-radio-button:first-child {
  margin-inline-start: 0;
}

cr-card-radio-button:last-child {
  margin-inline-end: 0;
}

.card-contents {
  color: var(--google-blue-600);
}

.card-icon {
  fill: var(--google-blue-600);
        margin-inline-end: 8px;
}

cr-card-radio-button[checked] .card-icon {
  visibility: hidden;
}

.card-label {
  display: inline-flex;
}

.content {
  height: 200px;
        overflow: scroll;
}

#zeroStateContainer {
  display: flex;
        justify-content: center;
}

#zeroStateImageContainer {
  flex-basis: 50%;
        margin-inline-end: 24px;
        margin-inline-start: auto;
        text-align: end;
}

#zeroStateImage {
  height: 200px;
        width: 200px;
}

#zeroStateTextContainer {
  display: flex;
        flex-basis: 50%;
        flex-direction: column;
        justify-content: center;
        margin-inline-end: 8px;
        margin-inline-start: 8px;
}

#zeroStateText {
  margin-block-end: 12px;
}

#zeroStateHelpLink {
  color: var(--google-blue-600);
        text-decoration: none;
}

#contactsPending {
  align-items: center;
        display: flex;
        justify-content: center;
}

#contactsFailed {
  align-items: center;
        display: flex;
        justify-content: center;
}

#contactsFailedImage {
  height: 100%;
        margin-inline-end: 24px;
        width: 100%;
}

.viz-description-section {
  margin-block-end: 8px;
}

#explanationContainer {
  border-bottom: var(--cr-separator-line);
}

.explanation-section {
  display: flex;
}

#explanation {
  display: flex;
        font-size: 11px;
        margin-block-end: 8px;
        margin-inline-end: 12px;
}

.padded-icon {
  margin-inline-end: 16px;
        margin-inline-start: 12px;
        min-height: var(--cr-icon-size);
        min-width: var(--cr-icon-size);
}

#contactList {
  border-top: var(--cr-separator-line);
        padding-block-start: 8px;
}

#contactsHeading {
  font-size: 1.2rem;
}

#unreachableMessage {
  color: var(--google-grey-refresh-500);
        font-size: 11px;
        line-height: 16px;
}

.contact-item {
  display: flex;
        height: 40px;
        padding-block-end: 8px;
        padding-block-start: 8px;
}

.contact-item[disabled] {
  opacity: var(--cr-disabled-opacity);
}

.elide {
  overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
}

.contact-toggle {
  align-self: center;
        margin-inline-end: 12px;
        margin-inline-start: auto;
}

.contact-icon {
  align-self: center;
}

#noContactsContainer {
  align-items: center;
        display: flex;
        flex-direction: column;
        padding-block-end: 16px;
        padding-block-start: 16px;
}

#noContactsContainer .cr-secondary-text {
  text-align: center;
        width: 80%;
}

#noContactsImage {
  height: 100px;
        margin-block-end: 8px;
        width: 100%;
}

.contact-row {
  display: flex;
        flex: 1;
        justify-content: space-between;
}

</style>
    <div id="main">

      <cr-radio-group id="visibilityRadioGroup" disabled="[[disableRadioGroup_(contactsState)]]" selected="{{selectedVisibility}}">
        <cr-card-radio-button id="allContacts" class="flex" name="all" aria-labelledby="allContactsLabel">
          <div class="card-contents">
            <iron-icon icon="nearby20:contact-all" class="card-icon">
            </iron-icon>
            <div id="allContactsLabel" class="card-label" aria-hidden="true">
              All contacts
            </div>
          </div>
        </cr-card-radio-button>
        <cr-card-radio-button id="someContacts" class="flex" name="some" aria-labelledby="someContactsLabel">
          <div class="card-contents">
            <iron-icon icon="nearby20:contact-group" class="card-icon">
            </iron-icon>
            <div id="someContactsLabel" class="card-label" aria-hidden="true">
              Some contacts
            </div>
          </div>
        </cr-card-radio-button>
        <cr-card-radio-button id="noContacts" class="flex" name="none" aria-labelledby="noContactsLabel">
          <div class="card-contents">
            <iron-icon icon="nearby20:visibility-off" class="card-icon">
            </iron-icon>
            <div id="noContactsLabel" class="card-label" aria-hidden="true">
              Hidden
            </div>
          </div>
        </cr-card-radio-button>
      </cr-radio-group>

      <!-- Zero state is shown only when no selection has been made yet. -->
      <template is="dom-if" if="[[showZeroState_(selectedVisibility, contactsState)]]">
        <div id="zeroStateContainer" class="content">
          <div id="zeroStateImageContainer">
            <iron-icon id="zeroStateImage" icon="nearby-images:nearby-device-visibility">
            </iron-icon>
          </div>
          <div id="zeroStateTextContainer">
            <div id="zeroStateText" class="cr-title-text" inner-h-t-m-l="[[getAriaLabelledZeroStateText_()]]">
            </div>
          </div>
        </div>
      </template>

      <!-- Shown when contacts are currently being downloaded. -->
      <template is="dom-if" if="[[inContactsState_(contactsState, ContactsState.PENDING)]]">
        <div id="contactsPending" class="content">
          <div>Downloading contact listâ€¦</div>
        </div>
      </template>

      <!-- Shown when contacts download has failed. -->
      <template is="dom-if" if="[[inContactsState_(contactsState, ContactsState.FAILED)]]" on-dom-change="domChangeDownloadFailed_">
        <div id="contactsFailed" class="content">
          <iron-icon id="contactsFailedImage" icon="nearby-images:contacts-download-failed">
          </iron-icon>
          <div id="contactsFailedMessage"></div>
        </div>
      </template>

      <!-- Show when the user has downloaded contacts but there are none.-->
      <template is="dom-if" if="[[showEmptyState_(selectedVisibility, contactsState)]]">
        <div id="noContactsContainer" class="content">
          <iron-icon id="noContactsImage" icon="nearby-images:contacts-empty">
          </iron-icon>
          <div class="cr-title-text">
            No reachable contacts
          </div>
          <div class="cr-secondary-text">
            To use Nearby Share with these contacts, add the email address linked with their Google Account to your contacts.
          </div>
        </div>
      </template>

      <!-- Show when contacts have downloaded and a state is selected. -->
      <template is="dom-if" if="[[showContactsContainer_(selectedVisibility, contactsState)]]">
        <div id="explanationContainer" class="content">

          <template is="dom-if" if="[[showExplanationState_(selectedVisibility,
                  contactsState)]]">
            <div id="explanation">
              <div class="cr-secondary-text" inner-h-t-m-l="[[getVisibilityDescription_(selectedVisibility)]]">
              </div>
            </div>
          </template>

          <!-- Show when the user has one or more contacts downloaded. -->
          <template is="dom-if" if="[[showContactList_(selectedVisibility,
                  contactsState)]]">
            <div id="contactList">
              <template is="dom-if" if="[[showUnreachableContactsMessage_(
                      numUnreachable_)]]">
                <div class="explanation-section">
                  <iron-icon icon="nearby20:info" class="padded-icon light-grey-icon">
                  </iron-icon>
                  <div id="unreachableMessage">
                    [[numUnreachableMessage_]]
                  </div>
                </div>
              </template>
              <template is="dom-repeat" items="[[contacts]]">
                <div class="contact-item" disabled$="[[isVisibility_(selectedVisibility,'none')]]">
                  <iron-icon icon="cr:person" class="padded-icon grey-icon contact-icon">
                  </iron-icon>
                  <div class="contact-row">
                    <div aria-hidden$="[[getContactAriaHidden_(
                                        selectedVisibility)]]" aria-labelledby$="contact-name-[[itemsIndex]]" aria-describedby$="contact-description-[[itemsIndex]]">
                      <div id="contact-name-[[itemsIndex]]" class="cr-title-text elide" aria-hidden="true">
                        [[item.name]]
                      </div>
                      <div id="contact-description-[[itemsIndex]]" class="cr-secondary-text elide" aria-hidden="true">
                        [[item.description]]
                      </div>
                    </div>
                    <template is="dom-if" if="[[showContactCheckBoxes_(selectedVisibility)]]">
                      <cr-toggle class="contact-toggle" checked="{{item.checked}}" aria-labelledby$="contact-name-[[itemsIndex]]" aria-describedby$="contact-description-[[itemsIndex]]" disabled="[[!isVisibility_(
                                    selectedVisibility,'some')]]">
                      </cr-toggle>
                    </template>
                  </div>
                </div>
              </template>
            </div>
          </template>

        </div>
      </template>
    </div>
<!--_html_template_end_-->`,is:"nearby-contact-visibility",behaviors:[I18nBehavior],properties:{ContactsState:{type:Object,value:ContactsState},contactsState:{type:String,value:ContactsState.PENDING},settings:{type:Object,notify:true},selectedVisibility:{type:String,value:null,notify:true},contacts:{type:Array,value:null},numUnreachable_:{type:Number,value:0,observer:"updateNumUnreachableMessage_"},numUnreachableMessage_:{type:String,value:"",notify:true},isVisibilitySelected:{type:Boolean,computed:"isVisibilitySelected_(selectedVisibility)",notify:true}},contactManager_:null,downloadContactsObserverReceiver_:null,downloadTimeoutId_:null,observers:["settingsChanged_(settings.visibility)"],attached(){this.contactManager_=getContactManager();this.downloadContactsObserverReceiver_=observeContactManager(this);this.downloadContacts_()},detached(){if(this.downloadContactsObserverReceiver_){this.downloadContactsObserverReceiver_.$.close()}},isVisibilitySelected_(selectedVisibility){return this.selectedVisibility!==null},isVisibility_(selectedVisibility,visibilityString){return this.selectedVisibility===visibilityString},downloadContacts_(){if(!this.contacts){this.contactsState=ContactsState.PENDING}this.contactManager_.downloadContacts();this.downloadTimeoutId_=setTimeout(this.onContactsDownloadFailed.bind(this),30*1e3)},toNearbyVisibilityContact_(allowed,contactRecord){assert(contactRecord.identifiers.length>0);const description=contactRecord.identifiers[0].accountName||contactRecord.identifiers[0].phoneNumber||"";return{id:contactRecord.id,description:description,name:contactRecord.personName,checked:allowed}},onContactsDownloaded(allowedContacts,contactRecords,numUnreachableExcluded){clearTimeout(this.downloadTimeoutId_);const allowed=new Set(allowedContacts);const items=[];for(const contact of contactRecords){const visibilityContact=this.toNearbyVisibilityContact_(allowed.has(contact.id),contact);items.push(visibilityContact)}this.contacts=items;this.contactsState=items.length>0?ContactsState.HAS_CONTACTS:ContactsState.ZERO_CONTACTS;this.numUnreachable_=numUnreachableExcluded},onContactsDownloadFailed(){this.contactsState=ContactsState.FAILED;clearTimeout(this.downloadTimeoutId_)},genFakeContacts_(numContacts){clearTimeout(this.downloadTimeoutId_);const fakeContacts=[];for(let i=0;i<numContacts;i++){fakeContacts.push({id:String(-i),description:String(i)+"@google.com",name:"Person "+i,checked:false})}this.contacts=fakeContacts;this.contactsState=ContactsState.HAS_CONTACTS},showContactCheckBoxes_(){return this.selectedVisibility==="some"||this.selectedVisibility==="none"},getContactAriaHidden_(){if(this.showContactCheckBoxes_()){return"true"}return undefined},inContactsState_(contactsState,expectedState){return contactsState===expectedState},settingsChanged_(settings){if(this.settings&&this.settings.visibility){this.selectedVisibility=visibilityValueToString(this.settings.visibility)}else{this.selectedVisibility=null}},disableRadioGroup_(contactsState){return contactsState===ContactsState.PENDING||contactsState===ContactsState.FAILED},showZeroState_(selectedVisibility,contactsState){return!selectedVisibility&&contactsState!==ContactsState.PENDING&&contactsState!==ContactsState.FAILED},showContactsContainer_(selectedVisibility,contactsState){return this.showExplanationState_(selectedVisibility,contactsState)||this.showContactList_(selectedVisibility,contactsState)},showExplanationState_(selectedVisibility,contactsState){if(!selectedVisibility||contactsState===ContactsState.PENDING||contactsState===ContactsState.FAILED){return false}return selectedVisibility==="none"||contactsState===ContactsState.HAS_CONTACTS},showEmptyState_(selectedVisibility,contactsState){return(selectedVisibility==="all"||selectedVisibility==="some")&&contactsState===ContactsState.ZERO_CONTACTS},showContactList_(selectedVisibility,contactsState){return(selectedVisibility==="all"||selectedVisibility==="some")&&contactsState===ContactsState.HAS_CONTACTS},domChangeDownloadFailed_(){const contactsFailedMessage=this.$$("#contactsFailedMessage");if(!contactsFailedMessage){return}const localizedString=this.i18nAdvanced("nearbyShareContactVisibilityDownloadFailed");contactsFailedMessage.innerHTML=localizedString;const ariaLabelledByIds=[];contactsFailedMessage.childNodes.forEach(((node,index)=>{if(node.nodeType==Node.TEXT_NODE){const spanNode=document.createElement("span");spanNode.textContent=node.textContent;spanNode.id=`contactsFailedMessage${index}`;ariaLabelledByIds.push(spanNode.id);spanNode.setAttribute("aria-hidden",true);node.replaceWith(spanNode);return}if(node.nodeType==Node.ELEMENT_NODE&&node.nodeName=="A"){node.id=`tryAgainLink`;ariaLabelledByIds.push(node.id);return}assertNotReached$1("nearbyShareContactVisibilityDownloadFailed has invalid node types")}));const anchorTags=contactsFailedMessage.getElementsByTagName("a");if(anchorTags.length==0){contactsFailedMessage.innerHTML=localizedString;return}assert(anchorTags.length==1,"string should contain exactly one anchor tag");const anchorTag=anchorTags[0];anchorTag.setAttribute("aria-labelledby",ariaLabelledByIds.join(" "));anchorTag.href="#";anchorTag.addEventListener("click",(event=>{event.preventDefault();this.downloadContacts_()}))},getAriaLabelledZeroStateText_(){const tempEl=document.createElement("div");const localizedString=this.i18nAdvanced("nearbyShareContactVisibilityZeroStateText");const linkUrl=this.i18n("nearbyShareLearnMoreLink");tempEl.innerHTML=localizedString;const ariaLabelledByIds=[];tempEl.childNodes.forEach(((node,index)=>{if(node.nodeType==Node.TEXT_NODE){const spanNode=document.createElement("span");spanNode.textContent=node.textContent;spanNode.id=`zeroStateText${index}`;ariaLabelledByIds.push(spanNode.id);spanNode.setAttribute("aria-hidden",true);node.replaceWith(spanNode);return}if(node.nodeType==Node.ELEMENT_NODE&&node.nodeName=="A"){node.id=`zeroStateHelpLink`;ariaLabelledByIds.push(node.id);return}assertNotReached$1("nearbyShareContactVisibilityZeroStateText has invalid node types")}));const anchorTags=tempEl.getElementsByTagName("a");if(anchorTags.length==0){return localizedString}assert(anchorTags.length==1,"nearbyShareContactVisibilityZeroStateText should contain exactly"+" one anchor tag");const anchorTag=anchorTags[0];anchorTag.setAttribute("aria-labelledby",ariaLabelledByIds.join(" "));anchorTag.href=linkUrl;anchorTag.target="_blank";return tempEl.innerHTML},showUnreachableContactsMessage_(){return this.numUnreachable_>0},updateNumUnreachableMessage_(){if(this.numUnreachable_===0){this.numUnreachableMessage_="";return}const labelTemplate=sendWithPromise("getPluralString","nearbyShareContactVisibilityNumUnreachable",this.numUnreachable_).then((labelTemplate=>{this.numUnreachableMessage_=loadTimeData$1.substituteString(labelTemplate,this.numUnreachable_)}))},getVisibilityDescription_(selectedVisibility){switch(visibilityStringToValue(selectedVisibility)){case nearbyShare.mojom.Visibility.kAllContacts:return this.i18n("nearbyShareContactVisibilityOwnAll");case nearbyShare.mojom.Visibility.kSelectedContacts:return this.i18n("nearbyShareContactVisibilityOwnSome");case nearbyShare.mojom.Visibility.kNoOne:return this.i18nAdvanced("nearbyShareContactVisibilityOwnNone");default:return""}},saveVisibilityAndAllowedContacts(){const visibility=visibilityStringToValue(this.selectedVisibility);if(visibility){this.set("settings.visibility",visibility)}const allowedContacts=[];if(this.contacts){for(const contact of this.contacts){if(contact.checked){allowedContacts.push(contact.id)}}}this.contactManager_.setAllowedContacts(allowedContacts)}});// Copyright 2021 The Chromium Authors. All rights reserved.
const NearbyShareOnboardingFinalState={DEVICE_NAME_PAGE:0,VISIBILITY_PAGE:1,COMPLETE:2,MAX:3};const NearbyShareOnboardingEntryPoint={SETTINGS:0,TRAY:1,SHARE_SHEET:2,MAX:3};const NearbyShareOnboardingResultHistogramName="Nearby.Share.Onboarding.Result";const NearbyShareOnboardingEntryPointHistogramName="Nearby.Share.Onboarding.EntryPoint";const NearbyShareOnboardingDurationHistogramName="Nearby.Share.Onboarding.Duration";let onboardingInitiatedTimestamp;function processOnboardingInitiatedMetrics(url){let nearbyShareOnboardingEntryPoint;if(url.hostname==="nearby"){nearbyShareOnboardingEntryPoint=NearbyShareOnboardingEntryPoint.SHARE_SHEET}else if(url.hostname==="os-settings"){const urlParams=new URLSearchParams(url.search);nearbyShareOnboardingEntryPoint=urlParams.get("entrypoint")==="settings"?NearbyShareOnboardingEntryPoint.SETTINGS:NearbyShareOnboardingEntryPoint.TRAY}else{assertNotReached$1("Invalid nearbyShareOnboardingEntryPoint")}chrome.send("metricsHandler:recordInHistogram",[NearbyShareOnboardingEntryPointHistogramName,nearbyShareOnboardingEntryPoint,NearbyShareOnboardingEntryPoint.MAX]);onboardingInitiatedTimestamp=window.performance.now()}function processOnboardingCancelledMetrics(nearbyShareOnboardingFinalState){if(!onboardingInitiatedTimestamp){return}chrome.send("metricsHandler:recordInHistogram",[NearbyShareOnboardingResultHistogramName,nearbyShareOnboardingFinalState,NearbyShareOnboardingFinalState.MAX]);onboardingInitiatedTimestamp=null}function processOnboardingCompleteMetrics(){if(!onboardingInitiatedTimestamp){return}chrome.send("metricsHandler:recordInHistogram",[NearbyShareOnboardingResultHistogramName,NearbyShareOnboardingFinalState.COMPLETE,NearbyShareOnboardingFinalState.MAX]);chrome.send("metricsHandler:recordMediumTime",[NearbyShareOnboardingDurationHistogramName,window.performance.now()-onboardingInitiatedTimestamp]);onboardingInitiatedTimestamp=null}// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_-->
    <style scope="nearby-onboarding-page" include="cr-icons cr-shared-style">#center-content {
  align-items: center;
        box-sizing: border-box;
        display: flex;
        flex-grow: 1;
        justify-content: space-between;
        margin: 0 24px;
        overflow: hidden;
}

#splash-image-column {
  height: 200px;
        margin: 8px;
        width: 200px;
}

#device-name-column {
  display: flex;
        flex-direction: column;
        margin: 8px;
        position: relative;
        top: -12px;
        width: calc(50% - 16px);
}

#link-row {
  border: 1px solid lightgray;
        border-radius: 5px;
}

#deviceNameHelp {
  bottom: 8px;
        color: var(--google-grey-700);
        font-size: 10px;
        line-height: 10px;
        margin-inline-start: 8px;
        position: absolute;
}

#device-name-group {
  padding-inline-end: 10px;
        padding-inline-start: 10px;
}

</style>
    <nearby-page-template title="Set up Nearby Share" sub-title="Share files with Chromebooks and Android devices around you" action-button-label="Next" action-button-event-name="next" action-disabled="[[hasErrorMessage_(errorMessage)]]" cancel-button-label="Cancel" cancel-button-event-name="close">
      <div id="center-content" slot="content">
        <iron-icon id="splash-image-column" icon="nearby-images:nearby-onboarding-splash" aria-hidden="true">
        </iron-icon>
        <div id="device-name-column">
          <cr-input label="Device name" id="deviceName" value="[[settings.deviceName]]" on-input="onDeviceNameInput_" error-message="[[errorMessage]]" invalid="[[hasErrorMessage_(errorMessage)]]" aria-label="Device name
                  How your device appears to others">
          </cr-input>
          <!-- TODO(crbug.com/1155756) move this help text into cr-input -->
          <div id="deviceNameHelp" hidden="[[hasErrorMessage_(errorMessage)]]" aria-hidden="true">
            How your device appears to others
          </div>
        </div>
      </div>
    </nearby-page-template>
<!--_html_template_end_-->`,is:"nearby-onboarding-page",behaviors:[I18nBehavior],properties:{settings:{type:Object},errorMessage:{type:String,value:""}},listeners:{next:"onNext_",close:"onClose_",keydown:"onKeydown_","view-enter-start":"onViewEnterStart_"},onNext_(){this.submitDeviceNameInput_()},onClose_(){processOnboardingCancelledMetrics(NearbyShareOnboardingFinalState.DEVICE_NAME_PAGE);this.fire("onboarding-cancelled")},onKeydown_(e){e.stopPropagation();if(e.key==="Enter"){this.submitDeviceNameInput_();e.preventDefault()}},onViewEnterStart_(){this.$$("#deviceName").focus();processOnboardingInitiatedMetrics(new URL(document.URL))},onDeviceNameInput_(){getNearbyShareSettings().validateDeviceName(this.$.deviceName.value).then((result=>{this.updateErrorMessage_(result.result)}))},submitDeviceNameInput_(){getNearbyShareSettings().setDeviceName(this.$.deviceName.value).then((result=>{this.updateErrorMessage_(result.result);if(result.result===nearbyShare.mojom.DeviceNameValidationResult.kValid){this.fire("change-page",{page:"visibility"})}}))},updateErrorMessage_(validationResult){switch(validationResult){case nearbyShare.mojom.DeviceNameValidationResult.kErrorEmpty:this.errorMessage=this.i18n("nearbyShareDeviceNameEmptyError");break;case nearbyShare.mojom.DeviceNameValidationResult.kErrorTooLong:this.errorMessage=this.i18n("nearbyShareDeviceNameTooLongError");break;case nearbyShare.mojom.DeviceNameValidationResult.kErrorNotValidUtf8:this.errorMessage=this.i18n("nearbyShareDeviceNameInvalidCharactersError");break;default:this.errorMessage="";break}},hasErrorMessage_(errorMessage){return errorMessage!==""}});Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_-->
    <style scope="nearby-visibility-page" include="cr-icons cr-shared-style">#center-content {
  box-sizing: border-box;
        display: flex;
        flex-grow: 1;
        justify-content: center;
        margin-inline-end: 24px;
        margin-inline-start: 24px;
        overflow: hidden;
}

nearby-contact-visibility {
  width: 100%;
}

</style>
    <nearby-page-template title="Device visibility" sub-title="Select who can share with you" action-button-label="Confirm" action-button-event-name="next" action-disabled="[[!isVisibilitySelected_]]" cancel-button-label="Cancel" cancel-button-event-name="close" utility-button-label="Manage contacts" utility-button-open-in-new="true" utility-button-event-name="manage-contacts">
      <div id="center-content" slot="content">
        <nearby-contact-visibility id="contactVisibility" is-visibility-selected="{{isVisibilitySelected_}}" settings="{{settings}}">
        </nearby-contact-visibility>
      </div>
    </nearby-page-template>
<!--_html_template_end_-->`,is:"nearby-visibility-page",behaviors:[I18nBehavior],properties:{settings:{type:Object,notify:true},isVisibilitySelected_:{type:Boolean,notify:true}},listeners:{next:"onNext_","manage-contacts":"onManageContacts_",close:"onClose_"},onNext_(){const contactVisibility=this.$.contactVisibility;contactVisibility.saveVisibilityAndAllowedContacts();this.set("settings.enabled",true);processOnboardingCompleteMetrics();this.fire("onboarding-complete")},onClose_(){processOnboardingCancelledMetrics(NearbyShareOnboardingFinalState.VISIBILITY_PAGE);this.fire("onboarding-cancelled")},onManageContacts_(){window.open(this.i18n("nearbyShareManageContactsUrl"),"_blank")}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="nearby-share-contact-visibility-dialog">h1.title {
  color: var(--cr-primary-text-color);
        font-family: 'Google Sans';
        font-weight: normal;
        margin: 0;
        padding-block-end: 0;
        padding-block-start: 24px;
}

h2.header {
  color: var(--cr-secondary-text-color);
        font-size: inherit;
        font-weight: inherit;
        margin: 0;
        padding-block-end: 16px;
        padding-inline-start: 20px;
}

#manageContactsButton iron-icon {
  --iron-icon-fill-color: var(--text-color);
        margin-inline-end: 8px;
}

#flex {
  flex: 1;
}

</style>
    <cr-dialog id="dialog" show-on-attach="">
      <h1 slot="title" class="title">
        Device visibility
      </h1>
      <h2 slot="header" class="header">
        Select who can share with you
      </h2>
      <div slot="body">
        <nearby-contact-visibility id="contactVisibility" settings="{{settings}}">
        </nearby-contact-visibility>
      </div>
      <div class="layout horizontal center" slot="button-container">
        <cr-button id="manageContactsButton" on-click="onManageContactsClick_">
          <iron-icon icon="cr:open-in-new"></iron-icon>
          <span>Manage contacts</span>
        </cr-button>
        <div id="flex"></div>
        <cr-button class="action-button" on-click="onSaveClick_">
          Save
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"nearby-share-contact-visibility-dialog",properties:{settings:{type:Object,value:{}}},onSaveClick_(){const contactVisibility=this.$.contactVisibility;contactVisibility.saveVisibilityAndAllowedContacts();const dialog=this.$.dialog;if(dialog.open){dialog.close()}},onManageContactsClick_(){window.open(loadTimeData.getString("nearbyShareManageContactsUrl"))}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="nearby-share-device-name-dialog">:host {
  --cr-dialog-width: 340px;
}

h1 {
  color: var(--cr-primary-text-color);
        font-family: 'Google Sans';
        font-size: 16px;
        font-weight: normal;
        line-height: 24px;
        margin: 0;
        padding-block-end: 24px;
        padding-block-start: 24px;
}

</style>

    <cr-dialog id="dialog">
      <h1 slot="title">
        Change device name
      </h1>
      <div slot="body">
        <cr-input value="[[settings.deviceName]]" on-input="onDeviceNameInput_" error-message="[[errorMessage]]" invalid="[[hasErrorMessage_(errorMessage)]]" autofocus="">
        </cr-input>
      </div>
      <div class="layout horizontal center" slot="button-container">
        <cr-button class="cancel-button" on-click="onCancelClick_">
          Cancel
        </cr-button>
        <cr-button id="doneButton" class="action-button" on-click="onSaveClick_" disabled="[[hasErrorMessage_(errorMessage)]]">
          Rename
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"nearby-share-device-name-dialog",behaviors:[I18nBehavior],properties:{settings:{type:Object},errorMessage:{type:String,value:""}},attached(){this.open()},open(){const dialog=this.$.dialog;if(!dialog.open){dialog.showModal()}},close(){const dialog=this.$.dialog;if(dialog.open){dialog.close()}},onDeviceNameInput_(){getNearbyShareSettings().validateDeviceName(this.getEditInputValue_()).then((result=>{this.updateErrorMessage_(result.result)}))},onCancelClick_(){this.close()},onSaveClick_(){getNearbyShareSettings().setDeviceName(this.getEditInputValue_()).then((result=>{this.updateErrorMessage_(result.result);if(result.result===nearbyShare.mojom.DeviceNameValidationResult.kValid){this.close()}}))},updateErrorMessage_(validationResult){switch(validationResult){case nearbyShare.mojom.DeviceNameValidationResult.kErrorEmpty:this.errorMessage=this.i18n("nearbyShareDeviceNameEmptyError");break;case nearbyShare.mojom.DeviceNameValidationResult.kErrorTooLong:this.errorMessage=this.i18n("nearbyShareDeviceNameTooLongError");break;case nearbyShare.mojom.DeviceNameValidationResult.kErrorNotValidUtf8:this.errorMessage=this.i18n("nearbyShareDeviceNameInvalidCharactersError");break;default:this.errorMessage="";break}},getEditInputValue_(){return this.$$("cr-input").value},hasErrorMessage_(errorMessage){return errorMessage!==""}});// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const NearbyShareDataUsage={UNKNOWN:0,OFFLINE:1,ONLINE:2,WIFI_ONLY:3};function dataUsageStringToEnum(s){switch(parseInt(s,10)){case NearbyShareDataUsage.OFFLINE:return NearbyShareDataUsage.OFFLINE;case NearbyShareDataUsage.ONLINE:return NearbyShareDataUsage.ONLINE;case NearbyShareDataUsage.WIFI_ONLY:return NearbyShareDataUsage.WIFI_ONLY;default:return NearbyShareDataUsage.UNKNOWN}}// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="nearby-share-data-usage-dialog">:host {
  --cr-dialog-width: 340px;
}

h1 {
  color: var(--cr-primary-text-color);
        font-family: 'Google Sans';
        font-size: 16px;
        font-weight: normal;
        line-height: 24px;
        margin: 0;
        padding-block-end: 0;
        padding-block-start: 24px;
}

cr-radio-group {
  margin-block-end: 12px;
        margin-inline-start: 2px;
}

.data-usage-name {
  font-weight: 600;
        padding-block-start: 20px;
}

#dataUsageDataIcon {
  --iron-icon-fill-color: var(--google-grey-600);
        height: 16px;
        padding-bottom: 2px;
        width: 16px;
}

#dataUsageDataTooltip {
  --paper-tooltip-background: var(--google-grey-900);
        --paper-tooltip-opacity: 0.8;
        --paper-tooltip_-_margin-inline-end:  6px; --paper-tooltip_-_border-radius: initial; --paper-tooltip_-_font-size: initial; --paper-tooltip_-_font-weight: initial; --paper-tooltip_-_max-width: initial; --paper-tooltip_-_min-width: initial; --paper-tooltip_-_padding: initial;;
}

#dataUsageDataTooltipText {
  font-size: 12px;
        font-weight: normal;
        line-height: 18px;
}

</style>
    <cr-dialog id="dialog">
      <h1 slot="title">
        Data usage
      </h1>
      <div slot="body">
        <cr-radio-group selected="[[selectedDataUsage_(
            prefs.nearby_sharing.data_usage.value)]]">
          <cr-radio-button id="dataUsageDataButton" name="[[NearbyShareDataUsage.ONLINE]]" aria-labelledby="dataUsageDataLabel" aria-describedby="dataUsageDataDescription
                  dataUsageDataTooltipText">
            <div id="dataUsageDataLabel" class="data-usage-name" aria-hidden="true">
              Mobile Data
              <iron-icon id="dataUsageDataIcon" icon="cr:info-outline" aria-hidden="true">
              </iron-icon>
              <paper-tooltip id="dataUsageDataTooltip" for="dataUsageDataIcon" offset="8" position="right" fit-to-visible-bounds="">
                <span id="dataUsageDataTooltipText">
                  This option applies to Chromebooks with a data plan or mobile network dongle, or when tethering to a portable hotspot
                </span>
              </paper-tooltip>
            </div>
            <div id="dataUsageDataDescription" aria-hidden="true">
              May incur mobile data charges
            </div>
          </cr-radio-button>
          <cr-radio-button id="dataUsageWifiOnlyButton" name="[[NearbyShareDataUsage.WIFI_ONLY]]" aria-labelledby="dataUsageWifiOnlyLabel" aria-describedby="dataUsageWifiOnlyDescription">
            <div id="dataUsageWifiOnlyLabel" class="data-usage-name" aria-hidden="true">
              Wi-Fi only
            </div>
            <div id="dataUsageWifiOnlyDescription" aria-hidden="true">
              Never use mobile data to transfer
            </div>
          </cr-radio-button>
          <cr-radio-button id="dataUsageOfflineButton" name="[[NearbyShareDataUsage.OFFLINE]]" aria-labelledby="dataUsageOfflineLabel" aria-describedby="dataUsageOfflineDescription">
            <div id="dataUsageOfflineLabel" class="data-usage-name" aria-hidden="true">
              Without internet
            </div>
            <div id="dataUsageOfflineDescription" aria-hidden="true">
              Files will always be shared offline
            </div>
          </cr-radio-button>
        </cr-radio-group>
      </div>
      <div class="layout horizontal center" slot="button-container">
        <cr-button class="cancel-button" on-click="onCancelClick_">
          Cancel
        </cr-button>
        <cr-button class="action-button" on-click="onSaveClick_">
          Save
        </cr-button>
    
<!--_html_template_end_--></div></cr-dialog>`,is:"nearby-share-data-usage-dialog",behaviors:[I18nBehavior,PrefsBehavior],properties:{prefs:{type:Object,notify:true},NearbyShareDataUsage:{type:Object,value:NearbyShareDataUsage}},attached(){const dialog=this.$.dialog;if(!dialog.open){dialog.showModal()}},close(){const dialog=this.$.dialog;if(dialog.open){dialog.close()}},onCancelClick_(){this.close()},onSaveClick_(){this.setPrefValue("nearby_sharing.data_usage",dataUsageStringToEnum(this.$$("cr-radio-group").selected));this.close()},selectedDataUsage_(dataUsageValue){if(dataUsageValue===NearbyShareDataUsage.UNKNOWN){return NearbyShareDataUsage.WIFI_ONLY}return dataUsageValue}});// Copyright 2018 The Chromium Authors. All rights reserved.
function whenFinished(animation){return new Promise((function(resolve,reject){animation.addEventListener("finish",resolve)}))}const viewAnimations=new Map;viewAnimations.set("no-animation",(()=>Promise.resolve()));viewAnimations.set("fade-in",(element=>{const animation=element.animate([{opacity:0},{opacity:1}],{duration:180,easing:"ease-in-out",iterations:1});return whenFinished(animation)}));viewAnimations.set("fade-out",(element=>{const animation=element.animate([{opacity:1},{opacity:0}],{duration:180,easing:"ease-in-out",iterations:1});return whenFinished(animation)}));Polymer({is:"cr-view-manager",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="cr-view-manager">:host ::slotted([slot=view]) {
  bottom: 0;
        display: none;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
}

:host ::slotted(.active), :host ::slotted(.closing) {
  display: block;
}

</style>
    <slot name="view"></slot>
<!--_html_template_end_-->`,exit_(element,animation){const animationFunction=viewAnimations.get(animation);assert(animationFunction);element.classList.remove("active");element.classList.add("closing");element.dispatchEvent(new CustomEvent("view-exit-start",{bubbles:true,composed:true}));return animationFunction(element).then((function(){element.classList.remove("closing");element.dispatchEvent(new CustomEvent("view-exit-finish",{bubbles:true,composed:true}))}))},enter_(view,animation){const animationFunction=viewAnimations.get(animation);assert(animationFunction);const effectiveView=view.matches("cr-lazy-render")?view.get():view;effectiveView.classList.add("active");effectiveView.dispatchEvent(new CustomEvent("view-enter-start",{bubbles:true,composed:true}));return animationFunction(effectiveView).then((()=>{effectiveView.dispatchEvent(new CustomEvent("view-enter-finish",{bubbles:true,composed:true}))}))},switchView(newViewId,enterAnimation,exitAnimation){const previousView=this.querySelector(".active");const newView=assert(this.querySelector("#"+newViewId));const promises=[];if(previousView){promises.push(this.exit_(previousView,exitAnimation||"fade-out"));promises.push(this.enter_(newView,enterAnimation||"fade-in"))}else{promises.push(this.enter_(newView,"no-animation"))}return Promise.all(promises)}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="nearby-device-icon">:host {
  background-color: var(--nearby-device-icon-background-color,
                              var(--google-blue-50));
        border-radius: 50%;
        display: flex;
}

#icon {
  --iron-icon-fill-color: var(--nearby-device-icon-color,
                                    var(--google-blue-600));
        height: var(--nearby-device-icon-size, 24px);
        margin: auto;
        width: var(--nearby-device-icon-size, 24px);
}

</style>

    <iron-icon id="icon" icon="[[getShareTargetIcon_(shareTarget)]]">
    </iron-icon>
<!--_html_template_end_-->`,is:"nearby-device-icon",properties:{shareTarget:{type:Object,value:null}},getShareTargetIcon_(){if(!this.shareTarget){return"nearby-share:laptop"}switch(this.shareTarget.type){case nearbyShare.mojom.ShareTargetType.kPhone:return"nearby-share:smartphone";case nearbyShare.mojom.ShareTargetType.kTablet:return"nearby-share:tablet";case nearbyShare.mojom.ShareTargetType.kLaptop:return"nearby-share:laptop";default:return"nearby-share:laptop"}}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="nearby-device">#wrapper {
  align-items: center;
        background-color: rgb(255, 255, 255);
        border: 1px solid rgba(216, 216, 216, 0.76);
        border-radius: 8px;
        box-sizing: border-box;
        cursor: pointer;
        display: flex;
        height: 40px;
        margin-block-end: 6px;
        padding-block-end: 6px;
        padding-block-start: 6px;
        padding-inline-end: 9px;
        padding-inline-start: 9px;
}

:host(:focus) {
  outline: none;
}

:host(:focus) #wrapper {
  border-color: var(--google-grey-refresh-700);
}

:host([is-selected]) #wrapper {
  border-color: var(--google-blue-refresh-500);
}

:host([is-selected]) #done {
  display: flex;
}

:host([is-selected]) #name {
  color: var(--google-blue-600);
}

#done {
  color: var(--google-blue-600);
        display: none;
        flex-shrink: 0;
        height: 17px;
        width: 17px;
}

#icon {
  --nearby-device-icon-size: 15px;
        flex-shrink: 0;
        height: 26px;
        width: 26px;
}

#name {
  color: rgb(95, 99, 104);
        flex-grow: 1;
        font-size: 11px;
        font-weight: 500;
        letter-spacing: 0.3px;
        margin-inline-start: 11px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
}

</style>

    <div id="wrapper" title="[[shareTarget.name]]">
      <nearby-device-icon id="icon" share-target="[[shareTarget]]">
      </nearby-device-icon>
      <div id="name">[[shareTarget.name]]</div>
      <iron-icon id="done" icon="nearby-share:done"></iron-icon>
    </div>
<!--_html_template_end_-->`,is:"nearby-device",properties:{shareTarget:{type:Object,value:null},isSelected:{type:Boolean,reflectToAttribute:true}}});const template$7=html`<iron-iconset-svg name="nearbysharetype68" size="68">
  <svg>
    <defs>
      <!--
      Keep these in sorted order by id="". See also http://goo.gl/Y1OdAq
      -->
      <g id="address">
        <circle cx="34" cy="34" r="34" style="fill: var(--nearby-preview-background-color, var(--google-blue-50))"></circle>
        <path fill-rule="evenodd" transform="translate(22 22)" d="M12 2C8.13 2 5 5.13 5 9C5 14.25 12 22 12 22C12 22 19 14.25 19 9C19 5.13 15.87 2 12 2ZM7 9C7 6.24 9.24 4 12 4C14.76 4 17 6.24 17 9C17 11.88 14.12 16.19 12 18.88C9.92 16.21 7 11.85 7 9ZM14.5 9C14.5 10.3807 13.3807 11.5 12 11.5C10.6193 11.5 9.5 10.3807 9.5 9C9.5 7.61929 10.6193 6.5 12 6.5C13.3807 6.5 14.5 7.61929 14.5 9Z" style="fill: var(--nearby-preview-color, var(--google-blue-600))"></path>
      </g>
      <g id="audio-file">
        <circle cx="34" cy="34" r="34" style="fill: var(--nearby-preview-background-color, var(--google-blue-50))"></circle>
        <path fill-rule="evenodd" transform="translate(22 22)" d="M6 8C7.1 8 8 8.9 8 10V14C8 15.1 7.1 16 6 16C4.9 16 4 15.1 4 14V10C4 8.9 4.9 8 6 8ZM16 10V14C16 15.1 16.9 16 18 16C19.1 16 20 15.1 20 14V10C20 8.9 19.1 8 18 8C16.9 8 16 8.9 16 10ZM10 6V18C10 19.1 10.9 20 12 20C13.1 20 14 19.1 14 18V6C14 4.9 13.1 4 12 4C10.9 4 10 4.9 10 6Z" style="fill: var(--nearby-preview-color, var(--google-blue-600))"></path>
      </g>
      <g id="google-docs-file">
        <circle cx="34" cy="34" r="34" style="fill: var(--nearby-preview-background-color, var(--google-blue-50))"></circle>
        <path fill-rule="evenodd" transform="translate(22 22)" d="M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3V3ZM17.01 9H7V7H17.01V9V9ZM17.01 13H7V11H17.01V13V13ZM14.01 17H7V15H14.01V17V17Z" style="fill: var(--nearby-preview-color, var(--google-blue-600))"></path>
      </g>
      <g id="google-sheets-file">
        <circle cx="34" cy="34" r="34" style="fill: var(--nearby-preview-background-color, rgb(230, 244, 234))"></circle>
        <path fill-rule="evenodd" transform="translate(22 22)" d="M19 3H5C3.9 3 3.01 3.9 3.01 5L3 8V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3V3ZM19 11H11V19H9V11H5V9H9V5H11V9H19V11V11Z" style="fill: var(--nearby-preview-color, rgb(30, 142, 162))"></path>
      </g>
      <g id="google-slides-file">
        <circle cx="34" cy="34" r="34" style="fill: var(--nearby-preview-background-color, var(--google-yellow-50))"></circle>
        <path fill-rule="evenodd" transform="translate(22 22)" d="M18.9998 3H4.99977C3.89977 3 3.00977 3.9 3.00977 5V19C3.00977 20.1 3.89977 21 4.99977 21H18.9998C20.0998 21 20.9998 20.1 20.9998 19V5C20.9998 3.9 20.0998 3 18.9998 3V3ZM18.9998 16H4.99977V8H18.9998V16V16Z" style="fill: var(--nearby-preview-color, rgb(249, 171, 0))"></path>
      </g>
      <g id="image-video-file">
        <rect x="5" height="68" width="58" rx="4" style="fill: var(--nearby-preview-background-color, var(--google-blue-50))"></rect>
        <path transform="translate(16 16)" fill-rule="evenodd" d="M14 8v6a9 9 0 1 0 10 11h7v-17zm10 17a9 9 0 0 0 -10 -11v11h10z" style="fill: var(--nearby-preview-color, var(--google-blue-200))"></path>
      </g>
      <g id="multiple-file">
        <circle cx="34" cy="34" r="34" style="fill: var(--nearby-preview-background-color, var(--google-blue-50))"></circle>
        <path fill-rule="evenodd" transform="translate(22 22)" d="M15 1H8C6.9 1 6.01 1.9 6.01 3L6 17C6 18.1 6.89 19 7.99 19H19C20.1 19 21 18.1 21 17V7L15 1ZM18 23H4C2.9 23 2 22.1 2 21V7H4V21H18V23ZM8 3V17H19V8H14V3H8Z" style="fill: var(--nearby-preview-color, var(--google-blue-600))"></path>
      </g>
      <g id="pdf-file">
        <circle cx="34" cy="34" r="34" style="fill: var(--nearby-preview-background-color, rgb(252, 232, 230))"></circle>
        <path fill-rule="evenodd" transform="translate(22 22)" d="M5 3H19C20.1 3 21 3.9 21 5V19C21 20.1 20.1 21 19 21H5C3.9 21 3 20.1 3 19V5C3 3.9 3.9 3 5 3ZM8 11.5H7V10.5H8V11.5ZM9.5 11.5C9.5 12.33 8.83 13 8 13H7V15H5.5V9H8C8.83 9 9.5 9.67 9.5 10.5V11.5ZM17 10.5H19.5V9H15.5V15H17V13H18.5V11.5H17V10.5ZM14.5 13.5C14.5 14.33 13.83 15 13 15H10.5V9H13C13.83 9 14.5 9.67 14.5 10.5V13.5ZM13 13.5H12V10.5H13V13.5Z" style="fill: var(--nearby-preview-color, var(--google-red-600))"></path>
      </g>
      <g id="phone">
        <circle cx="34" cy="34" r="34" style="fill: var(--nearby-preview-background-color, var(--google-blue-50))"></circle>
        <path fill-rule="evenodd" transform="translate(22 22)" d="M17 1H7C5.9 1 5 1.9 5 3V21C5 22.1 5.9 23 7 23H17C18.1 23 19 22.1 19 21V3C19 1.9 18.1 1 17 1ZM7 6H17V16H7V6ZM7 21H17V18H7V21ZM7 4V3H17V4H7ZM14 19H10V20H14V19Z" style="fill: var(--nearby-preview-color, var(--google-blue-600))"></path>
      </g>
      <g id="text">
        <circle cx="34" cy="34" r="34" style="fill: var(--nearby-preview-background-color, var(--google-blue-50))"></circle>
        <path fill-rule="evenodd" transform="translate(22 22)" d="M3.59961 6H20.3996V8.4H3.59961V6ZM3.59961 10.8H20.3996V13.2H3.59961V10.8ZM13.1996 15.6H3.59961V18H13.1996V15.6Z" style="fill: var(--nearby-preview-color, var(--google-blue-600))"></path>
      </g>
      <g id="unknown-file">
        <circle cx="34" cy="34" r="34" style="fill: var(--nearby-preview-background-color, var(--google-blue-50))"></circle>
        <path fill-rule="evenodd" transform="translate(22 22)" d="M6 2H14L20 8V20C20 21.1 19.1 22 18 22H5.99C4.89 22 4 21.1 4 20L4.01 4C4.01 2.9 4.9 2 6 2ZM6 4V20H18V9H13V4H6Z" style="fill: var(--nearby-preview-color, var(--google-blue-600))"></path>
      </g>
      <g id="url">
        <circle cx="34" cy="34" r="34" style="fill: var(--nearby-preview-background-color, var(--google-blue-50))"></circle>
        <path fill-rule="evenodd" transform="translate(22 22)" d="M11 15H7C5.35 15 4 13.65 4 12C4 10.35 5.35 9 7 9H11V7H7C4.24 7 2 9.24 2 12C2 14.76 4.24 17 7 17H11V15ZM17 7H13V9H17C18.65 9 20 10.35 20 12C20 13.65 18.65 15 17 15H13V17H17C19.76 17 22 14.76 22 12C22 9.24 19.76 7 17 7ZM16 11H8V13H16V11Z" style="fill: var(--nearby-preview-color, var(--google-blue-600))"></path>
      </g>
    </defs>
  </svg>
</iron-iconset-svg>
`;document.head.appendChild(template$7.content);// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="nearby-preview">iron-icon {
  display: block;
        height: 68px;
        margin: 12px auto 24px auto;
        width: 68px;
}

iron-icon.disabled {
  --nearby-preview-color: var(--google-grey-600);
        --nearby-preview-background-color: var(--google-grey-200);
}

#title {
  color: var(--google-grey-900);
        font-size: 13px;
        height: 60px;
        letter-spacing: 0.2px;
        line-height: 20px;
        overflow: hidden;
        overflow-wrap: break-word;
        text-align: center;
        width: 116px;
}

</style>

    <iron-icon class$="[[getIconClass_(disabled)]]" icon="[[getIronIconName_(payloadPreview)]]">
    </iron-icon>
    <div id="title">[[getTitle_(payloadPreview)]]</div>
<!--_html_template_end_-->`,is:"nearby-preview",behaviors:[I18nBehavior],properties:{payloadPreview:{type:Object,value:null},disabled:{type:Boolean,value:false}},getTitle_(){if(!this.payloadPreview){return""}if(this.payloadPreview.fileCount&&this.payloadPreview.fileCount>1){return this.i18n("nearbySharePreviewMultipleFileTitle",this.payloadPreview.fileCount)}else if(this.payloadPreview.description){return this.payloadPreview.description}else{return""}},getIronIconName_(){if(!this.payloadPreview||this.payloadPreview.shareType===null||this.payloadPreview.shareType===undefined){return""}switch(this.payloadPreview.shareType){case nearbyShare.mojom.ShareType.kUnknownFile:return"nearbysharetype68:unknown-file";case nearbyShare.mojom.ShareType.kMultipleFiles:return"nearbysharetype68:multiple-file";case nearbyShare.mojom.ShareType.kImageFile:case nearbyShare.mojom.ShareType.kVideoFile:return"nearbysharetype68:image-video-file";case nearbyShare.mojom.ShareType.kAudioFile:return"nearbysharetype68:audio-file";case nearbyShare.mojom.ShareType.kPdfFile:return"nearbysharetype68:pdf-file";case nearbyShare.mojom.ShareType.kGoogleDocsFile:return"nearbysharetype68:google-docs-file";case nearbyShare.mojom.ShareType.kGoogleSheetsFile:return"nearbysharetype68:google-sheets-file";case nearbyShare.mojom.ShareType.kGoogleSlidesFile:return"nearbysharetype68:google-slides-file";case nearbyShare.mojom.ShareType.kText:return"nearbysharetype68:text";case nearbyShare.mojom.ShareType.kUrl:return"nearbysharetype68:url";case nearbyShare.mojom.ShareType.kAddress:return"nearbysharetype68:address";case nearbyShare.mojom.ShareType.kPhone:return"nearbysharetype68:phone";default:assertNotReached$1("No icon defined for share type "+this.payloadPreview.shareType);return"nearbysharetype68:unknown-file"}},getIconClass_(){if(this.disabled){return"disabled"}return""}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="nearby-progress">#device-name {
  -webkit-box-orient: vertical;
        color: rgba(0, 0, 0, 0.87);
        display: -webkit-box;
        letter-spacing: 0.25px;
        line-height: 154%;
        overflow: hidden;
        overflow-wrap: break-word;
        text-align: center;
        width: 116px;
}

#icon {
  height: 68px;
        margin: auto;
        width: 68px;
}

.has-error #icon {
  --nearby-device-icon-color: var(--google-grey-600);
        --nearby-device-icon-background-color: var(--google-grey-200);
}

#progress-container {
  display: flex;
        height: 76px;
        margin: 8px auto 20px auto;
        position: relative;
        width: 76px;
}

#wheel {
  fill: none;
        stroke: var(--google-blue-600);
        stroke-dasharray: 100;
        stroke-dashoffset: calc(100 - var(--progress-percentage, 0));
        stroke-linecap: round;
        stroke-width: 2px;
        transform: rotate(-90deg);
        transform-origin: 50% 50%;
        transition: stroke-dashoffset 400ms ease;
}

.indeterminate-progress #wheel {
  animation: 1.4s ease-in-out infinite both
            indeterminate-progress-animation;
        stroke-dasharray: 116;
}

.has-error #wheel {
  animation: none;
        stroke: var(--google-red-600);
        stroke-dashoffset: 0;
}

#svg {
  left: 0;
        position: absolute;
        top: 0;
}

.indeterminate-progress #svg {
  animation: 2s linear infinite svg-animation;
}

.has-error #svg {
  animation: none;
}

.hidden #svg {
  display: none;
}

@keyframes indeterminate-progress-animation {
0%, 25% {
  stroke-dashoffset: 115;
          transform: rotate(0);
}

50%, 75% {
  stroke-dashoffset: 30;
          transform: rotate(45deg);
}

100% {
  stroke-dashoffset: 115;
          transform: rotate(360deg);
}

}

@keyframes svg-animation {
0% {
  transform: rotateZ(0deg);
}

100% {
  transform: rotateZ(360deg);
}

}

</style>

    <div id="progress-container" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow$="[[progress]]" tabindex$="[[getProgressBarTabIndex_(progress)]]" class$="[[getProgressWheelClass_(progress, hasError)]]">
      <!-- This svg is inlined so that it can be styled with css; otherwise,
          it would be better to put it in an iron-icon. -->
      <svg id="svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 80">
        <circle id="wheel" cx="40" cy="40" r="39" pathLength="100">
        </circle>
      </svg>
      <nearby-device-icon id="icon" share-target="[[shareTarget]]">
      </nearby-device-icon>
    </div>
    <div id="device-name" aria-label="Device name">
      [[shareTarget.name]]
    </div>
<!--_html_template_end_-->`,is:"nearby-progress",properties:{shareTarget:{type:Object,value:null},showIndeterminateProgress:{type:Boolean,value:false},progressPercentage:{type:Number,value:0,observer:"updateProgress_"},hasError:{type:Boolean,value:false}},getProgressWheelClass_(){const classes=[];if(this.hasError){classes.push("has-error")}if(this.showIndeterminateProgress){classes.push("indeterminate-progress")}else if(!this.progressPercentage){classes.push("hidden")}return classes.join(" ")},updateProgress_(value){this.updateStyles({"--progress-percentage":value})},getProgressBarTabIndex_(){if(this.showIndeterminateProgress&&!this.hasError){return 0}return-1}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="nearby-share-confirm-page">#centerContent {
  box-sizing: border-box;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        margin: 0 24px;
}

#connectionToken {
  border-top: 1px dashed var(--google-grey-600);
        color: var(--google-grey-600);
        flex-grow: 1;
        font-size: 9px;
        letter-spacing: 0.3px;
        line-height: 12px;
        margin-top: 46px;
        padding-top: 6px;
        text-align: center;
}

#processRow {
  display: flex;
        flex-grow: 1;
}

#processRowContent {
  align-self: center;
        display: flex;
        flex-grow: 1;
        margin: 24px 8px;
}

#errorSection {
  align-items: flex-start;
        display: flex;
        flex-direction: row;
        padding: 8px;
}

#error {
  align-items: flex-start;
        display: flex;
        flex-direction: column;
        font-size: 12px;
}

#errorTitle {
  color: var(--google-red-600);
        font-weight: bold;
        margin-bottom: 3px;
}

#errorDescription {
  color: var(--google-grey-refresh-700);
        line-height: 13px;
}

#errorIcon {
  fill: var(--google-red-600);
        flex-shrink: 0;
        height: 20px;
        margin-inline-end: 12px;
        width: 20px;
}

</style>
    <nearby-page-template title="Receive from this device?" action-button-label="Accept" action-button-event-name="accept" cancel-button-label="Decline" cancel-button-event-name="reject" close-only="[[errorTitle_]]">
      <div id="centerContent" slot="content">
        <div id="processRow">
          <div id="processRowContent">
            <nearby-progress id="progressIcon" share-target="[[shareTarget]]" has-error="[[errorTitle_]]">
            </nearby-progress>
            <div id="connectionToken" aria-live="polite">
              <template is="dom-if" if="[[connectionToken]]">
                [[i18n('nearbyShareSecureConnectionId', connectionToken)]]
              </template>
            </div>
            <nearby-preview payload-preview="[[shareTarget.payloadPreview]]" disabled="[[errorTitle_]]">
            </nearby-preview>
          </div>
        </div>

        <!-- TODO(crbug.com/1149546) factor error section out -->
        <template is="dom-if" if="[[errorTitle_]]" restamp="">
          <div id="errorSection">
            <iron-icon id="errorIcon" icon="nearby20:info"></iron-icon>
            <div id="error" role="alert" aria-labelledby="errorTitle" aria-describedby="errorDescription">
              <div id="errorTitle" aria-hidden="true">[[errorTitle_]]</div>
              <div id="errorDescription" aria-hidden="true">
                [[errorDescription_]]
              </div>
            </div>
          </div>
        </template>
      </div>
    </nearby-page-template>
<!--_html_template_end_-->`,is:"nearby-share-confirm-page",behaviors:[I18nBehavior],properties:{shareTarget:{type:Object,value:null},connectionToken:{type:String,value:null},transferStatus:{type:nearbyShare.mojom.TransferStatus,value:null,observer:"onTransferStatusChanged_"},errorTitle_:{type:String,value:null},errorDescription_:{type:String,value:null}},onTransferStatusChanged_(newStatus){switch(newStatus){case nearbyShare.mojom.TransferStatus.kTimedOut:this.errorTitle_=this.i18n("nearbyShareErrorTimeOut");this.errorDescription_=this.i18n("nearbyShareErrorTryAgain");break;case nearbyShare.mojom.TransferStatus.kUnsupportedAttachmentType:this.errorTitle_=this.i18n("nearbyShareErrorCantReceive");this.errorDescription_=this.i18n("nearbyShareErrorUnsupportedFileType");break;case nearbyShare.mojom.TransferStatus.kNotEnoughSpace:this.errorTitle_=this.i18n("nearbyShareErrorCantReceive");this.errorDescription_=this.i18n("nearbyShareErrorNotEnoughSpace");break;case nearbyShare.mojom.TransferStatus.kCancelled:this.errorTitle_=this.i18n("nearbyShareErrorCantReceive");this.errorDescription_=this.i18n("nearbyShareErrorCancelled");break;case nearbyShare.mojom.TransferStatus.kFailed:case nearbyShare.mojom.TransferStatus.kMediaUnavailable:case nearbyShare.mojom.TransferStatus.kAwaitingRemoteAcceptanceFailed:case nearbyShare.mojom.TransferStatus.kDecodeAdvertisementFailed:case nearbyShare.mojom.TransferStatus.kMissingTransferUpdateCallback:case nearbyShare.mojom.TransferStatus.kMissingShareTarget:case nearbyShare.mojom.TransferStatus.kMissingEndpointId:case nearbyShare.mojom.TransferStatus.kMissingPayloads:case nearbyShare.mojom.TransferStatus.kPairedKeyVerificationFailed:case nearbyShare.mojom.TransferStatus.kInvalidIntroductionFrame:case nearbyShare.mojom.TransferStatus.kIncompletePayloads:case nearbyShare.mojom.TransferStatus.kFailedToCreateShareTarget:case nearbyShare.mojom.TransferStatus.kFailedToInitiateOutgoingConnection:case nearbyShare.mojom.TransferStatus.kFailedToReadOutgoingConnectionResponse:case nearbyShare.mojom.TransferStatus.kUnexpectedDisconnection:this.errorTitle_=this.i18n("nearbyShareErrorCantReceive");this.errorDescription_=this.i18n("nearbyShareErrorSomethingWrong");break;default:this.errorTitle_=null;this.errorDescription_=null}},getConnectionTokenString_(){return this.connectionToken?this.i18n("nearbyShareReceiveConfirmPageConnectionId",this.connectionToken):""}});
/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/const IronA11yAnnouncer=Polymer({_template:html`<!--css-build:shadow--><style scope="iron-a11y-announcer">:host {
  display: inline-block;
        position: fixed;
        clip: rect(0px,0px,0px,0px);
}

</style>
    <div aria-live$="[[mode]]">[[_text]]</div>
`,is:"iron-a11y-announcer",properties:{mode:{type:String,value:"polite"},timeout:{type:Number,value:150},_text:{type:String,value:""}},created:function(){if(!IronA11yAnnouncer.instance){IronA11yAnnouncer.instance=this}document.addEventListener("iron-announce",this._onIronAnnounce.bind(this))},announce:function(text){this._text="";this.async((function(){this._text=text}),this.timeout)},_onIronAnnounce:function(event){if(event.detail&&event.detail.text){this.announce(event.detail.text)}}});IronA11yAnnouncer.instance=null;IronA11yAnnouncer.requestAvailability=function(){if(!IronA11yAnnouncer.instance){IronA11yAnnouncer.instance=document.createElement("iron-a11y-announcer")}if(document.body){document.body.appendChild(IronA11yAnnouncer.instance)}else{document.addEventListener("load",(function(){document.body.appendChild(IronA11yAnnouncer.instance)}))}};// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const NearbyVisibilityErrorState={TIMED_OUT:0,NO_CONNECTION_MEDIUM:1,TRANSFER_IN_PROGRESS:2,SOMETHING_WRONG:3};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="nearby-share-high-visibility-page">#content {
  background: linear-gradient(to top, var(--google-blue-50) 5%,
            rgba(255, 255, 255, 0) 50%);
        display: flex;
        flex-direction: column-reverse;
        height: 100%;
        position: relative;
        width: 100%;
}

#help {
  align-items: flex-start;
        color: var(--google-gray-500);
        display: flex;
        flex-direction: row;
        font-size: 9px;
        line-height: 12px;
        margin-inline-end: 24px;
        margin-inline-start: 24px;
        padding: 8px;
}

#helpText {
  margin: auto 0;
}

#infoIcon {
  flex-shrink: 0;
        height: 20px;
        margin-inline-end: 12px;
        width: 20px;
}

.icon-error-state {
  fill: var(--google-red-600);
}

#error {
  align-items: flex-start;
        display: flex;
        flex-direction: column;
        font-size: 12px;
}

#errorTitle {
  color: var(--google-red-600);
        font-weight: bold;
        margin-bottom: 3px;
}

#errorDescription {
  color: var(--google-grey-700);
        line-height: 13px;
}

cr-lottie {
  bottom: 0;
        height: 100px;
        left: 0;
        pointer-events: none;
        position: absolute;
        right: 0;
}

</style>
    <nearby-page-template title="Nearby Share" sub-title="[[getSubTitle_(deviceName, remainingTimeInSeconds_)]]" a11y-announced-sub-title="[[getA11yAnnouncedSubTitle_(deviceName,
                                  remainingTimeInSeconds_)]]" cancel-button-label="Cancel" close-only="[[getErrorTitle_(errorState_)]]">
      <div id="content" slot="content">
        <cr-lottie animation-url="nearby_share_pulse_animation.json" autoplay="true">
        </cr-lottie>
        <div id="help">
          <template is="dom-if" if="[[!getErrorTitle_(errorState_)]]">
            <iron-icon id="infoIcon" icon="nearby20:info"></iron-icon>
            <div id="helpText">
              <settings-localized-link localized-string="Make sure both devices are unlocked, close together, and have Bluetooth turned on. &lt;a&gt;Learn more&lt;/a&gt;" link-url="https://support.google.com/chromebook?p=nearby_share">
              </settings-localized-link>
            </div>
          </template>
          <template is="dom-if" if="[[getErrorTitle_(errorState_)]]">
            <iron-icon id="infoIcon" icon="nearby20:info" class="icon-error-state">
            </iron-icon>
            <div id="error" role="alert" aria-labelledby="errorTitle" aria-describedby="errorDescription">
              <div id="errorTitle" aria-hidden="true">
                [[getErrorTitle_(errorState_)]]
              </div>
              <div id="errorDescription" aria-hidden="true">
                <settings-localized-link localized-string="[[getErrorDescription_(errorState_)]]" link-url="https://support.google.com/chromebook?p=nearby_share">
                </settings-localized-link>
              </div>
            </div>
          </template>
        </div>
      </div>
    </nearby-page-template>
<!--_html_template_end_-->`,is:"nearby-share-high-visibility-page",behaviors:[I18nBehavior],properties:{deviceName:{notify:true,type:String,value:"DEVICE_NAME_NOT_SET"},shutoffTimestamp:{type:Number,value:0},remainingTimeInSeconds_:{type:Number,value:-1},registerResult:{type:nearbyShare.mojom.RegisterReceiveSurfaceResult,value:null},nearbyProcessStopped:{type:Boolean,value:false},startAdvertisingFailed:{type:Boolean,value:false},errorState_:{type:Number,value:null,computed:"computeErrorState_(shutoffTimestamp, remainingTimeInSeconds_,"+"registerResult, nearbyProcessStopped, startAdvertisingFailed)"}},remainingTimeIntervalId_:-1,attached(){this.calculateRemainingTime_();this.remainingTimeIntervalId_=setInterval((()=>{this.calculateRemainingTime_()}),1e3)},detached(){if(this.remainingTimeIntervalId_!==-1){clearInterval(this.remainingTimeIntervalId_);this.remainingTimeIntervalId_=-1}},calculateRemainingTime_(){if(this.shutoffTimestamp===0){return}const now=performance.now();const remainingTimeInMs=this.shutoffTimestamp>now?this.shutoffTimestamp-now:0;this.remainingTimeInSeconds_=Math.ceil(remainingTimeInMs/1e3)},highVisibilityTimedOut_(){return this.remainingTimeInSeconds_===0&&this.shutoffTimestamp!==0},computeErrorState_(){if(this.registerResult===nearbyShare.mojom.RegisterReceiveSurfaceResult.kNoConnectionMedium){return NearbyVisibilityErrorState.NO_CONNECTION_MEDIUM}if(this.registerResult===nearbyShare.mojom.RegisterReceiveSurfaceResult.kTransferInProgress){return NearbyVisibilityErrorState.TRANSFER_IN_PROGRESS}if(this.highVisibilityTimedOut_()){return NearbyVisibilityErrorState.TIMED_OUT}if(this.registerResult===nearbyShare.mojom.RegisterReceiveSurfaceResult.kFailure||this.nearbyProcessStopped||this.startAdvertisingFailed){return NearbyVisibilityErrorState.SOMETHING_WRONG}return null},getErrorTitle_(){switch(this.errorState_){case NearbyVisibilityErrorState.TIMED_OUT:return this.i18n("nearbyShareErrorTimeOut");case NearbyVisibilityErrorState.NO_CONNECTION_MEDIUM:return this.i18n("nearbyShareErrorNoConnectionMedium");case NearbyVisibilityErrorState.TRANSFER_IN_PROGRESS:return this.i18n("nearbyShareErrorTransferInProgressTitle");case NearbyVisibilityErrorState.SOMETHING_WRONG:return this.i18n("nearbyShareErrorCantReceive");default:return""}},getErrorDescription_(){switch(this.errorState_){case NearbyVisibilityErrorState.TIMED_OUT:return this.i18nAdvanced("nearbyShareHighVisibilityTimeoutText");case NearbyVisibilityErrorState.NO_CONNECTION_MEDIUM:return this.i18n("nearbyShareErrorNoConnectionMediumDescription");case NearbyVisibilityErrorState.TRANSFER_IN_PROGRESS:return this.i18n("nearbyShareErrorTransferInProgressDescription");case NearbyVisibilityErrorState.SOMETHING_WRONG:return this.i18n("nearbyShareErrorSomethingWrong");default:return""}},getSubTitle_(){if(this.remainingTimeInSeconds_===-1){return""}let timeValue="";if(this.remainingTimeInSeconds_>60){timeValue=this.i18n("nearbyShareHighVisibilitySubTitleMinutes",Math.ceil(this.remainingTimeInSeconds_/60))}else{timeValue=this.i18n("nearbyShareHighVisibilitySubTitleSeconds",this.remainingTimeInSeconds_)}return this.i18n("nearbyShareHighVisibilitySubTitle",this.deviceName,timeValue)},getA11yAnnouncedSubTitle_(){if(this.remainingTimeInSeconds_===0){return""}const remainingMinutes=this.remainingTimeInSeconds_>0?Math.ceil(this.remainingTimeInSeconds_/60):5;const timeValue=this.i18n("nearbyShareHighVisibilitySubTitleMinutes",remainingMinutes);return this.i18n("nearbyShareHighVisibilitySubTitle",this.deviceName,timeValue)}});// Copyright 2020 The Chromium Authors. All rights reserved.
let receiveManager=null;let isTesting$2=false;function setReceiveManagerForTesting(testReceiveManager){receiveManager=testReceiveManager;isTesting$2=true}function getReceiveManager(){if(!receiveManager){receiveManager=nearbyShare.mojom.ReceiveManager.getRemote()}return receiveManager}function observeReceiveManager(observer){if(isTesting$2){getReceiveManager().addReceiveObserver(observer);return null}const receiver=new nearbyShare.mojom.ReceiveObserverReceiver(observer);getReceiveManager().addReceiveObserver(receiver.$.bindNewPipeAndPassRemote());return receiver}// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const Page={HIGH_VISIBILITY:"high-visibility",CONFIRM:"confirm",ONBOARDING:"onboarding",VISIBILITY:"visibility"};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="nearby-share-receive-dialog">cr-dialog::part(dialog) {
  height: 420px;
        width: 512px;
}

</style>
    <cr-dialog id="dialog" show-on-attach="">
      <div id="content" slot="body" aria-live="polite">
        <cr-view-manager id="viewManager">
          <nearby-share-high-visibility-page id="[[Page.HIGH_VISIBILITY]]" slot="view" device-name="[[settings.deviceName]]" shutoff-timestamp="[[highVisibilityShutoffTimestamp_]]" register-result="[[registerForegroundReceiveSurfaceResult_]]" nearby-process-stopped="[[nearbyProcessStopped_]]" start-advertising-failed="[[startAdvertisingFailed_]]">
          </nearby-share-high-visibility-page>
          <nearby-share-confirm-page id="[[Page.CONFIRM]]" slot="view" share-target="[[shareTarget]]" connection-token="[[connectionToken]]" transfer-status="[[transferStatus_]]">
          </nearby-share-confirm-page>
          <nearby-onboarding-page id="[[Page.ONBOARDING]]" slot="view" settings="{{settings}}">
          </nearby-onboarding-page>
          <nearby-visibility-page id="[[Page.VISIBILITY]]" slot="view" settings="{{settings}}">
          </nearby-visibility-page>
        </cr-view-manager>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"nearby-share-receive-dialog",properties:{Page:{type:Object,value:Page},shareTarget:{type:Object,value:null},connectionToken:{type:String,value:null},settings:{type:Object,value:{}},transferStatus_:{type:nearbyShare.mojom.TransferStatus,value:null},nearbyProcessStopped_:{type:Boolean,value:false},startAdvertisingFailed_:{type:Boolean,value:false}},listeners:{accept:"onAccept_",cancel:"onCancel_","change-page":"onChangePage_","onboarding-complete":"onOnboardingComplete_",reject:"onReject_",close:"close_"},observers:["onSettingsChanged_(settings.*)"],closing_:false,postSettingsCallback:null,postOnboardingCallback:null,receiveManager_:null,observerReceiver_:null,highVisibilityShutoffTimestamp_:0,registerForegroundReceiveSurfaceResult_:null,attached(){this.closing_=false;this.errorString=null;this.receiveManager_=getReceiveManager();this.observerReceiver_=observeReceiveManager(this)},detached(){if(this.observerReceiver_){this.observerReceiver_.$.close()}},onHighVisibilityChanged(inHighVisibility){const now=performance.now();if(inHighVisibility===false&&now<this.highVisibilityShutoffTimestamp_&&this.transferStatus_!==nearbyShare.mojom.TransferStatus.kAwaitingLocalConfirmation){this.close_();return}if(inHighVisibility){this.startAdvertisingFailed_=false;this.nearbyProcessStopped_=false}},onTransferUpdate(shareTarget,metadata){this.transferStatus_=metadata.status;if(metadata.status===nearbyShare.mojom.TransferStatus.kAwaitingLocalConfirmation){this.shareTarget=shareTarget;this.connectionToken=metadata&&metadata.token?metadata.token:null;this.showConfirmPage()}},onNearbyProcessStopped(){this.nearbyProcessStopped_=true},onStartAdvertisingFailure(){this.startAdvertisingFailed_=true},onSettingsChanged_(change){if(change.path!=="settings.enabled"){return}if(this.postSettingsCallback){this.postSettingsCallback();this.postSettingsCallback=null}},getViewManager_(){return this.$.viewManager},close_(){if(this.closing_){return}this.closing_=true;this.receiveManager_.unregisterForegroundReceiveSurface().then((()=>{const dialog=this.$.dialog;if(dialog.open){dialog.close()}}))},deferCallIfNecessary(callback){const haveSettings=!this.settings||this.settings.enabled===undefined;if(haveSettings){this.postSettingsCallback=callback;return true}if(!this.settings.enabled){this.postOnboardingCallback=callback;this.getViewManager_().switchView(Page.ONBOARDING);return true}return false},showOnboarding(){this.postOnboardingCallback=this.close_.bind(this);this.getViewManager_().switchView(Page.ONBOARDING)},showHighVisibilityPage(shutoffTimeoutInSeconds){if(this.deferCallIfNecessary(this.showHighVisibilityPage.bind(this,shutoffTimeoutInSeconds))){return}this.highVisibilityShutoffTimestamp_=performance.now()+shutoffTimeoutInSeconds*1e3;this.receiveManager_.registerForegroundReceiveSurface().then((result=>{this.registerForegroundReceiveSurfaceResult_=result.result;this.getViewManager_().switchView(Page.HIGH_VISIBILITY)}))},showConfirmPage(){if(this.deferCallIfNecessary(this.showConfirmPage.bind(this))){return}this.getViewManager_().switchView(Page.CONFIRM)},onChangePage_(event){this.getViewManager_().switchView(event.detail.page)},onCancel_(){this.close_()},onAccept_(){assert(this.shareTarget);this.receiveManager_.accept(this.shareTarget.id).then((success=>{if(success){this.close_()}else{this.close_()}}))},onOnboardingComplete_(){if(!this.postOnboardingCallback){return}this.postOnboardingCallback();this.postOnboardingCallback=null},onReject_(){assert(this.shareTarget);this.receiveManager_.reject(this.shareTarget.id).then((success=>{if(success){this.close_()}else{this.close_()}}))}});// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const DEFAULT_HIGH_VISIBILITY_TIMEOUT_S=300;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared iron-flex" scope="settings-nearby-share-subpage">#help {
  align-items: flex-start;
        padding-block-start: 12px;
}

#helpIcon {
  --iron-icon-fill-color: var(--google-grey-600);
        height: 16px;
        margin-inline-end: 8px;
        padding: 2px;
        width: 16px;
}

#helpText {
  --cr-link-color: var(--google-blue-600);
        color: var(--google-grey-600);
        font-size: 13px;
        line-height: 20px;
}

#highVisibilityContainer {
  border-top: none;
        padding: 0 var(--cr-section-padding) 0 60px;
}

.separator {
  margin: 0;
}

#highVisibilityContainer cr-toggle {
  margin-inline-start: var(--cr-section-padding);
        padding-inline-end: var(--cr-section-padding);
}

.enabled-toggle-off {
  font-weight: 500;
}

.enabled-toggle-on {
  color: var(--cr-toggle-color);
        font-weight: 500;
}

</style>
    <!-- Use a template to work around visual glitch where the toggle flips
        on when the page first loads. -->
    <template is="dom-if" if="[[prefs]]" restamp="">
      <settings-toggle-button id="featureToggleButton" label="[[getOnOffString_(prefs.nearby_sharing.enabled.value,
              'On', 'Off')]]" pref="{{prefs.nearby_sharing.enabled}}" deep-link-focus-id$="[[Setting.kNearbyShareOnOff]]" class$="[[getEnabledToggleClassName_(
              prefs.nearby_sharing.enabled.value)]]">
      </settings-toggle-button>
    </template>
    <template is="dom-if" id="subpageContent" if="[[prefs.nearby_sharing.enabled.value]]" restamp="">
      <div class="settings-box two-line">
        <div class="start" aria-label="[[getAccountRowLabel(profileName_, profileLabel_)]]">
          <div id="profileName" role="heading" aria-hidden="true">
            [[profileName_]]
          </div>
          <div id="profileLabel" class="secondary" aria-hidden="true">
            [[profileLabel_]]
          </div>
        </div>
      </div>
      <div class="settings-box two-line" id="deviceRow">
        <div class="start">
          <div role="heading" aria-hidden="true">
            Device name
          </div>
          <div aria-hidden="true" class="secondary">
            [[settings.deviceName]]
          </div>
        </div>
        <cr-button id="editDeviceNameButton" on-click="onDeviceNameTap_" disabled="[[!prefs.nearby_sharing.enabled.value]]" aria-description="[[getEditNameButtonAriaDescription_(
                settings.deviceName)]]" deep-link-focus-id$="[[Setting.kNearbyShareDeviceName]]">
          Change device name
        </cr-button>
      </div>
      <template is="dom-if" if="[[showDeviceNameDialog_]]" restamp="">
        <nearby-share-device-name-dialog settings="{{settings}}" id="deviceNameDialog" on-close="onDeviceNameDialogClose_">
        </nearby-share-device-name-dialog>
      </template>
      <div class="settings-box two-line" id="visibilityRow">
        <div class="start">
          <div role="heading" aria-hidden="true">
            Device visibility
          </div>
          <div aria-hidden="true" class="secondary">
            [[getVisibilityText_(settings.visibility)]]
          </div>
        </div>
        <cr-button id="editVisibilityButton" on-click="onVisibilityTap_" disabled="[[!prefs.nearby_sharing.enabled.value]]" aria-description="[[getVisibilityDescription_(
                settings.visibility)]]" deep-link-focus-id$="[[Setting.kNearbyShareDeviceVisibility]]">
          Change visibility
        </cr-button>
      </div>
      <div id="highVisibilityContainer" class="settings-box two-line">
        <div class="start">
          <div id="highVisibilityTitle" role="heading" aria-hidden="true">
            Visible to everyone
          </div>
          <div id="highVisibilitySubtitle" class="secondary" aria-hidden="true">
            <settings-localized-link id="highVisibilityOff" localized-string="[[getHighVisibilityToggleText_(
                    inHighVisibility_)]]" link-url="https://support.google.com/chromebook?p=nearby_share">
            </settings-localized-link>
          </div>
        </div>
        <div class="separator"></div>
        <cr-toggle id="highVisibilityToggle" checked="{{inHighVisibility_}}" disabled="[[!prefs.nearby_sharing.enabled.value]]" aria-labelledby="highVisibilityTitle" aria-describedby="highVisibilitySubtitle" on-change="onInHighVisibilityToggledByUser_">
        </cr-toggle>
      </div>
      <template is="dom-if" if="[[showVisibilityDialog_]]" restamp="">
        <nearby-share-contact-visibility-dialog settings="{{settings}}" id="visibilityDialog" on-close="onVisibilityDialogClose_">
        </nearby-share-contact-visibility-dialog>
      </template>
      <cr-link-row id="manageContactsLinkRow" class="hr" external="" on-click="onManageContactsTap_" label="Contacts" sub-label="[[getManageContactsSubLabel_(manageContactsUrl_)]]" deep-link-focus-id$="[[Setting.kNearbyShareContacts]]">
      </cr-link-row>
      <div class="settings-box two-line" id="dataUsageRow">
        <div class="start">
          <div aria-hidden="true">
            Data usage
          </div>
          <div aria-hidden="true" class="secondary">
            [[getDataUsageLabel_(prefs.nearby_sharing.data_usage.value)]]
          </div>
        </div>
        <cr-button id="editDataUsageButton" on-click="onDataUsageTap_" disabled="[[!prefs.nearby_sharing.enabled.value]]" aria-description="[[getEditDataUsageButtonAriaDescription_(
                prefs.nearby_sharing.data_usage.value)]]" deep-link-focus-id$="[[Setting.kNearbyShareDataUsage]]">
          Edit
        </cr-button>
      </div>
    </template>
    <template is="dom-if" if="[[showDataUsageDialog_]]" restamp="">
      <nearby-share-data-usage-dialog prefs="{{prefs}}" id="dataUsageDialog" on-close="onDataUsageDialogClose_">
      </nearby-share-data-usage-dialog>
    </template>
    <template is="dom-if" id="helpContent" if="[[prefs.nearby_sharing.enabled.value]]" restamp="">
      <div id="help" class="settings-box">
        <iron-icon id="helpIcon" icon="nearby20:info"></iron-icon>
        <settings-localized-link id="helpText" localized-string="To use Nearby Share, make sure both devices are unlocked, close together, and have Bluetooth turned on. If youâ€™re sharing with a Chromebook that is not in your contacts, make sure it has Nearby visibility turned on (open the status area by selecting the time, then turn on Nearby visibility) &lt;a&gt;Learn more&lt;/a&gt;" link-url="https://support.google.com/chromebook?p=nearby_share">
        </settings-localized-link>
      </div>
    </template>
    <template is="dom-if" if="[[showReceiveDialog_]]" restamp="">
      <nearby-share-receive-dialog id="receiveDialog" on-close="onReceiveDialogClose_" settings="{{settings}}">
      </nearby-share-receive-dialog>
    </template>
<!--_html_template_end_-->`,is:"settings-nearby-share-subpage",behaviors:[DeepLinkingBehavior,I18nBehavior,PrefsBehavior,RouteObserverBehavior,NearbyShareSettingsBehavior],properties:{prefs:{type:Object,notify:true},profileName_:{type:String,value:""},profileLabel_:{type:String,value:""},showDeviceNameDialog_:{type:Boolean,value:false},showVisibilityDialog_:{type:Boolean,value:false},showDataUsageDialog_:{type:Boolean,value:false},showReceiveDialog_:{type:Boolean,value:false},manageContactsUrl_:{type:String,value:()=>loadTimeData.getString("nearbyShareManageContactsUrl")},inHighVisibility_:{type:Boolean,value:false},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kNearbyShareOnOff,chromeos.settings.mojom.Setting.kNearbyShareDeviceName,chromeos.settings.mojom.Setting.kNearbyShareDeviceVisibility,chromeos.settings.mojom.Setting.kNearbyShareContacts,chromeos.settings.mojom.Setting.kNearbyShareDataUsage])}},listeners:{"onboarding-cancelled":"onOnboardingCancelled_"},receiveObserver_:null,attached(){NearbyAccountManagerBrowserProxyImpl.getInstance().getAccounts().then((accounts=>{if(accounts.length===0){return}this.profileName_=accounts[0].fullName;this.profileLabel_=accounts[0].email}));this.receiveObserver_=observeReceiveManager(this);getContactManager().downloadContacts()},onDeviceNameTap_(){if(this.showDeviceNameDialog_){return}this.showDeviceNameDialog_=true},onVisibilityTap_(){this.showVisibilityDialog_=true},onDataUsageTap_(){this.showDataUsageDialog_=true},onDeviceNameDialogClose_(event){this.showDeviceNameDialog_=false},onVisibilityDialogClose_(event){this.showVisibilityDialog_=false},onDataUsageDialogClose_(event){this.showDataUsageDialog_=false},onReceiveDialogClose_(event){this.showReceiveDialog_=false;this.inHighVisibility_=false},onManageContactsTap_(event){window.open(this.manageContactsUrl_)},getManageContactsSubLabel_(){return this.manageContactsUrl_.replace(/(^\w+:|^)\/\//,"")},onHighVisibilityChanged(inHighVisibility){this.inHighVisibility_=inHighVisibility},onTransferUpdate(shareTarget,metadata){},onNearbyProcessStopped(){this.inHighVisibility_=false},onStartAdvertisingFailure(){this.inHighVisibility_=false},onInHighVisibilityToggledByUser_(){if(this.inHighVisibility_){this.showHighVisibilityPage_()}},getOnOffString_(state,onstr,offstr){return state?onstr:offstr},getEditNameButtonAriaDescription_(name){return this.i18n("nearbyShareDeviceNameAriaDescription",name)},getVisibilityText_(visibility){switch(visibility){case nearbyShare.mojom.Visibility.kAllContacts:return this.i18n("nearbyShareContactVisibilityAll");case nearbyShare.mojom.Visibility.kSelectedContacts:return this.i18n("nearbyShareContactVisibilitySome");case nearbyShare.mojom.Visibility.kNoOne:return this.i18n("nearbyShareContactVisibilityNone");case nearbyShare.mojom.Visibility.kUnknown:return this.i18n("nearbyShareContactVisibilityUnknown");default:return""}},getVisibilityDescription_(visibility){switch(visibility){case nearbyShare.mojom.Visibility.kAllContacts:return this.i18n("nearbyShareContactVisibilityAllDescription");case nearbyShare.mojom.Visibility.kSelectedContacts:return this.i18n("nearbyShareContactVisibilitySomeDescription");case nearbyShare.mojom.Visibility.kNoOne:return this.i18n("nearbyShareContactVisibilityNoneDescription");case nearbyShare.mojom.Visibility.kUnknown:return this.i18n("nearbyShareContactVisibilityUnknownDescription");default:return""}},getHighVisibilityToggleText_(inHighVisibility){return inHighVisibility?this.i18n("nearbyShareHighVisibilityOn",5):this.i18nAdvanced("nearbyShareHighVisibilityOff",{substitutions:["5"]})},getDataUsageLabel_(dataUsageValue){if(dataUsageStringToEnum(dataUsageValue)===NearbyShareDataUsage.ONLINE){return this.i18n("nearbyShareDataUsageDataLabel")}else if(dataUsageStringToEnum(dataUsageValue)===NearbyShareDataUsage.OFFLINE){return this.i18n("nearbyShareDataUsageOfflineLabel")}else{return this.i18n("nearbyShareDataUsageWifiOnlyLabel")}},getDataUsageSubLabel_(dataUsageValue){if(dataUsageStringToEnum(dataUsageValue)===NearbyShareDataUsage.ONLINE){return this.i18n("nearbyShareDataUsageDataDescription")}else if(dataUsageStringToEnum(dataUsageValue)===NearbyShareDataUsage.OFFLINE){return this.i18n("nearbyShareDataUsageOfflineDescription")}else{return this.i18n("nearbyShareDataUsageWifiOnlyDescription")}},getEditDataUsageButtonAriaDescription_(dataUsageValue){if(dataUsageStringToEnum(dataUsageValue)===NearbyShareDataUsage.ONLINE){return this.i18n("nearbyShareDataUsageDataEditButtonDescription")}else if(dataUsageStringToEnum(dataUsageValue)===NearbyShareDataUsage.OFFLINE){return this.i18n("nearbyShareDataUsageOfflineEditButtonDescription")}else{return this.i18n("nearbyShareDataUsageWifiOnlyEditButtonDescription")}},currentRouteChanged(route){if(route!==routes.NEARBY_SHARE){return}const router=Router.getInstance();const queryParams=router.getQueryParameters();if(queryParams.has("deviceName")){this.showDeviceNameDialog_=true}if(queryParams.has("receive")){this.showHighVisibilityPage_(Number(queryParams.get("timeout")))}if(queryParams.has("confirm")){this.showReceiveDialog_=true;flush();this.$$("#receiveDialog").showConfirmPage()}if(queryParams.has("onboarding")){this.showReceiveDialog_=true;flush();this.$$("#receiveDialog").showOnboarding()}this.attemptDeepLink()},showHighVisibilityPage_(timeoutInSeconds){const shutoffTimeoutInSeconds=timeoutInSeconds||DEFAULT_HIGH_VISIBILITY_TIMEOUT_S;this.showReceiveDialog_=true;flush();this.$$("#receiveDialog").showHighVisibilityPage(shutoffTimeoutInSeconds)},getAccountRowLabel(profileName,profileLabel){return this.i18n("nearbyShareAccountRowLabel",profileName,profileLabel)},getEnabledToggleClassName_(){if(this.getPref("nearby_sharing.enabled").value){return"enabled-toggle-on"}return"enabled-toggle-off"},onOnboardingCancelled_(){Router.getInstance().navigateTo(routes.MULTIDEVICE)}});// Copyright 2018 The Chromium Authors. All rights reserved.
const MultiDeviceFeatureBehaviorImpl={properties:{pageContentData:Object,MultiDeviceFeature:{type:Object,value:MultiDeviceFeature}},isSuiteOn(){return!!this.pageContentData&&this.pageContentData.betterTogetherState===MultiDeviceFeatureState.ENABLED_BY_USER},isSuiteAllowedByPolicy(){return!!this.pageContentData&&this.pageContentData.betterTogetherState!==MultiDeviceFeatureState.PROHIBITED_BY_POLICY},isFeatureAllowedByPolicy(feature){return this.getFeatureState(feature)!==MultiDeviceFeatureState.PROHIBITED_BY_POLICY},isFeatureSupported(feature){return![MultiDeviceFeatureState.NOT_SUPPORTED_BY_CHROMEBOOK,MultiDeviceFeatureState.NOT_SUPPORTED_BY_PHONE].includes(this.getFeatureState(feature))},isPhoneHubNotificationAccessProhibited(){return this.pageContentData&&this.pageContentData.notificationAccessStatus===PhoneHubNotificationAccessStatus.PROHIBITED},isFeatureStateEditable(feature){if(feature!==MultiDeviceFeature.BETTER_TOGETHER_SUITE&&!this.isSuiteOn()){return false}if(feature===MultiDeviceFeature.PHONE_HUB_NOTIFICATIONS&&this.isPhoneHubNotificationAccessProhibited()){return false}return[MultiDeviceFeatureState.DISABLED_BY_USER,MultiDeviceFeatureState.ENABLED_BY_USER].includes(this.getFeatureState(feature))},getFeatureName(feature){switch(feature){case MultiDeviceFeature.BETTER_TOGETHER_SUITE:return this.i18n("multideviceSetupItemHeading");case MultiDeviceFeature.INSTANT_TETHERING:return this.i18n("multideviceInstantTetheringItemTitle");case MultiDeviceFeature.MESSAGES:return this.i18n("multideviceAndroidMessagesItemTitle");case MultiDeviceFeature.SMART_LOCK:return this.i18n("multideviceSmartLockItemTitle");case MultiDeviceFeature.PHONE_HUB:return this.i18n("multidevicePhoneHubItemTitle");case MultiDeviceFeature.PHONE_HUB_NOTIFICATIONS:return this.i18n("multidevicePhoneHubNotificationsItemTitle");case MultiDeviceFeature.PHONE_HUB_TASK_CONTINUATION:return this.i18n("multidevicePhoneHubTaskContinuationItemTitle");case MultiDeviceFeature.WIFI_SYNC:return this.i18n("multideviceWifiSyncItemTitle");default:return""}},getIconName(feature){switch(feature){case MultiDeviceFeature.BETTER_TOGETHER_SUITE:return"os-settings:multidevice-better-together-suite";case MultiDeviceFeature.MESSAGES:return"os-settings:multidevice-messages";case MultiDeviceFeature.SMART_LOCK:return"os-settings:multidevice-smart-lock";case MultiDeviceFeature.PHONE_HUB:case MultiDeviceFeature.PHONE_HUB_NOTIFICATIONS:case MultiDeviceFeature.PHONE_HUB_TASK_CONTINUATION:return"os-settings:multidevice-better-together-suite";case MultiDeviceFeature.WIFI_SYNC:return"os-settings:multidevice-wifi-sync";default:return""}},getFeatureSummaryHtml(feature){switch(feature){case MultiDeviceFeature.SMART_LOCK:return this.i18nAdvanced("multideviceSmartLockItemSummary");case MultiDeviceFeature.INSTANT_TETHERING:return this.i18nAdvanced("multideviceInstantTetheringItemSummary");case MultiDeviceFeature.MESSAGES:return this.i18nAdvanced("multideviceAndroidMessagesItemSummary");case MultiDeviceFeature.PHONE_HUB:return this.i18nAdvanced("multidevicePhoneHubItemSummary");case MultiDeviceFeature.PHONE_HUB_NOTIFICATIONS:return this.i18nAdvanced("multidevicePhoneHubNotificationsItemSummary");case MultiDeviceFeature.PHONE_HUB_TASK_CONTINUATION:return this.i18nAdvanced("multidevicePhoneHubTaskContinuationItemSummary");case MultiDeviceFeature.WIFI_SYNC:return this.i18nAdvanced("multideviceWifiSyncItemSummary");default:return""}},getFeatureState(feature){if(!this.pageContentData){return null}switch(feature){case MultiDeviceFeature.BETTER_TOGETHER_SUITE:return this.pageContentData.betterTogetherState;case MultiDeviceFeature.INSTANT_TETHERING:return this.pageContentData.instantTetheringState;case MultiDeviceFeature.MESSAGES:return this.pageContentData.messagesState;case MultiDeviceFeature.SMART_LOCK:return this.pageContentData.smartLockState;case MultiDeviceFeature.PHONE_HUB:return this.pageContentData.phoneHubState;case MultiDeviceFeature.PHONE_HUB_NOTIFICATIONS:return this.pageContentData.phoneHubNotificationsState;case MultiDeviceFeature.PHONE_HUB_TASK_CONTINUATION:return this.pageContentData.phoneHubTaskContinuationState;case MultiDeviceFeature.WIFI_SYNC:return this.pageContentData.wifiSyncState;default:return null}},isHostSet(){return[MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_SERVER,MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_VERIFICATION,MultiDeviceSettingsMode.HOST_SET_VERIFIED].includes(this.pageContentData.mode)}};const MultiDeviceFeatureBehavior=[I18nBehavior,MultiDeviceFeatureBehaviorImpl];// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><cr-toggle id="toggle" aria-label$="[[getToggleA11yLabel_(feature)]]" checked="{{checked_}}" disabled="[[!isFeatureStateEditable(feature, pageContentData)]]" on-change="toggleFeature">
    </cr-toggle>
<!--_html_template_end_-->`,is:"settings-multidevice-feature-toggle",behaviors:[MultiDeviceFeatureBehavior],properties:{feature:Number,toggleAriaLabel:String,checked_:Boolean},listeners:{click:"onDisabledInnerToggleClick_"},observers:["resetChecked_(feature, pageContentData)"],focus(){this.$.toggle.focus()},toggleFeature(){this.resetChecked_();this.fire("feature-toggle-clicked",{feature:this.feature,enabled:!this.checked_})},resetChecked_(){if(this.feature===MultiDeviceFeature.PHONE_HUB_NOTIFICATIONS&&this.isPhoneHubNotificationAccessProhibited()){this.checked_=false;return}this.checked_=this.getFeatureState(this.feature)===MultiDeviceFeatureState.ENABLED_BY_USER},onDisabledInnerToggleClick_(event){event.stopPropagation()},getToggleA11yLabel_(){return this.toggleAriaLabel||this.getFeatureName(this.feature)}});// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const NotificationAccessSetupOperationStatus={CONNECTION_REQUESTED:0,CONNECTING:1,TIMED_OUT_CONNECTING:2,CONNECTION_DISCONNECTED:3,SENT_MESSAGE_TO_PHONE_AND_WAITING_FOR_RESPONSE:4,COMPLETED_SUCCESSFULLY:5,NOTIFICATION_ACCESS_PROHIBITED:6};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared" scope="settings-multidevice-notification-access-setup-dialog">:host {
  --cr-dialog-font-family: 'Google Sans';
        --cr-dialog-title-font-size: 16px;
}

cr-dialog::part(dialog) {
  width: 512px;
}

div[slot='title'] {
  flex-direction: column;
        height: auto;
}

div[slot='body'] {
  align-items: center;
        display: flex;
        flex-direction: column;
        height: auto;
        justify-content: center;
        width: 464px;
}

iron-icon {
  --iron-icon-fill-color: var(--google-red-600);
        padding-bottom: 13px;
}

#description {
  display: flex;
        flex-direction: column;
        gap: 12px;
}

:host(:not([did-setup-attempt-fail_])) #description {
  height: 93px;
}

:host([did-setup-attempt-fail_]) #description {
  height: 60px;
}

#illustration {
  background-position: center center;
        background-repeat: no-repeat;
        background-size: contain;
        height: 200px;
        margin-bottom: 24px;
        margin-top: 24px;
        width: 100%;
}

:host([has-not-started-setup-attempt_]) #illustration {
  background-image:
            url(chrome://os-settings/images/notification_access_setup.svg);
}

:host([is-setup-attempt-in-progress_]) #illustration {
  background-image:
            url(chrome://os-settings/images/notification_access_connecting.svg);
}

:host([did-setup-attempt-fail_]) #illustration {
  background-image:
            url(chrome://os-settings/images/notification_access_error.svg);
}

:host([has-completed-setup-successfully_]) #illustration {
  background-image:
            url(chrome://os-settings/images/notification_access_finished.svg);
}

</style>
    <cr-dialog id="dialog" close-text="Close">
      <div id="dialogTitle" slot="title">
        <template is="dom-if" if="[[didSetupAttemptFail_]]" restamp="">
          <iron-icon id="failureIcon" icon="os-settings:failure-alert">
          </iron-icon>
        </template>
        <div id="title">[[title_]]</div>
      </div>
      <div id="dialogBody" slot="body">
        <div id="illustration"></div>
        <div id="description">
          <template is="dom-if" if="[[description_]]" restamp="">
            <settings-localized-link localized-string="[[description_]]">
            </settings-localized-link>
          </template>
          <div hidden="[[!shouldShowSetupInstructionsSeparately_]]">
            Make sure your phone is nearby, unlocked, and has Bluetooth and Wi-Fi turned on.
          </div>
        </div>
      </div>
      <div id="buttonContainer" slot="button-container">
        <template is="dom-if" if="[[shouldShowCancelButton_(setupState_)]]" restamp="">
          <cr-button id="cancelButton" class="cancel-button" on-click="onCancelClicked_">
            Cancel
          </cr-button>
        </template>
        <template is="dom-if" if="[[hasCompletedSetupSuccessfully_]]" restamp="">
          <cr-button id="doneButton" class="action-button" on-click="onDoneOrCloseButtonClicked_">
            Done
          </cr-button>
        </template>
        <template is="dom-if" if="[[isNotificationAccessProhibited_]]" restamp="">
          <cr-button id="closeButton" class="action-button" on-click="onDoneOrCloseButtonClicked_">
            Close
          </cr-button>
        </template>
        <template is="dom-if" if="[[hasNotStartedSetupAttempt_]]" restamp="">
          <cr-button id="getStartedButton" class="action-button" on-click="attemptNotificationSetup_">
            Get started
          </cr-button>
        </template>
        <template is="dom-if" if="[[shouldShowTryAgainButton_(setupState_)]]" restamp="">
          <cr-button id="tryAgainButton" class="action-button" on-click="attemptNotificationSetup_">
            Try again
          </cr-button>
        </template>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"settings-multidevice-notification-access-setup-dialog",behaviors:[I18nBehavior,WebUIListenerBehavior],properties:{setupState_:{type:Number,value:null},title_:{type:String,computed:"getTitle_(setupState_)"},description_:{type:String,computed:"getDescription_(setupState_)"},hasNotStartedSetupAttempt_:{type:Boolean,computed:"computeHasNotStartedSetupAttempt_(setupState_)",reflectToAttribute:true},isSetupAttemptInProgress_:{type:Boolean,computed:"computeIsSetupAttemptInProgress_(setupState_)",reflectToAttribute:true},didSetupAttemptFail_:{type:Boolean,computed:"computeDidSetupAttemptFail_(setupState_)",reflectToAttribute:true},hasCompletedSetupSuccessfully_:{type:Boolean,computed:"computeHasCompletedSetupSuccessfully_(setupState_)",reflectToAttribute:true},isNotificationAccessProhibited_:{type:Boolean,computed:"computeIsNotificationAccessProhibited_(setupState_)"},shouldShowSetupInstructionsSeparately_:{type:Boolean,computed:"computeShouldShowSetupInstructionsSeparately_("+"setupState_)",reflectToAttribute:true}},browserProxy_:null,ready(){this.browserProxy_=MultiDeviceBrowserProxyImpl.getInstance()},attached(){this.addWebUIListener("settings.onNotificationAccessSetupStatusChanged",this.onSetupStateChanged_.bind(this));this.$.dialog.showModal()},onSetupStateChanged_(setupState){this.setupState_=setupState;if(this.setupState_===NotificationAccessSetupOperationStatus.COMPLETED_SUCCESSFULLY){this.browserProxy_.setFeatureEnabledState(MultiDeviceFeature.PHONE_HUB_NOTIFICATIONS,true)}},computeHasNotStartedSetupAttempt_(){return this.setupState_===null},computeIsSetupAttemptInProgress_(){return this.setupState_===NotificationAccessSetupOperationStatus.SENT_MESSAGE_TO_PHONE_AND_WAITING_FOR_RESPONSE||this.setupState_===NotificationAccessSetupOperationStatus.CONNECTING||this.setupState_===NotificationAccessSetupOperationStatus.CONNECTION_REQUESTED},computeHasCompletedSetupSuccessfully_(){return this.setupState_===NotificationAccessSetupOperationStatus.COMPLETED_SUCCESSFULLY},computeIsNotificationAccessProhibited_(){return this.setupState_===NotificationAccessSetupOperationStatus.NOTIFICATION_ACCESS_PROHIBITED},computeDidSetupAttemptFail_(){return this.setupState_===NotificationAccessSetupOperationStatus.TIMED_OUT_CONNECTING||this.setupState_===NotificationAccessSetupOperationStatus.CONNECTION_DISCONNECTED||this.setupState_===NotificationAccessSetupOperationStatus.NOTIFICATION_ACCESS_PROHIBITED},computeShouldShowSetupInstructionsSeparately_(){return this.setupState_===null||this.setupState_===NotificationAccessSetupOperationStatus.CONNECTION_REQUESTED||this.setupState_===NotificationAccessSetupOperationStatus.SENT_MESSAGE_TO_PHONE_AND_WAITING_FOR_RESPONSE||this.setupState_===NotificationAccessSetupOperationStatus.CONNECTING},attemptNotificationSetup_(){this.browserProxy_.attemptNotificationSetup();this.setupState_=NotificationAccessSetupOperationStatus.CONNECTION_REQUESTED},onCancelClicked_(){this.browserProxy_.cancelNotificationSetup();this.$.dialog.close()},onDoneOrCloseButtonClicked_(){this.$.dialog.close()},getTitle_(){if(this.setupState_===null){return this.i18n("multideviceNotificationAccessSetupAckTitle")}const Status=NotificationAccessSetupOperationStatus;switch(this.setupState_){case Status.CONNECTION_REQUESTED:case Status.CONNECTING:return this.i18n("multideviceNotificationAccessSetupConnectingTitle");case Status.SENT_MESSAGE_TO_PHONE_AND_WAITING_FOR_RESPONSE:return this.i18n("multideviceNotificationAccessSetupAwaitingResponseTitle");case Status.COMPLETED_SUCCESSFULLY:return this.i18n("multideviceNotificationAccessSetupCompletedTitle");case Status.TIMED_OUT_CONNECTING:return this.i18n("multideviceNotificationAccessSetupCouldNotEstablishConnectionTitle");case Status.CONNECTION_DISCONNECTED:return this.i18n("multideviceNotificationAccessSetupConnectionLostWithPhoneTitle");case Status.NOTIFICATION_ACCESS_PROHIBITED:return this.i18n("multideviceNotificationAccessSetupAccessProhibitedTitle");default:return""}},getDescription_(){if(this.setupState_===null){return this.i18n("multideviceNotificationAccessSetupAckSummary")}const Status=NotificationAccessSetupOperationStatus;switch(this.setupState_){case Status.COMPLETED_SUCCESSFULLY:return this.i18n("multideviceNotificationAccessSetupCompletedSummary");case Status.TIMED_OUT_CONNECTING:return this.i18n("multideviceNotificationAccessSetupEstablishFailureSummary");case Status.CONNECTION_DISCONNECTED:return this.i18n("multideviceNotificationAccessSetupMaintainFailureSummary");case Status.NOTIFICATION_ACCESS_PROHIBITED:return this.i18nAdvanced("multideviceNotificationAccessSetupAccessProhibitedSummary");case Status.SENT_MESSAGE_TO_PHONE_AND_WAITING_FOR_RESPONSE:return this.i18n("multideviceNotificationAccessSetupAwaitingResponseSummary");case Status.CONNECTION_REQUESTED:case Status.CONNECTING:default:return""}},shouldShowCancelButton_(){return this.setupState_!==NotificationAccessSetupOperationStatus.COMPLETED_SUCCESSFULLY&&this.setupState_!==NotificationAccessSetupOperationStatus.NOTIFICATION_ACCESS_PROHIBITED},shouldShowTryAgainButton_(){return this.setupState_===NotificationAccessSetupOperationStatus.TIMED_OUT_CONNECTING||this.setupState_===NotificationAccessSetupOperationStatus.CONNECTION_DISCONNECTED}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared cr-radio-button-style" scope="multidevice-radio-button">:host([disabled]) {
  opacity: 1;
}

:host([disabled]) .disc-wrapper, :host([disabled]) #labelWrapper {
  opacity: var(--cr-disabled-opacity);
}

cr-policy-pref-indicator {
  margin-inline-start: var(--settings-controlled-by-spacing);
        
        pointer-events: all;
}

</style>

    <div role="presentation" class="disc-wrapper" id="button" tabindex$="[[buttonTabIndex_]]" on-keydown="onInputKeydown_">
      <div class="disc-border"></div>
      <div class="disc"></div>
    </div>

    <div id="labelWrapper" role="presentation">
      <span>[[label]]</span>
    </div>

    <template is="dom-if" if="[[disabled]]" restamp="">
      <cr-policy-indicator indicator-type="userPolicy" icon-aria-label="[[label]]" on-click="onIndicatorTap_">
      </cr-policy-indicator>
    </template>

<!--_html_template_end_-->`,is:"multidevice-radio-button",behaviors:[CrRadioButtonBehavior],hostAttributes:{role:"radio"},properties:{ariaChecked:{type:String,notify:true,reflectToAttribute:true,computed:"getAriaChecked_(checked)"},ariaDisabled:{type:String,notify:true,reflectToAttribute:true,computed:"getAriaDisabled_(disabled)"},ariaLabel:{type:String,notify:true,reflectToAttribute:true,computed:"getLabel_(label)"}},getLabel_(label){return label},onIndicatorTap_(e){e.preventDefault();e.stopPropagation()}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-multidevice-smartlock-subpage"></style>
    <div class="settings-box first">
      <!-- TODO(jhawkins): Remove this status text and move the toggle into
           the subpage header section. -->
      <div class="start">
        <template is="dom-if" if="[[smartLockEnabled_]]" restamp="">
          Enabled
        </template>
        <template is="dom-if" if="[[!smartLockEnabled_]]" restamp="">
          Disabled
        </template>
      </div>
      <settings-multidevice-feature-toggle feature="[[MultiDeviceFeature.SMART_LOCK]]" page-content-data="[[pageContentData]]" deep-link-focus-id$="[[Setting.kSmartLockOnOff]]">
      </settings-multidevice-feature-toggle>
    </div>
    <iron-collapse opened="[[smartLockEnabled_]]">
      <div class="settings-box first line-only">
          <h2 class="start first">
            Screen lock options
          </h2>
      </div>
      <div class="list-frame">
        <cr-radio-group selected="[[smartLockSignInEnabled_]]" selectable-elements="multidevice-radio-button" disabled="[[!smartLockSignInAllowed_]]" on-selected-changed="onSmartLockSignInEnabledChanged_" deep-link-focus-id$="[[Setting.kSmartLockUnlockOrSignIn]]">
          <multidevice-radio-button name="disabled" class="list-item underbar" label="Unlock device only">
          </multidevice-radio-button>
          <multidevice-radio-button name="enabled" class="list-item" label="Unlock device and sign in to Google Account">
          </multidevice-radio-button>
        </cr-radio-group>
      </div>
    </iron-collapse>
    <template is="dom-if" if="[[showPasswordPromptDialog_]]" restamp="">
      <settings-password-prompt-dialog id="smartLockSignInPasswordPrompt" on-close="onEnableSignInDialogClose_" on-token-obtained="onTokenObtained_">
      </settings-password-prompt-dialog>
    </template>
<!--_html_template_end_-->`,is:"settings-multidevice-smartlock-subpage",behaviors:[DeepLinkingBehavior,MultiDeviceFeatureBehavior,RouteObserverBehavior,WebUIListenerBehavior],properties:{routes:{type:Object,value:routes},smartLockEnabled_:{type:Boolean,computed:"computeIsSmartLockEnabled_(pageContentData)"},smartLockSignInEnabled_:{type:Object,value:SmartLockSignInEnabledState.DISABLED},smartLockSignInAllowed_:{type:Boolean,value:true},showPasswordPromptDialog_:{type:Boolean,value:false},authToken_:{type:Object},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kSmartLockOnOff,chromeos.settings.mojom.Setting.kSmartLockUnlockOrSignIn])}},browserProxy_:null,ready(){this.browserProxy_=MultiDeviceBrowserProxyImpl.getInstance();this.addWebUIListener("smart-lock-signin-enabled-changed",this.updateSmartLockSignInEnabled_.bind(this));this.addWebUIListener("smart-lock-signin-allowed-changed",this.updateSmartLockSignInAllowed_.bind(this));this.browserProxy_.getSmartLockSignInEnabled().then((enabled=>{this.updateSmartLockSignInEnabled_(enabled)}));this.browserProxy_.getSmartLockSignInAllowed().then((allowed=>{this.updateSmartLockSignInAllowed_(allowed)}))},currentRouteChanged(route,oldRoute){if(route!==routes.SMART_LOCK){return}this.attemptDeepLink()},computeIsSmartLockEnabled_(){return!!this.pageContentData&&this.getFeatureState(MultiDeviceFeature.SMART_LOCK)===MultiDeviceFeatureState.ENABLED_BY_USER},updateSmartLockSignInEnabled_(enabled){this.smartLockSignInEnabled_=enabled?SmartLockSignInEnabledState.ENABLED:SmartLockSignInEnabledState.DISABLED},updateSmartLockSignInAllowed_(allowed){this.smartLockSignInAllowed_=allowed},openPasswordPromptDialog_(){this.showPasswordPromptDialog_=true},onSmartLockSignInEnabledChanged_(){const radioGroup=this.$$("cr-radio-group");const enabled=radioGroup.selected===SmartLockSignInEnabledState.ENABLED;if(!enabled){this.browserProxy_.setSmartLockSignInEnabled(false);recordSettingChange();return}radioGroup.selected=SmartLockSignInEnabledState.DISABLED;this.openPasswordPromptDialog_()},onEnableSignInDialogClose_(){this.showPasswordPromptDialog_=false;if(this.authToken_){this.browserProxy_.setSmartLockSignInEnabled(true,this.authToken_.token);recordSettingChange()}this.authToken_=undefined},onTokenObtained_(e){this.authToken_=e.detail}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-multidevice-feature-item">:host([is-sub-feature]) #feature-icon {
  display: none;
}

:host([is-sub-feature]) .settings-box .middle {
  padding-inline-start: 64px;
}

#card {
  border-top: var(--cr-separator-line);
        border-top-style: var(--feature-item-border-top-style, solid);
        padding: var(--feature-item-row-padding);
}

#feature-icon {
  padding: 2px;
}

cr-policy-indicator {
  padding: 0 var(--cr-controlled-by-spacing);
}

#help-icon:active {
  pointer-events: none;
}

</style>
    <div id="card" class="settings-box two-line no-padding">
      <div id="linkWrapper" class="link-wrapper" actionable$="[[isRowClickable_(
               feature, pageContentData, subpageRoute)]]" on-click="handleItemClick_">
        <slot name="icon">
          <iron-icon id="feature-icon" icon="[[getIconName(feature)]]" aria-hidden="true">
          </iron-icon>
        </slot>
        <div id="item-text-container" class="middle" aria-hidden="true">
          <div id="featureName">[[getFeatureName(feature)]]</div>
          <slot name="feature-summary">
            <settings-localized-link class="secondary" id="featureSecondary" localized-string="[[getFeatureSummaryHtml(feature)]]">
            </settings-localized-link>
          </slot>
        </div>
        <template is="dom-if" if="[[hasSubpageClickHandler_(feature, pageContentData,
                      subpageRoute)]]" restamp="">
          <cr-icon-button id="subpageButton" class="subpage-arrow" aria-labelledby="featureName" aria-describedby="featureSecondary" aria-roledescription="Subpage button">
          </cr-icon-button>
        </template>
        <template is="dom-if" if="[[infoTooltip]]" restamp="">
          <iron-icon id="help-icon" tabindex="0" icon="cr:info-outline" aria-labelledby="tooltip">
          </iron-icon>
          <paper-tooltip id="tooltip" for="help-icon" position="top" aria-hidden="true" fit-to-visible-bounds="">
            [[infoTooltip]]
          </paper-tooltip>
        </template>
      </div>
      <template is="dom-if" if="[[shouldShowSeparator_(
                    feature, pageContentData, subpageRoute)]]" restamp="">
        <div class="separator"></div>
      </template>

      <template is="dom-if" if="[[!isFeatureAllowedByPolicy(feature, pageContentData)]]" restamp="">
        <cr-policy-indicator indicator-type="userPolicy"></cr-policy-indicator>
      </template>
      <div class="margin-matches-padding" aria-labelledby="featureName" aria-describedby="featureSecondary">
        <!-- The aria-labelledby and aria-describedby are used by custom slotted
        content, without which ChromeVox will not announce the #featureName
        or #featureSummary. Note that the default slotted content still needs
        their own aria-labelledby and aria-describedby attributes. -->
        <slot name="feature-controller">
          <!-- This settings-multidevice-feature-toggle is the default
          controller. If an element with slot="feature-controller" is attached,
          it will replace this one. -->
          <settings-multidevice-feature-toggle aria-labelledby="featureName" aria-describedby="featureSecondary" feature="[[feature]]" page-content-data="[[pageContentData]]">
          </settings-multidevice-feature-toggle>
        </slot>
      </div>
    </div>
<!--_html_template_end_-->`,is:"settings-multidevice-feature-item",behaviors:[MultiDeviceFeatureBehavior,RouteOriginBehavior],properties:{feature:Number,subpageRoute:Object,infoTooltip:String,subpageRouteUrlSearchParams:Object,isSubFeature:{type:Boolean,value:false,reflectToAttribute:true}},route_:routes.MULTIDEVICE_FEATURES,ready(){this.addFocusConfig_(this.subpageRoute,"#subpageButton")},focus(){const slot=this.$$('slot[name="feature-controller"]');const elems=slot.assignedElements({flatten:true});assert(elems.length>0);elems[0].focus()},isRowClickable_(){return this.hasSubpageClickHandler_()||this.isFeatureStateEditable(this.feature)},hasSubpageClickHandler_(){return!!this.subpageRoute&&this.isFeatureAllowedByPolicy(this.feature)},shouldShowSeparator_(){return this.hasSubpageClickHandler_()||!!this.infoTooltip},handleItemClick_(event){if(event.path[0].tagName==="A"){event.stopPropagation();return}if(!this.hasSubpageClickHandler_()){if(this.isFeatureStateEditable(this.feature)){this.shadowRoot.querySelector("settings-multidevice-feature-toggle").toggleFeature()}return}Router.getInstance().navigateTo(this.subpageRoute,this.subpageRouteUrlSearchParams,true)}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-multidevice-task-continuation-disabled-link">:host {
  --cr-subsequent-anchors-of-span-margin: 0;
}

</style>
    <div id="container" inner-h-t-m-l="[[getAriaLabelledContent_()]]">
    </div>
<!--_html_template_end_-->`,is:"settings-multidevice-task-continuation-disabled-link",behaviors:[I18nBehavior],attached(){const chromeSyncLink=this.$$("#chromeSyncLink");if(chromeSyncLink){chromeSyncLink.addEventListener("click",this.onChromeSyncLinkClick_.bind(this))}},getAriaLabelledContent_(){const tempEl=document.createElement("div");tempEl.innerHTML=this.i18nAdvanced("multidevicePhoneHubTaskContinuationDisabledSummary",{attrs:["id"]});tempEl.childNodes.forEach(((node,index)=>{if(node.nodeType===Node.TEXT_NODE){const spanNode=document.createElement("span");spanNode.textContent=node.textContent;spanNode.id=`id${index}`;spanNode.setAttribute("aria-hidden",true);node.replaceWith(spanNode);return}}));const chromeSyncLink=tempEl.querySelector("#chromeSyncLink");const learnMoreLink=tempEl.querySelector("#learnMoreLink");chromeSyncLink.setAttribute("aria-label",this.i18n("multidevicePhoneHubTaskContinuationSyncLabel"));learnMoreLink.setAttribute("aria-label",this.i18n("multidevicePhoneHubLearnMoreLabel"));chromeSyncLink.href="#";return tempEl.innerHTML},onChromeSyncLinkClick_(event){event.preventDefault();if(loadTimeData$1.getBoolean("splitSettingsSyncEnabled")){window.open("chrome://settings/syncSetup/advanced");this.fire("opened-browser-advanced-sync-settings")}else{Router.getInstance().navigateTo(routes.SYNC_ADVANCED)}}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-multidevice-task-continuation-item"></style>
    <settings-multidevice-feature-item id="phoneHubTaskContinuationItem" feature="[[MultiDeviceFeature.PHONE_HUB_TASK_CONTINUATION]]" page-content-data="[[pageContentData]]" is-sub-feature="">
      <template is="dom-if" if="[[!isChromeTabsSyncEnabled_]]" restamp="">
        <settings-multidevice-task-continuation-disabled-link class="secondary" id="featureSecondary" slot="feature-summary">
        </settings-multidevice-task-continuation-disabled-link>
        <!-- Replace the standard feature-controller with an always disabled and
          off cr-toggle when Chrome Sync Open Tabs is disabled. When Chrome Sync
          is enabled the standard feature-controller is used. -->
        <cr-toggle disabled="" slot="feature-controller">
        </cr-toggle>
      </template>
    </settings-multidevice-feature-item>
<!--_html_template_end_-->`,is:"settings-multidevice-task-continuation-item",behaviors:[MultiDeviceFeatureBehavior,WebUIListenerBehavior],properties:{isChromeTabsSyncEnabled_:{type:Boolean,value:false}},syncBrowserProxy_:null,created(){this.syncBrowserProxy_=SyncBrowserProxyImpl.getInstance()},attached(){this.addWebUIListener("sync-prefs-changed",this.handleSyncPrefsChanged_.bind(this));this.syncBrowserProxy_.sendSyncPrefsChanged()},focus(){if(!this.isChromeTabsSyncEnabled_){this.$$("cr-toggle").focus()}else{this.$.phoneHubTaskContinuationItem.focus()}},handleSyncPrefsChanged_(syncPrefs){this.isChromeTabsSyncEnabled_=!!syncPrefs&&syncPrefs.tabsSynced}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-multidevice-tether-item"></style>
    <settings-multidevice-feature-item page-content-data="[[pageContentData]]" feature="[[MultiDeviceFeature.INSTANT_TETHERING]]" subpage-route="[[routes.INTERNET_NETWORKS]]" subpage-route-url-search-params="[[getTetherNetworkUrlSearchParams_()]]">
      <network-icon slot="icon" aria-hidden="true" show-technology-badge="[[showTechnologyBadge_]]" network-state="[[activeNetworkState_]]" device-state="[[deviceState_]]">
      </network-icon>
    </settings-multidevice-feature-item>
<!--_html_template_end_-->`,is:"settings-multidevice-tether-item",behaviors:[NetworkListenerBehavior,MultiDeviceFeatureBehavior],properties:{deviceState_:Object,activeNetworkState_:Object,routes:{type:Object,value:routes},showTechnologyBadge_:{type:Boolean,value(){return loadTimeData$1.valueExists("showTechnologyBadge")&&loadTimeData$1.getBoolean("showTechnologyBadge")}}},networkConfig_:null,created(){this.networkConfig_=MojoInterfaceProviderImpl.getInstance().getMojoServiceRemote()},attached(){this.updateTetherDeviceState_();this.updateTetherNetworkState_()},focus(){this.$$("settings-multidevice-feature-item").focus()},onActiveNetworksChanged(networks){const guid=this.activeNetworkState_.guid;if(!networks.find((network=>network.guid===guid))){return}this.networkConfig_.getNetworkState(guid).then((response=>{if(response.result){this.activeNetworkState_=response.result}}))},onNetworkStateListChanged(){this.updateTetherNetworkState_()},onDeviceStateListChanged(){this.updateTetherDeviceState_()},updateTetherDeviceState_(){this.networkConfig_.getDeviceStateList().then((response=>{const kTether=chromeos.networkConfig.mojom.NetworkType.kTether;const deviceStates=response.result;const deviceState=deviceStates.find((deviceState=>deviceState.type===kTether));this.deviceState_=deviceState||{deviceState:chromeos.networkConfig.mojom.DeviceStateType.kDisabled,inhibitReason:chromeos.networkConfig.mojom.InhibitReason.kNotInhibited,managedNetworkAvailable:false,scanning:false,simAbsent:false,type:kTether}}))},updateTetherNetworkState_(){const kTether=chromeos.networkConfig.mojom.NetworkType.kTether;const filter={filter:chromeos.networkConfig.mojom.FilterType.kVisible,limit:1,networkType:kTether};this.networkConfig_.getNetworkStateList(filter).then((response=>{const networks=response.result;this.activeNetworkState_=networks[0]||OncMojo.getDefaultNetworkState(kTether)}))},getNetworkStateList_(){return this.activeNetworkState_.guid?[this.activeNetworkState_]:[]},getTetherNetworkUrlSearchParams_(){return new URLSearchParams("type=Tether")}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-multidevice-wifi-sync-disabled-link">:host {
  --cr-subsequent-anchors-of-span-margin: 0;
}

</style>
    <div id="container" inner-h-t-m-l="[[getAriaLabelledContent_()]]">
    </div>
<!--_html_template_end_-->`,is:"settings-multidevice-wifi-sync-disabled-link",behaviors:[MultiDeviceFeatureBehavior],getAriaLabelledContent_(){const tempEl=document.createElement("div");tempEl.innerHTML=this.i18nAdvanced("multideviceEnableWifiSyncV1ItemSummary",{attrs:["id"]});tempEl.childNodes.forEach(((node,index)=>{if(node.nodeType===Node.TEXT_NODE){const spanNode=document.createElement("span");spanNode.textContent=node.textContent;spanNode.id=`id${index}`;spanNode.setAttribute("aria-hidden",true);node.replaceWith(spanNode);return}}));const chromeSyncLink=tempEl.querySelector("#chromeSyncLink");const learnMoreLink=tempEl.querySelector("#learnMoreLink");chromeSyncLink.setAttribute("aria-label",this.i18n("multideviceWifiSyncChromeSyncLabel"));learnMoreLink.setAttribute("aria-label",this.i18n("multideviceWifiSyncLearnMoreLabel"));chromeSyncLink.href="#";return tempEl.innerHTML},attached(){const chromeSyncLink=this.$$("#chromeSyncLink");if(chromeSyncLink){chromeSyncLink.addEventListener("click",this.onChromeSyncLinkClick_.bind(this))}},onChromeSyncLinkClick_(event){event.preventDefault();if(loadTimeData$1.getBoolean("splitSettingsSyncEnabled")){Router.getInstance().navigateTo(routes.OS_SYNC)}else{Router.getInstance().navigateTo(routes.SYNC_ADVANCED)}}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-multidevice-wifi-sync-item"></style>
    <settings-multidevice-feature-item id="wifiSyncItem" feature="[[MultiDeviceFeature.WIFI_SYNC]]" page-content-data="[[pageContentData]]">
      <template is="dom-if" if="[[!isWifiSyncV1Enabled_]]" restamp="">
        <settings-multidevice-wifi-sync-disabled-link class="secondary" id="featureSecondary" slot="feature-summary">
        </settings-multidevice-wifi-sync-disabled-link>
        <!-- Replace the standard feature-controller with an always disabled
          cr-toggle when Chrome Sync is disabled. When Chrome Sync is enabled
          the standard feature-controller is used. This is done to avoid adding
          extra logic in the standard feature-controller to keep the toggle
          unchecked when Chrome Sync is on but Wifi Sync host is enabled on the
          backend -->
        <cr-toggle disabled="true" slot="feature-controller">
        </cr-toggle>
      </template>
    </settings-multidevice-feature-item>
<!--_html_template_end_-->`,is:"settings-multidevice-wifi-sync-item",behaviors:[MultiDeviceFeatureBehavior,WebUIListenerBehavior],properties:{isWifiSyncV1Enabled_:Boolean},osSyncBrowserProxy_:null,syncBrowserProxy_:null,attached(){if(loadTimeData$1.getBoolean("splitSettingsSyncEnabled")){this.addWebUIListener("os-sync-prefs-changed",this.handleOsSyncPrefsChanged_.bind(this));this.osSyncBrowserProxy_.sendOsSyncPrefsChanged()}else{this.addWebUIListener("sync-prefs-changed",this.handleSyncPrefsChanged_.bind(this));this.syncBrowserProxy_.sendSyncPrefsChanged()}},created(){if(loadTimeData$1.getBoolean("splitSettingsSyncEnabled")){this.osSyncBrowserProxy_=OsSyncBrowserProxyImpl.getInstance()}else{this.syncBrowserProxy_=SyncBrowserProxyImpl.getInstance()}},handleSyncPrefsChanged_(syncPrefs){this.isWifiSyncV1Enabled_=!!syncPrefs&&syncPrefs.wifiConfigurationsSynced},handleOsSyncPrefsChanged_(osSyncFeatureEnabled,osSyncPrefs){this.isWifiSyncV1Enabled_=osSyncFeatureEnabled&&!!osSyncPrefs&&osSyncPrefs.osWifiConfigurationsSynced},focus(){this.$$("settings-multidevice-feature-item").focus()}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared iron-flex" scope="settings-multidevice-subpage">settings-multidevice-feature-item, settings-multidevice-tether-item {
  --feature-item-row-padding: 0;
}

settings-multidevice-feature-item:first-of-type {
  --feature-item-border-top-style: none;
}

cr-button {
  white-space: nowrap;
}

#feature-items-container {
  padding-inline-start: var(--cr-section-indent-padding);
}

</style>
    <div class="settings-box first">
      <div id="status-text-container" class="start" enabled$="[[isSuiteOn(pageContentData)]]" inner-h-t-m-l="[[getStatusInnerHtml_(pageContentData)]]">
      </div>
        <template is="dom-if" if="[[shouldShowVerifyButton_(pageContentData)]]" restamp="">
          <cr-button on-click="handleVerifyButtonClick_">
            Verify
          </cr-button>
        </template>
        <template is="dom-if" if="[[shouldShowSuiteToggle_(pageContentData)]]" restamp="">
          <settings-multidevice-feature-toggle toggle-aria-label="Connected phone features enable." feature="[[MultiDeviceFeature.BETTER_TOGETHER_SUITE]]" page-content-data="[[pageContentData]]" deep-link-focus-id$="[[Setting.kMultiDeviceOnOff]]">
          </settings-multidevice-feature-toggle>
        </template>
    </div>
    <template is="dom-if" if="[[shouldShowIndividualFeatures_(pageContentData)]]" restamp="">
      <div id="feature-items-container">
        <template is="dom-if" if="[[isFeatureSupported(
                MultiDeviceFeature.SMART_LOCK, pageContentData)]]" restamp="">
          <settings-multidevice-feature-item id="smartLockItem" feature="[[MultiDeviceFeature.SMART_LOCK]]" page-content-data="[[pageContentData]]" subpage-route="[[routes.SMART_LOCK]]" deep-link-focus-id$="[[Setting.kSmartLockOnOff]]">
          </settings-multidevice-feature-item>
        </template>
        <template is="dom-if" if="[[isFeatureSupported(
                MultiDeviceFeature.INSTANT_TETHERING, pageContentData)]]" restamp="">
          <settings-multidevice-tether-item id="instantTetheringItem" page-content-data="[[pageContentData]]" deep-link-focus-id$="[[Setting.kInstantTetheringOnOff]]">
          </settings-multidevice-tether-item>
        </template>
        <template is="dom-if" if="[[isFeatureSupported(
                MultiDeviceFeature.MESSAGES, pageContentData)]]" restamp="">
          <settings-multidevice-feature-item id="messagesItem" feature="[[MultiDeviceFeature.MESSAGES]]" page-content-data="[[pageContentData]]" deep-link-focus-id$="[[Setting.kMessagesOnOff]]
                  [[Setting.kMessagesSetUp]]">
            <template is="dom-if" if="[[doesAndroidMessagesRequireSetUp_(pageContentData)]]" restamp="">
              <cr-button disabled$="[[isAndroidMessagesSetupButtonDisabled_(
                                       pageContentData)]]" on-click="handleAndroidMessagesButtonClick_" slot="feature-controller">
                Set up
              </cr-button>
            </template>
          </settings-multidevice-feature-item>
        </template>
        <template is="dom-if" if="[[isFeatureSupported(
                MultiDeviceFeature.PHONE_HUB, pageContentData)]]" restamp="">
          <settings-multidevice-feature-item id="phoneHubItem" feature="[[MultiDeviceFeature.PHONE_HUB]]" page-content-data="[[pageContentData]]" deep-link-focus-id$="[[Setting.kPhoneHubOnOff]]">
          </settings-multidevice-feature-item>
        </template>
        <template is="dom-if" if="[[isFeatureSupported(
                MultiDeviceFeature.PHONE_HUB_NOTIFICATIONS, pageContentData)]]" restamp="">
          <settings-multidevice-feature-item id="phoneHubNotificationsItem" feature="[[MultiDeviceFeature.PHONE_HUB_NOTIFICATIONS]]" info-tooltip="[[getPhoneHubNotificationsTooltip_(
                                  pageContentData)]]" page-content-data="[[pageContentData]]" is-sub-feature="" deep-link-focus-id$="[[Setting.kPhoneHubNotificationsOnOff]]">
          </settings-multidevice-feature-item>
        </template>
        <template is="dom-if" if="[[isFeatureSupported(
                MultiDeviceFeature.PHONE_HUB_TASK_CONTINUATION, pageContentData)]]" restamp="">
          <settings-multidevice-task-continuation-item id="phoneHubTaskContinuationItem" page-content-data="[[pageContentData]]" deep-link-focus-id$="[[Setting.kPhoneHubTaskContinuationOnOff]]">
          </settings-multidevice-task-continuation-item>
        </template>
        <template is="dom-if" if="[[isFeatureSupported(
                MultiDeviceFeature.WIFI_SYNC, pageContentData)]]" restamp="">
          <settings-multidevice-wifi-sync-item id="wifiSyncItem" page-content-data="[[pageContentData]]" deep-link-focus-id$="[[Setting.kWifiSyncOnOff]]">
          </settings-multidevice-wifi-sync-item>
        </template>
      </div>
    </template>
    <div class="settings-box two-line">
      <div id="forgetDeviceLabel" class="start" aria-hidden="true">
        Forget phone
        <div id="forgetDeviceSummary" class="secondary" aria-hidden="true">
            Disconnect your phone from your FydeOS device
        </div>
      </div>
      <cr-button on-click="handleForgetDeviceClick_" aria-labelledby="forgetDeviceLabel" aria-describedby="forgetDeviceSummary" deep-link-focus-id$="[[Setting.kForgetPhone]]">
        Disconnect
      </cr-button>
    </div>
    <cr-dialog id="forgetDeviceDialog">
      <div slot="title">Forget phone</div>
      <div slot="body">
        <div class="first">
          Disconnect your phone from your FydeOS device. They will no longer connect automatically.
        </div>
      </div>
      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onForgetDeviceDialogCancelClick_">
          Cancel
        </cr-button>
        <cr-button id="confirmButton" class="action-button" on-click="onForgetDeviceDialogConfirmClick_">
          Disconnect
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"settings-multidevice-subpage",behaviors:[DeepLinkingBehavior,MultiDeviceFeatureBehavior,RouteObserverBehavior],properties:{routes:{type:Object,value:routes},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kInstantTetheringOnOff,chromeos.settings.mojom.Setting.kMultiDeviceOnOff,chromeos.settings.mojom.Setting.kSmartLockOnOff,chromeos.settings.mojom.Setting.kMessagesSetUp,chromeos.settings.mojom.Setting.kMessagesOnOff,chromeos.settings.mojom.Setting.kForgetPhone,chromeos.settings.mojom.Setting.kPhoneHubOnOff,chromeos.settings.mojom.Setting.kPhoneHubNotificationsOnOff,chromeos.settings.mojom.Setting.kPhoneHubTaskContinuationOnOff,chromeos.settings.mojom.Setting.kWifiSyncOnOff])}},browserProxy_:null,created(){this.browserProxy_=MultiDeviceBrowserProxyImpl.getInstance()},currentRouteChanged(route,oldRoute){if(route!==routes.MULTIDEVICE_FEATURES){return}this.attemptDeepLink()},handleVerifyButtonClick_(event){this.browserProxy_.retryPendingHostSetup()},handleAndroidMessagesButtonClick_(){this.browserProxy_.setUpAndroidSms()},shouldShowIndividualFeatures_(){return this.pageContentData.mode===MultiDeviceSettingsMode.HOST_SET_VERIFIED},shouldShowVerifyButton_(){return[MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_SERVER,MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_VERIFICATION].includes(this.pageContentData.mode)},shouldShowSuiteToggle_(){return this.pageContentData.mode===MultiDeviceSettingsMode.HOST_SET_VERIFIED},handleForgetDeviceClick_(){this.$.forgetDeviceDialog.showModal()},onForgetDeviceDialogCancelClick_(){this.$.forgetDeviceDialog.close()},onForgetDeviceDialogConfirmClick_(){this.fire("forget-device-requested");this.$.forgetDeviceDialog.close()},getStatusInnerHtml_(){if([MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_SERVER,MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_VERIFICATION].includes(this.pageContentData.mode)){return this.i18nAdvanced("multideviceVerificationText")}return this.isSuiteOn()?this.i18n("multideviceEnabled"):this.i18n("multideviceDisabled")},doesAndroidMessagesRequireSetUp_(){return this.getFeatureState(MultiDeviceFeature.MESSAGES)===MultiDeviceFeatureState.FURTHER_SETUP_REQUIRED},isAndroidMessagesSetupButtonDisabled_(){const messagesFeatureState=this.getFeatureState(MultiDeviceFeature.MESSAGES);return!this.isSuiteOn()||messagesFeatureState===MultiDeviceFeatureState.PROHIBITED_BY_POLICY},getPhoneHubNotificationsTooltip_(){if(!this.isPhoneHubNotificationAccessProhibited()){return""}return this.i18n("multideviceNotificationAccessProhibitedTooltip")}});// Copyright 2017 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-multidevice-page">cr-policy-indicator {
  padding: 0 var(--cr-controlled-by-spacing);
}

</style>
    <settings-animated-pages id="pages" section="multidevice" focus-config="[[focusConfig_]]">
      <div route-path="default">
        <div id="multidevice-item" class="settings-box first two-line no-padding">
          <div class="link-wrapper" id="suiteLinkWrapper" actionable$="[[doesClickOpenSubpage_(pageContentData)]]" on-click="handleItemClick_">
            <iron-icon icon="[[getIconName(MultiDeviceFeature.BETTER_TOGETHER_SUITE)]]" id="betterTogetherSuiteIcon">
            </iron-icon>
            <div class="middle settings-box-text" aria-hidden$="[[getTextAriaHidden_(pageContentData)]]">
              <div id="multidevice-label">
                [[getLabelText_(pageContentData)]]
              </div>
              <settings-localized-link id="multideviceSubLabel" class="secondary" localized-string="[[getSubLabelInnerHtml_(pageContentData)]]">
              </settings-localized-link>
            </div>
            <template is="dom-if" if="[[doesClickOpenSubpage_(pageContentData)]]" restamp="">
              <cr-icon-button class="subpage-arrow" aria-labelledby="multidevice-label" aria-describedby="multideviceSubLabel" aria-roledescription="Subpage button">
              </cr-icon-button>
            </template>
          </div>
          <template is="dom-if" if="[[!isSuiteAllowedByPolicy(pageContentData)]]" restamp="">
            <cr-policy-indicator id="suitePolicyIndicator" indicator-type="userPolicy">
            </cr-policy-indicator>
            <settings-multidevice-feature-toggle class="margin-matches-padding" toggle-aria-label="Connected phone features enable." feature="[[MultiDeviceFeature.BETTER_TOGETHER_SUITE]]" page-content-data="[[pageContentData]]" deep-link-focus-id$="[[Setting.kMultiDeviceOnOff]]">
            </settings-multidevice-feature-toggle>
          </template>
          <template is="dom-if" if="[[shouldShowSeparatorAndSubpageArrow_(pageContentData)]]" restamp="">
            <div class="separator"></div>
          </template>
          <template is="dom-if" if="[[shouldShowButton_(pageContentData)]]" restamp="">
            <cr-button class="margin-matches-padding" on-click="handleButtonClick_" aria-describedby="multideviceSubLabel" deep-link-focus-id$="[[Setting.kSetUpMultiDevice]]
                    [[Setting.kVerifyMultiDeviceSetup]]">
              [[getButtonText_(pageContentData)]]
            </cr-button>
          </template>
          <template is="dom-if" if="[[shouldShowToggle_(pageContentData)]]" restamp="">
            <settings-multidevice-feature-toggle class="margin-matches-padding" toggle-aria-label="Connected phone features enable." feature="[[MultiDeviceFeature.BETTER_TOGETHER_SUITE]]" page-content-data="[[pageContentData]]" deep-link-focus-id$="[[Setting.kMultiDeviceOnOff]]">
            </settings-multidevice-feature-toggle>
          </template>
        </div>
        <template is="dom-if" if="[[isNearbyShareSupported_]]" restamp="">
          <div id="nearbyshare-item" class="settings-box two-line no-padding">
            <div class="link-wrapper" id="nearbyLinkWrapper" actionable$="[[!isNearbyShareDisallowedByPolicy_(pageContentData)]]" on-click="nearbyShareClick_">
              <iron-icon icon="os-settings:nearby-share">
              </iron-icon>
              <div id="nearbyShareLabel" class="middle settings-box-text" aria-hidden="true">
                Nearby Share
                <template is="dom-if" if="[[showNearbyShareOnOffString_(
                          prefs.nearby_sharing.onboarding_complete.value,
                          pageContentData)]]" restamp="">
                  <div class="secondary" id="nearbyShareSecondary">
                    [[getOnOffString_(prefs.nearby_sharing.enabled.value,
                      'On', 'Off')]]
                  </div>
                </template>
                <template is="dom-if" if="[[showNearbyShareDescription_(
                          prefs.nearby_sharing.onboarding_complete.value,
                          pageContentData)]]" restamp="">
                  <div class="secondary" id="nearbyShareSecondary">
                    <settings-localized-link localized-string="Share files with people around you. &lt;a&gt;Learn more&lt;/a&gt;" link-url="https://support.google.com/chromebook?p=nearby_share">
                    </settings-localized-link>
                  </div>
                </template>
              </div>
              <template is="dom-if" if="[[prefs.nearby_sharing.enabled.value]]" restamp="">
                <cr-icon-button class="subpage-arrow" aria-labelledby="nearbyShareLabel" aria-describedby="nearbyShareSecondary" aria-roledescription="Subpage button">
                </cr-icon-button>
              </template>
            </div>
            <template is="dom-if" if="[[isNearbyShareDisallowedByPolicy_(pageContentData)]]" restamp="">
              <cr-policy-indicator id="nearbyPolicyIndicator" indicator-type="userPolicy">
              </cr-policy-indicator>
            </template>
            <template is="dom-if" if="[[!isNearbyShareDisallowedByPolicy_(pageContentData)]]" restamp="">
              <div class="separator"></div>
            </template>
            <template is="dom-if" if="[[showNearbyShareToggle_(
                      prefs.nearby_sharing.onboarding_complete.value,
                      pageContentData)]]" restamp="">
              <cr-toggle id="nearbySharingToggleButton" class="margin-matches-padding" aria-label="Nearby Share" checked="{{prefs.nearby_sharing.enabled.value}}" disabled="[[isNearbyShareDisallowedByPolicy_(pageContentData)]]" deep-link-focus-id$="[[Setting.kNearbyShareOnOff]]">
              </cr-toggle>
            </template>
            <template is="dom-if" if="[[showNearbyShareSetupButton_(
                      prefs.nearby_sharing.onboarding_complete.value,
                      pageContentData)]]" restamp="">
              <cr-button class="margin-matches-padding" id="nearbySetUp" on-click="handleNearbySetUpClick_" disabled="[[isNearbyShareDisallowedByPolicy_(pageContentData)]]">
                Set up
              </cr-button>
            </template>
          </div>
        </template>
      </div>
      <template is="dom-if" route-path="/multidevice/features" restamp="">
        <settings-subpage associated-control="[[$$('#multidevice-item')]]" page-title="[[getLabelText_(pageContentData)]]">
          <settings-multidevice-subpage page-content-data="[[pageContentData]]">
          </settings-multidevice-subpage>
        </settings-subpage>
      </template>
      <template is="dom-if" route-path="/multidevice/features/smartLock" restamp="">
        <settings-subpage associated-control="[[$$('#multidevice-item')]]" page-title="Smart Lock">
          <settings-multidevice-smartlock-subpage prefs="{{prefs}}" page-content-data="[[pageContentData]]">
          </settings-multidevice-smartlock-subpage>
        </settings-subpage>
      </template>
      <template is="dom-if" if="[[isNearbyShareSupported_]]" restamp="">
        <template is="dom-if" route-path="/multidevice/nearbyshare" restamp="">
          <settings-subpage associated-control="[[$$('#nearbyshare-item')]]" page-title="Nearby Share">
            <settings-nearby-share-subpage prefs="{{prefs}}">
            </settings-nearby-share-subpage>
          </settings-subpage>
        </template>
      </template>
    </settings-animated-pages>
    <template is="dom-if" if="[[showPasswordPromptDialog_]]" restamp="">
      <settings-password-prompt-dialog id="multidevicePasswordPrompt" on-token-obtained="onTokenObtained_">
      </settings-password-prompt-dialog>
    </template>
    <template is="dom-if" if="[[showNotificationAccessSetupDialog_]]" restamp="">
      <settings-multidevice-notification-access-setup-dialog on-close="onHideNotificationSetupAccessDialog_">
      </settings-multidevice-notification-access-setup-dialog>
    </template>
<!--_html_template_end_-->`,is:"settings-multidevice-page",behaviors:[DeepLinkingBehavior,RouteObserverBehavior,MultiDeviceFeatureBehavior,WebUIListenerBehavior,PrefsBehavior],properties:{prefs:{type:Object},focusConfig_:{type:Object,value(){const map=new Map;if(routes.MULTIDEVICE_FEATURES){map.set(routes.MULTIDEVICE_FEATURES.path,"#multidevice-item .subpage-arrow")}return map}},authToken_:{type:Object},featureToBeEnabledOnceAuthenticated_:{type:Number,value:null},showPasswordPromptDialog_:{type:Boolean,value:false},showNotificationAccessSetupDialog_:{type:Boolean,value:false},isNearbyShareSupported_:{type:Boolean,value:function(){return loadTimeData$1.getBoolean("isNearbyShareSupported")}},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kSetUpMultiDevice,chromeos.settings.mojom.Setting.kVerifyMultiDeviceSetup,chromeos.settings.mojom.Setting.kMultiDeviceOnOff,chromeos.settings.mojom.Setting.kNearbyShareOnOff])}},listeners:{close:"onDialogClose_","feature-toggle-clicked":"onFeatureToggleClicked_","forget-device-requested":"onForgetDeviceRequested_"},browserProxy_:null,ready(){this.browserProxy_=MultiDeviceBrowserProxyImpl.getInstance();this.addWebUIListener("settings.updateMultidevicePageContentData",this.onPageContentDataChanged_.bind(this));this.browserProxy_.getPageContentData().then(this.onInitialPageContentDataFetched_.bind(this))},currentRouteChanged(route,oldRoute){this.leaveNestedPageIfNoHostIsSet_();if(route!==routes.MULTIDEVICE){return}this.attemptDeepLink()},getLabelText_(){return this.pageContentData.hostDeviceName||this.i18n("multideviceSetupItemHeading")},getSubLabelInnerHtml_(){if(!this.isSuiteAllowedByPolicy()){return this.i18nAdvanced("multideviceSetupSummary")}switch(this.pageContentData.mode){case MultiDeviceSettingsMode.NO_ELIGIBLE_HOSTS:return this.i18nAdvanced("multideviceNoHostText");case MultiDeviceSettingsMode.NO_HOST_SET:return this.i18nAdvanced("multideviceSetupSummary");case MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_SERVER:case MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_VERIFICATION:return this.i18nAdvanced("multideviceVerificationText");default:return this.isSuiteOn()?this.i18n("multideviceEnabled"):this.i18n("multideviceDisabled")}},getButtonText_(){switch(this.pageContentData.mode){case MultiDeviceSettingsMode.NO_HOST_SET:return this.i18n("multideviceSetupButton");case MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_SERVER:case MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_VERIFICATION:return this.i18n("multideviceVerifyButton");default:return""}},getTextAriaHidden_(){return String(this.pageContentData.mode===MultiDeviceSettingsMode.HOST_SET_VERIFIED)},shouldShowButton_(){return[MultiDeviceSettingsMode.NO_HOST_SET,MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_SERVER,MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_VERIFICATION].includes(this.pageContentData.mode)},shouldShowToggle_(){return this.pageContentData.mode===MultiDeviceSettingsMode.HOST_SET_VERIFIED},shouldShowSeparatorAndSubpageArrow_(){return this.pageContentData.mode!==MultiDeviceSettingsMode.NO_ELIGIBLE_HOSTS},doesClickOpenSubpage_(){return this.isHostSet()},handleItemClick_(event){if(event.path[0].tagName==="A"){event.stopPropagation();return}if(!this.isHostSet()){return}Router.getInstance().navigateTo(routes.MULTIDEVICE_FEATURES)},handleButtonClick_(event){event.stopPropagation();switch(this.pageContentData.mode){case MultiDeviceSettingsMode.NO_HOST_SET:this.browserProxy_.showMultiDeviceSetupDialog();return;case MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_SERVER:case MultiDeviceSettingsMode.HOST_SET_WAITING_FOR_VERIFICATION:this.browserProxy_.retryPendingHostSetup()}},openPasswordPromptDialog_(){this.showPasswordPromptDialog_=true},onDialogClose_(event){event.stopPropagation();if(event.path.some((element=>element.id==="multidevicePasswordPrompt"))){this.onPasswordPromptDialogClose_()}},onPasswordPromptDialogClose_(){assert(this.featureToBeEnabledOnceAuthenticated_!==null);if(this.authToken_){this.browserProxy_.setFeatureEnabledState(this.featureToBeEnabledOnceAuthenticated_,true,this.authToken_.token);recordSettingChange();this.authToken_=undefined}this.featureToBeEnabledOnceAuthenticated_=null;this.showPasswordPromptDialog_=false},onFeatureToggleClicked_(event){const feature=event.detail.feature;const enabled=event.detail.enabled;if(enabled&&this.isAuthenticationRequiredToEnable_(feature)){this.featureToBeEnabledOnceAuthenticated_=feature;this.openPasswordPromptDialog_();return}if(feature===MultiDeviceFeature.PHONE_HUB_NOTIFICATIONS&&enabled){switch(this.pageContentData.notificationAccessStatus){case PhoneHubNotificationAccessStatus.PROHIBITED:assertNotReached$1("Cannot enable notification access; prohibited");return;case PhoneHubNotificationAccessStatus.AVAILABLE_BUT_NOT_GRANTED:this.showNotificationAccessSetupDialog_=true;return;default:break}}this.browserProxy_.setFeatureEnabledState(feature,enabled);recordSettingChange()},isAuthenticationRequiredToEnable_(feature){if(feature===MultiDeviceFeature.SMART_LOCK){return true}if(feature!==MultiDeviceFeature.BETTER_TOGETHER_SUITE){return false}const smartLockState=this.getFeatureState(MultiDeviceFeature.SMART_LOCK);return smartLockState===MultiDeviceFeatureState.UNAVAILABLE_SUITE_DISABLED||smartLockState===MultiDeviceFeatureState.UNAVAILABLE_INSUFFICIENT_SECURITY},onForgetDeviceRequested_(){this.browserProxy_.removeHostDevice();recordSettingChange();Router.getInstance().navigateTo(routes.MULTIDEVICE)},leaveNestedPageIfNoHostIsSet_(){if(!this.pageContentData){return}if(routes.NEARBY_SHARE===Router.getInstance().getCurrentRoute()){return}if(routes.MULTIDEVICE!==Router.getInstance().getCurrentRoute()&&routes.MULTIDEVICE.contains(Router.getInstance().getCurrentRoute())&&!this.isHostSet()){beforeNextRender(this,(()=>{Router.getInstance().navigateTo(routes.MULTIDEVICE)}))}},onInitialPageContentDataFetched_(newData){this.onPageContentDataChanged_(newData);if(this.pageContentData.notificationAccessStatus!==PhoneHubNotificationAccessStatus.AVAILABLE_BUT_NOT_GRANTED){return}const urlParams=Router.getInstance().getQueryParameters();if(urlParams.get("showNotificationAccessSetupDialog")!==null){this.showNotificationAccessSetupDialog_=true}},onPageContentDataChanged_(newData){this.pageContentData=newData;this.leaveNestedPageIfNoHostIsSet_()},onTokenObtained_(e){this.authToken_=e.detail},isNearbyShareDisallowedByPolicy_(){if(!this.pageContentData){return false}return this.pageContentData.isNearbyShareDisallowedByPolicy},getOnOffString_(state,onstr,offstr){return state?onstr:offstr},showNearbyShareToggle_(isOnboardingComplete){return isOnboardingComplete||this.isNearbyShareDisallowedByPolicy_()},showNearbyShareSetupButton_(isOnboardingComplete){return!isOnboardingComplete&&!this.isNearbyShareDisallowedByPolicy_()},showNearbyShareOnOffString_(isOnboardingComplete){return isOnboardingComplete&&!this.isNearbyShareDisallowedByPolicy_()},showNearbyShareDescription_(isOnboardingComplete){return!isOnboardingComplete||this.isNearbyShareDisallowedByPolicy_()},nearbyShareClick_(event){if(this.isNearbyShareDisallowedByPolicy_()){return}const nearbyEnabled=this.getPref("nearby_sharing.enabled").value;const onboardingComplete=this.getPref("nearby_sharing.onboarding_complete").value;let params=undefined;if(!nearbyEnabled){if(onboardingComplete){this.setPrefValue("nearby_sharing.enabled",true);return}params=new URLSearchParams;params.set("onboarding","")}Router.getInstance().navigateTo(routes.NEARBY_SHARE,params)},onHideNotificationSetupAccessDialog_(){this.showNotificationAccessSetupDialog_=false},handleNearbySetUpClick_(){const params=new URLSearchParams;params.set("onboarding","");params.set("entrypoint","settings");Router.getInstance().navigateTo(routes.NEARBY_SHARE,params)}});
/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/const IronMultiSelectableBehaviorImpl={properties:{multi:{type:Boolean,value:false,observer:"multiChanged"},selectedValues:{type:Array,notify:true,value:function(){return[]}},selectedItems:{type:Array,readOnly:true,notify:true,value:function(){return[]}}},observers:["_updateSelected(selectedValues.splices)"],select:function(value){if(this.multi){this._toggleSelected(value)}else{this.selected=value}},multiChanged:function(multi){this._selection.multi=multi;this._updateSelected()},get _shouldUpdateSelection(){return this.selected!=null||this.selectedValues!=null&&this.selectedValues.length},_updateAttrForSelected:function(){if(!this.multi){IronSelectableBehavior._updateAttrForSelected.apply(this)}else if(this.selectedItems&&this.selectedItems.length>0){this.selectedValues=this.selectedItems.map((function(selectedItem){return this._indexToValue(this.indexOf(selectedItem))}),this).filter((function(unfilteredValue){return unfilteredValue!=null}),this)}},_updateSelected:function(){if(this.multi){this._selectMulti(this.selectedValues)}else{this._selectSelected(this.selected)}},_selectMulti:function(values){values=values||[];var selectedItems=(this._valuesToItems(values)||[]).filter((function(item){return item!==null&&item!==undefined}));this._selection.clear(selectedItems);for(var i=0;i<selectedItems.length;i++){this._selection.setItemSelected(selectedItems[i],true)}if(this.fallbackSelection&&!this._selection.get().length){var fallback=this._valueToItem(this.fallbackSelection);if(fallback){this.select(this.fallbackSelection)}}},_selectionChange:function(){var s=this._selection.get();if(this.multi){this._setSelectedItems(s);this._setSelectedItem(s.length?s[0]:null)}else{if(s!==null&&s!==undefined){this._setSelectedItems([s]);this._setSelectedItem(s)}else{this._setSelectedItems([]);this._setSelectedItem(null)}}},_toggleSelected:function(value){var i=this.selectedValues.indexOf(value);var unselected=i<0;if(unselected){this.push("selectedValues",value)}else{this.splice("selectedValues",i,1)}},_valuesToItems:function(values){return values==null?null:values.map((function(value){return this._valueToItem(value)}),this)}};const IronMultiSelectableBehavior=[IronSelectableBehavior,IronMultiSelectableBehaviorImpl];
/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/Polymer({is:"iron-selector",behaviors:[IronMultiSelectableBehavior]});// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const CrPicture={};CrPicture.SelectionTypes={CAMERA:"camera",FILE:"file",PROFILE:"profile",OLD:"old",DEFAULT:"default",NONE:""};CrPicture.kDefaultImageUrl="chrome://theme/IDR_LOGIN_DEFAULT_USER";// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const PNG_FRAME_DELAY_NUMERATOR=1;const PNG_FRAME_DELAY_DENOMINATOR=20;const PNG_SIGNATURE=[137,80,78,71,13,10,26,10];const PNG_BIT_DEPTH=8;const PNG_COMPRESSION_METHOD=0;const PNG_FILTER_METHOD=0;const PNG_INTERLACE_METHOD=0;const PNG_CRC_TABLE=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];function convertImageSequenceToPng(images){const png={frames:0,sequences:0,chunks:[]};png.chunks.push(new Uint8Array(PNG_SIGNATURE));const IHDR=new Uint8Array(12+13);writeUInt32(IHDR,13,0);writeFourCC(IHDR,"IHDR",4);writeUInt8(IHDR,PNG_BIT_DEPTH,16);writeUInt8(IHDR,PNG_COMPRESSION_METHOD,18);writeUInt8(IHDR,PNG_FILTER_METHOD,19);writeUInt8(IHDR,PNG_INTERLACE_METHOD,20);png.chunks.push(IHDR);const acTL=new Uint8Array(12+8);writeUInt32(acTL,8,0);writeFourCC(acTL,"acTL",4);writeUInt32(acTL,images.length,8);writeUInt32(acTL,0,12);writeUInt32(acTL,getCRC(acTL,4,16),16);png.chunks.push(acTL);for(let i=0;i<images.length;++i){appendFrameFromDataURL(images[i],png)}writeUInt32(IHDR,png.width,8);writeUInt32(IHDR,png.height,12);writeUInt8(IHDR,png.colour,17);writeUInt32(IHDR,getCRC(IHDR,4,8+13),8+13);const IEND=new Uint8Array(12);writeUInt32(IEND,0,0);writeFourCC(IEND,"IEND",4);writeUInt32(IEND,getCRC(IEND,4,8),8);png.chunks.push(IEND);return"data:image/png;base64,"+btoa(png.chunks.map((function(chunk){return String.fromCharCode.apply(null,chunk)})).join(""))}function isEncodedPngDataUrlAnimated(url){const decoded=atob(url.substr("data:image/png;base64,".length));return decoded.substr(37,4)==="acTL"}function readUInt32(buffer,offset){return(buffer[offset+0]<<24)+(buffer[offset+1]<<16)+(buffer[offset+2]<<8)+(buffer[offset+3]<<0)}function readString(buffer,offset,length){let str="";for(let i=0;i<length;i++){str+=String.fromCharCode(buffer[offset+i])}return str}function writeBytes(buffer,bytes,offset){for(let i=0;i<bytes.length;i++){buffer[offset+i]=bytes[i]&255}}function writeUInt8(buffer,u8,offset){buffer[offset]=u8&255}function writeUInt16(buffer,u16,offset){buffer[offset+0]=u16>>8&255;buffer[offset+1]=u16>>0&255}function writeUInt32(buffer,u32,offset){buffer[offset+0]=u32>>24&255;buffer[offset+1]=u32>>16&255;buffer[offset+2]=u32>>8&255;buffer[offset+3]=u32>>0&255}function writeString(buffer,string,offset){for(let i=0;i<string.length;i++){buffer[offset+i]=string.charCodeAt(i)}}function writeFourCC(buffer,fourcc,offset){buffer[offset+0]=fourcc.charCodeAt(0);buffer[offset+1]=fourcc.charCodeAt(1);buffer[offset+2]=fourcc.charCodeAt(2);buffer[offset+3]=fourcc.charCodeAt(3)}function getCRC(buffer,start,end){let crc=4294967295;for(let i=start;i<end;i++){const crcTableIndex=(crc^buffer[i])&255;crc=PNG_CRC_TABLE[crcTableIndex]^crc>>>8}return crc^4294967295}function appendFrameFromDataURL(dataURL,png){const byteString=atob(dataURL.split(",")[1]);const bytes=new Uint8Array(byteString.length);writeString(bytes,byteString,0);const signature=bytes.subarray(0,PNG_SIGNATURE.length);if(signature.toString()!==PNG_SIGNATURE.toString()){console.error("Bad PNG signature")}const fcTL=new Uint8Array(12+26);writeUInt32(fcTL,26,0);writeFourCC(fcTL,"fcTL",4);writeUInt32(fcTL,png.sequences,8);writeUInt32(fcTL,0,20);writeUInt32(fcTL,0,24);writeUInt16(fcTL,PNG_FRAME_DELAY_NUMERATOR,28);writeUInt16(fcTL,PNG_FRAME_DELAY_DENOMINATOR,30);writeUInt8(fcTL,0,32);writeUInt8(fcTL,0,33);png.sequences+=1;png.chunks.push(fcTL);let i=PNG_SIGNATURE.length;while(i+12<=bytes.length){const length=readUInt32(bytes,i);const type=readString(bytes,i+4,4);const chunk=bytes.subarray(i+8,i+8+length);if(length!==chunk.length){console.error("Unexpectedly reached end of file")}switch(type){case"IHDR":const width=readUInt32(chunk,0);const height=readUInt32(chunk,4);const depth=chunk[8];const colour=chunk[9];const compression=chunk[10];const filter=chunk[11];const interlace=chunk[12];if(png.frames===0){png.width=width;png.height=height;png.colour=colour}if(width!==png.width){console.error("Bad PNG width: "+width)}if(height!==png.height){console.error("Bad PNG height: "+height)}if(depth!==PNG_BIT_DEPTH){console.error("Bad PNG bit depth: "+depth)}if(colour!==png.colour){console.error("Bad PNG colour type: "+colour)}if(compression!==PNG_COMPRESSION_METHOD){console.error("Bad PNG compression method: "+compression)}if(filter!==PNG_FILTER_METHOD){console.error("Bad PNG filter method: "+filter)}if(interlace!==PNG_INTERLACE_METHOD){console.error("Bad PNG interlace method: "+interlace)}break;case"IDAT":if(png.frames===0){const IDAT=new Uint8Array(12+length);writeUInt32(IDAT,length,0);writeFourCC(IDAT,"IDAT",4);writeBytes(IDAT,chunk,8);writeUInt32(IDAT,getCRC(IDAT,4,8+length),8+length);png.chunks.push(IDAT)}else{const fdAT=new Uint8Array(12+4+length);writeUInt32(fdAT,4+length,0);writeFourCC(fdAT,"fdAT",4);writeUInt32(fdAT,png.sequences,8);writeBytes(fdAT,chunk,12);writeUInt32(fdAT,getCRC(fdAT,4,12+length),12+length);png.sequences+=1;png.chunks.push(fdAT)}break;case"PLTE":const PLTE=new Uint8Array(12+length);writeUInt32(PLTE,length,0);writeFourCC(PLTE,"PLTE",4);writeBytes(PLTE,chunk,8);writeUInt32(PLTE,getCRC(PLTE,4,8+length),8+length);png.chunks.push(PLTE);break;case"IEND":writeUInt32(fcTL,png.width,12);writeUInt32(fcTL,png.height,16);writeUInt32(fcTL,getCRC(fcTL,4,34),34);png.frames+=1;return}i+=12+length}console.error("Unexpectedly reached end of file")}// Copyright 2017 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style" scope="cr-picture-list">:host {
  display: inline-block;
        margin-top: -6px;
}

img {
  border-radius: 50%;
        height: 64px;
        margin: 6px;
        vertical-align: top;
        width: 64px;
}

img.iron-selected {
  border: 2px solid rgba(66, 133, 244, 0.6);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.17);
        margin: 4px;
        outline: none;
}

img:focus {
  outline: 1px solid rgba(66, 133, 244, 0.6);
}

iron-icon {
  --iron-icon-fill-color: var(--google-grey-500);
        --iron-icon-height: 24px;
        --iron-icon-width: 24px;
        background-color: rgb(237, 237, 237);
        border: 0;
        border-radius: 50%;
        margin: 6px;
        padding: 20px;
        position: static;
}

iron-icon.iron-selected {
  border: 2px solid rgba(66, 133, 244, 0.6);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.17);
        margin: 4px;
        outline: none;
}

iron-icon:focus {
  outline: 1px solid rgba(66, 133, 244, 0.6);
}

</style>

    <div id="container">
      <iron-a11y-keys keys="up down left right space enter" on-keys-pressed="onKeysPressed">
      </iron-a11y-keys>
      <iron-selector id="selector" on-iron-activate="onIronActivate_" on-iron-select="onIronSelect_" on-selected-item-changed="onSelectedItemChanged_" selected-item="{{selectedItem}}" role="radiogroup">
        <!-- Selects the camera as the picture source. -->
        <iron-icon id="cameraImage" role="radio" data-type$="[[selectionTypesEnum_.CAMERA]]" icon="cr:camera-alt" title="[[takePhotoLabel]]" hidden="[[!cameraPresent]]">
        </iron-icon>
        <template is="dom-if" if="[[chooseFileLabel]]">
          <!-- Selects the file picker as the picture source. -->
          <iron-icon data-type$="[[selectionTypesEnum_.FILE]]" role="radio" icon="cr:folder-filled" title="[[chooseFileLabel]]">
          </iron-icon>
        </template>
        <!-- Shows and selects the current profile picture. -->
        <img id="profileImage" role="radio" data-type$="[[selectionTypesEnum_.PROFILE]]" data-url$="[[profileImageUrl_]]" src="[[getImgSrc_(profileImageUrl_)]]" hidden="[[!profileImageUrl_]]" srcset="[[getImgSrc2x_(profileImageUrl_)]]" title="[[profileImageLabel]]">
        <!-- Shows and selects the previously selected ('old') picture. -->
        <img id="oldImage" role="radio" data-type$="[[selectionTypesEnum_.OLD]]" data-image-index$="[[oldImageIndex_]]" data-url$="[[oldImageUrl_]]" src="[[getImgSrc_(oldImageUrl_)]]" hidden="[[!oldImageUrl_]]" title="[[oldImageLabel]]">
        <!-- Shows the list of available images to select from. -->
        <template is="dom-repeat" items="[[defaultImages]]">
          <img role="radio" data-type$="[[selectionTypesEnum_.DEFAULT]]" data-index$="[[index]]" data-image-index$="[[item.index]]" data-url$="[[item.url]]" src="[[getImgSrc_(item.url)]]" srcset="[[getImgSrc2x_(item.url)]]" title="[[item.title]]">
        </template>
      </iron-selector>
    </div>
<!--_html_template_end_-->`,is:"cr-picture-list",properties:{cameraPresent:Boolean,defaultImages:{type:Array,observer:"onDefaultImagesChanged_"},chooseFileLabel:String,oldImageLabel:String,profileImageLabel:String,takePhotoLabel:String,selectedItem:{type:Object,notify:true,observer:"onImageSelected_"},profileImageUrl_:{type:String,value:CrPicture.kDefaultImageUrl},oldImageUrl_:{type:String,value:""},oldImageIndex_:{type:Number,value:-1},selectionTypesEnum_:{type:Object,value:CrPicture.SelectionTypes,readOnly:true}},cameraSelected_:false,selectedImageUrl_:"",fallbackImage_:null,setFocus(){if(this.selectedItem){this.selectedItem.focus()}},onImageSelected_(newImg,oldImg){if(newImg){newImg.setAttribute("tabindex","0");newImg.setAttribute("aria-checked","true");newImg.focus()}if(oldImg){oldImg.removeAttribute("tabindex");oldImg.removeAttribute("aria-checked")}},setProfileImageUrl(imageUrl,selected){this.profileImageUrl_=imageUrl;this.$.profileImage.title=this.profileImageLabel;if(!selected){return}this.setSelectedImage_(this.$.profileImage)},setSelectedImageUrl(imageUrl){const image=this.$.selector.items.find((function(image){return image.dataset.url===imageUrl}));if(image){this.setSelectedImage_(image);this.selectedImageUrl_=""}else{this.selectedImageUrl_=imageUrl}},setOldImageUrl(imageUrl,imageIndex){if(imageUrl===CrPicture.kDefaultImageUrl||imageIndex===0){this.oldImageUrl_="";this.setSelectedImageUrl(CrPicture.kDefaultImageUrl);return}this.oldImageUrl_=imageUrl;this.oldImageIndex_=imageIndex===undefined?-1:imageIndex;if(imageUrl){this.$.selector.select(this.$.selector.indexOf(this.$.oldImage));this.selectedImageUrl_=imageUrl}else if(this.cameraSelected_){this.$.selector.select(this.$.selector.indexOf(this.$.cameraImage))}else if(this.fallbackImage_&&this.fallbackImage_.dataset.type!==CrPicture.SelectionTypes.OLD){this.selectImage_(this.fallbackImage_,true)}else{this.selectImage_(this.$.profileImage,true)}},onKeysPressed(e){if(!this.selectedItem){return}const selector=this.$.selector;const prevSelected=this.selectedItem;let activate=false;switch(e.detail.key){case"enter":case"space":activate=true;break;case"up":case"left":do{selector.selectPrevious()}while(this.selectedItem.hidden&&this.selectedItem!==prevSelected);break;case"down":case"right":do{selector.selectNext()}while(this.selectedItem.hidden&&this.selectedItem!==prevSelected);break;default:return}this.selectImage_(this.selectedItem,activate);e.detail.keyboardEvent.preventDefault()},setSelectedImage_(image){this.fallbackImage_=image;if(!this.selectedItem||this.selectedItem.dataset.type!==CrPicture.SelectionTypes.CAMERA){this.$.selector.select(this.$.selector.indexOf(image));this.selectedItem=image}},onDefaultImagesChanged_(){if(this.selectedImageUrl_){this.setSelectedImageUrl(this.selectedImageUrl_)}},selectImage_(selected,activate){this.cameraSelected_=selected.dataset.type===CrPicture.SelectionTypes.CAMERA;this.selectedItem=selected;if(selected.dataset.type===CrPicture.SelectionTypes.CAMERA){if(activate){this.fire("focus-action",selected)}}else if(activate||selected.dataset.type!==CrPicture.SelectionTypes.FILE){this.fire("image-activate",selected)}},onIronActivate_(event){event.stopPropagation();const type=event.detail.item.dataset.type;const activate=type!==CrPicture.SelectionTypes.CAMERA;this.selectImage_(event.detail.item,activate)},onIronSelect_(event){event.stopPropagation()},onSelectedItemChanged_(event){if(event.target.selectedItem){event.target.selectedItem.scrollIntoViewIfNeeded(false)}},getImgSrc_(url){if(url.startsWith("chrome://theme")){return url+"[0]"}if(url.split(",")[0]==="data:image/png;base64"){return convertImageSequenceToPng([url])}return url},getImgSrc2x_(url){if(!url.startsWith("chrome://theme")){return""}return url+"[0]@2x 2x"}});const template$8=html`<iron-iconset-svg name="cr-picture" size="24">
  <svg>
    <defs>
      <g id="camera-alt-icon"><circle cx="12" cy="12" r="3.2"></circle><path d="M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"></path></g>
      <g id="camera-shutter-icon"><circle cx="12" cy="12" r="10" stroke-width="2"></circle></g>
      <g id="videocam-icon"><path d="M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z"></path></g>
      <g id="videocam-shutter-icon"><circle cx="12" cy="12" r="7" stroke-width="8"></circle></g>
    </defs>
  </svg>
</iron-iconset-svg>
`;document.head.appendChild(template$8.content);// Copyright 2017 The Chromium Authors. All rights reserved.
const CAPTURE_SIZE={width:576,height:576};const CAPTURE_INTERVAL_MS=1e3/10;const CAPTURE_DURATION_MS=1e3;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="cr-camera">:host {
  --cr-camera-hidden-frame-size: 406px;
        --cr-camera-preview-frame-size: 280px;
}

#perspectiveBox {
  height: var(--cr-camera-image-size, 228px);
        margin: auto;
        perspective: 600px;
        width: var(--cr-camera-image-size, 228px);
}

#userImageStreamCrop {
  border-top-left-radius: 2px;
        border-top-right-radius: 2px;
        height: 100%;
        overflow: hidden;
        position: relative;
        transform: rotateY(180deg);
        width: 100%;
}

#userImageStreamCrop::after {
  border: 100px solid rgba(214, 214, 214, 0.34);
        border-radius: 100%;
        content: '';
        display: block;
        height: var(--cr-camera-hidden-frame-size);
        margin: 50% 50%;
        transform: translateZ(0) translateX(-50%) translateY(-50%);
        transition: width 100ms, height 100ms;
        transition-timing-function: ease-in;
        width: var(--cr-camera-hidden-frame-size);
}

:host-context([dir=rtl]) #userImageStreamCrop::after {
  float: left;
}

#userImageStreamCrop.preview::after {
  height: var(--cr-camera-preview-frame-size);
        transition-timing-function: ease-out;
        width: var(--cr-camera-preview-frame-size);
}

:host([!videomode]) #userImageStreamCrop.capture::after {
  background-color: white;
        transition: background-color 50ms ease-in 100ms;
}

@-webkit-keyframes flash {
0% {
  background-color: rgba(255, 255, 255, 0);
}

33% {
  background-color: rgba(255, 255, 255, 0.67);
}

100% {
  background-color: rgba(255, 255, 255, 0);
}

}

:host([videomode]) #userImageStreamCrop.capture::after {
  animation-delay: 100ms;
        animation-duration: 100ms;
        animation-iteration-count: 10;
        animation-name: flash;
        animation-timing-function: ease-out;
}

paper-spinner-lite {
  bottom: 0;
        left: 0;
        margin: auto auto;
        position: absolute;
        right: 0;
        top: 0;
}

#cameraVideo {
  height: var(--cr-camera-image-size, 228px);
        object-fit: cover;
        object-position: center;
        position: absolute;
        width: var(--cr-camera-image-size, 228px);
}

#cameraControls {
  align-items: center;
        background-color: var(--google-blue-500);
        border-bottom-left-radius: 2px;
        border-bottom-right-radius: 2px;
        display: flex;
        height: 32px;
        justify-content: space-between;
        margin: auto;
        width: var(--cr-camera-image-size, 228px);
}

#cameraControls > div {
  height: 28px;
        line-height: normal;
        margin: 0 10px;
        width: 28px;
}

#cameraControls cr-icon-button {
  --cr-icon-button-icon-size: 20px;
        --cr-icon-button-size: 28px;
        margin: 0;
}

#takePhoto {
  --cr-icon-button-fill-color: #ededed;
        --cr-icon-button-stroke-color: white;
}

:host([videomode]) #takePhoto {
  --cr-icon-button-fill-color: red;
}

#switchMode {
  --cr-icon-button-fill-color: white;
}

:host-context([dir=rtl]) #switchMode {
  float: left;
}

</style>
    <div id="perspectiveBox">
      <div id="userImageStreamCrop">
        <video id="cameraVideo" autoplay="" hidden="[[!cameraOnline_]]"></video>
        <paper-spinner-lite active="[[!cameraOnline_]]"></paper-spinner-lite>
      </div>
    </div>
    <div id="cameraControls">
      <div>
        <!-- Empty div for even 'space-between' justification -->
      </div>
      <div>
        <iron-a11y-keys keys="up down left right"></iron-a11y-keys>
        <cr-icon-button id="takePhoto" tabindex="1" title="[[getTakePhotoLabel_(videomode, takePhotoLabel,
                captureVideoLabel)]]" on-click="takePhoto" disabled="[[!cameraOnline_]]" iron-icon="[[getTakePhotoIcon_(videomode)]]">
        </cr-icon-button>
      </div>
      <div>
        <cr-icon-button hidden="[[!videoModeEnabled]]" id="switchMode" tabindex="2" on-click="onTapSwitchMode_" title="[[getSwitchModeLabel_(videomode, switchModeToCameraLabel,
                switchModeToVideoLabel)]]" disabled="[[!cameraOnline_]]" iron-icon="[[getSwitchModeIcon_(videomode)]]">
        </cr-icon-button>
      </div>
    </div>
<!--_html_template_end_-->`,is:"cr-camera",properties:{takePhotoLabel:String,captureVideoLabel:String,switchModeToCameraLabel:String,switchModeToVideoLabel:String,videoModeEnabled:{type:Boolean,value:false},videomode:{type:Boolean,value:false,reflectToAttribute:true},cameraOnline_:{type:Boolean,value:false}},cameraStartInProgress_:false,cameraCaptureInProgress_:false,attached(){this.$.cameraVideo.addEventListener("canplay",function(){this.$.userImageStreamCrop.classList.add("preview");this.cameraOnline_=true;this.focusTakePhotoButton()}.bind(this));this.startCamera()},detached(){this.stopCamera()},focusTakePhotoButton(){if(this.cameraOnline_){this.$.takePhoto.focus()}},takePhoto(){if(!this.cameraOnline_||this.cameraCaptureInProgress_){return}this.cameraCaptureInProgress_=true;const frames=[];if(this.videomode){const captureSize={width:CAPTURE_SIZE.width/2,height:CAPTURE_SIZE.height/2};const captureFrameCount=CAPTURE_DURATION_MS/CAPTURE_INTERVAL_MS;while(frames.length<captureFrameCount){frames.push(this.allocateFrame_(captureSize))}}else{frames.push(this.allocateFrame_(CAPTURE_SIZE))}const capturedFrames=[];this.$.userImageStreamCrop.classList.remove("preview");this.$.userImageStreamCrop.classList.add("capture");const interval=setInterval((()=>{if(frames.length){capturedFrames.push(this.captureFrame_(this.$.cameraVideo,frames.pop()))}else{clearInterval(interval);this.fire("photo-taken",{photoDataUrl:this.convertFramesToPng_(capturedFrames)});this.$.userImageStreamCrop.classList.remove("capture");this.cameraCaptureInProgress_=false}}),CAPTURE_INTERVAL_MS)},startCamera(){this.stopCamera();this.cameraStartInProgress_=true;const successCallback=function(stream){if(this.cameraStartInProgress_){this.$.cameraVideo.srcObject=stream;this.cameraStream_=stream}else{this.stopVideoTracks_(stream)}this.cameraStartInProgress_=false}.bind(this);const errorCallback=function(){this.cameraOnline_=false;this.cameraStartInProgress_=false}.bind(this);const videoConstraints={facingMode:"user",width:{ideal:CAPTURE_SIZE.width},height:{ideal:CAPTURE_SIZE.height},resizeMode:"none"};navigator.webkitGetUserMedia({video:videoConstraints},successCallback,errorCallback)},stopCamera(){this.$.userImageStreamCrop.classList.remove("preview");this.cameraOnline_=false;this.$.cameraVideo.srcObject=null;if(this.cameraStream_){this.stopVideoTracks_(this.cameraStream_);this.cameraStream_=null}this.cameraStartInProgress_=false},stopVideoTracks_(stream){const tracks=stream.getVideoTracks();for(let i=0;i<tracks.length;i++){tracks[i].stop()}},onTapSwitchMode_(){this.videomode=!this.videomode;this.fire("switch-mode",this.videomode)},allocateFrame_(size){const canvas=document.createElement("canvas");canvas.width=size.width;canvas.height=size.height;const ctx=canvas.getContext("2d",{alpha:false});ctx.translate(size.width,0);ctx.scale(-1,1);return canvas},captureFrame_(video,canvas){const ctx=canvas.getContext("2d",{alpha:false});const width=video.videoWidth;const height=video.videoHeight;if(width<canvas.width||height<canvas.height){console.error("Video capture size too small: "+width+"x"+height+"!")}const src={};if(width/canvas.width>height/canvas.height){src.height=height;src.width=height*canvas.width/canvas.height}else{src.width=width;src.height=width*canvas.height/canvas.width}src.x=(width-src.width)/2;src.y=(height-src.height)/2;ctx.drawImage(video,src.x,src.y,src.width,src.height,0,0,canvas.width,canvas.height);return canvas},convertFramesToPng_(frames){const encodedImages=frames.map((function(frame){return frame.toDataURL("image/png")}));if(encodedImages.length===1){return encodedImages[0]}const forwardBackwardImageSequence=encodedImages.concat(encodedImages.slice(1,-1).reverse());return convertImageSequenceToPng(forwardBackwardImageSequence)},getTakePhotoIcon_(){return this.videomode?"cr-picture:videocam-shutter-icon":"cr-picture:camera-shutter-icon"},getTakePhotoLabel_(videomode,photoLabel,videoLabel){return videomode?videoLabel:photoLabel},getSwitchModeIcon_(){return this.videomode?"cr-picture:camera-alt-icon":"cr-picture:videocam-icon"},getSwitchModeLabel_(videomode,cameraLabel,videoLabel){return videomode?cameraLabel:videoLabel}});// Copyright 2017 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style" scope="cr-picture-pane">:host {
  display: inline-block;
}

cr-camera {
  --cr-camera-image-size: 288px;
}

#preview {
  height: 288px;
}

img {
  background-size: 100% 100%;
        border-top-left-radius: 2px;
        border-top-right-radius: 2px;
        display: block;
        height: 288px;
        width: 288px;
}

img:not([data-show-discard]) {
  background-color: rgba(0, 0, 0, 0.08);
        border-radius: 2px;
        bottom: 0;
        height: var(--cr-picture-image-size, 228px);
        left: 0;
        margin: auto;
        padding: 2px;
        position: absolute;
        right: 0;
        top: 0;
        width: var(--cr-picture-image-size, 228px);
}

#discard {
  align-items: center;
        background-clip: content-box;
        background-color: var(--google-blue-500);
        border-bottom-left-radius: 2px;
        border-bottom-right-radius: 2px;
        display: flex;
        height: 32px;
        justify-content: center;
        width: 288px;
}

cr-icon-button {
  --cr-icon-button-fill-color: white;
        --cr-icon-button-icon-size: 24px;
        --cr-icon-button-size: 28px;
        margin: 0;
}

</style>
    <div id="preview" hidden="[[!showImagePreview_(cameraActive_, imageSrc)]]">
      <img id="image" alt="[[previewAltText]]" src="[[getImgSrc_(imageUrl)]]" data-show-discard$="[[showDiscard_(imageType)]]">
      <div id="discard" hidden="[[!showDiscard_(imageType)]]">
        <cr-icon-button class="icon-picture-delete" id="discardImage" title="[[discardImageLabel]]" on-click="onTapDiscardImage_">
        </cr-icon-button>
      </div>
    </div>
    <template is="dom-if" if="[[cameraActive_]]">
      <cr-camera id="camera" take-photo-label="[[takePhotoLabel]]" capture-video-label="[[captureVideoLabel]]" switch-mode-to-camera-label="[[switchModeToCameraLabel]]" switch-mode-to-video-label="[[switchModeToVideoLabel]]" video-mode-enabled="[[cameraVideoModeEnabled]]">
      </cr-camera>
    </template>
<!--_html_template_end_-->`,is:"cr-picture-pane",properties:{cameraPresent:Boolean,imageSrc:{type:String,observer:"imageSrcChanged_"},imageUrl:{type:String,value:""},imageType:{type:String,value:CrPicture.SelectionTypes.NONE},discardImageLabel:String,previewAltText:String,takePhotoLabel:String,captureVideoLabel:String,switchModeToCameraLabel:String,switchModeToVideoLabel:String,cameraVideoModeEnabled:Boolean,cameraActive_:{type:Boolean,computed:"getCameraActive_(cameraPresent, imageType)",observer:"cameraActiveChanged_"}},takePhoto(){const camera=this.$$("#camera");if(camera){camera.takePhoto()}},focusActionButton(){if(this.showDiscard_()){this.$.discardImage.focus()}else if(this.cameraActive_){this.$$("#camera").focusTakePhotoButton()}},getCameraActive_(){return this.cameraPresent&&this.imageType===CrPicture.SelectionTypes.CAMERA},cameraActiveChanged_(){const camera=this.$$("#camera");if(!camera){return}if(this.cameraActive_){camera.startCamera()}else{camera.stopCamera()}},imageSrcChanged_(){if(this.imageUrl.startsWith("blob:")){URL.revokeObjectURL(this.imageUrl)}const image=this.$$("#image");if(this.imageSrc.startsWith("data:image/png")){const byteString=atob(this.imageSrc.split(",")[1]);const bytes=new Uint8Array(byteString.length);for(let i=0;i<byteString.length;i++){bytes[i]=byteString.charCodeAt(i)}const blob=new Blob([bytes],{type:"image/png"});image.style.backgroundImage="url("+convertImageSequenceToPng([this.imageSrc])+")";this.imageUrl=URL.createObjectURL(blob)}else{image.style.backgroundImage="none";this.imageUrl=this.imageSrc}},showImagePreview_(){return!this.cameraActive_&&!!this.imageSrc},showDiscard_(){return this.imageType===CrPicture.SelectionTypes.OLD},onTapDiscardImage_(){this.fire("discard-image")},getImgSrc_(url){if(url.startsWith("chrome://theme")){return url+"@2x"}return url}});// Copyright 2016 The Chromium Authors. All rights reserved.
class ChangePictureBrowserProxy{initialize(){}selectDefaultImage(imageUrl){}selectOldImage(){}selectProfileImage(){}photoTaken(photoDataUrl){}chooseFile(){}requestSelectedImage(){}}class ChangePictureBrowserProxyImpl{initialize(){chrome.send("onChangePicturePageInitialized")}selectDefaultImage(imageUrl){chrome.send("selectImage",[imageUrl,"default"])}selectOldImage(){chrome.send("selectImage",["","old"])}selectProfileImage(){chrome.send("selectImage",["","profile"])}photoTaken(photoDataUrl){chrome.send("photoTaken",[photoDataUrl])}chooseFile(){chrome.send("chooseFile")}requestSelectedImage(){chrome.send("requestSelectedImage")}}addSingletonGetter(ChangePictureBrowserProxyImpl);// Copyright 2015 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="settings-change-picture">:host {
  --cr-toolbar-height: 56px;
        
        --cr-settings-header-height: calc(62px + 1.34em);
        --title-height: 2em;
        --title-padding: 16px;
        display: block;
        min-height: 328px;
}

#title {
  height: var(--title-height);
        margin-inline-start: 20px;
        padding-top: var(--title-padding);
}

#container {
  align-items: flex-start;
        display: flex;
        margin-inline-start: 20px;
        position: absolute;
        top: calc(var(--cr-settings-header-height) +
                  var(--title-padding) +
                  var(--title-height));
        user-select: none;
}

#picturePane {
  --cr-picture-image-size: 192px;
        flex-shrink: 0;
        height: 288px;
        margin-inline-end: 24px;
        margin-top: 6px;
        position: relative;
        width: 288px;
}

#authorCredit {
  color: var(--google-grey-500);
        display: flex;
        flex-direction: column;
        margin-top: 20px;
}

#pictureList {
  height: calc(100vh -
            var(--cr-toolbar-height) -
            var(--cr-settings-header-height) -
            var(--title-padding) -
            var(--title-height));
        margin-inline-end: 16px;
        margin-top: 0;
        min-height: 332px;
        overflow-x: hidden;
        overflow-y: auto;
        position: relative;
}

</style>
    <div id="title">Choose a picture to display for your account on the sign-in screen</div>
    <div id="container">
      <div>
        <cr-picture-pane id="picturePane" camera-present="[[cameraPresent_]]" ,="" image-src="[[getImageSrc_(selectedItem_)]]" image-type="[[getImageType_(selectedItem_)]]" discard-image-label="Discard photo or video" preview-alt-text="User image preview" take-photo-label="Take photo" capture-video-label="Capture video" switch-mode-to-camera-label="Switch to camera mode" switch-mode-to-video-label="Switch to video recorder" camera-video-mode-enabled="[[cameraVideoModeEnabled_]]" on-keys-pressed="onCameraPaneKeysPressed_">
        </cr-picture-pane>
        <div id="authorCredit" hidden="[[!isAuthorCreditShown_(selectedItem_)]]">
          [[getAuthorCredit_(selectedItem_, defaultImages_)]]
          <a href="[[getAuthorWebsite_(selectedItem_, defaultImages_)]]" target="_blank">
            [[getAuthorWebsite_(selectedItem_, defaultImages_)]]
          </a>
        </div>
      </div>
      <cr-picture-list id="pictureList" hidden="[[!defaultImages_]]" camera-present="[[cameraPresent_]]" default-images="[[getDefaultImages_(defaultImages_,
              firstDefaultImageIndex_)]]" selected-item="{{selectedItem_}}" choose-file-label="Choose a file" old-image-label="[[oldImageLabel_]]" profile-image-label="FydeOS Profile photo" take-photo-label="Take photo" capture-video-label="Capture video">
      </cr-picture-list>
    </div>
<!--_html_template_end_-->`,is:"settings-change-picture",behaviors:[DeepLinkingBehavior,RouteObserverBehavior,I18nBehavior,WebUIListenerBehavior],properties:{cameraPresent_:{type:Boolean,value:false},selectedItem_:{type:Object,value:null},defaultImages_:{type:Object,value:null},firstDefaultImageIndex_:Number,cameraVideoModeEnabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("changePictureVideoModeEnabled")},readOnly:true},oldImageLabel_:String,supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kChangeDeviceAccountImage])}},listeners:{"discard-image":"onDiscardImage_","image-activate":"onImageActivate_","focus-action":"onFocusAction_","photo-taken":"onPhotoTaken_","switch-mode":"onSwitchMode_"},browserProxy_:null,pictureList_:null,oldImagePending_:false,ready(){this.browserProxy_=ChangePictureBrowserProxyImpl.getInstance();this.pictureList_=this.$.pictureList},attached(){this.addWebUIListener("default-images-changed",this.receiveDefaultImages_.bind(this));this.addWebUIListener("selected-image-changed",this.receiveSelectedImage_.bind(this));this.addWebUIListener("old-image-changed",this.receiveOldImage_.bind(this));this.addWebUIListener("profile-image-changed",this.receiveProfileImage_.bind(this));this.addWebUIListener("camera-presence-changed",this.receiveCameraPresence_.bind(this));IronA11yAnnouncer.requestAvailability()},beforeDeepLinkAttempt(settingId){assert(settingId===chromeos.settings.mojom.Setting.kChangeDeviceAccountImage);this.pictureList_.setFocus();return false},currentRouteChanged(newRoute){if(newRoute===routes.CHANGE_PICTURE){this.browserProxy_.initialize();this.browserProxy_.requestSelectedImage();this.pictureList_.setFocus();this.attemptDeepLink()}else{this.selectedItem_=null}},receiveDefaultImages_(info){this.defaultImages_=info.images;this.firstDefaultImageIndex_=info.first},receiveSelectedImage_(imageUrl){this.pictureList_.setSelectedImageUrl(imageUrl)},receiveOldImage_(imageInfo){this.oldImageLabel_=this.i18n(isEncodedPngDataUrlAnimated(imageInfo.url)?"oldVideo":"oldPhoto");this.oldImagePending_=false;this.pictureList_.setOldImageUrl(imageInfo.url,imageInfo.index)},receiveProfileImage_(imageUrl,selected){this.pictureList_.setProfileImageUrl(imageUrl,selected)},receiveCameraPresence_(cameraPresent){this.cameraPresent_=cameraPresent},selectImage_(image){switch(image.dataset.type){case CrPicture.SelectionTypes.CAMERA:this.$.picturePane.takePhoto();break;case CrPicture.SelectionTypes.FILE:this.browserProxy_.chooseFile();recordSettingChange();break;case CrPicture.SelectionTypes.PROFILE:this.browserProxy_.selectProfileImage();recordSettingChange();break;case CrPicture.SelectionTypes.OLD:const imageIndex=image.dataset.imageIndex;if(imageIndex!==undefined&&imageIndex>=0&&image.src){this.browserProxy_.selectDefaultImage(image.dataset.url)}else{this.browserProxy_.selectOldImage()}recordSettingChange();break;case CrPicture.SelectionTypes.DEFAULT:this.browserProxy_.selectDefaultImage(image.dataset.url);recordSettingChange();break;default:assertNotReached$1("Selected unknown image type")}},onImageActivate_(event){this.selectImage_(event.detail)},onFocusAction_(){this.$.picturePane.focusActionButton()},onPhotoTaken_(event){this.oldImagePending_=true;this.browserProxy_.photoTaken(event.detail.photoDataUrl);this.pictureList_.setOldImageUrl(event.detail.photoDataUrl);this.pictureList_.setFocus();this.fire("iron-announce",{text:loadTimeData$1.getString("photoCaptureAccessibleText")})},onSwitchMode_(event){const videomode=event.detail;this.fire("iron-announce",{text:this.i18n(videomode?"videoModeAccessibleText":"photoModeAccessibleText")})},onCameraPaneKeysPressed_(event){this.$.pictureList.focus();this.$.pictureList.onKeysPressed(event)},onDiscardImage_(){if(this.oldImagePending_){return}this.pictureList_.setOldImageUrl(CrPicture.kDefaultImageUrl);this.browserProxy_.selectProfileImage();this.fire("iron-announce",{text:this.i18n("photoDiscardAccessibleText")})},getImageSrc_(selectedItem){return selectedItem&&selectedItem.dataset.url||""},getImageType_(selectedItem){return selectedItem&&selectedItem.dataset.type||CrPicture.SelectionTypes.NONE},getDefaultImages_(defaultImages,firstDefaultImageIndex){return defaultImages?defaultImages.slice(firstDefaultImageIndex):[]},isAuthorCreditShown_(selectedItem){return!!selectedItem&&(selectedItem.dataset.type===CrPicture.SelectionTypes.DEFAULT||selectedItem.dataset.imageIndex!==undefined&&selectedItem.dataset.imageIndex>=0)},getAuthorCredit_(selectedItem,defaultImages){const index=selectedItem?selectedItem.dataset.imageIndex:undefined;if(index===undefined||index<0||index>=defaultImages.length){return""}const author=defaultImages[index].author;return author?this.i18n("authorCreditText",author):""},getAuthorWebsite_(selectedItem,defaultImages){const index=selectedItem?selectedItem.dataset.imageIndex:undefined;if(index===undefined||index<0||index>=defaultImages.length){return""}return defaultImages[index].website||""}});// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const TOOLTIP_ANIMATE_IN_DELAY=500;const TOOLTIP_ANIMATE_OUT_DURATION=500;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared cr-shared-style" scope="text-with-tooltip">.line-clamp {
  -webkit-box-orient: vertical;
        display: -webkit-box;
        overflow: hidden;
}

</style>
    <div id="textDiv" style$="-webkit-line-clamp: [[lineClamp]];" class$="line-clamp [[textStyle]]">
      [[text]]
    </div>
    <template is="dom-if" if="[[textOverflowing_]]">
      <paper-tooltip for="textDiv" fit-to-visible-bounds="">
        [[text]]
      </paper-tooltip>
    </template>
<!--_html_template_end_-->`,is:"text-with-tooltip",properties:{text:{type:String,observer:"textChanged_"},lineClamp:{type:String,value:"1"},textStyle:{type:String},textOverflowing_:{type:Boolean,value:false},tooltipIsVisible:{type:Boolean,value:false,notify:true}},listeners:{mouseenter:"onMouseEnter_",mouseleave:"onMouseLeave_"},ready(){const resizeObserver=new ResizeObserver((mutations=>{this.updateTextOverflowing_()}));resizeObserver.observe(this.$.textDiv)},textChanged_(newValue,oldValue){this.updateTextOverflowing_()},onMouseEnter_(event){this.updateTooltipIsVisibleAfterDelay_(true,TOOLTIP_ANIMATE_IN_DELAY)},onMouseLeave_(event){this.updateTooltipIsVisibleAfterDelay_(false,TOOLTIP_ANIMATE_OUT_DURATION)},updateTooltipIsVisibleAfterDelay_(visible,delay){const tooltip=this.$$("paper-tooltip");if(tooltip){setTimeout((()=>this.tooltipIsVisible=visible),delay)}},updateTextOverflowing_(){const textElement=this.$.textDiv;this.textOverflowing_=textElement.scrollHeight>textElement.offsetHeight}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared cr-shared-style iron-flex" scope="album-item">:host(:not([disabled])) {
  cursor: default;
        display: block;
        outline: none;
}

#albumContainer {
  height: 236px;
        line-height: 20px;
}

#albumContainer.personal-album {
  margin: 8px 0;
        width: 184px;
}

#albumContainer.art-album {
  margin: 8px auto;
        width: 280px;
}

#imageContainer {
  background-color: rgba(var(--google-blue-50-rgb), .8);
        border-radius: 8px;
        display: block;
        margin: 0 12px;
        position: relative;
}

#imageContainer.personal-album {
  height: 160px;
        width: 160px;
}

#imageContainer.art-album {
  height: 160px;
        width: 256px;
}

#albumInfo {
  margin: 16px 12px 0 12px;
}

#image {
  border-radius: 8px;
        display: block;
        height: 160px;
        object-fit: cover;
        position: absolute;
        transform: scale(1.0);
        transition: transform 240ms;
}

#image.personal-album {
  width: 160px;
}

#image.art-album {
  width: 256px;
}

#rhImages {
  border-radius: 8px;
        display: block;
        height: 160px;
        position: absolute;
        transform: scale(1.0);
        transition: transform 240ms;
        width: 160px;
}

.image-rh {
  border-radius: 8px;
        display: block;
        height: 78px;
        position: absolute;
        width: 78px;
}

.top-left {
  left: 0;
        top: 0;
}

.top-right {
  left: 82px;
        top: 0;
}

.bottom-left {
  left: 0;
        top: 82px;
}

.bottom-right {
  left: 82px;
        top: 82px;
}

.check {
  display: block;
        position: absolute;
        z-index: 1;
}

.check.personal-album {
  left: 134px;
        top: 6px;
}

.check.art-album {
  left: 230px;
        top: 0;
}

:host([checked]) #image {
  box-shadow: 0 4px 8px rgba(32, 33, 36, 0.17);
        transition: transform 240ms;
}

:host([checked]) #image.personal-album {
  transform: scale(0.8);
}

:host([checked]) #image.art-album {
  transform: scale(0.875);
}

:host([checked]) #rhImages {
  transform: scale(0.8);
}

</style>
    <div id="albumContainer" class$="[[computeClass_(topicSource)]]">
      <div id="imageContainer" class$="[[computeClass_(topicSource)]]" aria-hidden="true">
        <!-- Only shows the images and icon when the URLs are successfully
             fetched -->
        <template is="dom-if" if="[[album.recentHighlightsUrls]]">
          <div id="rhImages" actionable="" on-click="onImageClick_">
            <img class="image-rh top-left" src="[[album.recentHighlightsUrls.0]]" hidden="[[!album.recentHighlightsUrls.0]]">
            
            <img class="image-rh top-right" src="[[album.recentHighlightsUrls.1]]" hidden="[[!album.recentHighlightsUrls.1]]">
            
            <img class="image-rh bottom-left" src="[[album.recentHighlightsUrls.2]]" hidden="[[!album.recentHighlightsUrls.2]]">
            
            <img class="image-rh bottom-right" src="[[album.recentHighlightsUrls.3]]" hidden="[[!album.recentHighlightsUrls.3]]">
            
          </div>
          <iron-icon icon="os-settings:ic-checked-filled" class$="check [[computeClass_(topicSource)]]" hidden="[[!album.checked]]">
          </iron-icon>
        </template>
        <template is="dom-if" if="[[album.url]]">
          <img id="image" class$="[[computeClass_(topicSource)]]" actionable="" src="[[album.url]]" on-click="onImageClick_">
          
          <iron-icon icon="os-settings:ic-checked-filled" class$="check [[computeClass_(topicSource)]]" hidden="[[!album.checked]]">
          </iron-icon>
        </template>
      </div>

      <div id="albumInfo" class$="[[computeClass_(topicSource)]]" aria-hidden="true">
        <text-with-tooltip id="albumTitle" text="[[album.title]]" tooltip-is-visible="{{titleTooltipIsVisible}}"></text-with-tooltip>
        <text-with-tooltip id="albumDescription" text="[[album.description]]" line-clamp="2" tooltip-is-visible="{{descriptionTooltipIsVisible}}" text-style="cr-secondary-text"></text-with-tooltip>
      </div>
    </div>
<!--_html_template_end_-->`,is:"album-item",behaviors:[I18nBehavior],properties:{album:{type:AmbientModeAlbum,value:null},topicSource:Number,checked:{type:Boolean,value:false,reflectToAttribute:true,notify:true},ariaLabel:{type:String,computed:"computeAriaLabel_(album.*, checked)",reflectToAttribute:true},titleTooltipIsVisible:{type:Boolean,observer:"tooltipVisibilityChanged_"},descriptionTooltipIsVisible:{type:Boolean,observer:"tooltipVisibilityChanged_"}},listeners:{keydown:"onKeydown_"},computeClass_(){return this.topicSource===AmbientModeTopicSource.GOOGLE_PHOTOS?"personal-album":"art-album"},computeAriaLabel_(){if(!this.album){return""}if(this.album.checked){return this.i18n("ambientModeAlbumsSubpageAlbumSelected",this.album.title,this.album.description)}return this.i18n("ambientModeAlbumsSubpageAlbumUnselected",this.album.title,this.album.description)},onKeydown_(event){if(event.key!=="Enter"){return}this.fireSelectedAlbumsChanged_();event.preventDefault();event.stopPropagation()},tooltipVisibilityChanged_(){const tooltipIsVisible=this.titleTooltipIsVisible||this.descriptionTooltipIsVisible;this.style.zIndex=tooltipIsVisible?"1":"0"},onImageClick_(event){this.fireSelectedAlbumsChanged_();event.preventDefault();event.stopPropagation()},fireSelectedAlbumsChanged_(){this.checked=!this.checked;this.fire("selected-albums-changed",this.album)}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared cr-shared-style iron-flex" scope="album-list">:host {
  display: block;
}

paper-spinner-lite {
  display: block;
        height: 28px;
        margin: 150px auto;
        width: 28px;
}

iron-list > :focus {
  background-color: var(--cr-focused-item-color);
}

</style>
    <paper-spinner-lite active="[[!albums]]" hidden="[[albums]]">
    </paper-spinner-lite>

    <iron-list scroll-target="[[subpageScrollTarget]]" grid="" items="{{albums}}">
      <template>
        <album-item album="{{item}}" checked="{{item.checked}}" topic-source="[[topicSource]]" tabindex$="[[tabIndex]]" role="checkbox">
        </album-item>
      </template>
    </iron-list>
<!--_html_template_end_-->`,is:"album-list",behaviors:[GlobalScrollTargetBehavior],properties:{topicSource:{type:Number,value(){return AmbientModeTopicSource.UNKNOWN}},albums:{type:Array,value:null,notify:true},subpageRoute:{type:Object,value:routes.AMBIENT_MODE_PHOTOS}},isGooglePhotos_(){return this.topicSource===AmbientModeTopicSource.GOOGLE_PHOTOS}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="art-album-dialog">cr-dialog::part(dialog) {
  min-width: 288px;
        width: 288px;
}

</style>
    <cr-dialog id="dialog">
      <div slot="body">A minimum of one Art gallery album needs to be selected</div>
      <div slot="button-container">
        <cr-button class="action-button" on-click="onClose_">
          Got it
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"art-album-dialog",behaviors:[I18nBehavior],attached(){this.$.dialog.showModal()},onClose_(){if(this.$.dialog.open){this.$.dialog.close()}}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-ambient-mode-photos-page">#pageDescription {
  display: flex;
        min-height: 32px;
        padding: 0 var(--cr-section-padding);
}

</style>
    <settings-localized-link id="pageDescription" localized-string="[[getTitleInnerHtml_(topicSource)]]">
    </settings-localized-link>

    <template is="dom-if" if="[[hasNoAlbums_(albums)]]">
      <settings-localized-link class="cr-row first" localized-string="No albums. Create an album in <a target=&quot;_blank&quot; href=&quot;https://photos.google.com/&quot;>Google Photos</a>." <="" settings-localized-link="">
    </settings-localized-link></template>

    <template is="dom-if" if="[[showArtAlbumDialog_]]" restamp="">
      <art-album-dialog on-close="onArtAlbumDialogClose_"></art-album-dialog>
    </template>

    <!-- Text based album selection. -->
    <template is="dom-if" if="[[!photoPreviewEnabled]]">
      <iron-list id="albums" class="list-frame" items="[[albums]]">
        <template>
          <cr-checkbox class="list-item" checked="[[item.checked]]" on-change="onCheckboxChange_" data-id$="[[item.albumId]]" label="[[item.title]]">
            [[item.title]]
          </cr-checkbox>
        </template>
      </iron-list>
    </template>

    <!-- Photo based album selection. -->
    <template is="dom-if" if="[[photoPreviewEnabled]]">
      <album-list albums="{{albums}}" topic-source="[[topicSource]]">
      </album-list>
    </template>
<!--_html_template_end_-->`,is:"settings-ambient-mode-photos-page",behaviors:[I18nBehavior,RouteObserverBehavior,WebUIListenerBehavior],properties:{photoPreviewEnabled:{type:Boolean,value(){return loadTimeData$1.getBoolean("isAmbientModePhotoPreviewEnabled")},readOnly:true},topicSource:{type:Number,value:AmbientModeTopicSource.UNKNOWN},albums:{type:Array,notify:true,value:null},showArtAlbumDialog_:{type:Boolean,value:false}},listeners:{"selected-albums-changed":"onSelectedAlbumsChanged_"},browserProxy_:null,created(){this.browserProxy_=AmbientModeBrowserProxyImpl.getInstance()},ready(){this.addWebUIListener("albums-changed",this.onAlbumsChanged_.bind(this));this.addWebUIListener("album-preview-changed",this.onAlbumPreviewChanged_.bind(this))},currentRouteChanged(currentRoute){if(currentRoute!==routes.AMBIENT_MODE_PHOTOS){return}const topicSourceParam=Router.getInstance().getQueryParameters().get("topicSource");const topicSourceInt=parseInt(topicSourceParam,10);if(isNaN(topicSourceInt)){assertNotReached$1();return}this.topicSource=topicSourceInt;if(this.topicSource===AmbientModeTopicSource.GOOGLE_PHOTOS){this.parentNode.pageTitle=this.i18n("ambientModeTopicSourceGooglePhotos")}else if(this.topicSource===AmbientModeTopicSource.ART_GALLERY){this.parentNode.pageTitle=this.i18n("ambientModeTopicSourceArtGallery")}else{assertNotReached$1();return}this.albums=null;this.browserProxy_.requestAlbums(this.topicSource)},onAlbumsChanged_(settings){if(settings.topicSource!==this.topicSource){return}this.albums=settings.albums},onAlbumPreviewChanged_(album){if(album.topicSource!==this.topicSource){return}for(let i=0;i<this.albums.length;++i){if(this.albums[i].albumId===album.albumId){if(album.url){this.set("albums."+i+".url",album.url);continue}this.set("albums."+i+".recentHighlightsUrls",album.recentHighlightsUrls)}}},getTitleInnerHtml_(topicSource){if(topicSource===AmbientModeTopicSource.GOOGLE_PHOTOS){return this.i18nAdvanced("ambientModeAlbumsSubpageGooglePhotosTitle")}else{return this.i18n("ambientModeTopicSourceArtGalleryDescription")}},onSelectedAlbumsChanged_(event){const albums=[];let eventAlbumIndex=-1;for(let i=0;i<this.albums.length;++i){const album=this.albums[i];if(album.checked){albums.push({albumId:album.albumId})}if(album.albumId===event.detail.albumId){eventAlbumIndex=i}}assert(eventAlbumIndex>=0,"Wrong album index.");if(this.topicSource===AmbientModeTopicSource.ART_GALLERY&&albums.length===0){this.showArtAlbumDialog_=true;this.set("albums."+eventAlbumIndex+".checked",true);return}this.browserProxy_.setSelectedAlbums({topicSource:this.topicSource,albums:albums})},onArtAlbumDialogClose_(){this.showArtAlbumDialog_=false},onCheckboxChange_(){const checkboxes=this.$$("#albums").querySelectorAll("cr-checkbox");const albums=[];checkboxes.forEach((checkbox=>{if(checkbox.checked&&!checkbox.hidden){albums.push({albumId:checkbox.dataset.id})}}));this.browserProxy_.setSelectedAlbums({topicSource:this.topicSource,albums:albums})},hasNoAlbums_(){return!!this.albums&&!this.albums.length}});// Copyright 2019 The Chromium Authors. All rights reserved.
class WallpaperBrowserProxyImpl{isWallpaperSettingVisible(){return sendWithPromise("isWallpaperSettingVisible")}isWallpaperPolicyControlled(){return sendWithPromise("isWallpaperPolicyControlled")}openWallpaperManager(){chrome.send("openWallpaperManager")}}addSingletonGetter(WallpaperBrowserProxyImpl);// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-personalization-page"></style>
    <settings-animated-pages id="pages" section="personalization" focus-config="[[focusConfig_]]">
      <div route-path="default">
        <cr-link-row id="changePictureRow" label="Change device account image" on-click="navigateToChangePicture_" role-description="Subpage button">
        </cr-link-row>
        <cr-link-row class="hr" id="wallpaperButton" hidden="[[!showWallpaperRow_]]" on-click="openWallpaperManager_" label="Wallpaper" sub-label="Open the wallpaper app" disabled="[[isWallpaperPolicyControlled_]]" external="" deep-link-focus-id$="[[Setting.kOpenWallpaper]]">
          <template is="dom-if" if="[[isWallpaperPolicyControlled_]]">
            <cr-policy-indicator id="wallpaperPolicyIndicator" indicator-type="devicePolicy">
            </cr-policy-indicator>
          </template>
        </cr-link-row>

        <!-- Ambient mode -->
        <template is="dom-if" if="[[isAmbientModeEnabled_]]">
          <cr-link-row class="hr" id="ambientModeRow" label="Screen saver" sub-label="[[getAmbientModeRowSubLabel_(
                  prefs.settings.ambient_mode.enabled.value)]]" on-click="navigateToAmbientMode_" role-description="Subpage button">
          </cr-link-row>
        </template>
      </div>

      <template is="dom-if" route-path="/changePicture">
        <settings-subpage associated-control="[[$$('#changePictureRow')]]" page-title="Change device account image">
          <settings-change-picture></settings-change-picture>
        </settings-subpage>
      </template>

      <template is="dom-if" if="[[isAmbientModeEnabled_]]">
        <template is="dom-if" route-path="/ambientMode">
          <settings-subpage associated-control="[[$$('#ambientModeRow')]]" page-title="Screen saver">
            <settings-ambient-mode-page prefs="{{prefs}}">
            </settings-ambient-mode-page>
          </settings-subpage>
        </template>

        <template is="dom-if" route-path="/ambientMode/photos">
          <settings-subpage>
            <settings-ambient-mode-photos-page>
            </settings-ambient-mode-photos-page>
          </settings-subpage>
        </template>

      </template>
    </settings-animated-pages>
<!--_html_template_end_-->`,is:"settings-personalization-page",behaviors:[DeepLinkingBehavior,I18nBehavior,RouteObserverBehavior],properties:{prefs:Object,showWallpaperRow_:{type:Boolean,value:true},isWallpaperPolicyControlled_:{type:Boolean,value:true},isAmbientModeEnabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isAmbientModeEnabled")},readOnly:true},focusConfig_:{type:Object,value(){const map=new Map;if(routes.CHANGE_PICTURE){map.set(routes.CHANGE_PICTURE.path,"#changePictureRow")}else if(routes.AMBIENT_MODE){map.set(routes.AMBIENT_MODE.path,"#ambientModeRow")}return map}},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kOpenWallpaper])}},browserProxy_:null,created(){this.browserProxy_=WallpaperBrowserProxyImpl.getInstance()},ready(){this.browserProxy_.isWallpaperSettingVisible().then((isWallpaperSettingVisible=>{this.showWallpaperRow_=isWallpaperSettingVisible}));this.browserProxy_.isWallpaperPolicyControlled().then((isPolicyControlled=>{this.isWallpaperPolicyControlled_=isPolicyControlled}))},currentRouteChanged(route,oldRoute){if(route!==routes.PERSONALIZATION){return}this.attemptDeepLink()},openWallpaperManager_(){this.browserProxy_.openWallpaperManager()},navigateToChangePicture_(){Router.getInstance().navigateTo(routes.CHANGE_PICTURE)},navigateToAmbientMode_(){Router.getInstance().navigateTo(routes.AMBIENT_MODE)},getAmbientModeRowSubLabel_(toggleValue){return this.i18n(toggleValue?"ambientModeEnabled":"ambientModeDisabled")}});// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-on-startup-page"></style>
    <settings-animated-pages id="pages" section="onstartup" focus-config="[[focusConfig_]]">
      <div route-path="default">
        <div class="settings-box" aria-hidden="true">
            Restore apps and pages
        </div>
        <div class="settings-box continuation embedded">
          <settings-radio-group id="onStartupRadioGroup" pref="{{prefs.settings.restore_apps_and_pages}}" group-aria-label="Restore apps and pages" deep-link-focus-id$="[[Setting.kRestoreAppsAndPages]]">
            <controlled-radio-button id="onStartupAlways" name="[[getName_(prefValues_.ALWAYS)]]" pref="[[prefs.settings.restore_apps_and_pages]]" label="Always">
            </controlled-radio-button>
            <controlled-radio-button id="onStartupAskEveryTime" name="[[getName_(prefValues_.ASK_EVERY_TIME)]]" pref="[[prefs.settings.restore_apps_and_pages]]" label="Ask every time">
            </controlled-radio-button>
            <controlled-radio-button id="onStartupDoNotRestore" name="[[getName_(prefValues_.DO_NOT_RESTORE)]]" pref="[[prefs.settings.restore_apps_and_pages]]" label="Do not restore">
            </controlled-radio-button>
          </settings-radio-group>
        </div>
      </div>
    </settings-animated-pages>
<!--_html_template_end_-->`,is:"settings-on-startup-page",behaviors:[DeepLinkingBehavior,I18nBehavior,PrefsBehavior,RouteObserverBehavior],properties:{prefs:{type:Object,notify:true},prefValues_:{readOnly:true,type:Object,value:{ALWAYS:1,ASK_EVERY_TIME:2,DO_NOT_RESTORE:3}},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kRestoreAppsAndPages])}},currentRouteChanged(route,oldRoute){if(route!==routes.ON_STARTUP){return}this.attemptDeepLink()},getName_(value){return value.toString()}});// Copyright 2016 The Chromium Authors. All rights reserved.
const WarningMessage={NONE:-1,ENTERPRISE_MANAGED:0,POWERWASH:1,UNSTABLE:2};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-channel-switcher-dialog">#warningSelector > :not(.iron-selected) {
  display: none;
}

</style>
    <cr-dialog id="dialog" close-text="Close">
      <div slot="title">Change channel</div>
      <div slot="body">
        <!-- TODO(dbeam): this can be policy-controlled. Show this in the UI.
             https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ChromeOsReleaseChannel
        -->
        <cr-radio-group on-selected-changed="onChannelSelectionChanged_">
          <cr-radio-button name="[[browserChannelEnum_.STABLE]]">
            Stable
          </cr-radio-button>
          <cr-radio-button name="[[browserChannelEnum_.BETA]]">
            Beta
          </cr-radio-button>
          <cr-radio-button name="[[browserChannelEnum_.DEV]]">
            Developer - unstable
          </cr-radio-button>
        </cr-radio-group>
        <iron-selector id="warningSelector">
          <div>
            <h2>Channel change will be applied later</h2>
            <div>[[substituteString_(
                'You are changing to a channel with an older version of $1. The channel change will be applied when the channel version matches the version currently installed on your device.',
                'FydeOS')]]</div>
          </div>
          <div>
            <h2>Powerwash required on next reboot</h2>
            <div>This will remove all local users, files, data, and other settings after your next restart. All users will need to sign in again.</div>
          </div>
          <div>
            <h2>Warning: you are switching to developer channel</h2>
            <div>[[substituteString_(
                'You are updating to an unstable version of $1 which contains features that are in progress. Crashes and unexpected bugs will occur. Please proceed with caution.',
                'FydeOS')]]</div>
          </div>
        </iron-selector>
      </div>
      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onCancelTap_" id="cancel">Cancel</cr-button>
        <cr-button id="changeChannel" class="action-button" on-click="onChangeChannelTap_" hidden="[[!shouldShowButtons_.changeChannel]]">
          Change channel
        </cr-button>
        <cr-button id="changeChannelAndPowerwash" class="action-button" on-click="onChangeChannelAndPowerwashTap_" hidden="[[!shouldShowButtons_.changeChannelAndPowerwash]]">
          Change channel and Powerwash
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"settings-channel-switcher-dialog",properties:{browserChannelEnum_:{type:Object,value:BrowserChannel},currentChannel_:String,targetChannel_:String,shouldShowButtons_:{type:Object,value:null}},browserProxy_:null,ready(){this.browserProxy_=AboutPageBrowserProxyImpl.getInstance();this.browserProxy_.getChannelInfo().then((info=>{this.currentChannel_=info.currentChannel;this.targetChannel_=info.targetChannel;const radioGroup=this.$$("cr-radio-group");radioGroup.selected=this.targetChannel_;radioGroup.focus()}))},attached(){this.$.dialog.showModal()},onCancelTap_(){this.$.dialog.close()},onChangeChannelTap_(){const selectedChannel=this.$$("cr-radio-group").selected;this.browserProxy_.setChannel(selectedChannel,false);this.$.dialog.close();this.fire("target-channel-changed",selectedChannel)},onChangeChannelAndPowerwashTap_(){const selectedChannel=this.$$("cr-radio-group").selected;this.browserProxy_.setChannel(selectedChannel,true);this.$.dialog.close();this.fire("target-channel-changed",selectedChannel)},updateButtons_(changeChannel,changeChannelAndPowerwash){if(changeChannel||changeChannelAndPowerwash){assert(changeChannel!==changeChannelAndPowerwash)}this.shouldShowButtons_={changeChannel:changeChannel,changeChannelAndPowerwash:changeChannelAndPowerwash}},onChannelSelectionChanged_(){const selectedChannel=this.$$("cr-radio-group").selected;if(selectedChannel===this.targetChannel_){this.shouldShowButtons_=null;this.$.warningSelector.select(WarningMessage.NONE);return}if(selectedChannel===this.currentChannel_){this.updateButtons_(true,false);this.$.warningSelector.select(WarningMessage.NONE);return}if(isTargetChannelMoreStable(this.currentChannel_,selectedChannel)){if(loadTimeData$1.getBoolean("aboutEnterpriseManaged")){this.$.warningSelector.select(WarningMessage.ENTERPRISE_MANAGED);this.updateButtons_(true,false)}else{this.$.warningSelector.select(WarningMessage.POWERWASH);this.updateButtons_(false,true)}}else{if(selectedChannel===BrowserChannel.DEV){this.$.warningSelector.select(WarningMessage.UNSTABLE)}else{this.$.warningSelector.select(WarningMessage.NONE)}this.updateButtons_(true,false)}},substituteString_(format,replacement){return loadTimeData$1.substituteString(format,replacement)}});// Copyright 2020 The Chromium Authors. All rights reserved.
class DeviceNameBrowserProxy{getDeviceNameMetadata(){}}class DeviceNameBrowserProxyImpl{getDeviceNameMetadata(){return sendWithPromise("getDeviceNameMetadata")}}addSingletonGetter(DeviceNameBrowserProxyImpl);// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="edit-hostname-dialog">cr-input {
  --cr-input-error-display: none;
}

#input-subtext {
  display: flex;
}

#input-subtext span:last-child {
  margin-inline-start: auto;
}

</style>
    <cr-dialog id="dialog" show-on-attach="">
      <div slot="title">Edit device name</div>
      <div slot="body">
        <div>This name is visible to other devices for Bluetooth and network connections</div>
        <cr-input></cr-input>
        <div id="input-subtext">
          <span>Name can use letters, numbers, and hyphens (-)</span>
          <span>1/15</span>
        </div>
      </div>
      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onCancelTap_">
          Cancel
        </cr-button>
        <cr-button class="action-button" on-click="onDoneTap_">
          Done
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"edit-hostname-dialog",onCancelTap_(){this.$.dialog.close()},onDoneTap_(){this.$.dialog.close()}});// Copyright 2016 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-detailed-build-info">cr-policy-indicator {
  margin-inline-start: var(--cr-controlled-by-spacing);
}

#command-line {
  overflow-wrap: break-word;
        width: 100%;
}

#managedEolTooltipIcon {
  margin-inline-end: 54px;
}

</style>
    <div class="settings-box two-line">
      <div class="start">
        <div role="heading" aria-level="2">Channel</div>
        <div id="currentlyOnChannelText" aria-hidden="true" class="secondary">
          [[currentlyOnChannelText_]]
        </div>
      </div>
      <div class="separator"></div>
      <cr-button on-click="onChangeChannelTap_" aria-describedby="currentlyOnChannelText" disabled="[[!canChangeChannel_]]" deep-link-focus-id$="[[Setting.kChangeChromeChannel]]">
        Change channel
      </cr-button>
      <template is="dom-if" if="[[!canChangeChannel_]]">
        <cr-policy-indicator indicator-source-name="[[getChangeChannelIndicatorSourceName_(
                canChangeChannel_)]]" indicator-type="[[getChangeChannelIndicatorType_(
                canChangeChannel_)]]">
        </cr-policy-indicator>
      </template>
      <template is="dom-if" if="[[showChannelSwitcherDialog_]]" restamp="">
        <settings-channel-switcher-dialog on-close="onChannelSwitcherDialogClosed_">
        </settings-channel-switcher-dialog>
      </template>
    </div>
    <div id="endOfLifeSectionContainer" class="settings-box two-line single-column" hidden="[[shouldHideEolInfo_]]">
      <div role="heading" aria-level="2">Update schedule</div>
      <settings-localized-link class="secondary" localized-string="[[eolMessageWithMonthAndYear]]">
      </settings-localized-link>
    </div>
    <template is="dom-if" if="[[isManaged_]]">
      <div class="settings-box two-line">
        <div class="start" aria-hidden="true">
          <div role="heading">Update schedule</div>
          <div class="secondary">
            Updates are managed by your administrator
          </div>
        </div>
        <cr-tooltip-icon id="managedEolTooltipIcon" icon-class="cr20:domain" tooltip-text="Updates are managed by your administrator" icon-aria-label="Updates are managed by your administrator" tooltip-position="bottom">
        </cr-tooltip-icon>
      </div>
    </template>
    <template is="dom-if" if="[[isHostnameSettingEnabled_]]">
      <div class="settings-box two-line">
        <div class="start">
          <div role="heading">Device name</div>
          <div id="deviceName" aria-hidden="true" class="secondary">
            [[deviceNameText_]]
          </div>
        </div>
        <cr-icon-button class="icon-edit" on-click="onEditHostnameTap_">
        </cr-icon-button>
      </div>
      <template is="dom-if" if="[[showEditHostnameDialog_]]" restamp="">
        <edit-hostname-dialog on-close="onEditHostnameDialogClosed_">
        </edit-hostname-dialog>
      </template>
    </template>
    <div id="buildDetailsLinkContainer" class="settings-box">
      <div class="start" id="aboutBuildDetailsTitle">
        Build Details
      </div>
      <cr-icon-button id="copyBuildDetailsButton" class="icon-copy-content" aria-labelledby="copyBuildDetailsButtonToolTip" on-click="onCopyBuildDetailsToClipBoardTap_" disabled="[[!copyToClipBoardEnabled_(versionInfo_, channelInfo_)]]" deep-link-focus-id$="[[Setting.kCopyDetailedBuildInfo]]">
      </cr-icon-button>
      <paper-tooltip id="copyBuildDetailsButtonToolTip" for="copyBuildDetailsButton" position="bottom" fit-to-visible-bounds="">
        Copy build details to clipboard
      </paper-tooltip>
      <div class="separator"></div>
      <cr-icon-button on-click="onVisitBuildDetailsPageTap_" aria-labelledby="aboutBuildDetailsTitle" class="icon-external">
      </cr-icon-button>
    </div>
    <div class="hr"></div>
<!--_html_template_end_-->`,is:"settings-detailed-build-info",behaviors:[DeepLinkingBehavior,I18nBehavior,RouteObserverBehavior],properties:{versionInfo_:Object,channelInfo_:Object,currentlyOnChannelText_:String,deviceNameText_:String,showChannelSwitcherDialog_:Boolean,showEditHostnameDialog_:Boolean,canChangeChannel_:Boolean,eolMessageWithMonthAndYear:{type:String,value:""},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kChangeChromeChannel,chromeos.settings.mojom.Setting.kCopyDetailedBuildInfo])},shouldHideEolInfo_:{type:Boolean,computed:"computeShouldHideEolInfo_(eolMessageWithMonthAndYear)"},isHostnameSettingEnabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isHostnameSettingEnabled")},readOnly:true},isManaged_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isManaged")},readOnly:true}},ready(){const browserProxy=AboutPageBrowserProxyImpl.getInstance();browserProxy.pageReady();browserProxy.getVersionInfo().then((versionInfo=>{this.versionInfo_=versionInfo}));this.updateChannelInfo_();if(this.isHostnameSettingEnabled_){this.updateDeviceName_()}},currentRouteChanged(route,oldRoute){if(route!==routes.DETAILED_BUILD_INFO){return}this.attemptDeepLink()},computeShouldHideEolInfo_(){return this.isManaged_||!this.eolMessageWithMonthAndYear},updateChannelInfo_(){const browserProxy=AboutPageBrowserProxyImpl.getInstance();browserProxy.canChangeChannel().then((canChangeChannel=>{this.canChangeChannel_=canChangeChannel}));browserProxy.getChannelInfo().then((info=>{this.channelInfo_=info;this.currentlyOnChannelText_=this.i18n("aboutCurrentlyOnChannel",this.i18n(browserChannelToI18nId(info.targetChannel,info.isLts)))}))},updateDeviceName_(){const browserProxy=DeviceNameBrowserProxyImpl.getInstance();browserProxy.getDeviceNameMetadata().then((data=>{this.deviceNameText_=data.deviceName}))},getChangeChannelIndicatorSourceName_(canChangeChannel){return loadTimeData$1.getBoolean("aboutEnterpriseManaged")?"":loadTimeData$1.getString("ownerEmail")},getChangeChannelIndicatorType_(canChangeChannel){if(canChangeChannel){return CrPolicyIndicatorType.NONE}return loadTimeData$1.getBoolean("aboutEnterpriseManaged")?CrPolicyIndicatorType.DEVICE_POLICY:CrPolicyIndicatorType.OWNER},onChangeChannelTap_(e){e.preventDefault();this.showChannelSwitcherDialog_=true},onEditHostnameTap_(e){e.preventDefault();this.showEditHostnameDialog_=true},copyToClipBoardEnabled_:function(){return!!this.versionInfo_&&!!this.channelInfo_},onCopyBuildDetailsToClipBoardTap_:function(){const buildInfo={application_label:loadTimeData$1.getString("aboutBrowserVersion"),platform:this.versionInfo_.osVersion,aboutChannelLabel:this.channelInfo_.targetChannel+(this.channelInfo_.isLts?" (trusted tester)":""),firmware_version:this.versionInfo_.osFirmware,aboutIsArcStatusTitle:loadTimeData$1.getBoolean("aboutIsArcEnabled"),arc_label:this.versionInfo_.arcVersion,isEnterpriseManagedTitle:loadTimeData$1.getBoolean("aboutEnterpriseManaged"),aboutIsDeveloperModeTitle:loadTimeData$1.getBoolean("aboutIsDeveloperMode")};const entries=[];for(const key in buildInfo){entries.push(this.i18n(key)+": "+buildInfo[key])}navigator.clipboard.writeText(entries.join("\n"))},onVisitBuildDetailsPageTap_(e){e.preventDefault();window.open("chrome://version")},onChannelSwitcherDialogClosed_(){this.showChannelSwitcherDialog_=false;focusWithoutInk(assert(this.$$("cr-button")));this.updateChannelInfo_()},onEditHostnameDialogClosed_(){this.showEditHostnameDialog_=false;focusWithoutInk(assert(this.$$("cr-button")))}});// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
let lazyLoadPromise=null;function ensureLazyLoaded(){if(!lazyLoadPromise){const script=document.createElement("script");script.type="module";script.src="./chromeos/lazy_load.js";document.body.appendChild(script);const lazyLoadPages=["settings-crostini-page","settings-date-time-page","os-settings-a11y-page","os-settings-files-page","os-settings-languages-section","os-settings-printing-page","os-settings-reset-page"];if(!loadTimeData.getBoolean("isAccountManagementFlowsV2Enabled")){lazyLoadPages.push("os-settings-privacy-page")}lazyLoadPromise=Promise.all(lazyLoadPages.map((name=>customElements.whenDefined(name))))}return lazyLoadPromise}// Copyright 2016 The Chromium Authors. All rights reserved.
const RouteState={INITIAL:"initial",DIALOG:"dialog",SECTION:"section",SUBPAGE:"subpage",TOP_LEVEL:"top-level"};function classifyRoute(route){if(!route){return RouteState.INITIAL}const routes=Router.getInstance().getRoutes();if(route===routes.BASIC||route===routes.ABOUT||route===routes.FYDEOS){return RouteState.TOP_LEVEL}if(route.isSubpage()){return RouteState.SUBPAGE}if(route.isNavigableDialog){return RouteState.DIALOG}return RouteState.SECTION}const MainPageBehavior={properties:{inSearchMode:{type:Boolean,value:false,observer:"inSearchModeChanged_"}},scroller:null,validTransitions_:function(){const allStates=new Set([RouteState.DIALOG,RouteState.SECTION,RouteState.SUBPAGE,RouteState.TOP_LEVEL]);return new Map([[RouteState.INITIAL,allStates],[RouteState.DIALOG,new Set([RouteState.SECTION,RouteState.SUBPAGE,RouteState.TOP_LEVEL])],[RouteState.SECTION,allStates],[RouteState.SUBPAGE,allStates],[RouteState.TOP_LEVEL,allStates]])}(),attached(){this.scroller=this.domHost?this.domHost.parentNode:document.body},containsRoute(route){return false},inSearchModeChanged_(current,previous){if(previous===undefined){return}if(!this.inSearchMode){const route=Router.getInstance().getCurrentRoute();if(this.containsRoute(route)&&classifyRoute(route)===RouteState.SECTION){this.fire("showing-section",this.getSection(route.section))}}},shouldExpandAdvanced_(route){const routes=Router.getInstance().getRoutes();return this.tagName==="OS-SETTINGS-PAGE"&&routes.ADVANCED&&routes.ADVANCED.contains(route)},ensureSectionForRoute_(route){const section=this.getSection(route.section);if(section!==null){return Promise.resolve(section)}const waitFn=beforeNextRender.bind(null,this);return new Promise((resolve=>{if(this.shouldExpandAdvanced_(route)){this.fire("hide-container");waitFn((()=>{this.$$("#advancedPageTemplate").get().then((()=>{resolve(this.getSection(route.section))}))}))}else{waitFn((()=>{resolve(this.getSection(route.section))}))}}))},enterSubpage_(route){this.lastScrollTop_=this.scroller.scrollTop;this.scroller.scrollTop=0;this.classList.add("showing-subpage");this.fire("subpage-expand");ensureLazyLoaded();this.ensureSectionForRoute_(route).then((section=>{section.classList.add("expanded");this.fire("settings-section-expanded");this.fire("show-container")}))},enterMainPage_(oldRoute){const oldSection=this.getSection(oldRoute.section);oldSection.classList.remove("expanded");this.classList.remove("showing-subpage");return new Promise(((res,rej)=>{requestAnimationFrame((()=>{if(Router.getInstance().lastRouteChangeWasPopstate()){this.scroller.scrollTop=this.lastScrollTop_}this.fire("showing-main-page");res()}))}))},scrollToSection_(route){this.ensureSectionForRoute_(route).then((section=>{if(!this.inSearchMode){this.fire("showing-section",section)}this.fire("show-container")}))},getStateTransition_(newRoute,oldRoute){const containsNew=this.containsRoute(newRoute);const containsOld=this.containsRoute(oldRoute);if(!containsNew&&!containsOld){return null}if(containsOld&&!containsNew){return[classifyRoute(oldRoute),RouteState.TOP_LEVEL]}if(!containsOld&&containsNew){return[RouteState.TOP_LEVEL,classifyRoute(newRoute)]}return[classifyRoute(oldRoute),classifyRoute(newRoute)]},currentRouteChanged(newRoute,oldRoute){const transition=this.getStateTransition_(newRoute,oldRoute);if(transition===null){return}const oldState=transition[0];const newState=transition[1];assert(this.validTransitions_.get(oldState).has(newState));if(oldState===RouteState.TOP_LEVEL){if(newState===RouteState.SECTION){this.scrollToSection_(newRoute)}else if(newState===RouteState.SUBPAGE){this.enterSubpage_(newRoute)}return}if(oldState===RouteState.SECTION){if(newState===RouteState.SECTION){this.scrollToSection_(newRoute)}else if(newState===RouteState.SUBPAGE){this.enterSubpage_(newRoute)}else if(newState===RouteState.TOP_LEVEL){this.scroller.scrollTop=0}return}if(oldState===RouteState.SUBPAGE){if(newState===RouteState.SECTION){this.enterMainPage_(oldRoute);if(!Router.getInstance().lastRouteChangeWasPopstate()){this.scrollToSection_(newRoute)}}else if(newState===RouteState.SUBPAGE){if(!oldRoute.contains(newRoute)&&!newRoute.contains(oldRoute)){this.enterMainPage_(oldRoute).then((()=>{this.enterSubpage_(newRoute)}));return}if(oldRoute.contains(newRoute)){this.scroller.scrollTop=0;return}}else if(newState===RouteState.TOP_LEVEL){this.enterMainPage_(oldRoute)}else if(newState===RouteState.DIALOG){this.enterMainPage_(oldRoute)}return}if(oldState===RouteState.INITIAL){if(newState===RouteState.SECTION){this.scrollToSection_(newRoute)}else if(newState===RouteState.SUBPAGE){this.enterSubpage_(newRoute)}return}if(oldState===RouteState.DIALOG){if(newState===RouteState.SUBPAGE){this.enterSubpage_(newRoute)}}},getSection(section){if(!section){return null}return this.$$(`settings-section[section="${section}"]`)}};// Copyright 2015 The Chromium Authors. All rights reserved.
Polymer({is:"settings-section",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="settings-section">:host {
  display: flex;
        flex-direction: column;
        outline: none;
        position: relative;
}

#header .title {
  color: var(--cr-primary-text-color);
        font-size: 108%;
        font-weight: 400;
        letter-spacing: .25px;
        margin-bottom: 12px;
        margin-top: var(--cr-section-vertical-margin);
        outline: none;
        padding-bottom: 4px;
        padding-top: 8px;
}

:host(:not(.expanded)) #card {
  background-color: var(--cr-card-background-color);
        border-radius: var(--cr-card-border-radius);
        box-shadow: var(--cr-card-shadow);
        flex: 1;
}

:host([hidden-by-search]) {
  display: none;
}

</style>
    <div id="header">
      <h2 class="title" tabindex="-1" aria-hidden$="[[getTitleHiddenStatus_(pageTitle)]]">[[pageTitle]]</h2>
    </div>
    <div id="card">
      <slot></slot>
    </div>
<!--_html_template_end_-->`,properties:{section:String,pageTitle:{type:String,value:""},hiddenBySearch:{type:Boolean,value:false,reflectToAttribute:true}},getTitleHiddenStatus_(){return this.pageTitle?false:"true"},focus(){this.$$(".title").focus()}});// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const template$9=document.createElement("template");template$9.innerHTML=`<dom-module id="settings-page-styles">\x3c!--_html_template_start_--\x3e\n  <template>\n    <style scope="settings-page-styles">:host(.showing-subpage) settings-section:not(.expanded) {\n  display: none;\n}\n\n:host > div > :not(.expanded) {\n  margin-bottom: 3px;\n}\n\n.expanded {\n  min-height: 100%;\n}\n\n</style>\n  </template>\n\x3c!--_html_template_end_--\x3e</dom-module>\n`;document.body.appendChild(template$9.content.cloneNode(true));// Copyright 2017 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-update-warning-dialog"></style>
    <cr-dialog id="dialog" close-text="Close">
      <div slot="title">Download update using mobile data</div>
      <div slot="body">
        <div id="update-warning-message"></div>
      </div>
      <div slot="button-container">
        <cr-button id="cancel" class="cancel-button" on-click="onCancelTap_">Cancel</cr-button>
        <cr-button id="continue" class="action-button" on-click="onContinueTap_">
          Continue
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"settings-update-warning-dialog",behaviors:[I18nBehavior],properties:{updateInfo:{type:Object,observer:"updateInfoChanged_"}},browserProxy_:null,ready(){this.browserProxy_=AboutPageBrowserProxyImpl.getInstance()},attached(){this.$.dialog.showModal()},onCancelTap_(){this.$.dialog.close()},onContinueTap_(){if(!this.updateInfo||!this.updateInfo.version||!this.updateInfo.size){console.log("ERROR: requestUpdateOverCellular arguments are undefined");return}this.browserProxy_.requestUpdateOverCellular(this.updateInfo.version,this.updateInfo.size);this.$.dialog.close()},updateInfoChanged_(){this.$$("#update-warning-message").innerHTML=this.i18n("aboutUpdateWarningMessage",Math.floor(Number(this.updateInfo.size)/(1024*1024)))}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared settings-page-styles" scope="os-settings-about-page">:host {
  --about-page-image-space: 10px;
}

.info-section {
  margin-bottom: 12px;
}

.padded {
  padding-bottom: 10px;
        padding-top: 10px;
}

.product-title {
  font-size: 153.85%;  
        font-weight: 400;
        margin-bottom: auto;
        margin-top: auto;
}

img {
  margin-inline-end: var(--about-page-image-space);
}

.icon-container {
  margin-inline-end: var(--about-page-image-space);
        min-width: 32px;  
        text-align: center;
}

iron-icon[icon='settings:check-circle'] {
  fill: var(--cros-icon-color-prominent);
}

iron-icon[icon='cr:error-outline'] {
  fill: var(--cros-error-color);
}

.settings-box .start {
  overflow-x: auto;
}

cr-button {
  white-space: nowrap;
}

#regulatoryInfo img {
  width: 330px;
}

</style>
    <settings-section page-title="About FydeOS" section="about">
      <settings-animated-pages id="pages" section="about" focus-config="[[focusConfig_]]">
        <div route-path="default">
          <div class="settings-box two-line first">
            <img id="product-logo" on-click="onProductLogoClick_" srcset="chrome://theme/current-channel-logo@1x 1x,
                        chrome://theme/current-channel-logo@2x 2x" alt="Chromium logo" role="presentation">
            <h1 class="product-title">FydeOS</h1>
          </div>
          <!-- FYDEOS BEGIN -->
          <div class="settings-box two-line">
            <div class="start padded">
              Automatically keep my FydeOS up to date
              <div class="secondary">[[fydeosOTAStateMessage_(fydeOTAToggleState_, isOwner_)]]</div>
            </div>
            <cr-toggle id="enableFydeOTA" disabled="[[!canToggleFydeOTA_(currentUpdateStatusEvent_, isOwner_)]]" role="button" checked="[[fydeOTAToggleState_]]" on-change="onEnableFydeOTAChange_">
            </cr-toggle>
          </div>
          <!-- FYDEOS END -->
          <div class="settings-box two-line">
            <!-- Set the icon from the iconset (when it's obsolete/EOL and
              when update is done) or set the src (when it's updating). -->
            <div class="icon-container" hidden="[[!shouldShowIcons_(showUpdateStatus_)]]">
              <!-- TODO(crbug.com/986596): Don't use browser icons here. Fork them. -->
              <iron-icon icon$="[[getUpdateStatusIcon_(
                      hasEndOfLife_, currentUpdateStatusEvent_)]]" src="[[getThrobberSrcIfUpdating_(
                      hasEndOfLife_, currentUpdateStatusEvent_)]]">
              </iron-icon>
            </div>
            <div class="start padded">
              <div id="updateStatusMessage" hidden="[[!showUpdateStatus_]]">
                <div inner-h-t-m-l="[[getUpdateStatusMessage_(
                        currentUpdateStatusEvent_, targetChannel_)]]"></div>
                <a hidden$="[[!shouldShowLearnMoreLink_(
                    currentUpdateStatusEvent_)]]" target="_blank" href="https://support.google.com/chrome?p=update_error">
                  Learn more
                </a>
              </div>
              <settings-localized-link id="endOfLifeMessageContainer" hidden="[[!hasEndOfLife_]]" localized-string="This is the last automatic software and security update for this FydeOS device. To get future updates, upgrade to a newer model. &lt;a target=&quot;_blank&quot; href=&quot;https://fydeos.com/content/eol-link&quot;&gt;Learn more&lt;/a&gt;">
              </settings-localized-link>
              <!-- FYDEOS BEGIN -->
              <div class="secondary">[[getFydeOSVersion_()]]</div>
              <!-- FYDEOS END -->
            </div>
            <div class="separator" hidden="[[!showButtonContainer_]]"></div>
            <span id="buttonContainer" hidden="[[!showButtonContainer_]]">
              <cr-button id="relaunch" hidden$="[[!showRelaunch_]]" on-click="onRelaunchClick_">
                  [[getRelaunchButtonText_(
                                  currentUpdateStatusEvent_)]]
              </cr-button>
              <!-- FYDEOS BEGIN -->
              <cr-button id="checkForUpdates" hidden="[[!showCheckUpdates_]]" disabled="[[!fydeOTAToggleState_]]" on-click="onCheckUpdatesClick_" deep-link-focus-id$="[[Setting.kCheckForOsUpdate]]">
                Check for updates
              </cr-button>
              <!-- FYDEOS END -->
            </span>
          </div>
          <cr-link-row id="aboutTPMFirmwareUpdate" class="hr" hidden$="[[!showTPMFirmwareUpdateLineItem_]]" label="Powerwash for added security" on-click="onTPMFirmwareUpdateClick_">
            <div slot="sub-label">
              This upgrade resets your Chromebook and removes current user data.
              <a href="https://support.google.com/chromebook/?p=tpm_update" target="_blank" on-click="onLearnMoreClick_">
                Learn more
              </a>
            </div>
          </cr-link-row>
          <!-- FYDEOS BEGIN -->
          <!--
          <template is="dom-if" if="[[hasInternetConnection_]]">
            <cr-link-row class="hr" id="releaseNotesOnline"
                on-click="onReleaseNotesTap_"
                label="See what&#39;s new" external
                deep-link-focus-id$="[[Setting.kSeeWhatsNew]]">
            </cr-link-row>
          </template>
          <template is="dom-if" if="[[!hasInternetConnection_]]">
            <cr-link-row class="hr" id="releaseNotesOffline"
                on-click="onReleaseNotesTap_"
                label="See what&#39;s new"
                title="Internet connection required" external
                deep-link-focus-id$="[[Setting.kSeeWhatsNew]]">
            </cr-link-row>
          </template>
          <cr-link-row class="hr" id="help" on-click="onHelpClick_"
              label="Get help with FydeOS" external
              deep-link-focus-id$="[[Setting.kGetHelpWithChromeOs]]">
          </cr-link-row>
          -->
          <!-- FYDEOS END -->

          <cr-link-row class="hr" id="diagnostics" on-click="onDiagnosticsClick_" hidden$="[[!showDiagnosticsApp_]]" label="Diagnostics" external="" deep-link-focus-id$="[[Setting.kDiagnostics]]">
          </cr-link-row>
          <cr-link-row class="hr" id="detailed-build-info-trigger" on-click="onDetailedBuildInfoClick_" label="Additional details" role-description="Subpage button">
          </cr-link-row>
          <cr-link-row class="hr" on-click="onManagementPageClick_" start-icon="cr:domain" label="Your FydeOS device is not managed" hidden$="[[!isManaged_]]" external="">
          </cr-link-row>
        </div>
        <template is="dom-if" route-path="/help/details">
          <settings-subpage page-title="Additional details">
            <settings-detailed-build-info eol-message-with-month-and-year="[[eolMessageWithMonthAndYear_]]">
            </settings-detailed-build-info>
          </settings-subpage>
        </template>
      </settings-animated-pages>
    </settings-section>

    <settings-section>
      <div class="settings-box padded block first">
        <div class="info-section">
          <div class="secondary">FydeOS</div>
          <div class="secondary">Copyright 2022 Fyde Innovations, The Chromium Authors. All rights reserved.</div>
        </div>

        <div class="info-section">
          <div class="secondary">FydeOS and Chromium is made possible by the <a target="_blank" href="https://www.chromium.org/">Chromium</a> open source project and other <a target="_blank" href="chrome://credits/">open source software</a>.</div>
          <div class="secondary" inner-h-t-m-l="[[getAboutProductOsLicense_(
                  showCrostiniLicense_)]]">
          </div>
        </div>

      </div>
      <div class="settings-box padded block" id="regulatoryInfo" hidden$="[[!shouldShowRegulatoryOrSafetyInfo_(regulatoryInfo_)]]">

        <img src="[[regulatoryInfo_.url]]" alt="[[regulatoryInfo_.text]]" hidden$="[[!shouldShowRegulatoryInfo_(regulatoryInfo_)]]">
      </div>
    </settings-section>
    <template is="dom-if" if="[[showUpdateWarningDialog_]]" restamp="">
      <settings-update-warning-dialog update-info="[[updateInfo_]]" on-close="onUpdateWarningDialogClose_">
      </settings-update-warning-dialog>
    </template>
    <template is="dom-if" if="[[showTPMFirmwareUpdateDialog_]]" restamp="">
      <os-settings-powerwash-dialog request-tpm-firmware-update="" on-close="onPowerwashDialogClose_">
      </os-settings-powerwash-dialog>
    </template>
<!--_html_template_end_-->`,is:"os-settings-about-page",behaviors:[DeepLinkingBehavior,WebUIListenerBehavior,MainPageBehavior,RouteObserverBehavior,I18nBehavior],properties:{currentUpdateStatusEvent_:{type:Object,value:{message:"",progress:0,rollback:false,powerwash:false,status:UpdateStatus.UPDATED}},isManaged_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isManaged")}},hasCheckedForUpdates_:{type:Boolean,value:false},currentChannel_:String,targetChannel_:String,isLts_:{type:Boolean,value:false},regulatoryInfo_:Object,hasEndOfLife_:{type:Boolean,value:false},eolMessageWithMonthAndYear_:{type:String,value:""},hasInternetConnection_:{type:Boolean,value:false},showCrostini:Boolean,showCrostiniLicense_:{type:Boolean,value:false},showUpdateStatus_:{type:Boolean,value:false},showButtonContainer_:Boolean,showRelaunch_:{type:Boolean,value:false,computed:"computeShowRelaunch_(currentUpdateStatusEvent_)"},showCheckUpdates_:{type:Boolean,computed:"computeShowCheckUpdates_("+"currentUpdateStatusEvent_, hasCheckedForUpdates_, hasEndOfLife_)"},showDiagnosticsApp_:{type:Boolean,value:function(){return loadTimeData$1.getBoolean("diagnosticsAppEnabled")}},focusConfig_:{type:Object,value(){const map=new Map;if(routes.DETAILED_BUILD_INFO){map.set(routes.DETAILED_BUILD_INFO.path,"#detailed-build-info-trigger")}return map}},showUpdateWarningDialog_:{type:Boolean,value:false},showTPMFirmwareUpdateLineItem_:{type:Boolean,value:false},showTPMFirmwareUpdateDialog_:Boolean,updateInfo_:Object,isPendingOsUpdateDeepLink_:{type:Boolean,value:false},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kCheckForOsUpdate,chromeos.settings.mojom.Setting.kSeeWhatsNew,chromeos.settings.mojom.Setting.kGetHelpWithChromeOs,chromeos.settings.mojom.Setting.kReportAnIssue,chromeos.settings.mojom.Setting.kTermsOfService,chromeos.settings.mojom.Setting.kDiagnostics])},isOwner_:{type:Boolean,value:true},fydeOTAToggleState_:{type:Boolean,value:true}},observers:["updateShowUpdateStatus_("+"hasEndOfLife_, currentUpdateStatusEvent_,"+"hasCheckedForUpdates_)","updateShowButtonContainer_("+"showRelaunch_, showCheckUpdates_)","handleCrostiniEnabledChanged_(prefs.crostini.enabled.value)"],aboutBrowserProxy_:null,lifetimeBrowserProxy_:null,attached(){this.aboutBrowserProxy_=AboutPageBrowserProxyImpl.getInstance();this.aboutBrowserProxy_.pageReady();this.lifetimeBrowserProxy_=LifetimeBrowserProxyImpl.getInstance();this.addEventListener("target-channel-changed",(e=>{this.targetChannel_=e.detail}));this.aboutBrowserProxy_.getChannelInfo().then((info=>{this.currentChannel_=info.currentChannel;this.targetChannel_=info.targetChannel;this.isLts_=info.isLts;this.startListening_()}));this.aboutBrowserProxy_.getRegulatoryInfo().then((info=>{this.regulatoryInfo_=info}));this.aboutBrowserProxy_.getEndOfLifeInfo().then((result=>{this.hasEndOfLife_=!!result.hasEndOfLife;this.eolMessageWithMonthAndYear_=result.aboutPageEndOfLifeMessage||""}));this.aboutBrowserProxy_.checkInternetConnection().then((result=>{this.hasInternetConnection_=result}));if(Router.getInstance().getQueryParameters().get("checkForUpdate")==="true"){this.onCheckUpdatesClick_()}this.fydeOTAToggleInit_()},currentRouteChanged(newRoute,oldRoute){MainPageBehavior.currentRouteChanged.call(this,newRoute,oldRoute);if(newRoute!==routes.ABOUT_ABOUT){return}this.attemptDeepLink().then((result=>{if(!result.deepLinkShown&&result.pendingSettingId){assert(result.pendingSettingId===chromeos.settings.mojom.Setting.kCheckForOsUpdate);this.isPendingOsUpdateDeepLink_=true}}))},containsRoute(route){return!route||routes.ABOUT.contains(route)},startListening_(){this.addWebUIListener("update-status-changed",this.onUpdateStatusChanged_.bind(this));this.aboutBrowserProxy_.refreshUpdateStatus();this.addWebUIListener("tpm-firmware-update-status-changed",this.onTPMFirmwareUpdateStatusChanged_.bind(this));this.aboutBrowserProxy_.refreshTPMFirmwareUpdateStatus()},onUpdateStatusChanged_(event){if(event.status===UpdateStatus.CHECKING){this.hasCheckedForUpdates_=true}else if(event.status===UpdateStatus.NEED_PERMISSION_TO_UPDATE){this.showUpdateWarningDialog_=true;this.updateInfo_={version:event.version,size:event.size}}this.currentUpdateStatusEvent_=event},onLearnMoreClick_(event){event.stopPropagation()},onReleaseNotesTap_(){this.aboutBrowserProxy_.launchReleaseNotes()},onHelpClick_(){this.aboutBrowserProxy_.openOsHelpPage()},onDiagnosticsClick_(){assert(this.showDiagnosticsApp_);this.aboutBrowserProxy_.openDiagnostics();recordSettingChange(chromeos.settings.mojom.Setting.kDiagnostics)},onRelaunchClick_(){recordSettingChange();this.lifetimeBrowserProxy_.relaunch()},updateShowUpdateStatus_(){if((this.currentUpdateStatusEvent_.status===UpdateStatus.UPDATED||this.currentUpdateStatusEvent_.status===UpdateStatus.FAILED_DOWNLOAD||this.currentUpdateStatusEvent_.status===UpdateStatus.FAILED_HTTP||this.currentUpdateStatusEvent_.status===UpdateStatus.DISABLED_BY_ADMIN)&&(!this.hasCheckedForUpdates_||this.showUpdateWarningDialog_)){this.showUpdateStatus_=false;return}if(this.hasEndOfLife_){this.showUpdateStatus_=false;return}this.showUpdateStatus_=this.currentUpdateStatusEvent_.status!==UpdateStatus.DISABLED},updateShowButtonContainer_(){this.showButtonContainer_=this.showRelaunch_||this.showCheckUpdates_;if(!this.isPendingOsUpdateDeepLink_){return}this.showDeepLink(chromeos.settings.mojom.Setting.kCheckForOsUpdate).then((result=>{if(result.deepLinkShown){this.isPendingOsUpdateDeepLink_=false}}))},computeShowRelaunch_(){return this.checkStatus_(UpdateStatus.NEARLY_UPDATED)},shouldShowLearnMoreLink_(){return this.currentUpdateStatusEvent_.status===UpdateStatus.FAILED},getUpdateStatusMessage_(){switch(this.currentUpdateStatusEvent_.status){case UpdateStatus.CHECKING:case UpdateStatus.NEED_PERMISSION_TO_UPDATE:return this.i18nAdvanced("aboutUpgradeCheckStarted");case UpdateStatus.NEARLY_UPDATED:if(this.currentChannel_!==this.targetChannel_){return this.i18nAdvanced("aboutUpgradeSuccessChannelSwitch")}if(this.currentUpdateStatusEvent_.rollback){return this.i18nAdvanced("aboutRollbackSuccess")}return this.i18nAdvanced("aboutUpgradeRelaunch");case UpdateStatus.UPDATED:return this.i18nAdvanced("aboutUpgradeUpToDate");case UpdateStatus.UPDATING:assert(typeof this.currentUpdateStatusEvent_.progress==="number");const progressPercent=this.currentUpdateStatusEvent_.progress+"%";if(this.currentChannel_!==this.targetChannel_){return this.i18nAdvanced("aboutUpgradeUpdatingChannelSwitch",{substitutions:[this.i18nAdvanced(browserChannelToI18nId(this.targetChannel_,this.isLts_)),progressPercent]})}if(this.currentUpdateStatusEvent_.rollback){return this.i18nAdvanced("aboutRollbackInProgress",{substitutions:[progressPercent]})}if(this.currentUpdateStatusEvent_.progress>0){return this.i18nAdvanced("aboutUpgradeUpdatingPercent",{substitutions:[progressPercent]})}return this.i18nAdvanced("aboutUpgradeUpdating");case UpdateStatus.FAILED_HTTP:return this.i18nAdvanced("aboutUpgradeTryAgain");case UpdateStatus.FAILED_DOWNLOAD:return this.i18nAdvanced("aboutUpgradeDownloadError");case UpdateStatus.DISABLED_BY_ADMIN:return this.i18nAdvanced("aboutUpgradeAdministrator");default:function formatMessage(msg){return parseHtmlSubset("<b>"+msg+"</b>",["br","pre"]).firstChild.innerHTML}let result="";const message=this.currentUpdateStatusEvent_.message;if(message){result+=formatMessage(message)}const connectMessage=this.currentUpdateStatusEvent_.connectionTypes;if(connectMessage){result+="<div>"+formatMessage(connectMessage)+"</div>"}return result}},getUpdateStatusIcon_(){if(this.hasEndOfLife_){return"os-settings:end-of-life"}switch(this.currentUpdateStatusEvent_.status){case UpdateStatus.DISABLED_BY_ADMIN:return"cr20:domain";case UpdateStatus.FAILED_DOWNLOAD:case UpdateStatus.FAILED_HTTP:case UpdateStatus.FAILED:return"cr:error-outline";case UpdateStatus.UPDATED:case UpdateStatus.NEARLY_UPDATED:return"settings:check-circle";default:return null}},getThrobberSrcIfUpdating_(){if(this.hasEndOfLife_){return null}switch(this.currentUpdateStatusEvent_.status){case UpdateStatus.CHECKING:case UpdateStatus.UPDATING:return"chrome://resources/images/throbber_small.svg";default:return null}},checkStatus_(status){return this.currentUpdateStatusEvent_.status===status},onManagementPageClick_(){window.open("chrome://management")},isPowerwash_(){return this.currentUpdateStatusEvent_.powerwash},onDetailedBuildInfoClick_(){Router.getInstance().navigateTo(routes.DETAILED_BUILD_INFO)},getRelaunchButtonText_(){if(this.checkStatus_(UpdateStatus.NEARLY_UPDATED)){if(this.isPowerwash_()){return this.i18nAdvanced("aboutRelaunchAndPowerwash")}else{return this.i18nAdvanced("aboutRelaunch")}}return""},onCheckUpdatesClick_(){this.onUpdateStatusChanged_({status:UpdateStatus.CHECKING});this.aboutBrowserProxy_.requestUpdate()},computeShowCheckUpdates_(){if(this.hasEndOfLife_){return false}const staleUpdatedStatus=!this.hasCheckedForUpdates_&&this.checkStatus_(UpdateStatus.UPDATED);return staleUpdatedStatus||this.checkStatus_(UpdateStatus.FAILED)||this.checkStatus_(UpdateStatus.FAILED_HTTP)||this.checkStatus_(UpdateStatus.FAILED_DOWNLOAD)||this.checkStatus_(UpdateStatus.DISABLED_BY_ADMIN)},getAboutProductOsLicense_(showCrostiniLicense){return showCrostiniLicense?this.i18nAdvanced("aboutProductOsWithLinuxLicense"):this.i18nAdvanced("aboutProductOsLicense")},handleCrostiniEnabledChanged_(enabled){},shouldShowSafetyInfo_(){return loadTimeData$1.getBoolean("shouldShowSafetyInfo")},shouldShowRegulatoryInfo_(){return this.regulatoryInfo_!==null},shouldShowRegulatoryOrSafetyInfo_(){return this.shouldShowSafetyInfo_()||this.shouldShowRegulatoryInfo_()},onUpdateWarningDialogClose_(){this.showUpdateWarningDialog_=false;this.hasCheckedForUpdates_=false},onTPMFirmwareUpdateStatusChanged_(event){this.showTPMFirmwareUpdateLineItem_=event.updateAvailable},onTPMFirmwareUpdateClick_(){this.showTPMFirmwareUpdateDialog_=true},onPowerwashDialogClose_(){this.showTPMFirmwareUpdateDialog_=false},onProductLogoClick_(){this.$["product-logo"].animate({transform:["none","rotate(-10turn)"]},{duration:500,easing:"cubic-bezier(1, 0, 0, 1)"})},shouldShowIcons_(){if(this.hasEndOfLife_){return true}return this.showUpdateStatus_},getFydeOSVersion_:function(){return this.i18nAdvanced("aboutFydeOSVersion")},fydeOTAToggleInit_(){this.aboutBrowserProxy_.getEnabledFydeOTA().then((enabled=>{console.log("getEnabledFydeOTA",enabled);this.fydeOTAToggleState_=enabled}));this.addWebUIListener("fyde-ota-enabled-changed",this.onFydeOSOTASwitchChanged_.bind(this))},onFydeOSOTASwitchChanged_(enabled){console.log("onFydeOSOTASwitchChanged_",enabled);this.fydeOTAToggleState_=enabled},onEnableFydeOTAChange_(){this.fydeOTAToggleState_=!this.fydeOTAToggleState_;console.log("onEnableFydeOTAChange_",this.fydeOTAToggleState_);this.aboutBrowserProxy_.enableFydeOTA(this.fydeOTAToggleState_)},fydeosOTAStateMessage_(){if(this.fydeOTAToggleState_){return this.i18nAdvanced("aboutFydeOSUpdateEnabled")}else{return this.i18nAdvanced("aboutFydeOSUpdateDisabled")}},canToggleFydeOTA_(){return this.isOwner_&&(this.currentUpdateStatusEvent_.status!==UpdateStatus.UPDATING||this.currentUpdateStatusEvent_.progress!==0)}});// Copyright 2016 The Chromium Authors. All rights reserved.
class AndroidAppsBrowserProxyImpl{requestAndroidAppsInfo(){chrome.send("requestAndroidAppsInfo")}showAndroidAppsSettings(keyboardAction){chrome.send("showAndroidAppsSettings",[keyboardAction])}}addSingletonGetter(AndroidAppsBrowserProxyImpl);// Copyright 2016 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-android-apps-subpage"></style>

    <template is="dom-if" if="[[androidAppsInfo.settingsAppAvailable]]" restamp="">
      <cr-link-row id="manageApps" label="Manage Android preferences" on-click="onManageAndroidAppsTap_" external="" deep-link-focus-id$="[[Setting.kManageAndroidPreferences]]">
      </cr-link-row>
    </template>

    <!-- Use 'restamp' so tests can check if the row exists. -->
    <template is="dom-if" if="[[allowRemove_(prefs.arc.enabled.*)]]" restamp="">
      <div id="remove" class="settings-box">
        <div id="androidRemoveLabel" class="start">
            Remove Android support
        </div>
        <cr-button on-click="onRemoveTap_" aria-labelledby="androidRemoveLabel" deep-link-focus-id$="[[Setting.kRemovePlayStore]]">
           Remove
        </cr-button>
      </div>
    </template>

    <!-- Confirm disable android apps dialog -->
    <cr-dialog id="confirmDisableDialog" close-text="Close" on-cancel="onConfirmDisableDialogCancel_" on-close="onConfirmDisableDialogClose_">
      <div slot="title">Remove Android apps?</div>
      <div slot="body" inner-h-t-m-l="[[dialogBody_]]"></div>
      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onConfirmDisableDialogCancel_">
          Cancel
        </cr-button>
        <cr-button class="action-button" on-click="onConfirmDisableDialogConfirm_">
          Remove Android apps
        </cr-button>
      </div>
    </cr-dialog>

<!--_html_template_end_-->`,is:"settings-android-apps-subpage",behaviors:[DeepLinkingBehavior,I18nBehavior,PrefsBehavior,RouteObserverBehavior],properties:{prefs:Object,androidAppsInfo:{type:Object},playStoreEnabled_:{type:Boolean,computed:"computePlayStoreEnabled_(androidAppsInfo)",observer:"onPlayStoreEnabledChanged_"},dialogBody_:{type:String,value(){return this.i18nAdvanced("androidAppsDisableDialogMessage",{substitutions:[],tags:["br"]})}},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kManageAndroidPreferences,chromeos.settings.mojom.Setting.kRemovePlayStore])}},currentRouteChanged(route,oldRoute){if(route!==routes.ANDROID_APPS_DETAILS){return}this.attemptDeepLink()},onPlayStoreEnabledChanged_(enabled){if(!enabled&&Router.getInstance().getCurrentRoute()===routes.ANDROID_APPS_DETAILS){Router.getInstance().navigateToPreviousRoute()}},computePlayStoreEnabled_(){return this.androidAppsInfo.playStoreEnabled},allowRemove_(){return this.prefs.arc.enabled.enforcement!==chrome.settingsPrivate.Enforcement.ENFORCED},onRemoveTap_(event){this.$.confirmDisableDialog.showModal()},onConfirmDisableDialogConfirm_(){this.setPrefValue("arc.enabled",false);this.$.confirmDisableDialog.close()},onConfirmDisableDialogCancel_(){this.$.confirmDisableDialog.close()},onConfirmDisableDialogClose_(){focusWithoutInk(assert(this.$$("#remove")))},onManageAndroidAppsTap_(event){const isKeyboardAction=event.detail===0;AndroidAppsBrowserProxyImpl.getInstance().showAndroidAppsSettings(isKeyboardAction)}});// Copyright 2018 The Chromium Authors. All rights reserved.
class Store{constructor(emptyState,reducer){this.data=emptyState;this.reducer_=reducer;this.initialized_=false;this.queuedActions_=[];this.observers_=[];this.batchMode_=false}init(initialState){this.data=initialState;this.queuedActions_.forEach((action=>{this.dispatchInternal_(action)}));this.initialized_=true;this.notifyObservers_(this.data)}isInitialized(){return this.initialized_}addObserver(observer){this.observers_.push(observer)}removeObserver(observer){const index=this.observers_.indexOf(observer);this.observers_.splice(index,1)}beginBatchUpdate(){this.batchMode_=true}endBatchUpdate(){this.batchMode_=false;this.notifyObservers_(this.data)}dispatchAsync(action){if(!this.initialized_){this.queuedActions_.push(action);return}this.dispatchInternal_(action)}dispatch(action){this.dispatchAsync((function(dispatch){dispatch(action)}))}dispatchInternal_(action){action(this.reduce_.bind(this))}reduce_(action){if(!action){return}this.data=this.reducer_(this.data,action);if(this.isInitialized()&&!this.batchMode_){this.notifyObservers_(this.data)}}notifyObservers_(state){this.observers_.forEach((function(o){o.onStateChanged(state)}))}}// Copyright 2018 The Chromium Authors. All rights reserved.
function addApp(app){return{name:"add-app",app:app}}function changeApp(app){return{name:"change-app",app:app}}function removeApp(id){return{name:"remove-app",id:id}}function updateSelectedAppId(appId){return{name:"update-selected-app-id",value:appId}}// Copyright 2018 The Chromium Authors. All rights reserved.
const PageType={MAIN:0,DETAIL:1};const Bool={kFalse:0,kTrue:1};const PwaPermissionType=appManagement.mojom.PwaPermissionType;const PluginVmPermissionType=appManagement.mojom.PluginVmPermissionType;const ArcPermissionType=appManagement.mojom.ArcPermissionType;const AppType=apps.mojom.AppType;const PermissionValueType=apps.mojom.PermissionValueType;const TriState=apps.mojom.TriState;const OptionalBool=apps.mojom.OptionalBool;const InstallSource=apps.mojom.InstallSource;const AppManagementEntryPointsHistogramName="AppManagement.EntryPoints";const AppManagementEntryPoint={AppListContextMenuAppInfoArc:0,AppListContextMenuAppInfoChromeApp:1,AppListContextMenuAppInfoWebApp:2,ShelfContextMenuAppInfoArc:3,ShelfContextMenuAppInfoChromeApp:4,ShelfContextMenuAppInfoWebApp:5,MainViewArc:6,MainViewChromeApp:7,MainViewWebApp:8,OsSettingsMainPage:9,MainViewPluginVm:10,DBusServicePluginVm:11};const AppManagementUserAction={ViewOpened:0,NativeSettingsOpened:1,UninstallDialogLaunched:2,PinToShelfTurnedOn:3,PinToShelfTurnedOff:4,NotificationsTurnedOn:5,NotificationsTurnedOff:6,LocationTurnedOn:7,LocationTurnedOff:8,CameraTurnedOn:9,CameraTurnedOff:10,MicrophoneTurnedOn:11,MicrophoneTurnedOff:12,ContactsTurnedOn:13,ContactsTurnedOff:14,StorageTurnedOn:15,StorageTurnedOff:16,PrintingTurnedOn:17,PrintingTurnedOff:18};const $_documentContainer=document.createElement("template");$_documentContainer.innerHTML=`<custom-style>\n<style css-build="shadow">html {\n  --app-management-font-size: 13px;\n    --app-management-line-height: 1.54; \n    --card-max-width: 676px;\n    --card-min-width: 550px;\n    --card-separator: 1px solid var(--cros-separator-color);\n    --expanded-permission-row-height: 48px;\n    --header-font-weight: 500;\n    --header-text-color: var(--cros-text-color-secondary);\n    --permission-icon-color: var(--cros-app-management-permission-icon-color);\n    --permission-icon-padding: 20px;\n    --permission-list-item-height: 48px;\n    --primary-text-color: var(--cros-text-color-primary);\n    --row-item-icon-padding: 12px;\n    --secondary-font-weight: 400;\n    --secondary-text-color: var(--cros-text-color-secondary);\n    --text-permission-list-row-height: 40px;\n}\n\n</style>\n</custom-style>\n`;document.head.appendChild($_documentContainer.content);const template$a=document.createElement("template");template$a.innerHTML=`<dom-module id="app-management-shared-css" assetpath="chrome://resources/">\n  <template>\n    <style include="cr-shared-style cros-color-overrides" scope="app-management-shared-css">.card-container {\n  background-color: var(--cros-bg-color);\n        border-radius: var(--cr-card-border-radius);\n        box-shadow: var(--cr-card-shadow);\n        display: flex;\n        flex-direction: column;\n        margin: 24px auto;\n        max-width: var(--card-max-width);\n        min-width: var(--card-min-width);\n}\n\n.separated-row {\n  align-items: center;\n        display: inline-flex;\n        justify-content: space-between;\n}\n\n.card-row {\n  border-top: var(--card-separator);\n        padding: 0 24px;\n}\n\n.permission-card-row {\n  border-bottom: var(--card-separator);\n        padding: 0 20px;\n}\n\n.permission-text-row {\n  border-top: var(--card-separator);\n        display: flex;\n        flex-direction: column;\n        height: var(--text-permission-list-row-height);\n        justify-content: center;\n}\n\n.permission-section-header {\n  line-height: 20px;\n        padding-bottom: 12px;\n        padding-top: 24px;\n}\n\n.clickable {\n  cursor: pointer;\n}\n\n.permission-card-row:last-child {\n  border-style: none;\n}\n\n.permission-card-row[hide-bottom-border] {\n  border-bottom: none;\n}\n\n.header-text {\n  color: var(--header-text-color);\n        font-weight: var(--header-font-weight);\n}\n\n.permission-row-controls {\n  align-items: center;\n        display: inline-flex;\n}\n\n.permission-list {\n  display: flex;\n        flex-direction: column;\n}\n\n.permission-list > * {\n  flex: 0 0 var(--permission-list-item-height);\n}\n\n.native-settings-icon {\n  display: flex;\n        margin-inline-start: 0;\n}\n\n.subpermission-row {\n  border-bottom: var(--card-separator);\n        height: 48px;\n}\n\n.subpermission-row[available_]:last-of-type {\n  border-bottom: none;\n}\n\n.secondary-text {\n  color: var(--secondary-text-color);\n        font-weight: var(--secondary-font-weight);\n}\n\n.expand-button {\n  height: 36px;\n        margin-inline-end: 12px;\n        width: 36px;\n}\n\n.horizontal-align {\n  align-items: center;\n        display: flex;\n}\n\n.expander-list-row {\n  align-items: center;\n        border-top: var(--card-separator);\n        color: var(--secondary-text-color);\n        display: flex;\n        height: 50px;\n        justify-content: space-between;\n        padding-inline-end: 8px;\n        padding-inline-start: 24px;\n}\n\n.page-title {\n  flex: 1;\n        font-size: 16px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n}\n\n.indented-permission-block {\n  padding-inline-start: 36px;\n}\n\n</style>\n  </template>\n</dom-module>\n`;document.body.appendChild(template$a.content.cloneNode(true));// Copyright 2018 The Chromium Authors. All rights reserved.
const StoreClient={created(){this.watches_=[]},attached(){this.getStore().addObserver(this)},detached(){this.getStore().removeObserver(this)},watch_(localProperty,valueGetter){this.watches_.push({localProperty:localProperty,valueGetter:valueGetter})},dispatch(action){this.getStore().dispatch(action)},dispatchAsync(action){this.getStore().dispatchAsync(action)},onStateChanged(newState){this.watches_.forEach((watch=>{const oldValue=this[watch.localProperty];const newValue=watch.valueGetter(newState);if(oldValue===newValue||newValue===undefined){return}this[watch.localProperty]=newValue}))},updateFromStore(){if(this.getStore().isInitialized()){this.onStateChanged(this.getStore().data)}},watch(localProperty,valueGetter){assertNotReached$1()},getState(){assertNotReached$1()},getStore(){assertNotReached$1()}};// Copyright 2018 The Chromium Authors. All rights reserved.
function createEmptyState(){return{apps:{},selectedAppId:null}}function createInitialState(apps){const initialState=createEmptyState();for(const app of apps){initialState.apps[app.id]=app}return initialState}function createPermission(permissionId,valueType,value,isManaged){return{permissionId:permissionId,valueType:valueType,value:value,isManaged:isManaged}}function getAppIcon(app){return`chrome://app-icon/${app.id}/64`}function getPermissionValueBool(app,permissionType){const permission=getPermission(app,permissionType);assert(permission);switch(permission.valueType){case PermissionValueType.kBool:return permission.value===Bool.kTrue;case PermissionValueType.kTriState:return permission.value===TriState.kAllow;default:assertNotReached$1()}}function getPermission(app,permissionType){return app.permissions[permissionTypeHandle(app,permissionType)]}function permissionTypeHandle(app,permissionType){switch(app.type){case AppType.kWeb:return PwaPermissionType[permissionType];case AppType.kArc:return ArcPermissionType[permissionType];case AppType.kPluginVm:return PluginVmPermissionType[permissionType];default:assertNotReached$1()}}function getSelectedApp(state){const selectedAppId=state.selectedAppId;return selectedAppId?state.apps[selectedAppId]:null}function alphabeticalSort(a,b){return a.localeCompare(b)}function toggleOptionalBool(bool){switch(bool){case OptionalBool.kFalse:return OptionalBool.kTrue;case OptionalBool.kTrue:return OptionalBool.kFalse;default:assertNotReached$1()}}function convertOptionalBoolToBool(optionalBool){switch(optionalBool){case OptionalBool.kTrue:return true;case OptionalBool.kFalse:return false;default:assertNotReached$1()}}function openAppDetailPage(appId){const params=new URLSearchParams;params.append("id",appId);Router.getInstance().navigateTo(routes.APP_MANAGEMENT_DETAIL,params)}function openMainPage(){Router.getInstance().navigateTo(routes.APP_MANAGEMENT)}function getUserActionHistogramNameForAppType_(appType){switch(appType){case AppType.kArc:return"AppManagement.AppDetailViews.ArcApp";case AppType.kExtension:case AppType.kStandaloneBrowser:return"AppManagement.AppDetailViews.ChromeApp";case AppType.kWeb:return"AppManagement.AppDetailViews.WebApp";case AppType.kPluginVm:return"AppManagement.AppDetailViews.PluginVmApp";default:assertNotReached$1()}}function recordAppManagementUserAction(appType,userAction){const histogram=getUserActionHistogramNameForAppType_(appType);const enumLength=Object.keys(AppManagementUserAction).length;chrome.metricsPrivate.recordEnumerationValue(histogram,userAction,enumLength)}// Copyright 2018 The Chromium Authors. All rights reserved.
const AppState={};AppState.addApp=function(apps,action){if(apps[action.app.id]){const stringifyApp=app=>`id: ${app.id}, type: ${app.type}, install source: ${app.installSource} title: ${app.title}`;const errorMessage=`Attempted to add an app that already exists.\n                            New app: ${stringifyApp(action.app)}.\n                            Old app: ${stringifyApp(apps[action.app.id])}.`;assertNotReached$1(errorMessage)}const newAppEntry={};newAppEntry[action.app.id]=action.app;return Object.assign({},apps,newAppEntry)};AppState.changeApp=function(apps,action){if(!apps[action.app.id]){return apps}const changedAppEntry={};changedAppEntry[action.app.id]=action.app;return Object.assign({},apps,changedAppEntry)};AppState.removeApp=function(apps,action){if(!apps.hasOwnProperty(action.id)){return apps}delete apps[action.id];return Object.assign({},apps)};AppState.updateApps=function(apps,action){switch(action.name){case"add-app":return AppState.addApp(apps,action);case"change-app":return AppState.changeApp(apps,action);case"remove-app":return AppState.removeApp(apps,action);default:return apps}};const SelectedAppId={};SelectedAppId.updateSelectedAppId=function(selectedAppId,action){switch(action.name){case"update-selected-app-id":return action.value;case"remove-app":if(selectedAppId===action.id){return null}return selectedAppId;default:return selectedAppId}};function reduceAction(state,action){return{apps:AppState.updateApps(state.apps,action),selectedAppId:SelectedAppId.updateSelectedAppId(state.selectedAppId,action)}}// Copyright 2018 The Chromium Authors. All rights reserved.
class AppManagementStore extends Store{constructor(){super(createEmptyState(),reduceAction)}}addSingletonGetter(AppManagementStore);// Copyright 2018 The Chromium Authors. All rights reserved.
const AppManagementStoreClientImpl={watch(localProperty,valueGetter){this.watch_(localProperty,valueGetter)},getState(){return this.getStore().data},getStore(){return AppManagementStore.getInstance()}};const AppManagementStoreClient=[StoreClient,AppManagementStoreClientImpl];// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="app-management-shared-css cr-icons" scope="app-management-app-item">:host {
  align-items: center;
        border-bottom: var(--card-separator);
        color: var(--cros-text-color-primary);
        cursor: pointer;
        display: flex;
        flex-direction: row;
        font-weight: 400;
        height: 48px;
}

#app-title {
  flex: 1;
        overflow: hidden;
        text-overflow: ellipsis;
}

#app-icon {
  height: 32px;
        margin-inline-end: 20px;
        margin-inline-start: 24px;
        width: 32px;
}

</style>
    <img id="app-icon" src="[[iconUrlFromId_(app)]]" alt="[[app.title]] app icon." aria-hidden="true">
    <div id="app-title" aria-hidden="true">[[app.title]]</div>
    <slot name="right-content"></slot>
<!--_html_template_end_-->`,is:"app-management-app-item",behaviors:[AppManagementStoreClient],properties:{app:{type:Object}},listeners:{click:"onClick_"},onClick_(){openAppDetailPage(this.app.id);chrome.metricsPrivate.recordEnumerationValue(AppManagementEntryPointsHistogramName,this.getAppManagementEntryPoint_(this.app.type),Object.keys(AppManagementEntryPoint).length)},iconUrlFromId_(app){return getAppIcon(app)},getAppManagementEntryPoint_(appType){switch(appType){case AppType.kArc:return AppManagementEntryPoint.MainViewArc;case AppType.kExtension:case AppType.kStandaloneBrowser:return AppManagementEntryPoint.MainViewChromeApp;case AppType.kWeb:return AppManagementEntryPoint.MainViewWebApp;case AppType.kPluginVm:return AppManagementEntryPoint.MainViewPluginVm;default:assertNotReached$1()}}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><slot></slot>
<!--_html_template_end_-->`,is:"app-management-dom-switch",behaviors:[Templatizer],properties:{route:{type:String,observer:"onRouteChanged_"},instance_:{type:Object,value:null},children_:{type:Object,value:()=>({})},selectedChild_:{type:Object,value:null}},firstRenderForTesting_:new PromiseResolver,attached(){const template=this.getContentChildren()[0];this.templatize(template);this.instance_=this.stamp({});const children=this.instance_.root.children;for(const child of children){this.children_[child.getAttribute("route-id")]=child}if(this.route){this.onRouteChanged_(this.route)}},onRouteChanged_(newRouteId){if(!this.instance_){return}if(newRouteId===null){if(this.selectedChild_===null){return}this.parentNode.removeChild(this.selectedChild_);this.selectedChild_=null;return}const newSelectedChild=this.children_[newRouteId];assert(newSelectedChild,"The route must be equal to the route-id of a child element.");if(this.selectedChild_){this.parentNode.replaceChild(newSelectedChild,this.selectedChild_)}else{this.parentNode.insertBefore(newSelectedChild,this)}this.selectedChild_=newSelectedChild;this.firstRenderForTesting_.resolve()},_forwardHostPropV2(prop,value){if(this.instance_){this.instance_.forwardHostProp(prop,value)}}});// Copyright 2018 The Chromium Authors. All rights reserved.
class FakePageHandler{static createWebPermissions(options){const permissionIds=[PwaPermissionType.GEOLOCATION,PwaPermissionType.NOTIFICATIONS,PwaPermissionType.MEDIASTREAM_MIC,PwaPermissionType.MEDIASTREAM_CAMERA];const permissions={};for(const permissionId of permissionIds){let permissionValue=TriState.kAllow;let isManaged=false;if(options&&options[permissionId]){const opts=options[permissionId];permissionValue=opts.permissionValue||permissionValue;isManaged=opts.isManaged||isManaged}permissions[permissionId]=createPermission(permissionId,PermissionValueType.kTriState,permissionValue,isManaged)}return permissions}static createArcPermissions(optIds){const permissionIds=optIds||[ArcPermissionType.CAMERA,ArcPermissionType.LOCATION,ArcPermissionType.MICROPHONE,ArcPermissionType.NOTIFICATIONS,ArcPermissionType.CONTACTS,ArcPermissionType.STORAGE];const permissions={};for(const permissionId of permissionIds){permissions[permissionId]=createPermission(permissionId,PermissionValueType.kBool,Bool.kTrue,false)}return permissions}static createPermissions(appType){switch(appType){case AppType.kWeb:return FakePageHandler.createWebPermissions();case AppType.kArc:return FakePageHandler.createArcPermissions();default:return{}}}static createApp(id,optConfig){const app={id:id,type:apps.mojom.AppType.kWeb,title:"App Title",description:"",version:"5.1",size:"9.0MB",isPinned:apps.mojom.OptionalBool.kFalse,isPolicyPinned:apps.mojom.OptionalBool.kFalse,installSource:apps.mojom.InstallSource.kUser,permissions:{},hideMoreSettings:false,hidePinToShelf:false,isPreferredApp:false};if(optConfig){Object.assign(app,optConfig)}if(!optConfig||optConfig.permissions===undefined){app.permissions=FakePageHandler.createPermissions(app.type)}return app}constructor(page){this.receiver_=new appManagement.mojom.PageHandlerReceiver(this);this.page=page;this.apps_=[];this.guid=0}getRemote(){return this.receiver_.$.bindNewPipeAndPassRemote()}async flushPipesForTesting(){await this.page.$.flushForTesting()}async getApps(){return{apps:this.apps_}}async getExtensionAppPermissionMessages(appId){return[]}setApps(appList){this.apps_=appList}setPinned(appId,pinnedValue){const app=AppManagementStore.getInstance().data.apps[appId];const newApp=Object.assign({},app,{isPinned:pinnedValue});this.page.onAppChanged(newApp)}setPermission(appId,permission){const app=AppManagementStore.getInstance().data.apps[appId];assert(app.permissions[permission.permissionId]);const newPermissions=Object.assign({},app.permissions);newPermissions[permission.permissionId]=permission;const newApp=Object.assign({},app,{permissions:newPermissions});this.page.onAppChanged(newApp)}uninstall(appId){this.page.onAppRemoved(appId)}openNativeSettings(appId){}async addApp(optId,optConfig){optId=optId||String(this.guid++);const app=FakePageHandler.createApp(optId,optConfig);this.page.onAppAdded(app);await this.flushPipesForTesting();return app}async changeApp(id,changes){this.page.onAppChanged(FakePageHandler.createApp(id,changes));await this.flushPipesForTesting()}}// Copyright 2018 The Chromium Authors. All rights reserved.
class BrowserProxy{constructor(){this.callbackRouter=new appManagement.mojom.PageCallbackRouter;this.handler=null;const urlParams=new URLSearchParams(window.location.search);const useFake=urlParams.get("fakeBackend");if(useFake){this.fakeHandler=new FakePageHandler(this.callbackRouter.$.bindNewPipeAndPassRemote());this.handler=this.fakeHandler.getRemote();const permissionOptions={};permissionOptions[PwaPermissionType.GEOLOCATION]={permissionValue:TriState.kAllow,isManaged:true};permissionOptions[PwaPermissionType.MEDIASTREAM_CAMERA]={permissionValue:TriState.kBlock,isManaged:true};const appList=[FakePageHandler.createApp("blpcfgokakmgnkcojhhkbfblekacnbeo",{title:"Built in app, not implemented",type:AppType.kBuiltIn,installSource:InstallSource.kSystem}),FakePageHandler.createApp("aohghmighlieiainnegkcijnfilokake",{title:"Arc app",type:AppType.kArc,installSource:InstallSource.kUser}),FakePageHandler.createApp("blpcfgokakmgnkcojhhkbfbldkacnbeo",{title:"Crostini app, not implemented",type:AppType.kCrostini,installSource:InstallSource.kUser}),FakePageHandler.createApp("pjkljhegncpnkkknowihdijeoejaedia",{title:"Chrome App",type:AppType.kExtension,description:"A Chrome App installed from the Chrome Web Store."}),FakePageHandler.createApp("aapocclcdoekwnckovdopfmtonfmgok",{title:"Web App",type:AppType.kWeb}),FakePageHandler.createApp("pjkljhegncpnkkknbcohdijeoejaedia",{title:"Chrome App, OEM installed",type:AppType.kExtension,description:"A Chrome App installed by an OEM.",installSource:InstallSource.kOem}),FakePageHandler.createApp("aapocclcgogkmnckokdopfmhonfmgok",{title:"Web App, policy applied",type:AppType.kWeb,isPinned:apps.mojom.OptionalBool.kTrue,isPolicyPinned:apps.mojom.OptionalBool.kTrue,installSource:apps.mojom.InstallSource.kPolicy,permissions:FakePageHandler.createWebPermissions(permissionOptions)})];this.fakeHandler.setApps(appList)}else{this.handler=new appManagement.mojom.PageHandlerRemote;const factory=appManagement.mojom.PageHandlerFactory.getRemote();factory.createPageHandler(this.callbackRouter.$.bindNewPipeAndPassRemote(),this.handler.$.bindNewPipeAndPassReceiver())}}}addSingletonGetter(BrowserProxy);const template$b=html`<iron-iconset-svg name="app-management" size="20">
  <svg>
    <!--
    These icons are custom and kept in sorted order.
    See http://goo.gl/Y1OdAq for instructions on adding additional icons.
    TODO: move these icons to a generic file when other pages need to use them.
    -->
    <defs>
      <g id="contacts" viewBox="0 0 20 20"><rect width="20px" height="20px" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"></rect><path d="M5,14.754629 C6.36959794,13.6567183 8.10810658,13 10,13 C11.8918934,13 13.6304021,13.6567183 15,14.754629 L15,6 L5,6 L5,14.754629 Z M14.153574,16 C13.0272557,15.0633182 11.5794129,14.5 10,14.5 C8.42058712,14.5 6.97274425,15.0633182 5.84642599,16 L14.153574,16 Z M10,12 C8.61928813,12 7.5,10.8807119 7.5,9.5 C7.5,8.11928813 8.61928813,7 10,7 C11.3807119,7 12.5,8.11928813 12.5,9.5 C12.5,10.8807119 11.3807119,12 10,12 Z M10,10.5 C10.5522847,10.5 11,10.0522847 11,9.5 C11,8.94771525 10.5522847,8.5 10,8.5 C9.44771525,8.5 9,8.94771525 9,9.5 C9,10.0522847 9.44771525,10.5 10,10.5 Z M5,4 L15,4 C16.1045695,4 17,4.8954305 17,6 L17,16 C17,17.1045695 16.1045695,18 15,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,6 C3,4.8954305 3.8954305,4 5,4 Z" id="Combined-Shape" fill="#5F6368"></path><rect id="Rectangle" fill="#5F6368" x="6" y="2" width="2" height="2"></rect><rect id="Rectangle-Copy" fill="#5F6368" x="12" y="2" width="2" height="2"></rect></g>
      <g id="storage" viewBox="0 0 20 20"><rect width="20px" height="20px" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"></rect><path fill="#5F6368" d="M16,5 L12,5 L10,3 L4,3 C2.9,3 2.01,3.9 2.01,5 L2,15 C2,16.1 2.9,17 4,17 L16,17 C17.1,17 18,16.1 18,15 L18,7 C18,5.9 17.1,5 16,5 Z M16,15 L4,15 L4,7 L16,7 L16,15 Z"></path></g>
      <g id="location" viewBox="0 0 20 20"><rect width="20px" height="20px" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"></rect><path d="M10,18 C6,13.5424723 4,10.209139 4,8 C4,4.6862915 6.6862915,2 10,2 C13.3137085,2 16,4.6862915 16,8 C16,10.209139 14,13.5424723 10,18 Z M6,8 C6,9.32543171 7.3180021,11.7149155 10,14.9435167 C12.6819979,11.7149155 14,9.32543171 14,8 C14,5.790861 12.209139,4 10,4 C7.790861,4 6,5.790861 6,8 Z M10,10 C8.8954305,10 8,9.1045695 8,8 C8,6.8954305 8.8954305,6 10,6 C11.1045695,6 12,6.8954305 12,8 C12,9.1045695 11.1045695,10 10,10 Z" id="Combined-Shape" fill="#5F6368"></path></g>
      <g id="camera" viewBox="0 0 20 20"><rect width="20px" height="20px" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"></rect><path d="M2,5.99539757 C2,5.44565467 2.44851311,5 3.00247329,5 L12.9975267,5 C13.5511774,5 14,5.44910619 14,5.99539757 L14,14.0046024 C14,14.5543453 13.5514869,15 12.9975267,15 L3.00247329,15 C2.44882258,15 2,14.5508938 2,14.0046024 L2,5.99539757 Z M14,8.5 L18,5.5 L18,14.5 L14,12 L14,8.5 Z M4,7 L4,13 L12,13 L12,7 L4,7 Z" id="Combined-Shape" fill="#5F6368"></path></g>
      <g id="microphone" viewBox="0 0 20 20"><rect width="20px" height="20px" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"></rect><path d="M12.5628571,9.5 C12.5628571,10.8833333 11.4228571,12 10,12 C8.57714286,12 7.42857143,10.8833333 7.42857143,9.5 L7.42857143,4.5 C7.42857143,3.11666667 8.57714286,2 10,2 C11.4228571,2 12.5714286,3.11666667 12.5714286,4.5 L12.5628571,9.5 Z M10.0548096,3.5 C9.5012628,3.5 9.05131398,3.94643954 9.04697987,4.49996935 L9.0078297,9.50003065 C9.00780942,9.50262015 9.00779929,9.50520971 9.00779929,9.50779929 C9.00779929,10.0557766 9.45202268,10.5 10,10.5 C10.5535468,10.5 11.0034956,10.0535605 11.0078297,9.50003065 L11.0469799,4.49996935 C11.0470001,4.49737985 11.0470103,4.49479029 11.0470103,4.49220071 C11.0470103,3.94422339 10.6027869,3.5 10.0548096,3.5 Z M10,13.8736842 C7.63428571,13.8736842 5.45714286,12.1052632 5.45714286,9.57894737 L4,9.57894737 C4,12.4589474 6.33142857,14.8252632 9.14285714,15.2378947 L9.14285714,18 L10.8571429,18 L10.8571429,15.2378947 C13.6685714,14.8336842 16,12.4589474 16,9.57894737 L14.5428571,9.57894737 C14.5428571,12.1052632 12.3657143,13.8736842 10,13.8736842 Z" fill="#5F6368"></path></g>
    </defs>
  </svg>
</iron-iconset-svg>
`;document.head.appendChild(template$b.content);// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="app-management-shared-css" scope="app-management-toggle-row">:host {
  align-items: center;
        display: flex;
        flex: 1;
        justify-content: space-between;
}

#icon {
  padding-inline-end: var(--row-item-icon-padding);
}

#policyIndicator {
  fill: var(--google-grey-refresh-700);
        padding-inline-end: var(--settings-controlled-by-spacing);
}

</style>

    <div id="left-content" class="horizontal-align" aria-hidden="true">
      <template is="dom-if" if="[[icon]]">
        <iron-icon id="icon" icon="[[icon]]"></iron-icon>
      </template>
      <div id="label">[[label]]</div>
    </div>
    <div id="right-content" class="horizontal-align">
      <template is="dom-if" if="[[managed]]">
        <cr-policy-indicator id="policyIndicator" indicator-type="devicePolicy">
        </cr-policy-indicator>
      </template>
      <cr-toggle id="toggle" checked="[[value]]" disabled$="[[managed]]" aria-label$="[[label]]">
      </cr-toggle>
    </div>
<!--_html_template_end_-->`,is:"app-management-toggle-row",properties:{icon:String,label:String,managed:{type:Boolean,value:false,reflectToAttribute:true},value:{type:Boolean,value:false,reflectToAttribute:true}},listeners:{click:"onClick_"},isChecked(){return this.$.toggle.checked},setToggle(value){this.$.toggle.checked=value},onClick_(event){event.stopPropagation();this.$["toggle"].click()}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="app-management-shared-css" scope="app-management-permission-item">:host {
  align-items: center;
        display: flex;
        justify-content: space-between;
}

:host(:not([disabled_])) {
  cursor: pointer;
}

:host(:not([available_])) {
  display: none;
}

</style>
    <!-- permission-item does not include any icon-set, so containing
     elements should import the icon-set needed for the specified |icon|. -->
    <template is="dom-if" if="[[available_]]">
      <app-management-toggle-row id="toggle-row" icon="[[icon]]" label="[[permissionLabel]]" managed="[[isManaged_(app_, permissionType)]]" value="[[getValue_(app_, permissionType)]]">
      </app-management-toggle-row>
    </template>
<!--_html_template_end_-->`,is:"app-management-permission-item",behaviors:[AppManagementStoreClient],properties:{permissionLabel:String,permissionType:String,icon:String,syncPermissionManually:Boolean,app_:Object,available_:{type:Boolean,computed:"isAvailable_(app_, permissionType)",reflectToAttribute:true},disabled_:{type:Boolean,computed:"isManaged_(app_, permissionType)",reflectToAttribute:true}},listeners:{click:"onClick_",change:"togglePermission_"},attached(){this.watch("app_",(state=>getSelectedApp(state)));this.updateFromStore()},isAvailable_(app,permissionType){if(app===undefined||permissionType===undefined){return false}assert(app);return getPermission(app,permissionType)!==undefined},isManaged_(app,permissionType){if(app===undefined||permissionType===undefined||!this.isAvailable_(app,permissionType)){return false}assert(app);const permission=getPermission(app,permissionType);assert(permission);return permission.isManaged},getValue_(app,permissionType){if(app===undefined||permissionType===undefined){return false}assert(app);return getPermissionValueBool(app,permissionType)},resetToggle(){const currentValue=this.getValue_(this.app_,this.permissionType);this.$$("#toggle-row").setToggle(currentValue)},onClick_(){this.$$("#toggle-row").click()},togglePermission_(){if(!this.syncPermissionManually){this.syncPermission()}},syncPermission(){assert(this.app_);let newPermission;let newBoolState=false;switch(getPermission(this.app_,this.permissionType).valueType){case PermissionValueType.kBool:newPermission=this.getUIPermissionBoolean_(this.app_,this.permissionType);newBoolState=newPermission.value===Bool.kTrue;break;case PermissionValueType.kTriState:newPermission=this.getUIPermissionTriState_(this.app_,this.permissionType);newBoolState=newPermission.value===TriState.kAllow;break;default:assertNotReached$1()}BrowserProxy.getInstance().handler.setPermission(this.app_.id,newPermission);recordSettingChange();recordAppManagementUserAction(this.app_.type,this.getUserMetricActionForPermission_(newBoolState,this.permissionType))},getUIPermissionBoolean_(app,permissionType){let newPermissionValue;const currentPermission=getPermission(app,permissionType);switch(currentPermission.value){case Bool.kFalse:newPermissionValue=Bool.kTrue;break;case Bool.kTrue:newPermissionValue=Bool.kFalse;break;default:assertNotReached$1()}assert(newPermissionValue!==undefined);return createPermission(permissionTypeHandle(app,permissionType),PermissionValueType.kBool,newPermissionValue,currentPermission.isManaged)},getUIPermissionTriState_(app,permissionType){let newPermissionValue;const currentPermission=getPermission(app,permissionType);switch(currentPermission.value){case TriState.kBlock:newPermissionValue=TriState.kAllow;break;case TriState.kAsk:newPermissionValue=TriState.kAllow;break;case TriState.kAllow:newPermissionValue=TriState.kBlock;break;default:assertNotReached$1()}assert(newPermissionValue!==undefined);return createPermission(permissionTypeHandle(app,permissionType),PermissionValueType.kTriState,newPermissionValue,currentPermission.isManaged)},getUserMetricActionForPermission_(permissionValue,permissionType){switch(permissionType){case"NOTIFICATIONS":return permissionValue?AppManagementUserAction.NotificationsTurnedOn:AppManagementUserAction.NotificationsTurnedOff;case"GEOLOCATION":case"LOCATION":return permissionValue?AppManagementUserAction.LocationTurnedOn:AppManagementUserAction.LocationTurnedOff;case"MEDIASTREAM_CAMERA":case"CAMERA":return permissionValue?AppManagementUserAction.CameraTurnedOn:AppManagementUserAction.CameraTurnedOff;case"MEDIASTREAM_MIC":case"MICROPHONE":return permissionValue?AppManagementUserAction.MicrophoneTurnedOn:AppManagementUserAction.MicrophoneTurnedOff;case"CONTACTS":return permissionValue?AppManagementUserAction.ContactsTurnedOn:AppManagementUserAction.ContactsTurnedOff;case"STORAGE":return permissionValue?AppManagementUserAction.StorageTurnedOn:AppManagementUserAction.StorageTurnedOff;case"PRINTING":return permissionValue?AppManagementUserAction.PrintingTurnedOn:AppManagementUserAction.PrintingTurnedOff;default:assertNotReached$1()}}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="app-management-pin-to-shelf-item">:host(:not([disabled])) {
  cursor: pointer;
}

</style>
    <app-management-toggle-row id="toggle-row" label="Pin to shelf" managed="[[isManaged_(app)]]" value="[[getValue_(app)]]">
    </app-management-toggle-row>
<!--_html_template_end_-->`,is:"app-management-pin-to-shelf-item",properties:{app:Object,hidden:{type:Boolean,computed:"isAvailable_(app)",reflectToAttribute:true},disabled:{type:Boolean,computed:"isManaged_(app)",reflectToAttribute:true}},listeners:{click:"onClick_",change:"toggleSetting_"},getValue_(app){if(app===undefined){return false}assert(app);return app.isPinned===OptionalBool.kTrue},isAvailable_(app){if(app===undefined){return false}assert(app);return app.hidePinToShelf},isManaged_(app){if(app===undefined){return false}assert(app);return app.isPolicyPinned===OptionalBool.kTrue},toggleSetting_(){const newState=assert(toggleOptionalBool(this.app.isPinned));const newStateBool=convertOptionalBoolToBool(newState);assert(newStateBool===this.$["toggle-row"].isChecked());BrowserProxy.getInstance().handler.setPinned(this.app.id,newState);recordSettingChange();const userAction=newStateBool?AppManagementUserAction.PinToShelfTurnedOn:AppManagementUserAction.PinToShelfTurnedOff;recordAppManagementUserAction(this.app.type,userAction)},onClick_(){this.$["toggle-row"].click()}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="app-management-shared-css" scope="app-management-pwa-detail-view"></style>
    <div class="permission-list">
      <app-management-pin-to-shelf-item id="pin-to-shelf-setting" class="permission-card-row separated-row header-text" app="[[app_]]">
      </app-management-pin-to-shelf-item>
      <app-management-permission-item id="notifications-card" class="permission-card-row separated-row header-text" permission-label="Notifications" permission-type="NOTIFICATIONS">
      </app-management-permission-item>
      <div id="permissions-card" class="permission-card-row">
        <div class="permission-section-header">
          <div class="header-text">Permissions</div>
        </div>
        <div class="permission-list indented-permission-block">
          <app-management-permission-item id="location" class="subpermission-row" icon="app-management:location" permission-label="Location" permission-type="GEOLOCATION">
          </app-management-permission-item>
          <app-management-permission-item id="camera" class="subpermission-row" icon="app-management:camera" permission-label="Camera" permission-type="MEDIASTREAM_CAMERA">
          </app-management-permission-item>
          <app-management-permission-item id="microphone" class="subpermission-row" icon="app-management:microphone" permission-label="Microphone" permission-type="MEDIASTREAM_MIC">
          </app-management-permission-item>
        </div>
      </div>
      <div id="more-settings" class="permission-card-row separated-row header-text clickable" on-click="onClickSiteSettingsButton_">
        <div id="label" class="header-text" aria-hidden="true">
          More settings and permissions
        </div>
        <div class="permission-row-controls">
          <cr-icon-button class="native-settings-icon icon-external" role="link" tabindex="0" aria-labelledby="label">
          </cr-icon-button>
        </div>
      </div>
    </div>
<!--_html_template_end_-->`,is:"app-management-pwa-detail-view",behaviors:[AppManagementStoreClient],properties:{app_:Object,listExpanded_:{type:Boolean,value:false}},attached(){this.watch("app_",(state=>getSelectedApp(state)));this.updateFromStore();this.listExpanded_=false},onClickSiteSettingsButton_(){BrowserProxy.getInstance().handler.openNativeSettings(this.app_.id);recordAppManagementUserAction(this.app_.type,AppManagementUserAction.NativeSettingsOpened)},toggleListExpanded_(){this.listExpanded_=!this.listExpanded_},iconUrlFromId_(app){return getAppIcon(app)},getCollapsedIcon_(listExpanded){return listExpanded?"cr:expand-less":"cr:expand-more"}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="app-management-shared-css" scope="app-management-arc-detail-view">#no-permissions {
  border-top: none;
}

</style>
    <div class="permission-list">
      <app-management-pin-to-shelf-item id="pin-to-shelf-setting" class="permission-card-row separated-row header-text" app="[[app_]]">
      </app-management-pin-to-shelf-item>
      <app-management-permission-item id="notifications-card" class="permission-card-row separated-row header-text" permission-label="Notifications" permission-type="NOTIFICATIONS">
      </app-management-permission-item>
      <div id="permissions-card" class="permission-card-row">
        <div id="subpermission-expand-row" class="permission-section-header">
          <div class="header-text">Permissions</div>
        </div>
        <div id="subpermission-list" class="permission-list indented-permission-block">
          <app-management-permission-item class="subpermission-row" icon="app-management:location" permission-label="Location" permission-type="LOCATION">
          </app-management-permission-item>
          <app-management-permission-item class="subpermission-row" icon="app-management:camera" permission-label="Camera" permission-type="CAMERA">
          </app-management-permission-item>
          <app-management-permission-item class="subpermission-row" icon="app-management:microphone" permission-label="Microphone" permission-type="MICROPHONE">
          </app-management-permission-item>
          <app-management-permission-item class="subpermission-row" icon="app-management:contacts" permission-label="Contacts" permission-type="CONTACTS">
          </app-management-permission-item>
          <app-management-permission-item class="subpermission-row" icon="app-management:storage" permission-label="Storage" permission-type="STORAGE">
          </app-management-permission-item>
          <template is="dom-if" if="[[noPermissionsRequested_(app_)]]">
            <div id="no-permissions" class="permission-text-row">
              This app requires no special permissions.
            </div>
          </template>
        </div>
      </div>
      <div id="more-settings" class="permission-card-row separated-row header-text clickable" on-click="onClickNativeSettingsButton_">
        <div id="label" class="header-text" aria-hidden="true">
          More settings and permissions
        </div>
        <div class="permission-row-controls">
          <cr-icon-button class="native-settings-icon icon-external" role="link" tabindex="0" aria-labelledby="label">
          </cr-icon-button>
        </div>
      </div>
    </div>
<!--_html_template_end_-->`,is:"app-management-arc-detail-view",behaviors:[AppManagementStoreClient],properties:{app_:Object,listExpanded_:{type:Boolean,value:false}},attached(){this.watch("app_",(state=>getSelectedApp(state)));this.updateFromStore();this.listExpanded_=false},onClickNativeSettingsButton_(){BrowserProxy.getInstance().handler.openNativeSettings(this.app_.id);recordAppManagementUserAction(this.app_.type,AppManagementUserAction.NativeSettingsOpened)},toggleListExpanded_(){this.listExpanded_=!this.listExpanded_},iconUrlFromId_(app){return getAppIcon(app)},getCollapsedIcon_(listExpanded){return listExpanded?"cr:expand-less":"cr:expand-more"},noPermissionsRequested_(app){const permissionItems=this.$$("#subpermission-list").querySelectorAll("app-management-permission-item");for(let i=0;i<permissionItems.length;i++){const permissionItem=permissionItems[i];const permission=getPermission(app,permissionItem.permissionType);if(permission!==undefined){return false}}return true}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="app-management-shared-css" scope="app-management-chrome-app-detail-view">.permission-text-row:first-of-type {
  border-top: none;
}

#no-permissions {
  border-top: none;
}

</style>
    <div>
      <div class="permission-list">
        <app-management-pin-to-shelf-item id="pin-to-shelf-setting" class="permission-card-row separated-row header-text" app="[[app_]]">
        </app-management-pin-to-shelf-item>

        <div id="permissions-card" class="permission-card-row" hide-bottom-border$="[[app_.hideMoreSettings]]">
          <div class="permission-section-header">
            <div class="header-text">Permissions</div>
          </div>
          <template is="dom-if" if="[[!hasPermissions_(messages_)]]">
            <div id="no-permissions" class="indented-permission-block">
              <div class="permission-text-row">
                This app requires no special permissions.
              </div>
            </div>
          </template>
          <div id="top-level-permissions" class="indented-permission-block">
            <template is="dom-repeat" items="[[getPermissionMessages_(messages_)]]" as="message">
              <div class="permission-text-row">
                [[message]]
              </div>
              <div id="second-level-permissions" class="indented-permission-block">
                <template is="dom-repeat" items="[[getPermissionSubmessagesByMessage_(index, messages_)]]" as="submessage">
                  <div class="permission-text-row">
                    [[submessage]]
                  </div>
                </template>
              </div>
            </template>
          </div>
        </div>
        <!-- TODO(crbug.com/906508): For apps which are hosted apps but not
            bookmark apps, this button will actually open the site settings page
            corresponding to the app, since hosted apps are not listed in
            chrome://extensions.
            This is not a long-term problem since hosted apps are being
            replaced, but in the mean time it might be necessary to change the
            text of the button depending on whether or not it is a hosted
            app. -->
            <!-- TODO:(crbug.com/958269) Change behaviour of "more settings"
              based on the app. -->
        <div id="more-settings" class="permission-card-row separated-row header-text clickable" on-click="onClickExtensionsSettingsButton_" hidden$="[[app_.hideMoreSettings]]">
          <div id="label" class="header-text" aria-hidden="true">
            More settings and permissions
          </div>
          <div class="permission-row-controls">
            <cr-icon-button class="native-settings-icon icon-external" role="link" tabindex="0" aria-labelledby="label">
            </cr-icon-button>
          </div>
        </div>
    </div>
<!--_html_template_end_--></div>`,is:"app-management-chrome-app-detail-view",behaviors:[AppManagementStoreClient],properties:{app_:{type:Object,observer:"onAppChanged_"},messages_:Object},attached(){this.watch("app_",(state=>getSelectedApp(state)));this.updateFromStore()},onAppChanged_:async function(){try{const{messages:messages}=await BrowserProxy.getInstance().handler.getExtensionAppPermissionMessages(this.app_.id);this.messages_=messages}catch(err){console.log(err)}},onClickExtensionsSettingsButton_(){BrowserProxy.getInstance().handler.openNativeSettings(this.app_.id);recordAppManagementUserAction(this.app_.type,AppManagementUserAction.NativeSettingsOpened)},getPermissionMessages_(messages){return messages.map((m=>m.message))},getPermissionSubmessagesByMessage_(index,messages){if(!messages[index]){return null}return messages[index].submessages},hasPermissions_(messages){return messages.length>0}});// Copyright 2019 The Chromium Authors. All rights reserved.
class PluginVmBrowserProxyImpl{isRelaunchNeededForNewPermissions(){return sendWithPromise("isRelaunchNeededForNewPermissions")}relaunchPluginVm(){chrome.send("relaunchPluginVm")}}addSingletonGetter(PluginVmBrowserProxyImpl);// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="app-management-shared-css" scope="app-management-plugin-vm-detail-view"></style>

    <div class="permission-list">
      <app-management-pin-to-shelf-item id="pin-to-shelf-setting" class="permission-card-row separated-row header-text" app="[[app_]]">
      </app-management-pin-to-shelf-item>
      <div class="permission-card-row">
        <div class="permission-section-header">
          <div class="header-text">Permissions</div>
        </div>
        <div class="permission-list indented-permission-block">
          <template is="dom-if" if="[[showCameraPermissions_]]">
            <app-management-permission-item id="camera-permission" class="subpermission-row" icon="app-management:camera" sync-permission-manually="" permission-label="Camera" permission-type="CAMERA" on-change="onPermissionChanged_">
            </app-management-permission-item>
          </template>
          <template is="dom-if" if="[[showMicrophonePermissions_]]">
            <app-management-permission-item id="microphone-permission" class="subpermission-row" icon="app-management:microphone" sync-permission-manually="" permission-label="Microphone" permission-type="MICROPHONE" on-change="onPermissionChanged_">
            </app-management-permission-item>
          </template>
          <app-management-permission-item class="subpermission-row" icon="cr:print" permission-label="Printers" permission-type="PRINTING">
          </app-management-permission-item>
        </div>
      </div>

      <div class="permission-card-row separated-row header-text clickable" on-click="onSharedPathsClick_">
        <div id="sharedPathsLabel" class="header-text" aria-hidden="true">
          Manage shared folders
        </div>
        <div class="permission-row-controls">
          <cr-icon-button class="subpage-arrow app-management-item-arrow" role="link" tabindex="0" aria-labelledby="sharedPathsLabel">
          </cr-icon-button>
        </div>
      </div>
      <div class="permission-card-row separated-row header-text clickable" on-click="onSharedUsbDevicesClick_">
        <div id="sharedUsbDevicesLabel" class="header-text" aria-hidden="true">
          Manage USB devices
        </div>
        <div class="permission-row-controls">
          <cr-icon-button class="subpage-arrow app-management-item-arrow" role="link" tabindex="0" aria-labelledby="sharedUsbDevicesLabel">
          </cr-icon-button>
        </div>
      </div>
    </div>

    <template is="dom-if" if="[[showDialog_]]" restamp="">
      <cr-dialog close-text="Close" show-on-attach="" on-cancel="onCancel_">
        <div slot="body">[[dialogText_]]</div>
        <div slot="button-container">
          <cr-button class="cancel-button" on-click="onCancel_">
            Cancel
          </cr-button>
          <cr-button class="action-button" on-click="onRelaunchTap_">
            Relaunch
          </cr-button>
        </div>
      </cr-dialog>
    </template>
<!--_html_template_end_-->`,is:"app-management-plugin-vm-detail-view",behaviors:[AppManagementStoreClient,WebUIListenerBehavior],properties:{app_:Object,showCameraPermissions_:{type:Boolean,value(){return loadTimeData$1.getBoolean("showPluginVmCameraPermissions")}},showMicrophonePermissions_:{type:Boolean,value(){return loadTimeData$1.getBoolean("showPluginVmMicrophonePermissions")}},showDialog_:{type:Boolean,value:false},dialogText_:String,pendingPermissionItem_:Object},attached(){this.watch("app_",(state=>getSelectedApp(state)));this.updateFromStore()},onSharedPathsClick_(){Router.getInstance().navigateTo(routes.APP_MANAGEMENT_PLUGIN_VM_SHARED_PATHS,new URLSearchParams({id:this.app_.id}))},onSharedUsbDevicesClick_(){Router.getInstance().navigateTo(routes.APP_MANAGEMENT_PLUGIN_VM_SHARED_USB_DEVICES,new URLSearchParams({id:this.app_.id}))},onPermissionChanged_:async function(e){this.pendingPermissionItem_=e.target;switch(e.target.permissionType){case"CAMERA":this.dialogText_=loadTimeData$1.getString("pluginVmPermissionDialogCameraLabel");break;case"MICROPHONE":this.dialogText_=loadTimeData$1.getString("pluginVmPermissionDialogMicrophoneLabel");break;default:assertNotReached$1()}const requiresRelaunch=await PluginVmBrowserProxyImpl.getInstance().isRelaunchNeededForNewPermissions();if(requiresRelaunch){this.showDialog_=true}else{this.pendingPermissionItem_.syncPermission()}},onRelaunchTap_:function(){this.pendingPermissionItem_.syncPermission();PluginVmBrowserProxyImpl.getInstance().relaunchPluginVm();this.showDialog_=false},onCancel_:function(){this.pendingPermissionItem_.resetToggle();this.showDialog_=false}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="app-management-app-detail-view"></style>
    <app-management-dom-switch id="view-selector" route="[[getSelectedRouteId_(app_)]]">
      <template>
        <app-management-pwa-detail-view route-id="pwa-detail-view">
        </app-management-pwa-detail-view>
        <app-management-arc-detail-view route-id="arc-detail-view">
        </app-management-arc-detail-view>
        <app-management-chrome-app-detail-view route-id="chrome-app-detail-view">
        </app-management-chrome-app-detail-view>
        <app-management-plugin-vm-detail-view route-id="plugin-vm-detail-view">
        </app-management-plugin-vm-detail-view>
      </template>
    </app-management-dom-switch>
<!--_html_template_end_-->`,is:"app-management-app-detail-view",behaviors:[AppManagementStoreClient,RouteObserverBehavior],properties:{app_:{type:Object},apps_:{type:Object,observer:"appsChanged_"},selectedAppId_:{type:String,observer:"selectedAppIdChanged_"}},attached(){this.watch("app_",(state=>getSelectedApp(state)));this.watch("apps_",(state=>state.apps));this.watch("selectedAppId_",(state=>state.selectedAppId));this.updateFromStore()},detached(){this.dispatch(updateSelectedAppId(null))},currentRouteChanged(currentRoute){if(currentRoute!==routes.APP_MANAGEMENT_DETAIL){return}if(this.selectedAppNotFound_()){this.async((()=>{openMainPage()}));return}const appId=Router.getInstance().getQueryParameters().get("id");this.dispatch(updateSelectedAppId(appId))},getSelectedRouteId_(app){if(!app){return null}const selectedAppType=app.type;switch(selectedAppType){case AppType.kWeb:return"pwa-detail-view";case AppType.kExtension:case AppType.kStandaloneBrowser:return"chrome-app-detail-view";case AppType.kArc:return"arc-detail-view";case AppType.kPluginVm:return"plugin-vm-detail-view";default:assertNotReached$1()}},selectedAppIdChanged_(appId){if(appId&&this.app_){recordAppManagementUserAction(this.app_.type,AppManagementUserAction.ViewOpened)}},appsChanged_(){if(Router.getInstance().getCurrentRoute()===routes.APP_MANAGEMENT_DETAIL&&this.selectedAppNotFound_()){this.async((()=>{openMainPage()}))}},selectedAppNotFound_(){const appId=Router.getInstance().getQueryParameters().get("id");return this.apps_&&!this.apps_[appId]}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style app-management-shared-css" scope="app-management-main-view">.app-management-item-arrow {
  margin-inline-end: 8px;
}

#no-apps-label {
  text-align: center;
}

</style>

    <div id="app-list">
      <template is="dom-repeat" items="[[appList_]]" as="app">
        <app-management-app-item app="[[app]]">
          <cr-icon-button slot="right-content" id$="app-subpage-button-[[app.id]]" class="subpage-arrow app-management-item-arrow" aria-label$="[[app.title]]" role="link" actionable="">
          </cr-icon-button>
        </app-management-app-item>
      </template>
    </div>

    <template is="dom-if" if="[[isAppListEmpty_(appList_)]]">
      <div id="no-apps-label" class="cr-secondary-text">
        No apps found
      </div>
    </template>
<!--_html_template_end_-->`,is:"app-management-main-view",behaviors:[AppManagementStoreClient,RouteObserverBehavior],properties:{searchTerm:{type:String},apps_:{type:Object},appList_:{type:Array,value:()=>[],computed:"computeAppList_(apps_, searchTerm)"}},attached(){this.watch("apps_",(state=>state.apps));this.updateFromStore()},currentRouteChanged(route,oldRoute){if(route===routes.APP_MANAGEMENT){const appId=AppManagementStore.getInstance().data.selectedAppId;if(appId){const button=this.$$(`#app-subpage-button-${appId}`);if(button){focusWithoutInk(button)}}}},isAppListEmpty_(appList){return appList.length===0},computeAppList_(apps,searchTerm){if(!apps){return[]}const appArray=Object.values(apps);let filteredApps;if(searchTerm){const lowerCaseSearchTerm=searchTerm.toLowerCase();filteredApps=appArray.filter((app=>{assert(app.title);return app.title.toLowerCase().includes(lowerCaseSearchTerm)}))}else{filteredApps=appArray}filteredApps.sort(((a,b)=>alphabeticalSort(a.title,b.title)));return filteredApps}});// Copyright 2018 The Chromium Authors. All rights reserved.
let initialized=false;async function init(){assert(!initialized);const{apps:initialApps}=await BrowserProxy.getInstance().handler.getApps();const initialState=createInitialState(initialApps);AppManagementStore.getInstance().init(initialState);const callbackRouter=BrowserProxy.getInstance().callbackRouter;callbackRouter.onAppAdded.addListener(onAppAdded);callbackRouter.onAppChanged.addListener(onAppChanged);callbackRouter.onAppRemoved.addListener(onAppRemoved);initialized=true}function dispatch(action){AppManagementStore.getInstance().dispatch(action)}function onAppAdded(app){dispatch(addApp(app))}function onAppChanged(app){dispatch(changeApp(app))}function onAppRemoved(appId){dispatch(removeApp(appId))}init();// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-app-management-page"></style>
    <div id="main-container">
      <app-management-main-view search-term="[[searchTerm]]">
      </app-management-main-view>
    </div>
<!--_html_template_end_-->`,is:"settings-app-management-page",properties:{searchTerm:String}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="app-management-shared-css" scope="app-management-uninstall-button">:host {
  align-items: center;
        display: flex;
        flex-direction: row;
}

#policyIndicator {
  margin-inline-end: var(--settings-controlled-by-spacing);
}

</style>
    <template is="dom-if" if="[[showPolicyIndicator_(app_)]]">
      <cr-tooltip-icon id="policyIndicator" icon-class="cr20:domain" tooltip-text="This app has been installed by your administrator." icon-aria-label="This app has been installed by your administrator." tooltip-position="bottom">
      </cr-tooltip-icon>
    </template>
    <template is="dom-if" if="[[showUninstallButton_(app_)]]">
      <cr-button id="uninstallButton" on-click="onClick_" disabled$="[[getDisableState_(app_)]]">
        Uninstall
      </cr-button>
    </template>
<!--_html_template_end_-->`,is:"app-management-uninstall-button",behaviors:[AppManagementStoreClient],properties:{app_:Object},attached(){this.watch("app_",(state=>getSelectedApp(state)));this.updateFromStore()},getDisableState_(app){if(!app){return true}switch(app.installSource){case InstallSource.kSystem:case InstallSource.kPolicy:return true;case InstallSource.kOem:case InstallSource.kDefault:case InstallSource.kSync:case InstallSource.kUser:case InstallSource.kUnknown:return false;default:assertNotReached$1()}},showPolicyIndicator_(app){if(!app){return false}return app.installSource===InstallSource.kPolicy},showUninstallButton_(app){if(!app){return false}return app.installSource!==InstallSource.kSystem},onClick_(){BrowserProxy.getInstance().handler.uninstall(this.app_.id);recordSettingChange();recordAppManagementUserAction(this.app_.type,AppManagementUserAction.UninstallDialogLaunched)}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="os-settings-apps-page">#appManagement {
  border-bottom: var(--cr-separator-line);
}

</style>

  <settings-animated-pages id="pages" section="apps" focus-config="[[focusConfig_]]">
    <div route-path="default">
      <cr-link-row id="appManagement" label="Manage your apps" on-click="onClickAppManagement_" role-description="Subpage button">
      </cr-link-row>
      <template is="dom-if" if="[[showAndroidApps]]">
        <template is="dom-if" if="[[havePlayStoreApp]]" restamp="">
          <div id="android-apps" class="settings-box first" actionable$="[[androidAppsInfo.playStoreEnabled]]" on-click="onAndroidAppsSubpageTap_">
            <div class="start settings-box-text">
              Android support
              <div class="secondary" id="secondaryText">
                <settings-localized-link localized-string="[[i18nAdvanced('androidAppsSubtext')]]">
                </settings-localized-link>
              </div>
            </div>
            <cr-policy-pref-indicator pref="[[prefs.arc.enabled]]" icon-aria-label="Android settings">
            </cr-policy-pref-indicator>
            <template is="dom-if" if="[[androidAppsInfo.playStoreEnabled]]">
              <cr-icon-button class="subpage-arrow" aria-label="Android settings" aria-describedby="secondaryText" aria-roledescription="Subpage button">
              </cr-icon-button>
            </template>
            <template is="dom-if" if="[[!androidAppsInfo.playStoreEnabled]]">
              <div class="separator"></div>
              <cr-button id="enable" disabled="[[isEnforced_(prefs.arc.enabled)]]" on-click="onEnableAndroidAppsTap_" aria-label="Android settings" aria-describedby="secondaryText" deep-link-focus-id$="[[Setting.kTurnOnPlayStore]]">
                Turn on
              </cr-button>
            </template>
          </div>
        </template>
        <template is="dom-if" if="[[!havePlayStoreApp]]" restamp="">
          <!-- FYDEOS BEGIN -->
          <cr-link-row id="manageApps" label="Manage Android preferences" hidden="[[!fydeosArcSettingsExists]]" on-click="onManageAndroidAppsTap_" external="" deep-link-focus-id$="[[Setting.kManageAndroidPreferences]]">
          </cr-link-row>
          <!-- FYDEOS END -->
        </template>
      </template>
      <template is="dom-if" if="[[showStartup]]">
        <cr-link-row id="onStartup" label="On Startup" sub-label="[[getAssistantEnabledDisabledLabel_(
                    prefs.settings.voice_interaction.enabled.value)]]" on-click="onStartupClick_" role-description="Subpage button">
        </cr-link-row>
      </template>
    </div>

    <!-- APP MANAGEMENT -->
    <template is="dom-if" route-path="/app-management" no-search="">
      <settings-subpage page-title="Manage your apps" search-label="Search apps" search-term="{{searchTerm}}">
        <settings-app-management-page search-term="[[searchTerm]]">
        </settings-app-management-page>
      </settings-subpage>
    </template>

    <template is="dom-if" route-path="/app-management/detail" no-search="">
      <settings-subpage page-title="[[app_.title]]" title-icon="[[iconUrlFromId_(app_)]]">
        <app-management-uninstall-button slot="subpage-title-extra">
        </app-management-uninstall-button>
        <app-management-app-detail-view>
        </app-management-app-detail-view>
      </settings-subpage>
    </template>

    <!-- ANDROID APPS -->
    <template is="dom-if" if="[[showAndroidApps]]" restamp="">
      <template is="dom-if" route-path="/androidAppsDetails">
        <settings-subpage associated-control="[[$$('#android-apps')]]" page-title="Android support">
          <settings-android-apps-subpage android-apps-info="[[androidAppsInfo]]" prefs="{{prefs}}">
          </settings-android-apps-subpage>
        </settings-subpage>
      </template>
    </template>

    <!-- Plugin VM -->
    <template is="dom-if" if="[[showPluginVm]]" restamp="">
      <template is="dom-if" route-path="/app-management/pluginVm/sharedPaths">
        <settings-subpage page-title="Manage shared folders">
          <settings-guest-os-shared-paths guest-os-type="pluginVm" prefs="{{prefs}}">
          </settings-guest-os-shared-paths>
        </settings-subpage>
      </template>
      <template is="dom-if" route-path="/app-management/pluginVm/sharedUsbDevices">
        <settings-subpage page-title="Manage USB devices">
          <settings-guest-os-shared-usb-devices guest-os-type="pluginVm">
          </settings-guest-os-shared-usb-devices>
        </settings-subpage>
      </template>
    </template>

    <!-- On Startup -->
    <template is="dom-if" if="[[showStartup]]" restamp="">
      <template is="dom-if" route-path="/onstartup">
        <settings-subpage page-title="On Startup">
          <settings-on-startup-page prefs="{{prefs}}">
          </settings-on-startup-page>
        </settings-subpage>
      </template>
    </template>
  </settings-animated-pages>
<!--_html_template_end_-->`,is:"os-settings-apps-page",behaviors:[AppManagementStoreClient,DeepLinkingBehavior,I18nBehavior,PrefsBehavior,RouteObserverBehavior],properties:{prefs:{type:Object,notify:true},androidAppsInfo:Object,havePlayStoreApp:Boolean,searchTerm:String,showAndroidApps:Boolean,showPluginVm:Boolean,fydeosArcSettingsExists:{type:Boolean,value:false},showStartup:Boolean,focusConfig_:{type:Object,value(){const map=new Map;if(routes.APP_MANAGEMENT){map.set(routes.APP_MANAGEMENT.path,"#appManagement")}if(routes.ANDROID_APPS_DETAILS){map.set(routes.ANDROID_APPS_DETAILS.path,"#android-apps .subpage-arrow")}if(routes.ON_STARTUP){map.set(routes.ON_STARTUP.path,"#onStartup")}return map}},app_:Object,supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kManageAndroidPreferences,chromeos.settings.mojom.Setting.kTurnOnPlayStore])}},attached(){this.watch("app_",(state=>getSelectedApp(state)));this.checkFydeOSArcSettingsExists_()},currentRouteChanged(route,oldRoute){if(route!==routes.APPS){return}this.attemptDeepLink()},iconUrlFromId_(app){if(!app){return""}return getAppIcon(app)},onClickAppManagement_(){chrome.metricsPrivate.recordEnumerationValue(AppManagementEntryPointsHistogramName,AppManagementEntryPoint.OsSettingsMainPage,Object.keys(AppManagementEntryPoint).length);Router.getInstance().navigateTo(routes.APP_MANAGEMENT)},onEnableAndroidAppsTap_(event){this.setPrefValue("arc.enabled",true);event.stopPropagation()},isEnforced_(pref){return pref.enforcement===chrome.settingsPrivate.Enforcement.ENFORCED},onAndroidAppsSubpageTap_(event){if(this.androidAppsInfo.playStoreEnabled){Router.getInstance().navigateTo(routes.ANDROID_APPS_DETAILS)}},onManageAndroidAppsTap_(event){if(this.fydeosArcSettingsExists){const ANDROID_APPID="iakadpgajjigiaojnbdmodlngmbkfhag";chrome.nativeWindows.create(ANDROID_APPID);return}const isKeyboardAction=event.detail===0;AndroidAppsBrowserProxyImpl.getInstance().showAndroidAppsSettings(isKeyboardAction)},checkFydeOSArcSettingsExists_:function(){const ANDROID_APPID="iakadpgajjigiaojnbdmodlngmbkfhag";chrome.appManagement.getAppList((apps=>{const androidApp=apps.find((item=>item.appId===ANDROID_APPID));this.fydeosArcSettingsExists=!!androidApp}))},onStartupClick_(){Router.getInstance().navigateTo(routes.ON_STARTUP)}});// Copyright 2019 The Chromium Authors. All rights reserved.
class ParentalControlsBrowserProxy{showAddSupervisionDialog(){}launchFamilyLinkSettings(){}}class ParentalControlsBrowserProxyImpl{showAddSupervisionDialog(){chrome.send("showAddSupervisionDialog")}launchFamilyLinkSettings(){chrome.send("launchFamilyLinkSettings")}}addSingletonGetter(ParentalControlsBrowserProxyImpl);// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared iron-flex iron-flex-alignment" scope="settings-account-manager">:host {
  --add-account-margin-top: 16px;
}

.account-manager-description {
  color: var(--cr-secondary-text-color);
        display: block;
        max-width: 560px;
}

.account-manager-description.full-width {
  max-width: none;
}

.profile-icon {
  --profile-icon-size: 40px;
        background: center / cover no-repeat;
        border-radius: 50%;
        flex-shrink: 0;
        height: var(--profile-icon-size);
        width: var(--profile-icon-size);
}

.profile-icon.device-account-icon {
  --profile-icon-size: 60px;
        margin-top: 16px;
}

.device-account-container {
  align-items: center;
        display: flex;
        flex-direction: column;
}

.device-account-container .primary {
  font-weight: 500;
        margin-bottom: 4px;
        margin-top: 16px;
}

.account-list-item {
  padding-inline-end: 8px;
        padding-inline-start: 0;
}

#outer {
  margin-inline-end: var(--cr-section-padding);
        margin-inline-start: 60px;
}

.middle .secondary {
  overflow: hidden;
        text-overflow: ellipsis;
}

.secondary-accounts-policy-indicator {
  margin-inline-end: 12px;
}

.settings-box.user-message {
  align-items: flex-end;
}

.secondary-accounts-tooltip {
  margin-inline-start: 5px;
        width: 15px;
}

.settings-box.secondary-accounts-box {
  align-items: flex-end;
}

.account-list-header-description {
  align-items: center;
        display: flex;
        width: 100%;
}

.account-list-header-description > .secondary {
  flex-grow: 1;
}

.account-list-header-description > .secondary {
  padding-inline-end: 40px;
}

.secondary-accounts-disabled-tooltip {
  padding-inline-end: 12px;
}

#account-list-header > h2 {
  padding-bottom: 8px;
        padding-top: 16px;
}

#account-list-header {
  padding-bottom: 8px;
}

cr-policy-indicator {
  margin-inline-end: 1em;
        margin-top: var(--add-account-margin-top);
}

.secondary-accounts-box > #add-account-button {
  margin-bottom: 12px;
        margin-top: 12px;
}

#add-account-icon {
  -webkit-mask-image: url(chrome://resources/images/add.svg);
        background-color: currentColor;
        height: 24px;
        margin-inline-end: 0.5em;
        width: 24px;
}

.signed-out-text {
  color: var(--google-red-600);
}

.error-badge {
  background: url(chrome://os-settings/images/error_badge.svg)
            center / cover no-repeat;
        display: block;
        height: 20px;
        left: 60%;
        position: relative;
        top: 60%;
        width: 20px;
}

:host-context([dir='rtl']) .error-badge {
  left: auto;
        right: 60%;
}

.managed-badge {
  --badge-offset: calc(100% - var(--badge-size)
                             - 2 * var(--padding-size));
        --badge-size: 10px;
        --padding-size: 4px;
        background: var(--google-blue-600);
        border-radius: 50%;
        height: var(--badge-size);
        left: var(--badge-offset);
        padding: var(--padding-size);
        position: relative;
        top: var(--badge-offset);
        width: var(--badge-size);
}

.managed-badge > iron-icon {
  --iron-icon-fill-color: white;
        --iron-icon-height: var(--badge-size);
        --iron-icon-width: var(--badge-size);
        display: block;
}

:host-context([dir='rtl']) .managed-badge {
  left: auto;
        right: var(--badge-offset);
}

.managed-message {
  color: var(--cr-secondary-text-color);
        justify-content: center;
        margin-top: 16px;
}

.managed-message > iron-icon, .managed-message > cr-icon-button {
  margin-inline-end: 5px;
}

.management-status {
  color: var(--cr-secondary-text-color);
        overflow: hidden;
        text-align: end;
        text-overflow: ellipsis;
        width: 18ch;
}

.edu-account-label {
  margin-inline-start: 12px;
}

.tooltip-primary-account {
  margin-inline-end: 12px;
        margin-inline-start: 12px;
}

.no-accounts-message {
  color: var(--cr-secondary-text-color);
        padding: 20px 50px;
        text-align: center;
}

.settings-box.border-bottom {
  border-bottom: var(--cr-separator-line);
}

</style>

    <!-- Account management description -->
    <div class$="[[getAccountManagerDescriptionClassList_(
                        'settings-box first account-manager-description',
                        isAccountManagementFlowsV2Enabled_)]]">
      <settings-localized-link localized-string="[[getAccountManagerDescription_()]]" link-url="https://support.google.com/chromebook/?p=google_accounts">
      </settings-localized-link>
      <div hidden$="[[!showChildMessage_(isChildUser_,
                        isAccountManagementFlowsV2Enabled_)]]">
        <p>Bookmarks, passwords, and other browser data are synced with the primary account.</p>
        <p>Adding a school account enables easy sign-in to websites, extensions, and apps as a student while still operating under parental controls.</p>
      </div>
    </div>

    <template is="dom-if" if="[[isAccountManagementFlowsV2Enabled_]]">
      <!-- Managed account badge and message -->
      <template is="dom-if" if="[[isDeviceAccountManaged_]]">
        <div class="settings-box first managed-message">
          <template is="dom-if" if="[[!isChildUser_]]">
            <iron-icon icon="cr20:domain"></iron-icon>
          </template>
          <template is="dom-if" if="[[isChildUser_]]">
            <cr-icon-button iron-icon="cr20:kite" on-click="onManagedIconClick_">
            </cr-icon-button>
          </template>
          <settings-localized-link localized-string="[[getManagementDescription_(isChildUser_, deviceAccount_)]]" link-url="chrome://management">
          </settings-localized-link>
        </div>
      </template>

      <!-- Primary account icon, name and email -->
      <div class="device-account-container" aria-labelledby="deviceAccountFullName" aria-describedby="deviceAccountEmail">
        <div class="profile-icon device-account-icon" style="background-image: [[getIconImageSet_(deviceAccount_.pic)]]">
            <template is="dom-if" if="[[shouldShowManagedBadge_(isDeviceAccountManaged_,
                      isChildUser_)]]">
              <div class="managed-badge">
                <iron-icon icon="cr:work"></iron-icon>
              </div>
            </template>
        </div>
        <span id="deviceAccountFullName" class="primary" aria-hidden="true">
          [[deviceAccount_.fullName]]
        </span>
        <span id="deviceAccountEmail" class="secondary" aria-hidden="true">
          [[deviceAccount_.email]]
        </span>
      </div>
    </template>

    <template is="dom-if" if="[[!isAccountManagementFlowsV2Enabled_]]">
      <!-- Message saying that secondary account signin is not allowed -->
      <div id="settings-box-user-message" class="settings-box first user-message" hidden="[[isSecondaryGoogleAccountSigninAllowed_]]">
        <cr-policy-pref-indicator class="secondary-accounts-policy-indicator" pref="[[prefs.account_manager.secondary_google_account_signin_allowed]]">
        </cr-policy-pref-indicator>
        <div id="user-message-text" class="secondary">
          [[getSecondaryAccountsDisabledUserMessage_()]]
        </div>
      </div>
    </template>

    <!-- Secondary Accounts list header -->
    <div class="secondary-accounts-box settings-box first">
      <div id="account-list-header" class="start">
        <h2>
          [[getAccountListHeader_(isChildUser_)]]
        </h2>
        <div class="account-list-header-description" hidden$="[[!isAccountManagementFlowsV2Enabled_]]">
          <span class="secondary">
            [[getAccountListDescription_(isChildUser_)]]
          </span>
          <template is="dom-if" if="[[showSecondaryAccountsDisabledTooltip_(
                                    isSecondaryGoogleAccountSigninAllowed_)]]">
            <cr-tooltip-icon class="secondary-accounts-disabled-tooltip" icon-class="[[getManagedAccountTooltipIcon_(isChildUser_)]]" tooltip-text="[[getSecondaryAccountsDisabledUserMessage_(
                                    isChildUser_)]]" icon-aria-label="[[getSecondaryAccountsDisabledUserMessage_(
                                      isChildUser_)]]">
            </cr-tooltip-icon>
          </template>
          <template is="dom-if" if="[[isAccountManagementFlowsV2Enabled_]]">
            <cr-button disabled="[[!isSecondaryGoogleAccountSigninAllowed_]]" id="add-account-button" on-click="addAccount_" deep-link-focus-id$="[[Setting.kAddAccount]]">
              <div id="add-account-icon"></div>
              [[getAddAccountLabel_(isChildUser_,
                  isSecondaryGoogleAccountSigninAllowed_)]]
            </cr-button>
          </template>
        </div>
      </div>
      <template is="dom-if" if="[[!isAccountManagementFlowsV2Enabled_]]">
        <cr-button disabled="[[!isSecondaryGoogleAccountSigninAllowed_]]" id="add-account-button" on-click="addAccount_" deep-link-focus-id$="[[Setting.kAddAccount]]">
          <div id="add-account-icon"></div>
          [[getAddAccountLabel_(isChildUser_,
              isSecondaryGoogleAccountSigninAllowed_)]]
        </cr-button>
      </template>
    </div>

    <!-- Secondary Accounts list -->
    <div id="outer" class="layout vertical nowrap" role="list">
      <template is="dom-repeat" id="account-list" items="[[getAccounts_(accounts_)]]">
        <div class="settings-box account-list-item" role="listitem">

          <div class="profile-icon" style="background-image: [[getIconImageSet_(item.pic)]]">
            <template is="dom-if" if="[[!item.isSignedIn]]">
              <span class="error-badge"></span>
            </template>
          </div>

          <div class="middle two-line no-min-width">
            <div class="flex text-elide">
              <!-- If account is signed in, display the full name -->
              <template is="dom-if" if="[[item.isSignedIn]]">
                <span id="fullName-[[index]]" aria-hidden="true">[[item.fullName]]</span>
              </template>
              <!-- Else, display a re-authentication message -->
              <template is="dom-if" if="[[!item.isSignedIn]]">
                <span class="signed-out-text">
                  [[getAccountManagerSignedOutName_(item.unmigrated)]]
                </span>
              </template>

              <div class="secondary" id="email-[[index]]" aria-hidden="true">[[item.email]]</div>
            </div>
          </div>

          <template is="dom-if" if="[[shouldShowReauthenticationButton_(item)]]">
            <cr-button title="[[getAccountManagerSignedOutTitle_(item)]]" class="reauth-button" on-click="onReauthenticationTap_" aria-labelledby$="fullName-[[index]] email-[[index]]">
              [[getAccountManagerSignedOutLabel_(item.unmigrated)]]
            </cr-button>
          </template>

          <!-- If this is the Device Account, display the management status -->
          <template is="dom-if" if="[[item.isDeviceAccount]]">
            <cr-tooltip-icon id="primaryAccountTooltip" aria-hidden="true" icon-class="[[getPrimaryAccountTooltipIcon_(isChildUser_)]]" class="tooltip-primary-account" tooltip-text="[[getPrimaryAccountTooltip_(isChildUser_)]]" icon-aria-label="[[getPrimaryAccountTooltip_(isChildUser_)]]">
            </cr-tooltip-icon>
            <span class="management-status" aria-labelledby$="fullName-[[index]] email-[[index]]" aria-describedby="primaryAccountTooltip">
              [[getManagementLabel_(item)]]
            </span>
          </template>
          <!-- Else, display a hamburger menu for removing the account -->
          <template is="dom-if" if="[[!item.isDeviceAccount]]">
            <!-- Display EDU account labels on secondary accounts for Child
              users -->
            <span hidden$="[[!shouldDisplayEduSecondaryAccountLabel_(
                              isChildUser_)]]" class="management-status edu-account-label" id="edu-account-label-[[index]]" aria-hidden="true">
              School account
            </span>
            <cr-icon-button class="icon-more-vert" title="[[getMoreActionsTitle_(item)]]" aria-label="[[getMoreActionsTitle_(item)]]" aria-describedby$="fullName-[[index]]
                                   edu-account-label-[[index]]" on-click="onAccountActionsMenuButtonTap_" deep-link-focus-id$="[[Setting.kRemoveAccount]]">
            </cr-icon-button>
          </template>
        </div>
      </template>

      <cr-action-menu role-description="Menu">
        <button class="dropdown-item" on-click="onRemoveAccountTap_">
          Remove this account
        </button>
      </cr-action-menu>
    </div>

    <div class="settings-box"></div>

<!--_html_template_end_-->`,is:"settings-account-manager",behaviors:[DeepLinkingBehavior,I18nBehavior,WebUIListenerBehavior,RouteObserverBehavior],properties:{accounts_:{type:Array,value(){return[]}},deviceAccount_:Object,actionMenuAccount_:Object,isChildUser_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isChild")}},isDeviceAccountManaged_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isDeviceAccountManaged")},readOnly:true},isAccountManagementFlowsV2Enabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isAccountManagementFlowsV2Enabled")},readOnly:true},isSecondaryGoogleAccountSigninAllowed_:{type:Boolean,value(){return loadTimeData$1.getBoolean("secondaryGoogleAccountSigninAllowed")}},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kAddAccount,chromeos.settings.mojom.Setting.kRemoveAccount])}},browserProxy_:null,attached(){this.addWebUIListener("accounts-changed",this.refreshAccounts_.bind(this))},ready(){this.browserProxy_=AccountManagerBrowserProxyImpl.getInstance();this.refreshAccounts_()},currentRouteChanged(newRoute,oldRoute){if(newRoute!==routes.ACCOUNT_MANAGER){return}this.browserProxy_.showWelcomeDialogIfRequired();this.attemptDeepLink()},getAccountManagerDescription_(){if(this.isChildUser_&&this.isSecondaryGoogleAccountSigninAllowed_){return loadTimeData$1.getString("accountManagerChildDescription")}return loadTimeData$1.getString("accountManagerDescription")},showChildMessage_(){return this.isChildUser_&&!this.isAccountManagementFlowsV2Enabled_},getAddAccountLabel_(){if(this.isChildUser_&&this.isSecondaryGoogleAccountSigninAllowed_){return loadTimeData$1.getString("addSchoolAccountLabel")}return loadTimeData$1.getString("addAccountLabel")},getAccountListHeader_(){if(this.isAccountManagementFlowsV2Enabled_&&this.isChildUser_){return loadTimeData$1.getString("accountListHeaderChild")}return loadTimeData$1.getString("accountListHeader")},getAccountListDescription_(){return this.isChildUser_?loadTimeData$1.getString("accountListChildDescription"):loadTimeData$1.getString("accountListDescription")},showSecondaryAccountsDisabledTooltip_(){return this.isAccountManagementFlowsV2Enabled_&&!this.isSecondaryGoogleAccountSigninAllowed_},getSecondaryAccountsDisabledUserMessage_(){return this.isChildUser_?this.i18n("accountManagerSecondaryAccountsDisabledChildText"):this.i18n("accountManagerSecondaryAccountsDisabledText")},getPrimaryAccountTooltipIcon_(){return this.isChildUser_?"cr20:kite":"cr:info-outline"},getPrimaryAccountTooltip_(){return this.isChildUser_?this.i18n("accountManagerPrimaryAccountChildManagedTooltip"):this.i18n("accountManagerPrimaryAccountTooltip")},getIconImageSet_(iconUrl){return getImage(iconUrl)},addAccount_(event){recordSettingChange(chromeos.settings.mojom.Setting.kAddAccount,{intValue:this.accounts_.length+1});this.browserProxy_.addAccount()},shouldShowReauthenticationButton_(account){return!account.isDeviceAccount&&!account.isSignedIn},shouldDisplayEduSecondaryAccountLabel_(){return this.isChildUser_&&!this.isAccountManagementFlowsV2Enabled_},shouldShowManagedBadge_(){return this.isDeviceAccountManaged_&&!this.isChildUser_},getManagementLabel_(account){if(account.organization){return this.i18n("accountManagerManagedLabel",account.organization)}return this.i18n("accountManagerUnmanagedLabel")},getManagedAccountTooltipIcon_(){if(this.isChildUser_){return"cr20:kite"}if(this.isDeviceAccountManaged_){return"cr20:domain"}return""},getManagementDescription_(){if(this.isChildUser_){return loadTimeData$1.getString("accountManagerManagementDescription")}if(!this.deviceAccount_){return""}if(!this.deviceAccount_.organization){if(this.isDeviceAccountManaged_){console.error("The device account is managed, but the organization is not set.")}return""}return loadTimeData$1.getStringF("accountManagerManagementDescription",this.deviceAccount_.organization)},getAccountManagerSignedOutName_(unmigrated){return this.i18n(unmigrated?"accountManagerUnmigratedAccountName":"accountManagerSignedOutAccountName")},getAccountManagerSignedOutLabel_(unmigrated){return this.i18n(unmigrated?"accountManagerMigrationLabel":"accountManagerReauthenticationLabel")},getAccountManagerSignedOutTitle_(account){const label=account.unmigrated?"accountManagerMigrationTooltip":"accountManagerReauthenticationTooltip";return loadTimeData$1.getStringF(label,account.email)},getMoreActionsTitle_(account){return loadTimeData$1.getStringF("accountManagerMoreActionsTooltip",account.email)},getAccounts_(){if(this.isAccountManagementFlowsV2Enabled_){return this.accounts_.filter((account=>!account.isDeviceAccount))}return this.accounts_},getAccountManagerDescriptionClassList_(classList){if(this.isAccountManagementFlowsV2Enabled_){return classList+" full-width"}return classList},onReauthenticationTap_(event){if(event.model.item.unmigrated){this.browserProxy_.migrateAccount(event.model.item.email)}else{this.browserProxy_.reauthenticateAccount(event.model.item.email)}},onManagedIconClick_(){if(this.isChildUser_){ParentalControlsBrowserProxyImpl.getInstance().launchFamilyLinkSettings()}},refreshAccounts_(){this.browserProxy_.getAccounts().then((accounts=>{this.set("accounts_",accounts);const deviceAccount=accounts.find((account=>account.isDeviceAccount));if(!deviceAccount){console.error("Cannot find device account.");return}this.deviceAccount_=deviceAccount}))},onAccountActionsMenuButtonTap_(event){this.actionMenuAccount_=event.model.item;this.$$("cr-action-menu").showAt(event.target)},closeActionMenu_(){this.$$("cr-action-menu").close();this.actionMenuAccount_=null},onRemoveAccountTap_(){this.browserProxy_.removeAccount(this.actionMenuAccount_);this.closeActionMenu_();this.$$("#add-account-button").focus()}});// Copyright 2016 The Chromium Authors. All rights reserved.
class ProfileInfoBrowserProxy{getProfileInfo(){}getProfileStatsCount(){}}class ProfileInfoBrowserProxyImpl{getProfileInfo(){return sendWithPromise("getProfileInfo")}getProfileStatsCount(){chrome.send("getProfileStatsCount")}}addSingletonGetter(ProfileInfoBrowserProxyImpl);// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({is:"settings-signout-dialog",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared iron-flex" scope="settings-signout-dialog">.delete-profile-warning {
  padding-bottom: 10px;
        padding-inline-end: var(--cr-section-padding);
        
        padding-inline-start: var(--cr-section-indent-padding);
        padding-top: 10px;
}

#wideFooter {
  padding: 16px 0;
}

#dialog-body {
  padding-bottom: 2px;
}

</style>

    <cr-dialog id="dialog" ignore-enter-key="" close-text="Close">
      <div slot="title">Sign out of Chromium?</div>
      <div id="dialog-body" slot="body">
        <div inner-h-t-m-l="[[
            getDisconnectExplanationHtml_(syncStatus.domain)]]">
        </div>
      </div>
      <div slot="button-container">
        <cr-button id="disconnectCancel" class="cancel-button" on-click="onDisconnectCancel_">
          Cancel
        </cr-button>
        <cr-button id="disconnectConfirm" class="action-button" hidden="[[syncStatus.domain]]" on-click="onDisconnectConfirm_">
          Sign out
        </cr-button>
        <cr-button id="disconnectManagedProfileConfirm" class="action-button" hidden="[[!syncStatus.domain]]" on-click="onDisconnectConfirm_">
          Clear and Sign Out
        </cr-button>
      </div>

    </cr-dialog>
<!--_html_template_end_-->`,behaviors:[WebUIListenerBehavior],properties:{syncStatus:{type:Object,observer:"syncStatusChanged_"},deleteProfile_:Boolean,deleteProfileWarningVisible_:Boolean,deleteProfileWarning_:String},attached(){this.addWebUIListener("profile-stats-count-ready",this.handleProfileStatsCount_.bind(this));this.async((()=>{this.$.dialog.showModal()}))},wasConfirmed(){return this.$.dialog.getNative().returnValue==="success"},handleProfileStatsCount_(count){const username=this.syncStatus.signedInUsername||"";if(count===0){this.deleteProfileWarning_=loadTimeData$1.getStringF("deleteProfileWarningWithoutCounts",username)}else if(count===1){this.deleteProfileWarning_=loadTimeData$1.getStringF("deleteProfileWarningWithCountsSingular",username)}else{this.deleteProfileWarning_=loadTimeData$1.getStringF("deleteProfileWarningWithCountsPlural",count,username)}},syncStatusChanged_(){if(!this.syncStatus.signedIn&&this.$.dialog.open){this.$.dialog.close()}},getDisconnectExplanationHtml_(domain){return loadTimeData$1.getString("syncDisconnectExplanation")},onDisconnectCancel_(){this.$.dialog.cancel()},onDisconnectConfirm_(){this.$.dialog.close();SyncBrowserProxyImpl.getInstance().turnOffSync()}});// Copyright 2018 The Chromium Authors. All rights reserved.
const SyncPrefsIndividualDataTypes=["appsSynced","extensionsSynced","preferencesSynced","autofillSynced","typedUrlsSynced","themesSynced","bookmarksSynced","readingListSynced","passwordsSynced","tabsSynced","paymentsIntegrationEnabled","wifiConfigurationsSynced"];const RadioButtonNames={SYNC_EVERYTHING:"sync-everything",CUSTOMIZE_SYNC:"customize-sync"};Polymer({is:"settings-sync-controls",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared iron-flex" scope="settings-sync-controls">#sync-data-types .list-item:not([hidden]) ~ .list-item:not([hidden]) {
  border-top: var(--cr-separator-line);
}

.list-item {
  display: flex;
}

.list-item > div {
  flex: 1;
}

</style>

    <div id="sync-data-radio" class="cr-row first">
      <cr-radio-group selected="[[selectedSyncDataRadio_(syncPrefs)]]" on-selected-changed="onSyncDataRadioSelectionChanged_">
        <cr-radio-button name="sync-everything">
          Sync everything
        </cr-radio-button>
        <cr-radio-button name="customize-sync">
          Customize sync
        </cr-radio-button>
      </cr-radio-group>
    </div>

    <div class="cr-row first">
      <h2 class="cr-title-text flex">Sync data</h2>
    </div>

    <div class="list-frame" id="sync-data-types">
      <div class="list-item" hidden="[[!syncPrefs.appsRegistered]]">
        <div id="appCheckboxLabel">
          Apps
        </div>
        <cr-toggle checked="{{syncPrefs.appsSynced}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[syncPrefs.syncAllDataTypes]]" aria-labelledby="appCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!syncPrefs.bookmarksRegistered]]">
        <div id="bookmarksCheckboxLabel">
          Bookmarks
        </div>
        <cr-toggle checked="{{syncPrefs.bookmarksSynced}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[syncPrefs.syncAllDataTypes]]" aria-labelledby="bookmarksCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!syncPrefs.extensionsRegistered]]">
        <div id="extensionsCheckboxLabel">
          Extensions
        </div>
        <cr-toggle checked="{{syncPrefs.extensionsSynced}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[syncPrefs.syncAllDataTypes]]" aria-labelledby="extensionsCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!syncPrefs.typedUrlsRegistered]]">
        <div id="historyCheckboxLabel">
          History
        </div>
        <!-- TypedUrls has a special on-change handler to deal with user
             events. -->
        <cr-toggle id="historyToggle" checked="{{syncPrefs.typedUrlsSynced}}" on-change="onTypedUrlsDataTypeChanged_" disabled="[[syncPrefs.syncAllDataTypes]]" aria-labelledby="historyCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!syncPrefs.preferencesRegistered]]">
        <div id="settingsCheckboxLabel">
          Settings
        </div>
        <cr-toggle checked="{{syncPrefs.preferencesSynced}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[syncPrefs.syncAllDataTypes]]" aria-labelledby="settingsCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!syncPrefs.themesRegistered]]">
        <div id="themesAndWallpapersCheckboxLabel">
          Theme &amp; Wallpaper
        </div>
        <cr-toggle checked="{{syncPrefs.themesSynced}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[syncPrefs.syncAllDataTypes]]" aria-labelledby="themesAndWallpapersCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!syncPrefs.readingListRegistered]]">
        <div id="readingListCheckboxLabel">
          Reading list
        </div>
        <cr-toggle checked="{{syncPrefs.readingListSynced}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[syncPrefs.syncAllDataTypes]]" aria-labelledby="readingListCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!syncPrefs.tabsRegistered]]">
        <div id="openTabsCheckboxLabel">
          Open tabs
        </div>
        <cr-toggle checked="{{syncPrefs.tabsSynced}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[syncPrefs.syncAllDataTypes]]" aria-labelledby="openTabsCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!syncPrefs.passwordsRegistered]]">
        <div id="passwordsCheckboxLabel">
          Passwords
        </div>
        <cr-toggle checked="{{syncPrefs.passwordsSynced}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[syncPrefs.syncAllDataTypes]]" aria-labelledby="passwordsCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!syncPrefs.autofillRegistered]]">
        <div id="autofillCheckboxLabel">
          Addresses and more
        </div>
        <!-- Autofill has a special on-change handler to deal with
             Payments integration. -->
        <cr-toggle checked="{{syncPrefs.autofillSynced}}" on-change="onAutofillDataTypeChanged_" disabled="[[syncPrefs.syncAllDataTypes]]" aria-labelledby="autofillCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!syncPrefs.autofillRegistered]]">
        <!-- The Payments integration checkbox is a special case in many
             ways. It's visible only if autofill is registered. It's
             disabled and unchecked if autofill is unchecked.-->
        <div>
          Payment methods and addresses using Google Pay
        </div>
        <cr-toggle checked="{{syncPrefs.paymentsIntegrationEnabled}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[shouldPaymentsCheckboxBeDisabled_(
                syncPrefs.syncAllDataTypes, syncPrefs.autofillSynced)]]" aria-label="Payment methods and addresses using Google Pay">
        </cr-toggle>
      </div>


      <div class="list-item" hidden="[[!syncPrefs.wifiConfigurationsRegistered]]">
        <div id="wifiConfigurationsCheckboxLabel">
          Wi-Fi networks
        </div>
        <cr-toggle checked="{{syncPrefs.wifiConfigurationsSynced}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[syncPrefs.syncAllDataTypes]]" aria-labelledby="wifiConfigurationsCheckboxLabel">
        </cr-toggle>
      </div>
    </div>

<!--_html_template_end_-->`,behaviors:[WebUIListenerBehavior],properties:{hidden:{type:Boolean,value:false,computed:"syncControlsHidden_("+"syncStatus.signedIn, syncStatus.disabled, syncStatus.hasError)",reflectToAttribute:true},syncPrefs:Object,syncStatus:{type:Object,observer:"syncStatusChanged_"}},browserProxy_:null,cachedSyncPrefs_:null,created(){this.browserProxy_=SyncBrowserProxyImpl.getInstance()},attached(){this.addWebUIListener("sync-prefs-changed",this.handleSyncPrefsChanged_.bind(this));const router=Router.getInstance();if(router.getCurrentRoute()===router.getRoutes().SYNC_ADVANCED){this.browserProxy_.didNavigateToSyncPage()}},handleSyncPrefsChanged_(syncPrefs){this.syncPrefs=syncPrefs;if(!this.syncPrefs.autofillRegistered||!this.syncPrefs.autofillSynced){this.set("syncPrefs.paymentsIntegrationEnabled",false)}this.fydeosHidden_()},selectedSyncDataRadio_:function(){return this.syncPrefs.syncAllDataTypes?RadioButtonNames.SYNC_EVERYTHING:RadioButtonNames.CUSTOMIZE_SYNC},onSyncDataRadioSelectionChanged_:function(event){const syncAllDataTypes=event.detail.value===RadioButtonNames.SYNC_EVERYTHING;this.set("syncPrefs.syncAllDataTypes",syncAllDataTypes);this.handleSyncAllDataTypesChanged_(syncAllDataTypes)},onSyncAllDataTypesChanged_(event){this.handleSyncAllDataTypesChanged_(event.target.checked)},handleSyncAllDataTypesChanged_:function(syncAllDataTypes){if(syncAllDataTypes){this.set("syncPrefs.syncAllDataTypes",true);this.cachedSyncPrefs_={};for(const dataType of SyncPrefsIndividualDataTypes){this.cachedSyncPrefs_[dataType]=this.syncPrefs[dataType];this.set(["syncPrefs",dataType],true)}}else if(this.cachedSyncPrefs_){for(const dataType of SyncPrefsIndividualDataTypes){this.set(["syncPrefs",dataType],this.cachedSyncPrefs_[dataType])}}chrome.metricsPrivate.recordUserAction(syncAllDataTypes?"Sync_SyncEverything":"Sync_CustomizeSync");this.onSingleSyncDataTypeChanged_()},onSingleSyncDataTypeChanged_(){assert(this.syncPrefs);this.browserProxy_.setSyncDatatypes(this.syncPrefs)},onAutofillDataTypeChanged_(){this.set("syncPrefs.paymentsIntegrationEnabled",this.syncPrefs.autofillSynced);this.onSingleSyncDataTypeChanged_()},onTypedUrlsDataTypeChanged_(){this.onSingleSyncDataTypeChanged_()},shouldPaymentsCheckboxBeDisabled_(syncAllDataTypes,autofillSynced){return syncAllDataTypes||!autofillSynced},syncStatusChanged_(){const router=Router.getInstance();const routes=router.getRoutes();if(router.getCurrentRoute()===routes.SYNC_ADVANCED&&this.syncControlsHidden_()){router.navigateTo(routes.SYNC)}},syncControlsHidden_(){if(!this.syncStatus){return false}if(!this.syncStatus.signedIn||this.syncStatus.disabled){return true}return!!this.syncStatus.hasError&&this.syncStatus.statusAction!==StatusAction.ENTER_PASSPHRASE&&this.syncStatus.statusAction!==StatusAction.RETRIEVE_TRUSTED_VAULT_KEYS},fydeosHidden_(){const isFydeProfile=loadTimeData$1.getBoolean("isFydeProfile");if(!isFydeProfile)return;const hideSyncSectionRadio=()=>{const node=this.$$("#sync-data-radio");if(node){node.style.display="none"}};const hideOtherTitle=()=>{const node=this.$$("#sync-data-radio + .cr-row.first h2.cr-title-text");if(node){node.style.display="none";node.parentNode.setAttribute("hidden",true)}};const hideToggles=()=>{const elements=this.root.querySelectorAll("cr-toggle");const enabledItems=["settingsCheckboxLabel","bookmarksCheckboxLabel","themesAndWallpapersCheckboxLabel","appCheckboxLabel","extensionsCheckboxLabel"];elements.forEach((ele=>{const parent=ele.parentNode;if(!parent)return;const label=parent.querySelector("div:first-child");if(!label)return;if(enabledItems.indexOf(label.id)===-1){ele.disabled=true;parent.style.display="none"}}))};hideToggles();hideOtherTitle();hideSyncSectionRadio()}});// Copyright 2018 The Chromium Authors. All rights reserved.
const MAX_SIGNIN_PROMO_IMPRESSION=10;Polymer({is:"settings-sync-account-control",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared" scope="settings-sync-account-control">:host {
  --shown-avatar-size: 40px;
        --sync-icon-border-size: 2px;
        --sync-icon-size: 16px;
}

.account-icon {
  border-radius: 20px;
        flex-shrink: 0;
        height: var(--shown-avatar-size);
        width: var(--shown-avatar-size);
}

.account-icon.small {
  height: 20px;
        width: 20px;
}

#menu .dropdown-item {
  padding: 12px;
}

#menu .dropdown-item span {
  margin-inline-start: 8px;
}

.flex {
  display: flex;
        flex: 1;
        flex-direction: column;
}

#avatar-container {
  height: var(--shown-avatar-size);
        position: relative;
}

#sync-icon-container {
  align-items: center;
        background: var(--google-green-700);
        border: var(--sync-icon-border-size) solid white;
        border-radius: 50%;
        display: flex;
        height: var(--sync-icon-size);
        position: absolute;
        right: -6px;
        top: calc(var(--shown-avatar-size) - var(--sync-icon-size) -
            var(--sync-icon-border-size));
        width: var(--sync-icon-size);
}

:host-context([dir='rtl']) #sync-icon-container {
  left: -6px;
        right: initial;
}

@media (prefers-color-scheme: dark) {
#sync-icon-container {
  background: var(--google-green-refresh-300);
          border-color: var(--google-grey-900);
}

}

#sync-icon-container.sync-problem {
  background: var(--settings-error-color);
}

#sync-icon-container.sync-paused {
  background: var(--google-blue-500);
}

@media (prefers-color-scheme: dark) {
#sync-icon-container.sync-paused {
  background: var(--google-blue-refresh-300);
}

}

#sync-icon-container.sync-disabled {
  background: var(--google-grey-400);
}

@media (prefers-color-scheme: dark) {
#sync-icon-container.sync-disabled {
  background: var(--google-grey-refresh-500);
}

}

#sync-icon-container iron-icon {
  fill: white;  
        height: 12px;
        margin: auto;
        width: 12px;
}

#sign-in {
  min-width: 100px;
}

#banner {
  background: url(chrome://settings/images/sync_banner.svg) no-repeat;
        background-size: 100% auto;
        display: none;
        padding-top: calc(120 / 680 * 100%);
}

@media (prefers-color-scheme: dark) {
#banner {
  background-image: url(chrome://settings/images/sync_banner_dark.svg);
}

}

:host([showing-promo]) #banner {
  display: block;
}

</style>
    <!-- TODO(jamescook): Show the promo on Chrome OS if the user is signed-in
         but has sync disabled. -->
    <div id="banner" hidden="[[syncStatus.signedIn]]" part="banner"></div>
    <div class="cr-row first" id="promo-header" hidden="[[syncStatus.signedIn]]">
      <div class="flex cr-padded-text">
        <div id="promo-title" part="title">
          [[getLabel_(promoLabelWithAccount,
              promoLabelWithNoAccount, shownAccount_)]]
        </div>
        <div class="secondary">[[subLabel_]]</div>
      </div>
      <cr-button class="action-button cr-button-gap" on-click="onSigninTap_" id="sign-in" disabled="[[shouldDisableSyncButton_(showSetupButtons_,
                  syncStatus.firstSetupInProgress,
                  prefs.signin.allowed_on_next_startup.value)]]" hidden="[[shouldShowAvatarRow_]]">
        Turn on syncâ€¦
      </cr-button>
    </div>
    <template is="dom-if" if="[[shouldShowAvatarRow_]]">
      <div class="cr-row first two-line" id="avatar-row">
        <div id="avatar-container">
          <img class="account-icon" alt="" src="[[getAccountImageSrc_(shownAccount_.avatarImage)]]">
          <div id="sync-icon-container" hidden="[[!syncStatus.signedIn]]" class$="[[getSyncIconStyle_(
                  syncStatus.hasError, syncStatus.statusAction,
                  syncStatus.disabled)]]">
            <iron-icon icon$="[[getSyncIcon_(
                syncStatus.hasError, syncStatus.statusAction,
                syncStatus.disabled)]]"></iron-icon>
          </div>
        </div>
        <div class="cr-row-gap cr-padded-text flex no-min-width" id="user-info">
          <div class="text-elide">
            [[getAvatarRowTitle_(shownAccount_.fullName,
                'Sync isn\\'t working',
                'Password sync isn\\'t working',
                'Sync is paused',
                'Sync disabled', syncStatus.hasError,
                syncStatus.statusAction, syncStatus.disabled)]]
          </div>
          <div class="secondary text-elide">
            [[getAccountLabel_(
                'Syncing to $1', shownAccount_.email,
                syncStatus.hasError, syncStatus.signedIn,
                syncStatus.disabled, syncStatus.firstSetupInProgress)]]
          </div>
        </div>
<!-- Chrome OS does not allow switching users for sync. -->

        <cr-button id="sync-button" class="action-button cr-button-gap" hidden="[[syncStatus.signedIn]]" on-click="onSyncButtonTap_" disabled="[[shouldDisableSyncButton_(showSetupButtons_,
                    syncStatus.firstSetupInProgress,
                    prefs.signin.allowed_on_next_startup.value)]]">
          Turn on syncâ€¦
        </cr-button>
        <cr-button id="turn-off" class="cr-button-gap" hidden="[[!shouldShowTurnOffButton_(syncStatus.signedIn,
                syncStatus.domain, showSetupButtons_)]]" on-click="onTurnOffButtonTap_" disabled="[[syncStatus.firstSetupInProgress]]">
          Turn off
        </cr-button>
        <cr-button id="sync-error-button" class="action-button cr-button-gap" hidden="[[!shouldShowErrorActionButton_(syncStatus,
                showSetupButtons_)]]" on-click="onErrorButtonTap_" disabled="[[syncStatus.firstSetupInProgress]]">
          [[syncStatus.statusActionText]]
        </cr-button>
        <div id="setup-buttons" hidden="[[!showSetupButtons_]]" class="cr-button-gap">
          <cr-button on-click="onSetupCancel_">Cancel</cr-button>
          <cr-button class="action-button cr-button-gap" on-click="onSetupConfirm_">
            Confirm
          </cr-button>
        </div>
      </div>
<!-- Chrome OS does not allow switching users for sync. -->

    </template>
<!--_html_template_end_-->`,behaviors:[WebUIListenerBehavior,PrefsBehavior],properties:{prefs:{type:Object,notify:true},syncStatus:Object,promoLabelWithAccount:String,promoLabelWithNoAccount:String,promoSecondaryLabelWithAccount:String,promoSecondaryLabelWithNoAccount:String,signedIn_:{type:Boolean,computed:"computeSignedIn_(syncStatus.signedIn)",observer:"onSignedInChanged_"},storedAccounts_:Object,shownAccount_:Object,showingPromo:{type:Boolean,value:false,reflectToAttribute:true},embeddedInSubpage:{type:Boolean,reflectToAttribute:true},hideButtons:{type:Boolean,value:false,reflectToAttribute:true},shouldShowAvatarRow_:{type:Boolean,value:false,computed:"computeShouldShowAvatarRow_(storedAccounts_, syncStatus,"+"storedAccounts_.length, syncStatus.signedIn)",observer:"onShouldShowAvatarRowChange_"},subLabel_:{type:String,computed:"computeSubLabel_(promoSecondaryLabelWithAccount,"+"promoSecondaryLabelWithNoAccount, shownAccount_)"},showSetupButtons_:{type:Boolean,computed:"computeShowSetupButtons_("+"hideButtons, syncStatus.firstSetupInProgress)"}},observers:["onShownAccountShouldChange_(storedAccounts_, syncStatus)"],syncBrowserProxy_:null,created(){this.syncBrowserProxy_=SyncBrowserProxyImpl.getInstance()},attached(){this.syncBrowserProxy_.getStoredAccounts().then(this.handleStoredAccounts_.bind(this));this.addWebUIListener("stored-accounts-updated",this.handleStoredAccounts_.bind(this))},recordImpressionUserActions_(){assert(!this.syncStatus.signedIn);assert(this.shownAccount_!==undefined);chrome.metricsPrivate.recordUserAction("Signin_Impression_FromSettings");if(this.shownAccount_){chrome.metricsPrivate.recordUserAction("Signin_ImpressionWithAccount_FromSettings")}else{chrome.metricsPrivate.recordUserAction("Signin_ImpressionWithNoAccount_FromSettings")}},computeSignedIn_(){return!!this.syncStatus&&!!this.syncStatus.signedIn},onSignedInChanged_(){if(this.embeddedInSubpage){this.showingPromo=true;return}if(!this.showingPromo&&!this.syncStatus.signedIn&&this.syncBrowserProxy_.getPromoImpressionCount()<MAX_SIGNIN_PROMO_IMPRESSION){this.showingPromo=true;this.syncBrowserProxy_.incrementPromoImpressionCount()}else{this.showingPromo=false}if(!this.syncStatus.signedIn&&this.shownAccount_!==undefined){this.recordImpressionUserActions_()}},getLabel_(labelWithAccount,labelWithNoAccount){return this.shownAccount_?labelWithAccount:labelWithNoAccount},computeSubLabel_(){return this.getLabel_(this.promoSecondaryLabelWithAccount,this.promoSecondaryLabelWithNoAccount)},getSubstituteLabel_(label,name){return loadTimeData$1.substituteString(label,name)},getAccountLabel_(label,account){if(this.syncStatus.firstSetupInProgress){return this.syncStatus.statusText||account}return this.syncStatus.signedIn&&!this.syncStatus.hasError&&!this.syncStatus.disabled?loadTimeData$1.substituteString(label,account):account},getAccountImageSrc_(image){return image||"chrome://theme/IDR_PROFILE_AVATAR_PLACEHOLDER_LARGE"},getSyncIconStyle_(){if(this.syncStatus.disabled){return"sync-disabled"}if(!this.syncStatus.hasError){return"sync"}if(this.syncStatus.hasUnrecoverableError){return"sync-problem"}if(this.syncStatus.statusAction===StatusAction.REAUTHENTICATE){return"sync-paused"}return"sync-problem"},getSyncIcon_(){switch(this.getSyncIconStyle_()){case"sync-problem":return"settings:sync-problem";case"sync-paused":return"settings:sync-disabled";default:return"cr:sync"}},getAvatarRowTitle_(accountName,syncErrorLabel,syncPasswordsOnlyErrorLabel,authErrorLabel,disabledLabel){if(this.syncStatus.disabled){return disabledLabel}if(!this.syncStatus.hasError){return accountName}if(this.syncStatus.hasUnrecoverableError){return syncErrorLabel}if(this.syncStatus.statusAction===StatusAction.REAUTHENTICATE){return authErrorLabel}if(this.syncStatus.hasPasswordsOnlyError){return syncPasswordsOnlyErrorLabel}return syncErrorLabel},shouldDisableSyncButton_(){if(this.hideButtons||this.prefs===undefined){return this.computeShowSetupButtons_()}return!!this.syncStatus.firstSetupInProgress||!this.getPref("signin.allowed_on_next_startup").value},shouldShowTurnOffButton_(){if(this.syncStatus.domain){return false}return!this.hideButtons&&!this.showSetupButtons_&&!!this.syncStatus.signedIn},shouldShowErrorActionButton_(){if(this.embeddedInSubpage&&this.syncStatus.statusAction===StatusAction.ENTER_PASSPHRASE){return false}return!this.hideButtons&&!this.showSetupButtons_&&!!this.syncStatus.signedIn&&!!this.syncStatus.hasError&&this.syncStatus.statusAction!==StatusAction.NO_ACTION},handleStoredAccounts_(accounts){this.storedAccounts_=accounts},computeShouldShowAvatarRow_(){if(this.storedAccounts_===undefined||this.syncStatus===undefined){return false}return this.syncStatus.signedIn||this.storedAccounts_.length>0},onErrorButtonTap_(){const router=Router.getInstance();const routes=router.getRoutes();switch(this.syncStatus.statusAction){case StatusAction.REAUTHENTICATE:this.syncBrowserProxy_.startSignIn();break;case StatusAction.SIGNOUT_AND_SIGNIN:if(this.syncStatus.domain){router.navigateTo(routes.SIGN_OUT)}else{this.syncBrowserProxy_.signOut(false);this.syncBrowserProxy_.startSignIn()}break;case StatusAction.UPGRADE_CLIENT:router.navigateTo(router.getRoutes().ABOUT);break;case StatusAction.RETRIEVE_TRUSTED_VAULT_KEYS:this.syncBrowserProxy_.startKeyRetrieval();break;case StatusAction.ENTER_PASSPHRASE:case StatusAction.CONFIRM_SYNC_SETTINGS:default:router.navigateTo(router.getRoutes().SYNC)}},onSigninTap_(){this.syncBrowserProxy_.turnOnSync();if(this.$$("#menu")){this.$$("#menu").close()}},onSignoutTap_(){this.syncBrowserProxy_.signOut(false);this.$$("#menu").close()},onSyncButtonTap_(){assert(this.shownAccount_);assert(this.storedAccounts_.length>0);const isDefaultPromoAccount=this.shownAccount_.email===this.storedAccounts_[0].email;this.syncBrowserProxy_.startSyncingWithEmail(this.shownAccount_.email,isDefaultPromoAccount)},onTurnOffButtonTap_(){const router=Router.getInstance();router.navigateTo(router.getRoutes().SIGN_OUT)},onMenuButtonTap_(){const actionMenu=this.$$("#menu");actionMenu.showAt(assert(this.$$("#dropdown-arrow")))},onShouldShowAvatarRowChange_(){const actionMenu=this.$$("#menu");if(!this.shouldShowAvatarRow_&&actionMenu&&actionMenu.open){actionMenu.close()}},onAccountTap_(e){this.shownAccount_=e.model.item;this.$$("#menu").close()},onShownAccountShouldChange_(){if(this.storedAccounts_===undefined||this.syncStatus===undefined){return}if(this.syncStatus.signedIn){for(let i=0;i<this.storedAccounts_.length;i++){if(this.storedAccounts_[i].email===this.syncStatus.signedInUsername){this.shownAccount_=this.storedAccounts_[i];return}}}else{const firstStoredAccount=this.storedAccounts_.length>0?this.storedAccounts_[0]:null;const shouldRecordImpression=this.shownAccount_===undefined||!this.shownAccount_&&firstStoredAccount||this.shownAccount_&&!firstStoredAccount;this.shownAccount_=firstStoredAccount;if(shouldRecordImpression){this.recordImpressionUserActions_()}}},computeShowSetupButtons_(){return!this.hideButtons&&!!this.syncStatus.firstSetupInProgress},onSetupCancel_(){this.fire("sync-setup-done",false)},onSetupConfirm_(){this.fire("sync-setup-done",true)}});// Copyright 2020 The Chromium Authors. All rights reserved.
const RadioButtonNames$1={ENCRYPT_WITH_GOOGLE:"encrypt-with-google",ENCRYPT_WITH_PASSPHRASE:"encrypt-with-passphrase"};Polymer({is:"settings-sync-encryption-options",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared" scope="settings-sync-encryption-options">#create-password-box {
  margin-bottom: 1em;
        
        margin-inline-start: var(--cr-section-indent-width);
}

#create-password-box .list-item {
  margin-bottom: var(--cr-form-field-bottom-spacing);
}

cr-input {
  --cr-input-width: var(--settings-input-max-width);
}

.passphrase-reset-icon {
  margin-inline-end: 8px;
}

</style>

    <template is="dom-if" if="[[!syncPrefs.passphraseRequired]]">
      <div id="encryptionRadioGroupContainer" class="list-frame">
        <cr-radio-group id="encryptionRadioGroup" selected="[[selectedEncryptionRadio_(syncPrefs)]]" on-selected-changed="onEncryptionRadioSelectionChanged_" disabled$="[[disableEncryptionOptions_]]">
          <cr-radio-button name="encrypt-with-google" class="list-item" aria-label="Encrypt synced passwords with your Google Account">
            Encrypt synced passwords with your Google Account
          </cr-radio-button>
          <cr-radio-button name="encrypt-with-passphrase" class="list-item">
            <span hidden="[[!syncPrefs.fullEncryptionBody]]">
              [[syncPrefs.fullEncryptionBody]]
            </span>
            <span on-click="onLearnMoreClick_" hidden="[[syncPrefs.fullEncryptionBody]]">
              Encrypt synced data with your own <a href="https://support.google.com/chromebook/?p=settings_encryption&b=amd64-fydeos" target="_blank">sync passphrase</a>. This doesn't include payment methods and addresses from Google Pay.
            </span>
          </cr-radio-button>
        </cr-radio-group>
      </div>
    </template>

    <template is="dom-if" if="[[creatingNewPassphrase_]]" restamp="">
      <div class="list-frame">
        <div id="create-password-box">
          <div class="list-item">
            <span>Only someone with your passphrase can read your encrypted data. The passphrase is not sent to or stored by Google. If you forget your passphrase or want to change this setting, you'll need to <a href="https://www.google.com/settings/chrome/sync/?hl=en-US" target="_blank">reset sync</a>.</span>
          </div>
          <cr-input id="passphraseInput" type="password" value="{{passphrase_}}" placeholder="Passphrase" error-message="Empty passphrase is not allowed" on-keypress="onNewPassphraseInputKeypress_">
          </cr-input>
          <cr-input id="passphraseConfirmationInput" type="password" value="{{confirmation_}}" placeholder="Confirm passphrase" error-message="You must enter the same passphrase twice" on-keypress="onNewPassphraseInputKeypress_">
          </cr-input>
          <cr-button id="saveNewPassphrase" on-click="onSaveNewPassphraseClick_" class="action-button" disabled="[[!isSaveNewPassphraseEnabled_(
                            passphrase_, confirmation_)]]">
            Save
          </cr-button>
        </div>
      </div>
    </template>
<!--_html_template_end_-->`,properties:{syncPrefs:{type:Object,notify:true},syncStatus:Object,creatingNewPassphrase_:{type:Boolean,value:false},passphrase_:{type:String,value:""},confirmation_:{type:String,value:""},disableEncryptionOptions_:{type:Boolean,computed:"computeDisableEncryptionOptions_("+"syncPrefs, syncStatus)",observer:"disableEncryptionOptionsChanged_"}},isSettingEncryptionPassphrase_:false,getEncryptionsRadioButtons(){return this.$$("#encryptionRadioGroup")},computeDisableEncryptionOptions_(){return!!(this.syncPrefs&&(this.syncPrefs.encryptAllData||!this.syncPrefs.customPassphraseAllowed||this.syncPrefs.trustedVaultKeysRequired)||this.syncStatus&&this.syncStatus.supervisedUser)},disableEncryptionOptionsChanged_(){if(this.disableEncryptionOptions_){this.creatingNewPassphrase_=false}},isSaveNewPassphraseEnabled_(passphrase,confirmation){return passphrase!==""&&confirmation!==""},onNewPassphraseInputKeypress_(e){if(e.type==="keypress"&&e.key!=="Enter"){return}this.saveNewPassphrase_()},onSaveNewPassphraseClick_(){this.saveNewPassphrase_()},saveNewPassphrase_(){assert(this.creatingNewPassphrase_);chrome.metricsPrivate.recordUserAction("Sync_SaveNewPassphraseClicked");if(this.isSettingEncryptionPassphrase_){return}if(!this.validateCreatedPassphrases_()){return}this.isSettingEncryptionPassphrase_=true;SyncBrowserProxyImpl.getInstance().setEncryptionPassphrase(this.passphrase_).then((successfullySet=>{this.fire("passphrase-changed",{didChange:successfullySet});this.isSettingEncryptionPassphrase_=false}))},onEncryptionRadioSelectionChanged_(event){this.creatingNewPassphrase_=event.detail.value===RadioButtonNames$1.ENCRYPT_WITH_PASSPHRASE},selectedEncryptionRadio_(){return this.syncPrefs.encryptAllData||this.creatingNewPassphrase_?RadioButtonNames$1.ENCRYPT_WITH_PASSPHRASE:RadioButtonNames$1.ENCRYPT_WITH_GOOGLE},validateCreatedPassphrases_(){const emptyPassphrase=!this.passphrase_;const mismatchedPassphrase=this.passphrase_!==this.confirmation_;this.$$("#passphraseInput").invalid=emptyPassphrase;this.$$("#passphraseConfirmationInput").invalid=!emptyPassphrase&&mismatchedPassphrase;return!emptyPassphrase&&!mismatchedPassphrase},onLearnMoreClick_(event){if(event.target.tagName==="A"){event.stopPropagation()}}});// Copyright 2016 The Chromium Authors. All rights reserved.
class PrivacyPageBrowserProxyImpl{setBlockAutoplayEnabled(enabled){chrome.send("setBlockAutoplayEnabled",[enabled])}getSecureDnsResolverList(){return sendWithPromise("getSecureDnsResolverList")}getSecureDnsSetting(){return sendWithPromise("getSecureDnsSetting")}parseCustomDnsEntry(entry){return sendWithPromise("parseCustomDnsEntry",entry)}probeCustomDnsTemplate(template){return sendWithPromise("probeCustomDnsTemplate",template)}recordUserDropdownInteraction(oldSelection,newSelection){chrome.send("recordUserDropdownInteraction",[oldSelection,newSelection])}}addSingletonGetter(PrivacyPageBrowserProxyImpl);// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({is:"settings-personalization-options",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-personalization-options">:host(.list-frame) settings-toggle-button {
  padding-inline-end: 0;
        padding-inline-start: 0;
}

:host(.list-frame) settings-toggle-button:first-of-type {
  border-top: none;
}

</style>
<!-- not chromeos -->
    <settings-toggle-button id="searchSuggestToggle" class="hr" hidden="[[!pageVisibility.searchPrediction]]" pref="{{prefs.search.suggest_enabled}}" label="Autocomplete searches and URLs" sub-label="Sends some cookies and searches from the address bar and search box to your default search engine">
    </settings-toggle-button>
<!-- _google_chrome -->
    <settings-toggle-button id="urlCollectionToggle" class="hr" pref="{{prefs.url_keyed_anonymized_data_collection.enabled}}" label="Make searches and browsing better" sub-label="Sends URLs of pages you visit to Google">
    </settings-toggle-button>
<!-- _google_chrome -->
    <template is="dom-if" if="[[shouldShowDriveSuggest_(
        syncStatus, syncStatus.signedIn, syncStatus.statusAction)]]" restamp="">
      <settings-toggle-button id="driveSuggestControl" class="hr" pref="{{prefs.documentsuggest.enabled}}" label="Google Drive search suggestions" sub-label="Chromium will access your Drive to make suggestions in the address bar">
      </settings-toggle-button>
    </template>

    <template is="dom-if" if="[[showSignoutDialog_]]" restamp="">
      <settings-signout-dialog sync-status="[[syncStatus]]" on-close="onSignoutDialogClosed_">
      </settings-signout-dialog>
    </template>


<!--_html_template_end_-->`,behaviors:[PrefsBehavior,WebUIListenerBehavior,I18nBehavior],properties:{prefs:{type:Object,notify:true},pageVisibility:Object,syncStatus:Object,showSignoutDialog_:Boolean,syncFirstSetupInProgress_:{type:Boolean,value:false,computed:"computeSyncFirstSetupInProgress_(syncStatus)"}},browserProxy_:null,computeSyncFirstSetupInProgress_(){return!!this.syncStatus&&!!this.syncStatus.firstSetupInProgress},ready(){this.browserProxy_=PrivacyPageBrowserProxyImpl.getInstance()},getSearchSuggestToggle(){return this.$$("#searchSuggestToggle")},getUrlCollectionToggle(){return this.$$("#urlCollectionToggle")},getDriveSuggestToggle(){return this.$$("#driveSuggestControl")},showSpellCheckControl_(){return!!this.prefs.spellcheck&&this.prefs.spellcheck.dictionaries.value.length>0},shouldShowDriveSuggest_(){return loadTimeData$1.getBoolean("driveSuggestAvailable")&&!!this.syncStatus&&!!this.syncStatus.signedIn&&this.syncStatus.statusAction!==StatusAction.REAUTHENTICATE},onSigninAllowedChange_(){if(this.syncStatus.signedIn&&!this.$$("#signinAllowedToggle").checked){this.$$("#signinAllowedToggle").checked=true;this.showSignoutDialog_=true}else{this.$$("#signinAllowedToggle").sendPrefChange();this.$.toast.show()}},onSignoutDialogClosed_(){if(this.$$("settings-signout-dialog").wasConfirmed()){this.$$("#signinAllowedToggle").checked=false;this.$$("#signinAllowedToggle").sendPrefChange();this.$.toast.show()}this.showSignoutDialog_=false},onRestartTap_(e){e.stopPropagation();LifetimeBrowserProxyImpl.getInstance().restart()},attached:function(){const that=this;const isFydeProfile=loadTimeData$1.getBoolean("isFydeProfile");setTimeout((()=>{if(!isFydeProfile)return;["settings-toggle-button#driveSuggestControl",`settings-toggle-button[label="${that.i18n("urlKeyedAnonymizedDataCollection")}"]`].forEach((selector=>{const node=that.$$(selector);if(node){node.style.display="none"}}))}),0)}});// Copyright 2015 The Chromium Authors. All rights reserved.
function getSyncRoutes(){const router=Router.getInstance();return router.getRoutes()}Polymer({is:"settings-sync-page",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared iron-flex" scope="settings-sync-page">#sync-separator {
  border-bottom: var(--cr-separator-line);
}

#create-password-box {
  margin-inline-start: var(--cr-section-indent-width);
}

#create-password-box {
  margin-bottom: 1em;
}

#create-password-box .list-item {
  margin-bottom: var(--cr-form-field-bottom-spacing);
}

cr-input {
  --cr-input-width: var(--settings-input-max-width);
}

#existingPassphrase {
  border-bottom: var(--cr-separator-line);
        border-top: var(--cr-separator-line);
        
        padding-inline-start: var(--cr-section-padding);
}

#submitExistingPassphrase {
  margin-inline-start: 16px;
}

#passphraseRecoverHint {
  align-items: center;
}

#other-sync-items {
  padding-bottom: 8px;
}

.passphrase-reset-icon {
  margin-inline-end: 8px;
}

#disabled-by-admin-icon {
  text-align: center;
        width: 40px;
}

#toast {
  left: 0;
        z-index: 1;
}

:host-context([dir='rtl']) #toast {
  left: auto;
        right: 0;
}

cr-link-row {
  padding-inline-end: 8px;
        padding-inline-start: 0;
}

</style>
    <template is="dom-if" if="[[shouldShowSyncAccountControl_(
        syncStatus.syncSystemEnabled)]]">
      <settings-sync-account-control embedded-in-subpage="" sync-status="[[syncStatus]]" prefs="{{prefs}}" promo-label-with-account="Sync and personalize Chromium across your devices" promo-label-with-no-account="Sync and personalize Chromium across your devices" on-sync-setup-done="onSyncSetupDone_">
      </settings-sync-account-control>
    </template>
    <div class="cr-row first" hidden="[[!syncDisabledByAdmin_]]">
      <iron-icon id="disabled-by-admin-icon" icon="cr20:domain"></iron-icon>
      <div class="flex cr-padded-text">
        Sync is disabled by your administrator.
      </div>
    </div>

    <template is="dom-if" if="[[shouldShowExistingPassphraseBelowAccount_(
        syncPrefs.passphraseRequired)]]" on-dom-change="focusPassphraseInput_">
      <div id="existingPassphrase" class="list-frame">
        <div id="existingPassphraseTitle" class="list-item">
            <div class="start cr-padded-text">
              <div>Encryption options</div>
              <div class="secondary" inner-h-t-m-l="[[syncPrefs.enterPassphraseBody]]">
              </div>
            </div>
        </div>
        <div id="existingPassphraseContainer" class="list-item">
          <cr-input id="existingPassphraseInput" type="password" value="{{existingPassphrase_}}" placeholder="Passphrase" error-message="The passphrase you entered is incorrect" on-keypress="onSubmitExistingPassphraseTap_">
            <cr-button id="submitExistingPassphrase" slot="suffix" on-click="onSubmitExistingPassphraseTap_" class="action-button" disabled="[[!existingPassphrase_]]">
              Submit
            </cr-button>
          </cr-input>
        </div>
        <div id="passphraseRecoverHint" class="list-item">
          <div class="cr-padded-text">If you forgot your passphrase or want to change this setting, <a href="https://www.google.com/settings/chrome/sync/?hl=en-US" target="_blank">reset sync</a>.</div>
        </div>
      </div>
    </template>

    <div id="sync-separator" hidden="[[!syncSectionDisabled_]]"></div>

    <div id="sync-section" hidden="[[syncSectionDisabled_]]">
      <div class="cr-row first">
        <h2 class="cr-title-text">Sync</h2>
      </div>

      <div id="[[pages_.SPINNER]]" class="cr-row first cr-padded-text" hidden$="[[!isStatus_(pages_.SPINNER, pageStatus_)]]">
        Please waitâ€¦
      </div>
      <div id="[[pages_.CONFIGURE]]" hidden$="[[!isStatus_(pages_.CONFIGURE, pageStatus_)]]">
        <!-- FYDEOS BEGIN -->
        <template is="dom-if" if="[[isFydeProfile_]]">
          <settings-sync-controls sync-status="[[syncStatus]]">
          </settings-sync-controls>
        </template>
        <!-- FYDEOS END -->
        <div id="other-sync-items" class="list-frame">
          <cr-link-row id="sync-advanced-row" label="Manage what you sync" role-description="Subpage button" on-click="onSyncAdvancedClick_"></cr-link-row>

          <cr-link-row class="hr" label="Control how your browsing history is used to personalize Search, ads, and more" on-click="onActivityControlsClick_" external=""></cr-link-row>

          <cr-link-row id="syncDashboardLink" class="hr" label="Review your synced data" on-click="onSyncDashboardLinkClick_" hidden="[[syncStatus.supervisedUser]]" external=""></cr-link-row>

          <cr-expand-button id="encryptionDescription" hidden="[[syncPrefs.passphraseRequired]]" expanded="{{encryptionExpanded_}}" class="hr">
            Encryption options
            <div class="secondary">
              For added security, Chromium will encrypt your data.
              <div on-click="onResetSyncClick_" hidden="[[!syncPrefs.encryptAllData]]">
                <iron-icon icon="cr:info-outline" class="passphrase-reset-icon">
                </iron-icon>
                To change this setting, <a href="https://www.google.com/settings/chrome/sync/?hl=en-US" target="_blank">reset sync</a> to remove your sync passphrase
              </div>
            </div>
          </cr-expand-button>

          <iron-collapse id="encryptionCollapse" opened="[[encryptionExpanded_]]">
            <settings-sync-encryption-options sync-status="[[syncStatus]]" sync-prefs="{{syncPrefs}}" on-passphrase-changed="onPassphraseChanged_">
            </settings-sync-encryption-options>
          </iron-collapse>

        </div>
      </div>
    </div>

    <div class="cr-row first">
      <h2 class="cr-title-text">
        Other services
      </h2>
    </div>
    <settings-personalization-options class="list-frame" prefs="{{prefs}}" page-visibility="[[pageVisibility]]" sync-status="[[syncStatus]]">
    </settings-personalization-options>


<!--_html_template_end_-->`,behaviors:[WebUIListenerBehavior,RouteObserverBehavior],properties:{prefs:{type:Object,notify:true},focusConfig:{type:Object,observer:"onFocusConfigChange_"},pages_:{type:Object,value:PageStatus,readOnly:true},pageStatus_:{type:String,value:PageStatus.CONFIGURE},pageVisibility:Object,syncPrefs:{type:Object},syncStatus:{type:Object},dataEncrypted_:{type:Boolean,computed:"computeDataEncrypted_(syncPrefs.encryptAllData)"},encryptionExpanded_:{type:Boolean,value:false},forceEncryptionExpanded:{type:Boolean,value:false},existingPassphrase_:{type:String,value:""},signedIn_:{type:Boolean,value:true,computed:"computeSignedIn_(syncStatus.signedIn)"},syncDisabledByAdmin_:{type:Boolean,value:false,computed:"computeSyncDisabledByAdmin_(syncStatus.managed)"},syncSectionDisabled_:{type:Boolean,value:false,computed:"computeSyncSectionDisabled_("+"syncStatus.signedIn, syncStatus.disabled, "+"syncStatus.hasError, syncStatus.statusAction, "+"syncPrefs.trustedVaultKeysRequired)"},showSetupCancelDialog_:{type:Boolean,value:false},isFydeProfile_:{type:Boolean,value:function(){return loadTimeData$1.getBoolean("isFydeProfile")},readOnly:true}},observers:["expandEncryptionIfNeeded_(dataEncrypted_, forceEncryptionExpanded)"],browserProxy_:null,beforeunloadCallback_:null,unloadCallback_:null,collapsibleSectionsInitialized_:false,didAbort_:true,setupCancelConfirmed_:false,created(){this.browserProxy_=SyncBrowserProxyImpl.getInstance()},attached(){this.addWebUIListener("page-status-changed",this.handlePageStatusChanged_.bind(this));this.addWebUIListener("sync-prefs-changed",this.handleSyncPrefsChanged_.bind(this));const router=Router.getInstance();if(router.getCurrentRoute()===getSyncRoutes().SYNC){this.onNavigateToPage_()}const that=this;const hideOtherSyncItems=()=>{const node=that.$$("#other-sync-items");if(node)node.style.display="none"};const hideAll=()=>{if(!this.isFydeProfile_)return;hideOtherSyncItems()};setTimeout((()=>{hideAll();setTimeout(hideAll,30)}),0)},detached(){const router=Router.getInstance();if(getSyncRoutes().SYNC.contains(router.getCurrentRoute())){this.onNavigateAwayFromPage_()}if(this.beforeunloadCallback_){window.removeEventListener("beforeunload",this.beforeunloadCallback_);this.beforeunloadCallback_=null}if(this.unloadCallback_){window.removeEventListener("unload",this.unloadCallback_);this.unloadCallback_=null}},getEncryptionOptions(){return this.$$("settings-sync-encryption-options")},getPersonalizationOptions(){return this.$$("settings-personalization-options")},computeSignedIn_(){return!!this.syncStatus.signedIn},computeSyncSectionDisabled_(){return this.syncStatus!==undefined&&(!this.syncStatus.signedIn||!!this.syncStatus.disabled||!!this.syncStatus.hasError&&this.syncStatus.statusAction!==StatusAction.ENTER_PASSPHRASE&&this.syncStatus.statusAction!==StatusAction.RETRIEVE_TRUSTED_VAULT_KEYS)},computeSyncDisabledByAdmin_(){return this.syncStatus!==undefined&&!!this.syncStatus.managed},onFocusConfigChange_(){const router=Router.getInstance();this.focusConfig.set(getSyncRoutes().SYNC_ADVANCED.path,(()=>{focusWithoutInk(assert(this.$$("#sync-advanced-row")))}))},onSetupCancelDialogBack_(){this.$$("#setupCancelDialog").cancel();chrome.metricsPrivate.recordUserAction("Signin_Signin_CancelCancelAdvancedSyncSettings")},onSetupCancelDialogConfirm_(){this.setupCancelConfirmed_=true;this.$$("#setupCancelDialog").close();const router=Router.getInstance();router.navigateTo(getSyncRoutes().BASIC);chrome.metricsPrivate.recordUserAction("Signin_Signin_ConfirmCancelAdvancedSyncSettings")},onSetupCancelDialogClose_(){this.showSetupCancelDialog_=false},currentRouteChanged(){const router=Router.getInstance();if(router.getCurrentRoute()===getSyncRoutes().SYNC){this.onNavigateToPage_();return}if(getSyncRoutes().SYNC.contains(router.getCurrentRoute())){return}const searchParams=Router.getInstance().getQueryParameters().get("search");if(searchParams){this.onNavigateAwayFromPage_();return}const userActionCancelsSetup=this.syncStatus&&this.syncStatus.firstSetupInProgress&&this.didAbort_;if(!this.isFydeProfile_&&userActionCancelsSetup&&!this.setupCancelConfirmed_){chrome.metricsPrivate.recordUserAction("Signin_Signin_BackOnAdvancedSyncSettings");requestAnimationFrame((()=>{router.navigateTo(getSyncRoutes().SYNC);this.showSetupCancelDialog_=true;flush();this.$$("#setupCancelDialog").showModal()}));return}this.setupCancelConfirmed_=false;this.onNavigateAwayFromPage_()},isStatus_(expectedPageStatus){return expectedPageStatus===this.pageStatus_},onNavigateToPage_(){const router=Router.getInstance();assert(router.getCurrentRoute()===getSyncRoutes().SYNC);if(this.beforeunloadCallback_){return}this.collapsibleSectionsInitialized_=false;this.pageStatus_=PageStatus.SPINNER;this.browserProxy_.didNavigateToSyncPage();this.beforeunloadCallback_=event=>{if(this.syncStatus&&this.syncStatus.firstSetupInProgress){event.preventDefault();event.returnValue="";chrome.metricsPrivate.recordUserAction("Signin_Signin_AbortAdvancedSyncSettings")}};window.addEventListener("beforeunload",this.beforeunloadCallback_);this.unloadCallback_=this.onNavigateAwayFromPage_.bind(this);window.addEventListener("unload",this.unloadCallback_)},onNavigateAwayFromPage_(){if(!this.beforeunloadCallback_){return}this.pageStatus_=PageStatus.CONFIGURE;this.browserProxy_.didNavigateAwayFromSyncPage(this.didAbort_);window.removeEventListener("beforeunload",this.beforeunloadCallback_);this.beforeunloadCallback_=null;if(this.unloadCallback_){window.removeEventListener("unload",this.unloadCallback_);this.unloadCallback_=null}},handleSyncPrefsChanged_(syncPrefs){this.syncPrefs=syncPrefs;this.pageStatus_=PageStatus.CONFIGURE;if(this.syncPrefs.encryptAllData||!this.syncPrefs.customPassphraseAllowed||this.syncStatus&&this.syncStatus.supervisedUser){this.creatingNewPassphrase_=false}},onActivityControlsClick_(){chrome.metricsPrivate.recordUserAction("Sync_OpenActivityControlsPage");this.browserProxy_.openActivityControlsUrl();window.open(loadTimeData$1.getString("activityControlsUrl"))},onSyncDashboardLinkClick_(){window.open(loadTimeData$1.getString("syncDashboardUrl"))},computeDataEncrypted_(){return!!this.syncPrefs&&this.syncPrefs.encryptAllData},expandEncryptionIfNeeded_(){if(this.forceEncryptionExpanded){this.forceEncryptionExpanded=false;this.encryptionExpanded_=true;return}this.encryptionExpanded_=this.dataEncrypted_},onResetSyncClick_(event){if(event.target.tagName==="A"){event.stopPropagation()}},onSubmitExistingPassphraseTap_(e){if(e.type==="keypress"&&e.key!=="Enter"){return}this.browserProxy_.setDecryptionPassphrase(this.existingPassphrase_).then((sucessfullySet=>this.handlePageStatusChanged_(sucessfullySet?PageStatus.DONE:PageStatus.PASSPHRASE_FAILED)));this.existingPassphrase_=""},onPassphraseChanged_(e){this.handlePageStatusChanged_(e.detail.didChange?PageStatus.DONE:PageStatus.PASSPHRASE_FAILED)},handlePageStatusChanged_(pageStatus){const router=Router.getInstance();switch(pageStatus){case PageStatus.SPINNER:case PageStatus.CONFIGURE:this.pageStatus_=pageStatus;return;case PageStatus.DONE:if(router.getCurrentRoute()===getSyncRoutes().SYNC){router.navigateTo(getSyncRoutes().PEOPLE)}return;case PageStatus.PASSPHRASE_FAILED:if(this.pageStatus_===this.pages_.CONFIGURE&&this.syncPrefs&&this.syncPrefs.passphraseRequired){const passphraseInput=this.$$("#existingPassphraseInput");passphraseInput.invalid=true;passphraseInput.focusInput()}return}assertNotReached$1()},onLearnMoreTap_(event){if(event.target.tagName==="A"){event.stopPropagation()}},shouldShowSyncAccountControl_(){if(!loadTimeData$1.getBoolean("useBrowserSyncConsent")){return false}return this.syncStatus!==undefined&&!!this.syncStatus.syncSystemEnabled&&loadTimeData$1.getBoolean("signinAllowed")},shouldShowExistingPassphraseBelowAccount_(){return this.syncPrefs!==undefined&&!!this.syncPrefs.passphraseRequired},onSyncAdvancedClick_(){const router=Router.getInstance();router.navigateTo(getSyncRoutes().SYNC_ADVANCED)},onSyncSetupDone_(e){if(e.detail){this.didAbort_=false;chrome.metricsPrivate.recordUserAction("Signin_Signin_ConfirmAdvancedSyncSettings")}else{this.setupCancelConfirmed_=true;chrome.metricsPrivate.recordUserAction("Signin_Signin_CancelAdvancedSyncSettings")}const router=Router.getInstance();router.navigateTo(getSyncRoutes().BASIC)},focusPassphraseInput_(){const passphraseInput=this.$$("#existingPassphraseInput");const router=Router.getInstance();if(passphraseInput&&router.getCurrentRoute()===getSyncRoutes().SYNC){passphraseInput.focus()}}});// Copyright 2019 The Chromium Authors. All rights reserved.
let osPageVisibility;const isAccountManagerEnabled=loadTimeData$1.valueExists("isAccountManagerEnabled")&&loadTimeData$1.getBoolean("isAccountManagerEnabled");const isKerberosEnabled=loadTimeData$1.valueExists("isKerberosEnabled")&&loadTimeData$1.getBoolean("isKerberosEnabled");const isKerberosSettingsSectionEnabled=loadTimeData$1.valueExists("isKerberosSettingsSectionEnabled")&&loadTimeData$1.getBoolean("isKerberosSettingsSectionEnabled");if(loadTimeData$1.getBoolean("isGuest")){osPageVisibility={internet:true,bluetooth:true,multidevice:false,autofill:false,people:false,kerberos:isKerberosEnabled&&isKerberosSettingsSectionEnabled,onStartup:false,reset:false,appearance:{setWallpaper:false,setTheme:false,homeButton:false,bookmarksBar:false,pageZoom:false},device:true,advancedSettings:true,dateTime:true,privacy:{contentProtectionAttestation:true,searchPrediction:false,networkPrediction:false,wakeOnWifi:true},downloads:{googleDrive:false,smbShares:false},a11y:true,extensions:false,printing:true,languages:{manageInputMethods:true,inputMethodsList:true}}}else{osPageVisibility={internet:true,bluetooth:true,multidevice:true,autofill:true,people:{lockScreen:true,kerberosAccounts:isKerberosEnabled&&!isKerberosSettingsSectionEnabled,googleAccounts:isAccountManagerEnabled,manageUsers:true},kerberos:isKerberosEnabled&&isKerberosSettingsSectionEnabled,onStartup:true,reset:true,appearance:{setWallpaper:true,setTheme:true,homeButton:true,bookmarksBar:true,pageZoom:true},device:true,advancedSettings:true,dateTime:true,privacy:{contentProtectionAttestation:true,searchPrediction:true,networkPrediction:true,wakeOnWifi:true},downloads:{googleDrive:true,smbShares:true},a11y:true,extensions:true,printing:true,languages:{manageInputMethods:true,inputMethodsList:true}};const isFydeProfile=loadTimeData$1.getBoolean("isFydeProfile");if(isFydeProfile){osPageVisibility.downloads.googleDrive=false}}// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-parental-controls-page">cr-link-row {
  --cr-section-padding: 0;
}

.start-icon {
  width: var(--cr-link-row-icon-width, var(--cr-icon-size));
}

</style>
    <div id="parental-controls-item" class="settings-box two-line">
      <template is="dom-if" if="[[isChild_]]">
        <cr-link-row on-click="handleFamilyLinkButtonClick_" start-icon="[[getStartIcon_(isAccountManagementFlowsV2Enabled_)]]" label="Parental controls" sub-label="Open the Family Link app to see your supervision settings" external="">
          <template is="dom-if" if="[[!isAccountManagementFlowsV2Enabled_]]">
            <iron-icon icon="cr20:kite" aria-hidden="true"></iron-icon>
          </template>
        </cr-link-row>
      </template>
      <template is="dom-if" if="[[!isChild_]]">
        <template is="dom-if" if="[[isAccountManagementFlowsV2Enabled_]]">
          <iron-icon class="start-icon" icon="cr20:kite"></iron-icon>
        </template>
        <div class$="[[getLabelClassList_(
                        isAccountManagementFlowsV2Enabled_)]]">
          <div id="label" aria-hidden="true">
            Parental controls
          </div>
          <div class="secondary" id="sub-label" aria-hidden="true">
            [[getSetupLabelText_(online_)]]
          </div>
        </div>
        <div class="separator"></div>
        <cr-button id="setupButton" on-click="handleSetupButtonClick_" disabled$="[[!online_]]" aria-labelledby="label" aria-describedby="sub-label" aria-roledescription="Set up button">
          Set up
        </cr-button>
      </template>
    </div>
<!--_html_template_end_-->`,is:"settings-parental-controls-page",behaviors:[I18nBehavior],properties:{isChild_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isChild")}},online_:{type:Boolean,value(){return navigator.onLine}},isAccountManagementFlowsV2Enabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isAccountManagementFlowsV2Enabled")},readOnly:true}},created(){this.browserProxy_=ParentalControlsBrowserProxyImpl.getInstance()},ready(){window.addEventListener("offline",this.onOffline_.bind(this));window.addEventListener("online",this.onOnline_.bind(this))},getSetupButton(){return this.$$("#setupButton")},onOffline_(){this.online_=false},onOnline_(){this.online_=true},getSetupLabelText_(online){if(online){return this.i18n("parentalControlsPageSetUpLabel")}else{return this.i18n("parentalControlsPageConnectToInternetLabel")}},getLabelClassList_(){return this.isAccountManagementFlowsV2Enabled_?"middle settings-box-text":"start settings-box-text"},getStartIcon_(){return this.isAccountManagementFlowsV2Enabled_?"cr20:kite":""},handleSetupButtonClick_(event){event.stopPropagation();this.browserProxy_.showAddSupervisionDialog()},handleFamilyLinkButtonClick_(event){event.stopPropagation();this.browserProxy_.launchFamilyLinkSettings()}});const template$c=html`<iron-iconset-svg name="cr-fingerprint-icon" size="32">
  <svg>
    <defs>
      <g id="enrollment-done" viewBox="0 0 93 104">
        <path fill="#3E82F1" d="M75.346031,12.4513714 C65.426031,7.33637143 56.8487739,5.16637143 46.5674024,5.16637143 C36.3374024,5.16637143 26.6237739,7.595 17.7896596,12.4513714 C16.5487739,13.1227429 14.9987739,12.6577429 14.276031,11.4177429 C13.6046596,10.1777429 14.0696596,8.57637143 15.3096596,7.905 C24.9196596,2.68637143 35.4596596,0 46.5674024,0 C57.5732882,0 67.1824024,2.42774286 77.7232882,7.85274286 C79.0146596,8.525 79.4796596,10.075 78.8074024,11.315 C78.3424024,12.245 77.4646596,12.7613714 76.5346596,12.7613714 C76.121031,12.7613714 75.7074024,12.6577429 75.346031,12.4513714 Z">
        </path>
        <path fill="#32A753" d="M1.10147387,39.4213714 C-0.0871547017,38.595 -0.344897559,36.9927429 0.480588155,35.805 C5.59647387,28.5713714 12.1055882,22.8877429 19.8555882,18.91 C36.0801024,10.54 56.8492167,10.4877429 73.1242167,18.8577429 C80.8742167,22.8363714 87.3851024,28.4677429 92.4992167,35.65 C93.3264739,36.7863714 93.0678453,38.44 91.8801024,39.2663714 C90.6914739,40.0927429 89.0892167,39.835 88.2628453,38.6463714 C83.6128453,32.1363714 77.7228453,27.0213714 70.7478453,23.4563714 C55.9192167,15.8613714 36.9578453,15.8613714 22.1805882,23.5077429 C15.1551024,27.125 9.26421673,32.2913714 4.61421673,38.8013714 C4.20147387,39.525 3.42647387,39.8863714 2.59921673,39.8863714 C2.0828453,39.8863714 1.56647387,39.7313714 1.10147387,39.4213714 Z">
        </path>
        <path fill="#F9BB00" d="M33.0827567,101.473097 C28.5877567,96.9780971 26.1600139,94.0844686 22.6977567,87.8330971 C19.1327567,81.4780971 17.2727567,73.7280971 17.2727567,65.4094686 C17.2727567,50.0644686 30.3963853,37.5617257 46.5163853,37.5617257 C62.6354996,37.5617257 75.7600139,50.0644686 75.7600139,65.4094686 C75.7600139,66.8567257 74.6227567,67.9930971 73.1763853,67.9930971 C71.7300139,67.9930971 70.5927567,66.8567257 70.5927567,65.4094686 C70.5927567,52.9067257 59.7941282,42.7280971 46.5163853,42.7280971 C33.2377567,42.7280971 22.4391282,52.9067257 22.4391282,65.4094686 C22.4391282,72.8494686 24.0927567,79.7217257 27.2441282,85.3017257 C30.5513853,91.2430971 32.8241282,93.7744686 36.8027567,97.8044686 C37.7850139,98.8380971 37.7850139,100.439469 36.8027567,101.473097 C36.2350139,101.989469 35.5627567,102.248097 34.8913853,102.248097 C34.2191282,102.248097 33.5477567,101.989469 33.0827567,101.473097 Z">
        </path>
        <path fill="#E74133" d="M55.9193939,88.0911057 C48.221651,82.8733629 43.6230224,74.3997343 43.6230224,65.4097343 C43.6230224,63.9633629 44.7593939,62.8261057 46.2057653,62.8261057 C47.6530224,62.8261057 48.7893939,63.9633629 48.7893939,65.4097343 C48.7893939,72.6947343 52.5093939,79.5661057 58.8130224,83.8033629 C62.4807653,86.2833629 66.7693939,87.4711057 71.9357653,87.4711057 C73.1757653,87.4711057 75.2421367,87.3161057 77.3093939,86.9547343 C78.7052796,86.6961057 80.0480224,87.6261057 80.3057653,89.0733629 C80.5643939,90.4683629 79.6343939,91.8111057 78.1880224,92.0697343 C75.2421367,92.6383629 72.6593939,92.6897343 71.9357653,92.6897343 C65.7880224,92.6897343 60.3630224,91.1397343 55.9193939,88.0911057 Z">
        </path>
        <path fill="#3E82F1" d="M60.8797482,103.229557 C52.6647482,100.955929 47.2911196,97.9081857 41.6597482,92.3795571 C34.4261196,85.1981857 30.4483767,75.6395571 30.4483767,65.4095571 C30.4483767,57.0395571 37.5783767,50.2195571 46.3611196,50.2195571 C55.1447482,50.2195571 62.2738624,57.0395571 62.2738624,65.4095571 C62.2738624,70.9381857 67.0797482,75.4331857 73.0211196,75.4331857 C78.962491,75.4331857 83.767491,70.9381857 83.767491,65.4095571 C83.767491,45.9309286 66.9761196,30.1218143 46.3097482,30.1218143 C31.6361196,30.1218143 18.2033767,38.2845571 12.157491,50.9431857 C10.142491,55.1281857 9.10974816,60.0359286 9.10974816,65.4095571 C9.10974816,69.4395571 9.47111958,75.7945571 12.5711196,84.0609286 C13.087491,85.4045571 12.4161196,86.9031857 11.0733767,87.3681857 C9.72974816,87.8845571 8.23111958,87.1609286 7.76611958,85.8695571 C5.23474816,79.1018143 3.99474816,72.3845571 3.99474816,65.4095571 C3.99474816,59.2095571 5.18249101,53.5781857 7.50749101,48.6695571 C14.3797482,34.2545571 29.6211196,24.9031857 46.3097482,24.9031857 C69.817491,24.9031857 88.9347482,43.0381857 88.9347482,65.3581857 C88.9347482,73.7281857 81.8047482,80.5481857 73.0211196,80.5481857 C64.237491,80.5481857 57.107491,73.7281857 57.107491,65.3581857 C57.107491,59.8295571 52.3033767,55.3345571 46.3611196,55.3345571 C40.4197482,55.3345571 35.6147482,59.8295571 35.6147482,65.3581857 C35.6147482,74.1931857 39.0238624,82.4595571 45.2761196,88.6595571 C50.1847482,93.5168143 54.8861196,96.2031857 62.1711196,98.2181857 C63.5661196,98.5795571 64.3411196,100.026814 63.9797482,101.369557 C63.7211196,102.558186 62.6361196,103.333186 61.5511196,103.333186 C61.3447482,103.333186 61.0861196,103.280929 60.8797482,103.229557 Z">
        </path>
      </g>
    </defs>
  </svg>
</iron-iconset-svg>
`;document.head.appendChild(template$c.content);// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const FINGEPRINT_TICK_DARK_URL="chrome://theme/IDR_FINGERPRINT_COMPLETE_TICK_DARK";const FINGEPRINT_TICK_LIGHT_URL="chrome://theme/IDR_FINGERPRINT_COMPLETE_TICK";const ANIMATE_TICKS_MS=20;const ANIMATE_DURATION_MS=200;const DEFAULT_CANVAS_CIRCLE_RADIUS=114;const ICON_HEIGHT=118;const ICON_WIDTH=106;const CHECK_MARK_SIZE=53;const FINGERPRINT_SCAN_SUCCESS_MS=500;const CANVAS_CIRCLE_STROKE_WIDTH=4;const CANVAS_CIRCLE_BACKGROUND_COLOR="rgba(218, 220, 224, 1.0)";const CANVAS_CIRCLE_PROGRESS_COLOR="rgba(66, 133, 224, 1.0)";Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="cr-fingerprint-progress-arc">:host {
  user-select: none;
}

.translucent {
  opacity: 0.3;
}

#canvasDiv {
  height: 240px;
        overflow: hidden;
        position: relative;
        width:  460px;
}

cr-lottie {
  display: inline-block;
        position: absolute;
}

#enrollmentDone {
  position: absolute;
}

</style>

    <div id="canvasDiv">
      <canvas id="canvas" height="240" width="460"></canvas>
      <cr-lottie id="scanningAnimation" aria-hidden="true" autoplay="[[autoplay]]">
      </cr-lottie>
      <iron-icon id="enrollmentDone" icon="cr-fingerprint-icon:enrollment-done" hidden="">
      </iron-icon>
    </div>
<!--_html_template_end_-->`,is:"cr-fingerprint-progress-arc",properties:{circleRadius:{type:Number,value:DEFAULT_CANVAS_CIRCLE_RADIUS},autoplay:{type:Boolean,value:false},scale_:{type:Number,value:1},isComplete_:Boolean},canvasCircleStrokeWidth:CANVAS_CIRCLE_STROKE_WIDTH,canvasCircleBackgroundColor:CANVAS_CIRCLE_BACKGROUND_COLOR,canvasCircleProgressColor:CANVAS_CIRCLE_PROGRESS_COLOR,progressAnimationIntervalId_:undefined,updateTimerId_:undefined,darkModeQuery_:undefined,darkModeListener_:undefined,attached(){this.scale_=this.circleRadius/DEFAULT_CANVAS_CIRCLE_RADIUS;this.updateImages_();this.darkModeListener_=this.updateAnimationAsset_.bind(this);this.darkModeQuery_=window.matchMedia("(prefers-color-scheme: dark)");this.darkModeQuery_.addListener(this.darkModeListener_);this.updateAnimationAsset_()},detached(){this.darkModeQuery_.removeListener(this.darkModeListener_);this.darkModeListener_=undefined},drawArc(startAngle,endAngle,color){const c=this.$.canvas;const ctx=c.getContext("2d");ctx.beginPath();ctx.arc(c.width/2,c.height/2,this.circleRadius,startAngle,endAngle);ctx.lineWidth=this.canvasCircleStrokeWidth;ctx.strokeStyle=color;ctx.stroke()},drawBackgroundCircle(){this.drawArc(0,2*Math.PI,this.canvasCircleBackgroundColor)},setProgress(prevPercentComplete,currPercentComplete,isComplete){if(this.isComplete_){return}this.isComplete_=isComplete;this.cancelAnimations_();const slice=2*Math.PI/100;const startAngle=prevPercentComplete*slice;const endAngle=isComplete?2*Math.PI:Math.min(2*Math.PI,currPercentComplete*slice);let currentAngle=startAngle;const step=(endAngle-startAngle)/(ANIMATE_DURATION_MS/ANIMATE_TICKS_MS);const doAnimate=()=>{if(currentAngle>=endAngle){if(this.progressAnimationIntervalId_){clearInterval(this.progressAnimationIntervalId_);this.progressAnimationIntervalId_=undefined}currentAngle=endAngle}this.clearCanvas_();this.drawArc(start,start+currentAngle,this.canvasCircleProgressColor);this.drawArc(start+currentAngle,currentAngle<=0?7*Math.PI/2:start,this.canvasCircleBackgroundColor);currentAngle+=step};this.progressAnimationIntervalId_=setInterval(doAnimate,ANIMATE_TICKS_MS);const start=3*Math.PI/2;if(isComplete){this.animateScanComplete_()}else{this.animateScanProgress_()}},setPlay(shouldPlay){const scanningAnimation=this.$.scanningAnimation;scanningAnimation.setPlay(shouldPlay)},updateAnimationAsset_(){const scanningAnimation=this.$.scanningAnimation;if(this.isComplete_){scanningAnimation.animationUrl=this.darkModeQuery_.matches?FINGEPRINT_TICK_DARK_URL:FINGEPRINT_TICK_LIGHT_URL;return}scanningAnimation.animationUrl="chrome://theme/IDR_FINGERPRINT_ICON_ANIMATION"},cancelAnimations_(){if(this.progressAnimationIntervalId_){clearInterval(this.progressAnimationIntervalId_);this.progressAnimationIntervalId_=undefined}if(this.updateTimerId_){window.clearTimeout(this.updateTimerId_);this.updateTimerId_=undefined}},animateScanComplete_(){const scanningAnimation=this.$.scanningAnimation;scanningAnimation.singleLoop=true;scanningAnimation.classList.remove("translucent");this.updateAnimationAsset_();this.resizeCheckMark_(scanningAnimation);this.$.enrollmentDone.hidden=false},animateScanProgress_(){this.$.enrollmentDone.hidden=false;this.updateTimerId_=window.setTimeout((()=>{this.$.enrollmentDone.hidden=true}),FINGERPRINT_SCAN_SUCCESS_MS)},clearCanvas_(){const c=this.$.canvas;const ctx=c.getContext("2d");ctx.clearRect(0,0,c.width,c.height)},reset(){this.cancelAnimations_();this.clearCanvas_();this.isComplete_=false;this.drawBackgroundCircle();this.$.enrollmentDone.hidden=true;const scanningAnimation=this.$.scanningAnimation;scanningAnimation.singleLoop=false;scanningAnimation.classList.add("translucent");this.updateAnimationAsset_();this.resizeAndCenterIcon_(scanningAnimation);scanningAnimation.hidden=false},updateImages_(){this.resizeAndCenterIcon_(this.$.scanningAnimation);this.resizeAndCenterIcon_(this.$.enrollmentDone)},resizeAndCenterIcon_(target){target.style.width=ICON_WIDTH*this.scale_+"px";target.style.height=ICON_HEIGHT*this.scale_+"px";const left=this.$.canvas.width/2-ICON_WIDTH*this.scale_/2;const top=this.$.canvas.height/2-ICON_HEIGHT*this.scale_/2;target.style.left=left+"px";target.style.top=top+"px"},resizeCheckMark_(target){target.style.width=CHECK_MARK_SIZE*this.scale_+"px";target.style.height=CHECK_MARK_SIZE*this.scale_+"px";const top=this.$.canvas.height/2+this.circleRadius-CHECK_MARK_SIZE*this.scale_;const left=this.$.canvas.width/2+this.circleRadius-CHECK_MARK_SIZE*this.scale_;target.style.left=left+"px";target.style.top=top+"px"},isComplete(){return this.isComplete_}});// Copyright 2017 The Chromium Authors. All rights reserved.
const FingerprintSetupStep={LOCATE_SCANNER:1,MOVE_FINGER:2,READY:3};const FingerprintLocation={TABLET_POWER_BUTTON:0,KEYBOARD_BOTTOM_LEFT:1,KEYBOARD_BOTTOM_RIGHT:2,KEYBOARD_TOP_RIGHT:3};const SHOW_TAP_SENSOR_MESSAGE_DELAY_MS=2e3;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-setup-fingerprint-dialog">#dialog::part(dialog) {
  min-width: 500px;
        width: 500px;
}

#scannerLocation {
  display: block;
        height: 205px;
        margin: auto;
        padding: 10px 0;
}

#scannerLocationLottie {
  height: 220px;
        padding: 10px 0;
}

#messageDiv {
  height: 20px;
}

#messageDiv[invisible] {
  visibility: hidden;
}

#closeButton {
  margin-inline-start: 5px;
}

</style>
    <cr-dialog id="dialog" on-close="close" close-text="Close">
      <div slot="title">Set up your fingerprint</div>
      <div slot="body">
        <div id="messageDiv" invisible$="[[!getInstructionMessage_(step_, problemMessage_)]]" aria-live="polite">
          <span>[[getInstructionMessage_(step_, problemMessage_)]]</span>
        </div>
        <template is="dom-if" if="[[shouldUseLottieAnimation_]]">
          <div id="scannerLocationLottie" hidden="[[!showScannerLocation_(step_)]]" aria-live="polite" aria-label="Touch the fingerprint sensor with your finger">
            <cr-lottie animation-url="fingerprint_scanner_animation.json" autoplay="">
            </cr-lottie>
          </div>
        </template>
        <template is="dom-if" if="[[!shouldUseLottieAnimation_]]">
          <img id="scannerLocation" hidden="[[!showScannerLocation_(step_)]]" aria-label="Touch the fingerprint sensor with your finger" aria-live="polite" src="fingerprint_scanner_illustration.svg">
        </template>
        <cr-fingerprint-progress-arc id="arc" circle-radius="100" autoplay="" hidden="[[!showArc_(step_)]]">
        </cr-fingerprint-progress-arc>
      </div>
      <div slot="button-container">
        <cr-button id="addAnotherButton" on-click="onAddAnotherFingerprint_" hidden$="[[hideAddAnother_(step_, allowAddAnotherFinger)]]">
          Add another
        </cr-button>
        <cr-button id="closeButton" class$="[[getCloseButtonClass_(step_)]]" on-click="onClose_">
          [[getCloseButtonText_(step_)]]
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"settings-setup-fingerprint-dialog",behaviors:[I18nBehavior,WebUIListenerBehavior],properties:{allowAddAnotherFinger:{type:Boolean,value:true},authToken:{type:String,value:""},problemMessage_:{type:String,value:""},step_:{type:Number,value:FingerprintSetupStep.LOCATE_SCANNER},percentComplete_:{type:Number,value:0,observer:"onProgressChanged_"},shouldUseLottieAnimation_:{type:Boolean,value(){return loadTimeData$1.getBoolean("useLottieAnimationForFingerprint")},readOnly:true}},tapSensorMessageTimeoutId_:0,browserProxy_:null,attached(){this.addWebUIListener("on-fingerprint-scan-received",this.onScanReceived_.bind(this));this.browserProxy_=FingerprintBrowserProxyImpl.getInstance();this.$.arc.reset();this.browserProxy_.startEnroll(this.authToken);this.$.dialog.showModal()},close(){if(this.$.dialog.open){this.$.dialog.close()}if(this.step_!==FingerprintSetupStep.READY){this.browserProxy_.cancelCurrentEnroll()}this.reset_()},clearSensorMessageTimeout_(){if(this.tapSensorMessageTimeoutId_!==0){clearTimeout(this.tapSensorMessageTimeoutId_);this.tapSensorMessageTimeoutId_=0}},reset_(){this.step_=FingerprintSetupStep.LOCATE_SCANNER;this.percentComplete_=0;this.clearSensorMessageTimeout_()},onClose_(){if(this.$.dialog.open){this.$.dialog.close()}},onScanReceived_(scan){switch(this.step_){case FingerprintSetupStep.LOCATE_SCANNER:this.$.arc.reset();this.step_=FingerprintSetupStep.MOVE_FINGER;this.percentComplete_=scan.percentComplete;this.setProblem_(scan.result);break;case FingerprintSetupStep.MOVE_FINGER:if(scan.isComplete){this.problemMessage_="";this.step_=FingerprintSetupStep.READY;this.clearSensorMessageTimeout_();this.fire("add-fingerprint")}else{this.setProblem_(scan.result)}this.percentComplete_=scan.percentComplete;break;case FingerprintSetupStep.READY:break;default:assertNotReached$1();break}},getInstructionMessage_(step,problemMessage){switch(step){case FingerprintSetupStep.LOCATE_SCANNER:return this.i18n("configureFingerprintInstructionLocateScannerStep");case FingerprintSetupStep.MOVE_FINGER:return problemMessage;case FingerprintSetupStep.READY:return this.i18n("configureFingerprintInstructionReadyStep")}assertNotReached$1()},setProblem_(scanResult){this.clearSensorMessageTimeout_();switch(scanResult){case FingerprintResultType.SUCCESS:this.problemMessage_="";this.tapSensorMessageTimeoutId_=setTimeout((()=>{this.problemMessage_=this.i18n("configureFingerprintLiftFinger")}),SHOW_TAP_SENSOR_MESSAGE_DELAY_MS);break;case FingerprintResultType.PARTIAL:case FingerprintResultType.INSUFFICIENT:case FingerprintResultType.SENSOR_DIRTY:case FingerprintResultType.TOO_SLOW:case FingerprintResultType.TOO_FAST:this.problemMessage_=this.i18n("configureFingerprintTryAgain");break;case FingerprintResultType.IMMOBILE:this.problemMessage_=this.i18n("configureFingerprintImmobile");break;default:assertNotReached$1();break}},getCloseButtonText_(step){if(step===FingerprintSetupStep.READY){return this.i18n("done")}return this.i18n("cancel")},getCloseButtonClass_(step){if(step===FingerprintSetupStep.READY){return"action-button"}return"cancel-button"},hideAddAnother_(step,allowAddAnotherFinger){return step!==FingerprintSetupStep.READY||!allowAddAnotherFinger},onAddAnotherFingerprint_(){this.reset_();this.$.arc.reset();this.step_=FingerprintSetupStep.MOVE_FINGER;this.browserProxy_.startEnroll(this.authToken);recordSettingChange()},showScannerLocation_(){return this.step_===FingerprintSetupStep.LOCATE_SCANNER},showArc_(){return this.step_===FingerprintSetupStep.MOVE_FINGER||this.step_===FingerprintSetupStep.READY},onProgressChanged_(newValue,oldValue){if(newValue===0){this.$.arc.reset();return}this.$.arc.setProgress(oldValue,newValue,newValue===100)}});// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const FLASH_DURATION_MS=500;Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="settings-fingerprint-list">.add-link {
  background-color: transparent;
        color: var(--google-blue-500);
}

.add-link[disabled] {
  color: var(--google-grey-500);
}

.list-item {
  background-color: white;
}

cr-input {
  --cr-input-error-display: none;
}

paper-ripple {
  color: var(--google-grey-700);
}

#fingerprintTooltip {
  --paper-tooltip-animation_-_box-shadow:  var(--cr-card-shadow);

        --paper-tooltip-background: var(--cr-card-background-color);
        --paper-tooltip-border-radius: 8px;
        --paper-tooltip-delay-out: 500ms;
        --paper-tooltip-padding: 12px 16px;
}

#fingerprintNotice {
  --cr-settings-localized-link-display: block;

        color: var(--google-grey-900);
        font-size: 12px;
        line-height: 18px;
}

#fingerprintWarning {
  font-style: italic;
}

</style>

    <h2 class="settings-box">Saved fingerprints
      <cr-tooltip-icon id="fingerprintTooltip" tooltip-position="right" icon-class="cr:help-outline" icon-aria-label="Learn more">
        <settings-localized-link id="fingerprintNotice" localized-string="Your fingerprint data is stored securely and never leaves your FydeOS device. &lt;a&gt;Learn more&lt;/a&gt;" link-url="https://support.google.com/chromebook?p=chromebook_fingerprint">
          <!-- paper-tooltip probes for children textContent to decide whether
            to show tooltip or not-->
          _
        </settings-localized-link>
      </cr-tooltip-icon>
    </h2>
    <div class="list-frame layout vertical">
      <iron-list id="fingerprintsList" items="[[fingerprints_]]">
        <template>
          <div class="list-item">
            <paper-ripple noink=""></paper-ripple>
            <cr-input value="{{item}}" on-change="onFingerprintLabelChanged_">
            </cr-input>
            <cr-icon-button class="icon-delete-gray" on-click="onFingerprintDeleteTapped_" aria-label$="[[getButtonAriaLabel_(item)]]" deep-link-focus-id$="[[Setting.kRemoveFingerprint]]
                    [[Setting.kRemoveFingerprintV2]]">
            </cr-icon-button>
          </div>
        </template>
      </iron-list>
      <div class="continuation">
        <cr-button id="addFingerprint" class="add-link action-button" on-click="openAddFingerprintDialog_" deep-link-focus-id$="[[Setting.kAddFingerprint]]
                [[Setting.kAddFingerprintV2]]">
          Add Fingerprint
        </cr-button>
      </div>
    </div>
    <div id="fingerprintWarning" class="settings-box continuation">
      <iron-icon icon="cr:info-outline"></iron-icon>
      Note: Your fingerprint may be less secure than a strong password or PIN.
    </div>

    <template is="dom-if" if="[[showSetupFingerprintDialog_]]" restamp="">
      <settings-setup-fingerprint-dialog auth-token="[[authToken]]" on-add-fingerprint="updateFingerprintsList_" on-close="onSetupFingerprintDialogClose_" allow-add-another-finger="[[allowAddAnotherFinger_]]">
      </settings-setup-fingerprint-dialog>
    </template>
<!--_html_template_end_-->`,is:"settings-fingerprint-list",behaviors:[DeepLinkingBehavior,I18nBehavior,WebUIListenerBehavior,RouteObserverBehavior],properties:{authToken:{type:String,value:"",observer:"onAuthTokenChanged_"},fingerprints_:{type:Array,value(){return[]}},showSetupFingerprintDialog_:Boolean,allowAddAnotherFinger_:{type:Boolean,value:true},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kAddFingerprint,chromeos.settings.mojom.Setting.kRemoveFingerprint,chromeos.settings.mojom.Setting.kAddFingerprintV2,chromeos.settings.mojom.Setting.kRemoveFingerprintV2])}},browserProxy_:null,attached(){this.addWebUIListener("on-fingerprint-attempt-received",this.onAttemptReceived_.bind(this));this.addWebUIListener("on-screen-locked",this.onScreenLocked_.bind(this));this.browserProxy_=FingerprintBrowserProxyImpl.getInstance();this.browserProxy_.startAuthentication();this.updateFingerprintsList_()},detached(){this.browserProxy_.endCurrentAuthentication()},requestPasswordIfApplicable_(){const currentRoute=Router.getInstance().getCurrentRoute();if(currentRoute===routes.FINGERPRINT&&!this.authToken){this.fire("password-requested");return true}return false},currentRouteChanged(newRoute,oldRoute){if(newRoute!==routes.FINGERPRINT){if(this.browserProxy_){this.browserProxy_.endCurrentAuthentication()}this.showSetupFingerprintDialog_=false;return}if(oldRoute===routes.LOCK_SCREEN){this.browserProxy_.startAuthentication()}if(this.requestPasswordIfApplicable_()){this.showSetupFingerprintDialog_=false}this.attemptDeepLink()},onAttemptReceived_(fingerprintAttempt){const listItems=this.$.fingerprintsList.querySelectorAll(".list-item");const filteredIndexes=fingerprintAttempt.indexes.filter((function(index){return index>=0&&index<listItems.length}));filteredIndexes.forEach((function(index){const listItem=listItems[index];const ripple=listItem.querySelector("paper-ripple");if(ripple){ripple.simulatedRipple()}listItem.animate([{backgroundColor:["var(--google-grey-300)"]},{backgroundColor:["white"]}],FLASH_DURATION_MS)}))},updateFingerprintsList_(){this.browserProxy_.getFingerprintsList().then(this.onFingerprintsChanged_.bind(this))},onFingerprintsChanged_(fingerprintInfo){this.fingerprints_=fingerprintInfo.fingerprintsList.slice();this.$$(".action-button").disabled=fingerprintInfo.isMaxed;this.allowAddAnotherFinger_=!fingerprintInfo.isMaxed},onFingerprintDeleteTapped_(e){this.browserProxy_.removeEnrollment(e.model.index).then((success=>{if(success){recordSettingChange();this.updateFingerprintsList_()}}))},onFingerprintLabelChanged_(e){this.browserProxy_.changeEnrollmentLabel(e.model.index,e.model.item).then((success=>{if(success){this.updateFingerprintsList_()}}))},openAddFingerprintDialog_(){this.showSetupFingerprintDialog_=true},onSetupFingerprintDialogClose_(){this.showSetupFingerprintDialog_=false;focusWithoutInk(assert(this.$$("#addFingerprint")));this.browserProxy_.startAuthentication()},onScreenLocked_(screenIsLocked){if(!screenIsLocked&&Router.getInstance().getCurrentRoute()===routes.FINGERPRINT){this.onSetupFingerprintDialogClose_()}},onAuthTokenChanged_(){if(this.requestPasswordIfApplicable_()){this.showSetupFingerprintDialog_=false;return}if(Router.getInstance().getCurrentRoute()===routes.FINGERPRINT){this.attemptDeepLink()}},getButtonAriaLabel_(item){return this.i18n("lockScreenDeleteFingerprintLabel",item)}});// Copyright 2019 The Chromium Authors. All rights reserved.
const SyncPrefsIndividualDataTypes$1=["osAppsSynced","osPreferencesSynced","osWifiConfigurationsSynced","wallpaperEnabled"];Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="os-sync-controls">:host {
  --shown-avatar-size: 40px;
        --sync-icon-border-size: 2px;
        --sync-icon-size: 16px;
}

#avatarContainer {
  height: var(--shown-avatar-size);
        position: relative;
}

#avatarIcon {
  border-radius: 20px;
        flex-shrink: 0;
        height: var(--shown-avatar-size);
        width: var(--shown-avatar-size);
}

#syncIconContainer {
  align-items: center;
        background: var(--google-green-700);
        border: var(--sync-icon-border-size) solid white;
        border-radius: 50%;
        display: flex;
        height: var(--sync-icon-size);
        position: absolute;
        right: -6px;
        top: calc(var(--shown-avatar-size) - var(--sync-icon-size) -
            var(--sync-icon-border-size));
        width: var(--sync-icon-size);
}

:host-context([dir='rtl']) #syncIconContainer {
  left: -6px;
        right: initial;
}

#syncIconContainer.sync-problem {
  background: var(--settings-error-color);
}

#syncIconContainer.sync-paused {
  background: var(--google-blue-500);
}

#syncIconContainer.sync-disabled {
  background: var(--google-grey-400);
}

#syncIconContainer iron-icon {
  fill: white;
        height: 12px;
        margin: auto;
        width: 12px;
}

.settings-box {
  border-top: none;
}

.flex {
  display: flex;
        flex: 1;
        flex-direction: column;
}

.list-item {
  display: flex;
}

.list-item > div {
  flex: 1;
}

div[label-disabled] {
  opacity: var(--cr-disabled-opacity);
}

</style>
    <div class="settings-box first two-line">
      <div id="avatarContainer">
        <img id="avatarIcon" alt="" src="[[profileIconUrl]]">
        <div id="syncIconContainer" hidden="[[!osSyncFeatureEnabled]]" class$="[[getSyncIconStyle_(
                syncStatus.hasError, syncStatus.statusAction,
                syncStatus.disabled)]]">
          <iron-icon icon$="[[getSyncIcon_(
              syncStatus.hasError, syncStatus.statusAction,
              syncStatus.disabled)]]"></iron-icon>
        </div>
      </div>
      <div class="middle two-line no-min-width">
        <div class="flex text-elide settings-box-text">
          <span id="accountTitle" aria-hidden="true">
            [[getAccountTitle_(profileName, syncStatus.hasError)]]
          </span>
          <div id="accountSubtitle" class="secondary" aria-hidden="true">
            [[getAccountSubtitle_(profileEmail, syncStatus.hasError,
                osSyncFeatureEnabled)]]
          </div>
        </div>
      </div>

      <cr-button id="syncOnOffButton" class="action-button" on-click="onSyncOnOffButtonClick_" aria-labelledby="syncOnOffButton accountTitle accountSubtitle" aria-describedby="featureLabel" deep-link-focus-id$="[[Setting.kSplitSyncOnOff]]">
        [[getSyncOnOffButtonLabel_(osSyncFeatureEnabled)]]
      </cr-button>
    </div>

    <div id="featureLabel" class="settings-box">
      <settings-localized-link class="secondary" localized-string="Your apps and settings will sync across all Chrome OS devices where you are signed in with your Google account. For browser sync options, go to &lt;a&gt;Chrome settings&lt;/a&gt;." link-url="chrome://settings/syncSetup">
      </settings-localized-link>
    </div>

    <div class="settings-box">
      <div id="syncEverythingCheckboxLabel" class="start" label-disabled$="[[!osSyncFeatureEnabled]]">
        Sync everything
      </div>
      <cr-toggle id="syncAllOsTypesControl" checked="{{osSyncPrefs.syncAllOsTypes}}" on-change="onSyncAllOsTypesChanged_" disabled="[[!osSyncFeatureEnabled]]" aria-labelledby="syncEverythingCheckboxLabel">
      </cr-toggle>
    </div>

    <div class="list-frame" id="sync-data-types">
      <div class="list-item" hidden="[[!osSyncPrefs.osAppsRegistered]]">
        <div id="osAppsCheckboxLabel" label-disabled$="[[areDataTypeTogglesDisabled_]]">
          Apps
        </div>
        <cr-toggle id="osAppsControl" checked="{{osSyncPrefs.osAppsSynced}}" on-change="onAppsSyncedChanged_" disabled="[[areDataTypeTogglesDisabled_]]" aria-labelledby="osAppsCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!osSyncPrefs.osPreferencesRegistered]]">
        <div id="osSettingsCheckboxLabel" label-disabled$="[[areDataTypeTogglesDisabled_]]">
          Settings
        </div>
        <cr-toggle id="osPreferencesControl" checked="{{osSyncPrefs.osPreferencesSynced}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[areDataTypeTogglesDisabled_]]" aria-labelledby="osSettingsCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!osSyncPrefs.osWifiConfigurationsRegistered]]">
        <div id="osWifiConfigurationsCheckboxLabel" label-disabled$="[[areDataTypeTogglesDisabled_]]">
          Wi-Fi networks
        </div>
        <cr-toggle checked="{{osSyncPrefs.osWifiConfigurationsSynced}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[areDataTypeTogglesDisabled_]]" aria-labelledby="osWifiConfigurationsCheckboxLabel">
        </cr-toggle>
      </div>

      <div class="list-item" hidden="[[!osSyncPrefs.osAppsRegistered]]">
        <!-- Wallpaper sync is a special case; its implementation relies upon
             the chrome.storage.sync API, which is controlled by the apps
             toggle. Thus, the wallpaper label and toggle are only shown when
             apps are registered and are disabled if apps syncing is off.
             TODO(https://crbug.com/967987): Break this dependency. -->
        <div id="wallpaperCheckboxLabel" label-disabled$="[[shouldWallpaperSyncSectionBeDisabled_(
                areDataTypeTogglesDisabled_, osSyncPrefs.osAppsSynced)]]">
          Wallpaper
        </div>
        <cr-toggle checked="{{osSyncPrefs.wallpaperEnabled}}" on-change="onSingleSyncDataTypeChanged_" disabled="[[shouldWallpaperSyncSectionBeDisabled_(
                areDataTypeTogglesDisabled_, osSyncPrefs.osAppsSynced)]]" aria-labelledby="wallpaperCheckboxLabel">
        </cr-toggle>
      </div>

    </div>
<!--_html_template_end_-->`,is:"os-sync-controls",behaviors:[DeepLinkingBehavior,I18nBehavior,RouteObserverBehavior,WebUIListenerBehavior],properties:{hidden:{type:Boolean,value:true,computed:"syncControlsHidden_(osSyncPrefs)",reflectToAttribute:true},syncStatus:Object,profileIconUrl:String,profileName:String,profileEmail:String,osSyncFeatureEnabled:Boolean,osSyncPrefs:Object,areDataTypeTogglesDisabled_:{type:Boolean,value:true,computed:`computeDataTypeTogglesDisabled_(osSyncFeatureEnabled,\n          osSyncPrefs.syncAllOsTypes)`},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kSplitSyncOnOff])}},browserProxy_:null,cachedOsSyncPrefs_:null,created(){this.browserProxy_=OsSyncBrowserProxyImpl.getInstance()},attached(){this.addWebUIListener("os-sync-prefs-changed",this.handleOsSyncPrefsChanged_.bind(this))},currentRouteChanged(newRoute,oldRoute){if(newRoute===routes.OS_SYNC){this.browserProxy_.didNavigateToOsSyncPage();this.attemptDeepLink()}if(oldRoute===routes.OS_SYNC){this.browserProxy_.didNavigateAwayFromOsSyncPage()}},getAccountTitle_(){if(!this.syncStatus){return""}return this.syncStatus.hasError?this.i18n("syncNotWorking"):this.profileName},getAccountSubtitle_(){if(!this.syncStatus){return""}return this.osSyncFeatureEnabled&&!this.syncStatus.hasError?this.i18n("syncingTo",this.profileEmail):this.profileEmail},getSyncOnOffButtonLabel_(){if(!this.osSyncFeatureEnabled){return this.i18n("osSyncTurnOn")}return this.i18n("osSyncTurnOff")},getSyncIconStyle_(){if(!this.syncStatus){return"sync"}if(this.syncStatus.disabled){return"sync-disabled"}if(!this.syncStatus.hasError){return"sync"}if(this.syncStatus.hasUnrecoverableError){return"sync-problem"}if(this.syncStatus.statusAction===StatusAction.REAUTHENTICATE){return"sync-paused"}return"sync-problem"},getSyncIcon_(){switch(this.getSyncIconStyle_()){case"sync-problem":return"settings:sync-problem";case"sync-paused":return"settings:sync-disabled";default:return"cr:sync"}},handleOsSyncPrefsChanged_(osSyncFeatureEnabled,osSyncPrefs){this.osSyncFeatureEnabled=osSyncFeatureEnabled;this.osSyncPrefs=osSyncPrefs;if(!this.osSyncFeatureEnabled){this.set("osSyncPrefs.syncAllOsTypes",false);for(const dataType of SyncPrefsIndividualDataTypes$1){this.set(["osSyncPrefs",dataType],false)}}if(!this.osSyncPrefs.osAppsRegistered||!this.osSyncPrefs.osAppsSynced){this.set("osSyncPrefs.wallpaperEnabled",false)}},onSyncOnOffButtonClick_(){this.browserProxy_.setOsSyncFeatureEnabled(!this.osSyncFeatureEnabled);recordSettingChange()},onSyncAllOsTypesChanged_(event){if(event.target.checked){this.set("osSyncPrefs.syncAllOsTypes",true);this.cachedOsSyncPrefs_={};for(const dataType of SyncPrefsIndividualDataTypes$1){this.cachedOsSyncPrefs_[dataType]=this.osSyncPrefs[dataType];this.set(["osSyncPrefs",dataType],true)}}else if(this.cachedOsSyncPrefs_){for(const dataType of SyncPrefsIndividualDataTypes$1){this.set(["osSyncPrefs",dataType],this.cachedOsSyncPrefs_[dataType])}}this.sendOsSyncDatatypes_()},onSingleSyncDataTypeChanged_(){this.sendOsSyncDatatypes_()},onAppsSyncedChanged_(){this.set("osSyncPrefs.wallpaperEnabled",this.osSyncPrefs.osAppsSynced);this.onSingleSyncDataTypeChanged_()},sendOsSyncDatatypes_(){assert(this.osSyncPrefs);this.browserProxy_.setOsSyncDatatypes(this.osSyncPrefs)},computeDataTypeTogglesDisabled_(){return!this.osSyncFeatureEnabled||this.osSyncPrefs!==undefined&&this.osSyncPrefs.syncAllOsTypes},syncControlsHidden_(){return!this.osSyncPrefs},shouldWallpaperSyncSectionBeDisabled_(){return this.areDataTypeTogglesDisabled_||!this.osSyncPrefs||!this.osSyncPrefs.osAppsSynced}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared iron-flex" scope="os-settings-people-page">:host {
  --icon-width: 40px;
}

.sync-row {
  align-items: center;
        flex: auto;
}

#profile-icon {
  background: center / cover no-repeat;
        border-radius: 20px;
        flex-shrink: 0;
        height: 40px;
        width: 40px;
}

#sync-setup {
  --cr-secondary-text-color: var(--cros-error-color);
}

cr-link-row {
  --cr-link-row-icon-width: var(--icon-width);
        border-top: var(--cr-separator-line);
}

settings-parental-controls-page {
  --cr-link-row-icon-width: var(--icon-width);
}

.icon-container {
  display: flex;
        flex-shrink: 0;
        justify-content: center;
        width: 40px;
}

</style>
    <settings-animated-pages id="pages" section="osPeople" focus-config="[[focusConfig_]]">
      <div route-path="default">
        <div class="settings-box first two-line">
          <template is="dom-if" if="[[syncStatus]]">
            <!-- Does not use <cr-link-row> due to custom aria label. -->
            <!-- FYDEOS BEGIN -->
            <div id="profile-icon" style="background-image: [[getIconImageSet_(profileIconUrl_)]]" on-click="onAccountManagerTap_" actionable$="[[isProfileActionable_]]">
            <!-- FYDEOS END -->
            </div>
            <!-- FYDEOS BEGIN -->
            <div class="middle two-line no-min-width" id="profile-row" on-click="onAccountManagerTap_" actionable$="[[isProfileActionable_]]">
            <!-- FYDEOS END -->
              <div class="flex text-elide settings-box-text">
                <span id="profile-name" aria-hidden="true">
                  [[getProfileName_(profileName_)]]
                </span>
                <div id="profile-label" class="secondary" aria-hidden="true">
                  [[profileLabel_]]
                </div>
              </div>
              <!-- FYDEOS BEGIN -->
              <cr-icon-button class$="[[profileActionButtonIcon_]]" hidden="[[!isProfileActionable_]]" id="account-manager-subpage-trigger" aria-label="FydeOS Accounts" aria-describedby="profile-name profile-label">
              <!-- FYDEOS END -->
              </cr-icon-button>
            </div>
          </template>
        </div>

        <cr-link-row id="sync-setup" start-icon="[[getSyncSetupIcon_(
                            isAccountManagementFlowsV2Enabled_)]]" label="[[getSyncRowLabel_()]]" sub-label="[[getSyncAndGoogleServicesSubtext_(syncStatus)]]" hidden="[[isFydeLocalAccount_]]" on-click="onSyncTap_" role-description="Subpage button">
        </cr-link-row>

        <template is="dom-if" if="[[!isAccountManagementFlowsV2Enabled_]]">
          <cr-link-row id="lock-screen-subpage-trigger" class="hr" on-click="onConfigureLockTap_" label="[[selectLockScreenTitleString(hasPinLogin)]]" sub-label="[[getPasswordState_(hasPin,
                  prefs.settings.enable_screen_lock.value)]]" role-description="Subpage button">
          </cr-link-row>
        </template>

        <template is="dom-if" if="[[showParentalControls_]]">
          <settings-parental-controls-page>
          </settings-parental-controls-page>
        </template>

        <template is="dom-if" if="[[!isAccountManagementFlowsV2Enabled_]]">
          <cr-link-row id="manage-other-people-subpage-trigger" label="Manage other people" on-click="onManageOtherPeople_" role-description="Subpage button">
          </cr-link-row>
        </template>

        <template is="dom-if" if="[[pageVisibility.people.kerberosAccounts]]">
          <cr-link-row id="kerberos-accounts-subpage-trigger" class="hr" on-click="onKerberosAccountsTap_" label="Kerberos tickets" role-description="Subpage button">
            <cr-policy-indicator indicator-type="userPolicy">
            </cr-policy-indicator>
          </cr-link-row>
        </template>

      </div>

      <template is="dom-if" route-path="/syncSetup">
        <settings-subpage associated-control="[[$$('#sync-setup')]]" page-title="Sync and other services" learn-more-url="https://support.google.com/chrome?p=syncgoogleservices">
          <settings-sync-page sync-status="[[syncStatus]]" prefs="{{prefs}}" page-visibility="[[pageVisibility.privacy]]" focus-config="[[focusConfig_]]">
          </settings-sync-page>
        </settings-subpage>
      </template>

      <!-- Pre-SplitSettingsSync we show the browser's sync controls. -->
      <template is="dom-if" if="[[!splitSettingsSyncEnabled_]]">
        <template is="dom-if" route-path="/syncSetup/advanced">
          <settings-subpage page-title="Manage what you sync" associated-control="[[$$('#sync-setup')]]" learn-more-url="https://support.google.com/chrome?p=syncgoogleservices">
            <settings-sync-controls sync-status="[[syncStatus]]">
            </settings-sync-controls>
          </settings-subpage>
        </template>
      </template>

      <!-- Post-SplitSettingsSync we have separate OS sync controls. -->
      <template is="dom-if" if="[[splitSettingsSyncEnabled_]]">
        <template is="dom-if" route-path="/osSync">
          <settings-subpage page-title="Sync your settings" associated-control="[[$$('#sync-setup')]]" learn-more-url="https://support.google.com/chrome?p=syncgoogleservices">
            <os-sync-controls sync-status="[[syncStatus]]" profile-icon-url="[[profileIconUrl_]]" profile-name="[[profileName_]]" profile-email="[[profileEmail_]]">
            </os-sync-controls>
          </settings-subpage>
        </template>
      </template>

      <template is="dom-if" if="[[!isAccountManagementFlowsV2Enabled_]]">
        <template is="dom-if" route-path="/lockScreen">
          <settings-subpage page-title="[[selectLockScreenTitleString(hasPinLogin)]]" associated-control="[[$$('#lock-screen-subpage-trigger')]]">
            <settings-lock-screen id="lock-screen" set-modes="[[setModes_]]" prefs="{{prefs}}" auth-token="[[authToken_]]" on-invalidate-auth-token-requested="onInvalidateTokenRequested_" on-password-requested="onPasswordRequested_">
            </settings-lock-screen>
          </settings-subpage>
        </template>
        <template is="dom-if" if="[[fingerprintUnlockEnabled_]]">
          <template is="dom-if" route-path="/lockScreen/fingerprint" no-search="">
            <settings-subpage page-title="Fingerprint">
              <settings-fingerprint-list id="fingerprint-list" auth-token="[[authToken_.token]]" set-modes="[[setModes_]]" on-password-requested="onPasswordRequested_">
              </settings-fingerprint-list>
            </settings-subpage>
          </template>
        </template>
        <template is="dom-if" route-path="/accounts">
          <settings-subpage associated-control="[[
                $$('#manage-other-people-subpage-trigger')]]" page-title="Manage other people">
            <settings-users-page prefs="{{prefs}}">
            </settings-users-page>
          </settings-subpage>
        </template>
      </template>
      <template is="dom-if" route-path="/accountManager">
        <settings-subpage associated-control="[[$$('#account-manager-subpage-trigger')]]" page-title="azzamimaf&#39;s accounts">
          <settings-account-manager prefs="[[prefs]]">
          </settings-account-manager>
        </settings-subpage>
      </template>
      <template is="dom-if" if="[[pageVisibility.people.kerberosAccounts]]">
        <template is="dom-if" route-path="/kerberosAccounts">
          <settings-subpage associated-control="[[$$('#kerberos-accounts-subpage-trigger')]]" page-title="Kerberos tickets">
            <settings-kerberos-accounts></settings-kerberos-accounts>
          </settings-subpage>
        </template>
      </template>
    </settings-animated-pages>

    <template is="dom-if" if="[[!isAccountManagementFlowsV2Enabled_]]">
      <template is="dom-if" if="[[showPasswordPromptDialog_]]" restamp="">
        <settings-lock-screen-password-prompt-dialog id="passwordDialog" on-close="onPasswordPromptDialogClose_" on-auth-token-obtained="onAuthTokenObtained_">
        </settings-lock-screen-password-prompt-dialog>
      </template>
    </template>

    <template is="dom-if" if="[[showSignoutDialog_]]" restamp="">
      <settings-signout-dialog sync-status="[[syncStatus]]" on-close="onDisconnectDialogClosed_">
      </settings-signout-dialog>
    </template>

<!--_html_template_end_-->`,is:"os-settings-people-page",behaviors:[DeepLinkingBehavior,RouteObserverBehavior,I18nBehavior,WebUIListenerBehavior,LockStateBehavior],properties:{prefs:{type:Object,notify:true},splitSettingsSyncEnabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("splitSettingsSyncEnabled")}},syncStatus:Object,pageVisibility:Object,authToken_:{type:Object,observer:"onAuthTokenChanged_"},profileIconUrl_:String,profileName_:String,profileEmail_:String,profileLabel_:String,showSignoutDialog_:Boolean,fingerprintUnlockEnabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("fingerprintUnlockEnabled")},readOnly:true},isAccountManagerEnabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isAccountManagerEnabled")},readOnly:true},isAccountManagementFlowsV2Enabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isAccountManagementFlowsV2Enabled")},readOnly:true},showParentalControls_:{type:Boolean,value(){return loadTimeData$1.valueExists("showParentalControls")&&loadTimeData$1.getBoolean("showParentalControls")&&(!loadTimeData$1.valueExists("isFydeProfile")||!loadTimeData$1.getBoolean("isFydeProfile"))}},focusConfig_:{type:Object,value(){const map=new Map;if(routes.SYNC){map.set(routes.SYNC.path,"#sync-setup")}if(routes.LOCK_SCREEN){map.set(routes.LOCK_SCREEN.path,"#lock-screen-subpage-trigger")}if(routes.ACCOUNTS){map.set(routes.ACCOUNTS.path,"#manage-other-people-subpage-trigger")}if(routes.ACCOUNT_MANAGER){map.set(routes.ACCOUNT_MANAGER.path,"#account-manager-subpage-trigger")}if(routes.KERBEROS_ACCOUNTS){map.set(routes.KERBEROS_ACCOUNTS.path,"#kerberos-accounts-subpage-trigger")}return map}},showPasswordPromptDialog_:{type:Boolean,value:false},setModes_:{type:Object},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kSetUpParentalControls,chromeos.settings.mojom.Setting.kNonSplitSyncEncryptionOptions,chromeos.settings.mojom.Setting.kAutocompleteSearchesAndUrls,chromeos.settings.mojom.Setting.kMakeSearchesAndBrowsingBetter,chromeos.settings.mojom.Setting.kGoogleDriveSearchSuggestions])},isProfileActionable_:{type:Boolean,value:function(){if(loadTimeData$1.getBoolean("isFydeProfile")){return!loadTimeData$1.getBoolean("isFydeLocalAccount")}return loadTimeData$1.getBoolean("isAccountManagerEnabled")}},profileActionButtonIcon_:{type:String,value:function(){if(loadTimeData$1.getBoolean("isFydeProfile")){return"icon-external"}return"subpage-arrow"}},isFydeLocalAccount_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isFydeLocalAccount")}}},syncBrowserProxy_:null,attached(){if(this.isAccountManagerEnabled_){this.addWebUIListener("accounts-changed",this.updateAccounts_.bind(this));this.updateAccounts_()}else{ProfileInfoBrowserProxyImpl.getInstance().getProfileInfo().then(this.handleProfileInfo_.bind(this));this.addWebUIListener("profile-info-changed",this.handleProfileInfo_.bind(this))}this.syncBrowserProxy_=SyncBrowserProxyImpl.getInstance();this.syncBrowserProxy_.getSyncStatus().then(this.handleSyncStatus_.bind(this));this.addWebUIListener("sync-status-changed",this.handleSyncStatus_.bind(this))},onPasswordRequested_(){this.showPasswordPromptDialog_=true},onInvalidateTokenRequested_(){this.authToken_=undefined},onPasswordPromptDialogClose_(){this.showPasswordPromptDialog_=false;if(!this.setModes_){Router.getInstance().navigateToPreviousRoute()}},afterRenderShowDeepLink_(settingId,getElementCallback){afterNextRender(this,(()=>{const deepLinkElement=getElementCallback();if(!deepLinkElement||deepLinkElement.hidden){console.warn(`Element with deep link id ${settingId} not focusable.`);return}this.showDeepLinkElement(deepLinkElement)}))},beforeDeepLinkAttempt(settingId){switch(settingId){case chromeos.settings.mojom.Setting.kSetUpParentalControls:this.afterRenderShowDeepLink_(settingId,(()=>{const parentalPage=this.$$("settings-parental-controls-page");return parentalPage&&parentalPage.getSetupButton()}));return false;case chromeos.settings.mojom.Setting.kNonSplitSyncEncryptionOptions:this.afterRenderShowDeepLink_(settingId,(()=>{const syncPage=this.$$("settings-sync-page");syncPage.forceEncryptionExpanded=true;flush();return syncPage&&syncPage.getEncryptionOptions()&&syncPage.getEncryptionOptions().getEncryptionsRadioButtons()}));return false;case chromeos.settings.mojom.Setting.kAutocompleteSearchesAndUrls:this.afterRenderShowDeepLink_(settingId,(()=>{const syncPage=this.$$("settings-sync-page");return syncPage&&syncPage.getPersonalizationOptions()&&syncPage.getPersonalizationOptions().getSearchSuggestToggle()}));return false;case chromeos.settings.mojom.Setting.kMakeSearchesAndBrowsingBetter:this.afterRenderShowDeepLink_(settingId,(()=>{const syncPage=this.$$("settings-sync-page");return syncPage&&syncPage.getPersonalizationOptions()&&syncPage.getPersonalizationOptions().getUrlCollectionToggle()}));return false;case chromeos.settings.mojom.Setting.kGoogleDriveSearchSuggestions:this.afterRenderShowDeepLink_(settingId,(()=>{const syncPage=this.$$("settings-sync-page");return syncPage&&syncPage.getPersonalizationOptions()&&syncPage.getPersonalizationOptions().getDriveSuggestToggle()}));return false;default:return true}},currentRouteChanged(route,oldRoute){if(Router.getInstance().getCurrentRoute()===routes.OS_SIGN_OUT){if(this.syncStatus&&!this.syncStatus.signedIn){Router.getInstance().navigateToPreviousRoute()}else{this.showSignoutDialog_=true}}if(route===routes.SYNC||route===routes.OS_PEOPLE){this.attemptDeepLink()}},onAuthTokenObtained_(e){this.authToken_=e.detail},getPasswordState_(hasPin,enableScreenLock){if(!enableScreenLock){return this.i18n("lockScreenNone")}if(hasPin){return this.i18n("lockScreenPinOrPassword")}return this.i18n("lockScreenPasswordOnly")},getSyncRowLabel_(){if(this.splitSettingsSyncEnabled_){return this.i18n("osSyncPageTitle")}else{return this.i18n("syncAndNonPersonalizedServices")}},getSyncAndGoogleServicesSubtext_(){if(this.syncStatus&&this.syncStatus.hasError&&this.syncStatus.statusText){return this.syncStatus.statusText}return""},handleProfileInfo_(info){this.profileName_=info.name;if(info.iconUrl.startsWith("data:image/png;base64")){this.profileIconUrl_=convertImageSequenceToPng([info.iconUrl]);return}this.profileIconUrl_=info.iconUrl},updateAccounts_:async function(){const accounts=await AccountManagerBrowserProxyImpl.getInstance().getAccounts();if(accounts.length===0){return}this.profileName_=accounts[0].fullName;this.profileEmail_=accounts[0].email;this.profileIconUrl_=accounts[0].pic;await this.setProfileLabel(accounts)},async setProfileLabel(accounts){if(this.isAccountManagementFlowsV2Enabled_){const labelTemplate=await sendWithPromise("getPluralString","profileLabel",accounts.length);this.profileLabel_=loadTimeData$1.substituteString(labelTemplate,accounts[0].email,accounts.length);return}const moreAccounts=accounts.length-1;const labelTemplate=await sendWithPromise("getPluralString","profileLabel",moreAccounts);this.profileLabel_=loadTimeData$1.substituteString(labelTemplate,accounts[0].email,moreAccounts)},handleSyncStatus_(syncStatus){this.syncStatus=syncStatus;if(!this.isAccountManagerEnabled_&&syncStatus&&syncStatus.signedIn&&syncStatus.signedInUsername){this.profileLabel_=syncStatus.signedInUsername}},onSigninTap_(){this.syncBrowserProxy_.startSignIn()},onDisconnectDialogClosed_(e){this.showSignoutDialog_=false;focusWithoutInk(assert(this.$$("#disconnectButton")));if(Router.getInstance().getCurrentRoute()===routes.OS_SIGN_OUT){Router.getInstance().navigateToPreviousRoute()}},onDisconnectTap_(){Router.getInstance().navigateTo(routes.OS_SIGN_OUT)},onSyncTap_(){if(this.splitSettingsSyncEnabled_){Router.getInstance().navigateTo(routes.OS_SYNC);return}Router.getInstance().navigateTo(routes.SYNC)},onConfigureLockTap_(e){e.preventDefault();Router.getInstance().navigateTo(routes.LOCK_SCREEN)},onAccountManagerTap_(e){if(loadTimeData$1.getBoolean("isFydeProfile")){if(loadTimeData$1.getBoolean("isFydeLocalAccount")){return}const url=`https://account.fydeos.com/personalInfo/`;window.open(url);return}if(this.isAccountManagerEnabled_){Router.getInstance().navigateTo(routes.ACCOUNT_MANAGER)}},onKerberosAccountsTap_(){Router.getInstance().navigateTo(routes.KERBEROS_ACCOUNTS)},onManageOtherPeople_(){assert(!this.isAccountManagementFlowsV2Enabled_,"onManageOtherPeople_ was called when kAccountManagementFlowsV2 is enabled");Router.getInstance().navigateTo(routes.ACCOUNTS)},getIconImageSet_(iconUrl){return getImage(iconUrl)},getProfileName_(){if(this.isAccountManagerEnabled_&&this.isAccountManagementFlowsV2Enabled_){return loadTimeData$1.getString("osProfileName")}return this.profileName_},getSyncSetupIcon_(){return this.isAccountManagementFlowsV2Enabled_?"cr:sync":""},showSignin_(syncStatus){return loadTimeData$1.getBoolean("signinAllowed")&&!syncStatus.signedIn},selectLockScreenTitleString(hasPinLogin){if(hasPinLogin){return this.i18n("lockScreenTitleLoginLock")}return this.i18n("lockScreenTitleLock")},clearAccountPasswordTimeoutId_:undefined,onAuthTokenChanged_(){if(this.authToken_===undefined){this.setModes_=undefined}else{this.setModes_=(modes,credentials,onComplete)=>{this.quickUnlockPrivate.setModes(this.authToken_.token,modes,credentials,(()=>{let result=true;if(chrome.runtime.lastError){console.error("setModes failed: "+chrome.runtime.lastError.message);result=false}onComplete(result)}))}}if(this.clearAuthTokenTimeoutId_){clearTimeout(this.clearAccountPasswordTimeoutId_)}if(this.authToken_===undefined){return}const IPC_SECONDS=2;const lifetimeMs=this.authToken_.lifetimeSeconds>IPC_SECONDS?(this.authToken_.lifetimeSeconds-IPC_SECONDS)*1e3:0;this.clearAccountPasswordTimeoutId_=setTimeout((()=>{this.authToken_=undefined}),lifetimeMs)}});// Copyright 2016 The Chromium Authors. All rights reserved.
let SearchEngine;let SearchEnginesInfo;class SearchEnginesBrowserProxy{setDefaultSearchEngine(modelIndex){}removeSearchEngine(modelIndex){}searchEngineEditStarted(modelIndex){}searchEngineEditCancelled(){}searchEngineEditCompleted(searchEngine,keyword,queryUrl){}getSearchEnginesList(){}validateSearchEngineInput(fieldName,fieldValue){}}class SearchEnginesBrowserProxyImpl{setDefaultSearchEngine(modelIndex){chrome.send("setDefaultSearchEngine",[modelIndex])}removeSearchEngine(modelIndex){chrome.send("removeSearchEngine",[modelIndex])}searchEngineEditStarted(modelIndex){chrome.send("searchEngineEditStarted",[modelIndex])}searchEngineEditCancelled(){chrome.send("searchEngineEditCancelled")}searchEngineEditCompleted(searchEngine,keyword,queryUrl){chrome.send("searchEngineEditCompleted",[searchEngine,keyword,queryUrl])}getSearchEnginesList(){return sendWithPromise("getSearchEnginesList")}validateSearchEngineInput(fieldName,fieldValue){return sendWithPromise("validateSearchEngineInput",fieldName,fieldValue)}}addSingletonGetter(SearchEnginesBrowserProxyImpl);// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared shared-style md-select" scope="os-settings-search-selection-dialog">:host {
  --cr-dialog-width: 320px;
          --md-select-width: 280px;
}

#dialogBody {
  display: flex;
        flex-direction: column;
        height: 95px;
        overflow: auto;
}

.md-select {
  margin-top: 20px;
}

</style>
    <cr-dialog id="dialog" show-on-attach="">
      <div id="title" slot="title">Preferred search engine</div>
      <div id="dialogBody" slot="body">
        <div id="description">Set your default search engine for Chrome browser and FydeOS device Launcher</div>
        <select class="md-select" aria-labelledby="title" aria-describedby="description" autofocus="">
          <template is="dom-repeat" items="[[searchEngines_]]">
            <option selected="[[item.default]]">[[item.name]]</option>
          </template>
        </select>
      </div>
      <div slot="button-container">
        <cr-button class="cancel-button" on-click="onCancelButtonClick_">
          Cancel
        </cr-button>
        <cr-button class="action-button" on-click="onActionButtonClick_" disabled="[[disableActionButton_]]">
          Done
        </cr-button>
      </div>
    </cr-dialog>
<!--_html_template_end_-->`,is:"os-settings-search-selection-dialog",behaviors:[],properties:{searchEngines_:{type:Array,value(){return[]}}},browserProxy_:null,created(){this.browserProxy_=SearchEnginesBrowserProxyImpl.getInstance()},ready(){const updateSearchEngines=searchEngines=>{this.set("searchEngines_",searchEngines.defaults)};this.browserProxy_.getSearchEnginesList().then(updateSearchEngines);addWebUIListener("search-engines-changed",updateSearchEngines)},onActionButtonClick_(){const select=this.$$("select");const searchEngine=this.searchEngines_[select.selectedIndex];this.browserProxy_.setDefaultSearchEngine(searchEngine.modelIndex);this.$.dialog.close()},onCancelButtonClick_(){this.$.dialog.close()},onKeydown_(e){if(e.key==="Escape"){this.onCancelButtonClick_()}}});// Copyright 2021 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared md-select" scope="settings-search-engine">#search-wrapper {
  align-items: center;
        display: flex;
}

cr-policy-pref-indicator {
  padding-inline-end: 8px;
}

</style>

    <!-- Omnibox and launcher search engine. This shares the same pref with
        browser search engine because users probably don't want one engine
        in the omnibox and a different one in the launcher. -->
    <div class="settings-box two-line first block">
      <div id="search-wrapper">
        <div class="start settings-box-text" aria-hidden="true">
          <div id="searchExplanation">Preferred search engine</div>
          <div class="secondary" id="currentSearchEngine">
            [[currentSearchEngine_.name]]
          </div>
        </div>
        <template is="dom-if" if="[[isDefaultSearchControlledByPolicy_(
            prefs.default_search_provider_data.template_url_data)]]">
          <cr-policy-pref-indicator pref="[[
              prefs.default_search_provider_data.template_url_data]]">
          </cr-policy-pref-indicator>
        </template>
        <div class="separator"></div>
        <cr-button id="searchSelectionDialogButton" aria-labelledby="searchExplanation" aria-describedby="currentSearchEngine" disabled$="[[isDefaultSearchEngineEnforced_(
                prefs.default_search_provider_data.template_url_data)]]" on-click="onShowSearchSelectionDialogClick_">
          Configure
        </cr-button>
      </div>
      <template is="dom-if" if="[[prefs.default_search_provider_data.template_url_data.extensionId]]">
        <extension-controlled-indicator extension-id="[[
                prefs.default_search_provider_data.template_url_data.extensionId]]" extension-name="[[
                prefs.default_search_provider_data.template_url_data.controlledByName]]" extension-can-be-disabled="[[
                prefs.default_search_provider_data.template_url_data.extensionCanBeDisabled]]" on-disable-extension="onDisableExtension_">
        </extension-controlled-indicator>
      </template>
    </div>

    <template is="dom-if" if="[[showSearchSelectionDialog_]]" restamp="">
      <os-settings-search-selection-dialog on-close="onSearchSelectionDialogClose_">
      </os-settings-search-selection-dialog>
    </template>
<!--_html_template_end_-->`,is:"settings-search-engine",behaviors:[I18nBehavior],properties:{prefs:Object,currentSearchEngine_:Object,showSearchSelectionDialog_:Boolean},browserProxy_:null,created(){this.browserProxy_=SearchEnginesBrowserProxyImpl.getInstance()},ready(){const updateCurrentSearchEngine=searchEngines=>{this.currentSearchEngine_=searchEngines.defaults.find((searchEngine=>searchEngine.default))};this.browserProxy_.getSearchEnginesList().then(updateCurrentSearchEngine);addWebUIListener("search-engines-changed",updateCurrentSearchEngine)},focus(){this.$$("#searchSelectionDialogButton").focus()},onDisableExtension_(){this.fire("refresh-pref","default_search_provider.enabled")},onShowSearchSelectionDialogClick_(){this.showSearchSelectionDialog_=true},onSearchSelectionDialogClose_(){this.showSearchSelectionDialog_=false;focusWithoutInk(assert(this.$$("#searchSelectionDialogButton")))},isDefaultSearchControlledByPolicy_(pref){return pref.controlledBy===chrome.settingsPrivate.ControlledBy.USER_POLICY},isDefaultSearchEngineEnforced_(pref){return pref.enforcement===chrome.settingsPrivate.Enforcement.ENFORCED}});// Copyright 2021 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared" scope="settings-search-subpage"></style>
    <settings-search-engine deep-link-focus-id$="[[Setting.kPreferredSearchEngine]]">
    </settings-search-engine>
    <settings-toggle-button id="quick-answers-enable" class="hr" pref="{{prefs.settings.quick_answers.enabled}}" label="Quick Answers" sub-label="With a right-click or long press, show related info for your text selection" deep-link-focus-id$="[[Setting.kQuickAnswersOnOff]]">
    </settings-toggle-button>
<!--_html_template_end_-->`,is:"settings-search-subpage",behaviors:[DeepLinkingBehavior,I18nBehavior,RouteObserverBehavior],properties:{supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kPreferredSearchEngine,chromeos.settings.mojom.Setting.kQuickAnswersOnOff])}},currentRouteChanged(route,oldRoute){if(route!==routes.SEARCH_SUBPAGE){return}this.attemptDeepLink()}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared md-select" scope="os-settings-search-page">#search-wrapper {
  align-items: center;
        display: flex;
        min-height: var(--settings-row-min-height);
}

cr-policy-pref-indicator {
  padding-inline-end: 8px;
}

</style>
    <settings-animated-pages id="pages" section="osSearch" focus-config="[[focusConfig_]]">
      <div route-path="default">
        <template is="dom-if" if="[[!shouldShowQuickAnswersSettings_]]">
          <settings-search-engine deep-link-focus-id$="[[Setting.kPreferredSearchEngine]]">
          </settings-search-engine>
        </template>
        <template is="dom-if" if="[[shouldShowQuickAnswersSettings_]]">
          <cr-link-row id="search" label="Search" on-click="onSearchTap_" role-description="Subpage button">
          </cr-link-row>
        </template>
        <!-- Google Assistant -->
        <template is="dom-if" if="[[isAssistantAllowed_]]">
          <cr-link-row class="hr" id="assistantSubpageTrigger" label="Google Assistant" sub-label="[[getAssistantEnabledDisabledLabel_(
                  prefs.settings.voice_interaction.enabled.value)]]" on-click="onGoogleAssistantTap_" role-description="Subpage button">
          </cr-link-row>
        </template>
      </div>
      <template is="dom-if" if="[[shouldShowQuickAnswersSettings_]]">
        <template is="dom-if" route-path="/osSearch/search">
          <settings-subpage associated-control="[[$$('#searchSubpageTrigger')]]" page-title="Search">
            <settings-search-subpage prefs="{{prefs}}">
            </settings-search-subpage>
          </settings-subpage>
        </template>
      </template>
      <template is="dom-if" if="[[isAssistantAllowed_]]">
        <template is="dom-if" route-path="/googleAssistant">
          <settings-subpage associated-control="[[$$('#assistantSubpageTrigger')]]" page-title="Google Assistant">
            <settings-google-assistant-page prefs="{{prefs}}">
            </settings-google-assistant-page>
          </settings-subpage>
        </template>
      </template>
    </settings-animated-pages>

    <!-- Default Search Engine Selection Dialog -->
    <template is="dom-if" if="[[showSearchSelectionDialog_]]" restamp="">
      <os-settings-search-selection-dialog on-close="onSearchSelectionDialogClose_">
      </os-settings-search-selection-dialog>
    </template>
<!--_html_template_end_-->`,is:"os-settings-search-page",behaviors:[DeepLinkingBehavior,I18nBehavior,RouteObserverBehavior],properties:{focusConfig_:Object,shouldShowQuickAnswersSettings_:{type:Boolean,value(){return loadTimeData$1.getBoolean("shouldShowQuickAnswersSettings")}},isAssistantAllowed_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isAssistantAllowed")}},supportedSettingIds:{type:Object,value:()=>new Set([chromeos.settings.mojom.Setting.kPreferredSearchEngine])}},ready(){this.focusConfig_=new Map;this.focusConfig_.set(routes.SEARCH_SUBPAGE.path,"#searchSubpageTrigger");this.focusConfig_.set(routes.GOOGLE_ASSISTANT.path,"#assistantSubpageTrigger")},currentRouteChanged(route,oldRoute){if(route!==routes.OS_SEARCH){return}this.attemptDeepLink()},onSearchTap_(){Router.getInstance().navigateTo(routes.SEARCH_SUBPAGE)},onGoogleAssistantTap_(){assert(this.isAssistantAllowed_);Router.getInstance().navigateTo(routes.GOOGLE_ASSISTANT)},getAssistantEnabledDisabledLabel_(toggleValue){return this.i18n(toggleValue?"searchGoogleAssistantEnabled":"searchGoogleAssistantDisabled")}});// Copyright 2018 The Chromium Authors. All rights reserved.
Polymer({is:"managed-footnote",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="managed-footnote">:host {
  align-items: center;
        border-top: 1px solid var(--cr-separator-color);
        color: var(--cr-secondary-text-color);
        display: none;
        
        font-size: 0.8125rem;
        justify-content: center;
        padding: 0 24px;
}

:host([is-managed_]) {
  display: flex;
}

a[href] {
  color: var(--cr-link-color);
        text-decoration: none;
}

iron-icon {
  align-self: flex-start;
        flex-shrink: 0;
        height: 20px;
        padding-inline-end: var(--managed-footnote-icon-padding, 8px);
        width: 20px;
}

</style>

    <template is="dom-if" if="[[isManaged_]]">
      <iron-icon icon="cr:domain"></iron-icon>
      <div id="content" inner-h-t-m-l="[[getManagementString_(showDeviceInfo)]]">
      </div>
    </template>
<!--_html_template_end_-->`,behaviors:[I18nBehavior,WebUIListenerBehavior],properties:{isManaged_:{reflectToAttribute:true,type:Boolean,value(){return loadTimeData$1.getBoolean("isManaged")}},showDeviceInfo:{type:Boolean,value:false}},ready(){this.addWebUIListener("is-managed-changed",(managed=>{loadTimeData$1.overrideValues({isManaged:managed});this.isManaged_=managed}))},getManagementString_(){if(this.showDeviceInfo){return this.i18nAdvanced("deviceManagedByOrg")}return this.i18nAdvanced("browserManagedByOrg")}});chrome.send("observeManagedUI");// Copyright 2018 The Chromium Authors. All rights reserved.
const WRAPPER_CSS_CLASS="search-highlight-wrapper";const ORIGINAL_CONTENT_CSS_CLASS="search-highlight-original-content";const HIT_CSS_CLASS="search-highlight-hit";const SEARCH_BUBBLE_CSS_CLASS="search-bubble";function removeHighlights(wrappers){for(const wrapper of wrappers){if(!wrapper.parentElement){continue}const textNode=wrapper.querySelector(`.${ORIGINAL_CONTENT_CSS_CLASS}`).firstChild;wrapper.parentElement.replaceChild(textNode,wrapper)}}function findAndRemoveHighlights(node){const wrappers=Array.from(node.querySelectorAll(`.${WRAPPER_CSS_CLASS}`));assert(wrappers.length===1);removeHighlights(wrappers)}function highlight(node,ranges){assert(ranges.length>0);const wrapper=document.createElement("span");wrapper.classList.add(WRAPPER_CSS_CLASS);node.parentNode.replaceChild(wrapper,node);const span=document.createElement("span");span.classList.add(ORIGINAL_CONTENT_CSS_CLASS);span.style.display="none";span.appendChild(node);wrapper.appendChild(span);const text=node.textContent;const tokens=[];for(let i=0;i<ranges.length;++i){const range=ranges[i];const prev=ranges[i-1]||{start:0,length:0};const start=prev.start+prev.length;const length=range.start-start;tokens.push(text.substr(start,length));tokens.push(text.substr(range.start,range.length))}const last=ranges.slice(-1)[0];tokens.push(text.substr(last.start+last.length));for(let i=0;i<tokens.length;++i){if(i%2===0){wrapper.appendChild(document.createTextNode(tokens[i]))}else{const hitSpan=document.createElement("span");hitSpan.classList.add(HIT_CSS_CLASS);hitSpan.style.backgroundColor="#ffeb3b";hitSpan.style.color="#202124";hitSpan.textContent=tokens[i];wrapper.appendChild(hitSpan)}}return wrapper}function createEmptySearchBubble(node,horizontallyCenter){let anchor=node;if(node.nodeName==="SELECT"){anchor=node.parentNode}if(anchor instanceof ShadowRoot){anchor=anchor.host.parentNode}let searchBubble=anchor.querySelector(`.${SEARCH_BUBBLE_CSS_CLASS}`);if(searchBubble){return searchBubble}searchBubble=document.createElement("div");searchBubble.classList.add(SEARCH_BUBBLE_CSS_CLASS);const innards=document.createElement("div");innards.classList.add("search-bubble-innards");innards.textContent="Â ";searchBubble.appendChild(innards);anchor.appendChild(searchBubble);const updatePosition=function(){assert(typeof node.offsetTop==="number");searchBubble.style.top=node.offsetTop+(innards.classList.contains("above")?-searchBubble.offsetHeight:node.offsetHeight)+"px";if(horizontallyCenter){const width=node.offsetWidth-searchBubble.offsetWidth;searchBubble.style.left=node.offsetLeft+width/2+"px"}};updatePosition();searchBubble.addEventListener("mouseover",(function(){innards.classList.toggle("above");updatePosition()}));return searchBubble}function stripDiacritics(text){return text.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared iron-flex" scope="os-settings-fydeos-account">#profile-icon {
  background: center / cover no-repeat;
        border-radius: 20px;
        flex-shrink: 0;
        height: 40px;
        width: 40px;
}

</style>
    <div class="settings-box first two-line">
      <div id="profile-icon" style="background-image: [[getIconImageSet_(profileIconUrl_)]]" on-click="onAccountTap_" actionable="">
      </div>
      <div class="middle two-line no-min-width" id="profile-row" on-click="onAccountTap_" actionable="">
        <div class="flex text-elide settings-box-text">
          <span id="profile-name" aria-hidden="true">
            [[profileName_]]
          </span>
          <div id="profile-label" class="secondary" aria-hidden="true">
            [[profileLabel_]]
          </div>
        </div>
        <cr-icon-button class="icon-external">
        </cr-icon-button>
      </div>
    </div>
<!--_html_template_end_-->`,is:"os-settings-fydeos-account",behaviors:[WebUIListenerBehavior],properties:{isAccountManagerEnabled_:{type:Boolean,value(){return loadTimeData.getBoolean("isAccountManagerEnabled")},readOnly:true},profileIconUrl_:String,profileName_:String,profileLabel_:String},syncBrowserProxy_:null,attached(){if(this.isAccountManagerEnabled_){this.addWebUIListener("accounts-changed",this.updateAccounts_.bind(this));this.updateAccounts_()}else{ProfileInfoBrowserProxyImpl.getInstance().getProfileInfo().then(this.handleProfileInfo_.bind(this));this.addWebUIListener("profile-info-changed",this.handleProfileInfo_.bind(this))}this.syncBrowserProxy_=SyncBrowserProxyImpl.getInstance();this.syncBrowserProxy_.getSyncStatus().then(this.handleSyncStatus_.bind(this));this.addWebUIListener("sync-status-changed",this.handleSyncStatus_.bind(this))},getIconImageSet_(iconUrl){return getImage(iconUrl)},onAccountTap_(){const url=`https://account.fydeos.com/personalInfo/`;window.open(url)},handleProfileInfo_(info){this.profileName_=info.name;if(info.iconUrl.startsWith("data:image/png;base64")){this.profileIconUrl_=convertImageSequenceToPng([info.iconUrl]);return}this.profileIconUrl_=info.iconUrl},handleSyncStatus_(syncStatus){if(syncStatus&&syncStatus.signedIn&&syncStatus.signedInUsername){this.profileLabel_=syncStatus.signedInUsername}},updateAccounts_:async function(){const accounts=await AccountManagerBrowserProxyImpl.getInstance().getAccounts();if(accounts.length==0){return}this.profileName_=accounts[0].fullName;this.profileEmail_=accounts[0].email;this.profileIconUrl_=accounts[0].pic;this.profileLabel_=this.profileEmail_}});class ShellClient{constructor(element){this.element_=element}async ExecForResult(cmd){return new Promise(((resolve,reject)=>{chrome.shellClient.execSync(cmd,(ret=>{const{code:code,result:result}=ret;if(code!==0){reject(result)}else{resolve(result)}}))}))}async SafeExecForResult(cmd){let result="";try{result=await this.ExecForResult(cmd)}catch(err){console.error(`shellClient execForResult cmd [${cmd}] error`,err)}if(result)result=result.trim();return result}async IsFileExist(filename){let exist=false;try{await this.ExecForResult(`ls ${filename}`);exist=true}catch(err){exist=false}return exist}async Sleep(second){return new Promise((resolve=>{setTimeout((()=>{resolve()}),second*1e3)}))}dispatchEvent(type,custom){if(!this.element_)return;this.element_.dispatchEvent(new CustomEvent(type,custom))}}class DriverClient{constructor(ele){this.element_=ele;this.shellClient_=new ShellClient(ele)}static get TouchpadDrivers(){return["bare","imps","exps","auto"]}static get WifiDrivers(){return["wl","brcm"]}static get Events(){return{TOUCHPAD_DRIVER_CHANGED:"touchpadDriverChanged",WIFI_DRIVER_CHANGED:"wifiDriverChanged"}}static get wifiDriverCommand(){return"/usr/bin/switch-brcm-driver"}static get touchpadCommand(){return"/usr/bin/set-touchpad.sh"}static get wifiDriverConfigFile(){return"/etc/modprobe.d/flintos-brcm.conf"}static get touchpadConfigFile(){return"/etc/modprobe.d/fydeos-psmouse.conf"}async IsTweakWifiSupported(){const ret=await this.shellClient_.IsFileExist(DriverClient.wifiDriverCommand);return ret}async IsTweakTouchpadSupported(){const ret=await this.shellClient_.IsFileExist(DriverClient.touchpadCommand);return ret}async getTouchpadDriver(){let mode="";let content=await this.shellClient_.SafeExecForResult(`cat ${DriverClient.touchpadConfigFile}`);if(!content){mode="auto"}else{const a=content.split(/\r?\n/);if(a.length){const text=a[0];const b=text.split("=");if(b.length>=2){mode=b[1].trim()}else{mode="auto"}}else{mode="auto"}}return mode}async setTouchpadDriver(driver){await this.shellClient_.SafeExecForResult(`${DriverClient.touchpadCommand} ${driver}`);this.updateTouchpadDriver()}async updateTouchpadDriver(){const driver=await this.getTouchpadDriver();const options=DriverClient.TouchpadDrivers.map((n=>({name:n,value:n,selected:n===driver})));this.shellClient_.dispatchEvent(DriverClient.Events.TOUCHPAD_DRIVER_CHANGED,{detail:{options:options}})}async getWifiDriver(){const content=await this.shellClient_.SafeExecForResult(`cat ${DriverClient.wifiDriverConfigFile}`);const wlDisabled=content.indexOf("blacklist wl")!==-1;return wlDisabled?"brcm":"wl"}async setWifiDriver(driver){await this.shellClient_.SafeExecForResult(`${DriverClient.wifiDriverCommand} ${driver}`);this.updateWifiDriver()}async updateWifiDriver(){const driver=await this.getWifiDriver();const options=DriverClient.WifiDrivers.map((n=>({name:n,value:n,selected:n===driver})));this.shellClient_.dispatchEvent(DriverClient.Events.WIFI_DRIVER_CHANGED,{detail:{options:options}})}Restart(){return this.shellClient_.ExecForResult("powerd_setuid_helper --action=reboot")}}Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-flex cr-shared-style settings-shared md-select" scope="os-settings-fydeos-drivers">paper-tooltip {
  --paper-tooltip-padding: 12px 10px;
}

paper-tooltip > div {
  margin-bottom: 6px;
        line-height: 1.15em;
}

paper-tooltip > div:last-of-type {
  margin-bottom: 0;
}

.fydeos-settings-wrapper {
  align-items: center;
        display: flex;
        min-height: var(--settings-row-min-height);
}

iron-icon {
  --iron-icon-fill-color: var(--cros-search-page-question-icon-color);
}

#restartButton {
  margin-inline-end: var(--settings-controlled-by-spacing);
}

</style>
    <settings-section page-title="Wifi settings" section="wifiSettings" hidden="[[!tweakWifiSupported_]]">
      <div id="wifiSettings" class="settings-box first block">
        <div id="wifiDriverWrapper" class="fydeos-settings-wrapper">
          <div id="wifiDriverExplanation" class="start settings-box-text">
            Wifi driver switch
            <iron-icon id="wifi-settings-help-icon" icon="cr:help-outline"></iron-icon>
            <paper-tooltip id="wifiSettingsTooltip" for="wifi-settings-help-icon" position="bottom" fit-to-visible-bounds="">
              <div>If you have a Broadcom Wi-Fi chip, it could be possible that the default Wi-Fi driver does not work (reported on some models of Apple computers). You could try switching to an alternative (open-source) Wi-Fi driver that we have prepared specifically for these Broadcom chips.</div>
              <div>Note that a reboot is needed for this to work.</div>
            </paper-tooltip>
          </div>
          <cr-button id="restartButton" on-click="onRestartTap_" hidden="[[!shouldShowRestartButton_(wifiDriverOptions_, initWifiDriver_)]]">
            Restart
          </cr-button>
          <select id="wifiDriverSelect" class="md-select" on-change="onWifiSelectChange_">
            <template is="dom-repeat" items="[[wifiDriverOptions_]]">
              <option value="[[item.value]]" selected="[[item.selected]]">
                [[item.name]]
              </option>
            </template>
          </select>
        </div>
      </div>
    </settings-section>
    <settings-section page-title="Touchpad settings" section="touchpadSettings" hidden="[[!tweakTouchpadSupported_]]">
      <div id="touchpadSettings" class="settings-box first block">
        <div id="touchpadDriverWrapper" class="fydeos-settings-wrapper">
          <div id="touchpadDriverExplanation" class="start settings-box-text">
            Touchpad mode
            <iron-icon id="touchpad-settings-help-icon" icon="cr:help-outline"></iron-icon>
            <paper-tooltip id="touchpadSettingsTooltip" for="touchpad-settings-help-icon" position="bottom" fit-to-visible-bounds="">
              <div>If your touchpad does not function properly, you can change the working mode here.</div>
              <div>You should be able to see the effect immediately.</div>
            </paper-tooltip>
          </div>
          <select id="touchpadDriverSelect" class="md-select" on-change="onTouchpadSelectChange_">
            <template is="dom-repeat" items="[[touchpadDriverOptions_]]">
              <option value="[[item.value]]" selected="[[item.selected]]">
                [[item.name]]
              </option>
            </template>
          </select>
        </div>
      </div>
    </settings-section>
<!--_html_template_end_-->`,is:"os-settings-fydeos-drivers",behaviors:[I18nBehavior,RouteObserverBehavior],properties:{tweakTouchpadSupported_:{type:Boolean,value:true},tweakWifiSupported_:{type:Boolean,value:true},touchpadDriverOptions_:{type:Array,value(){return[]}},wifiDriverOptions_:{type:Array,value(){return[]}},initWifiDriver_:{type:String,value:""},initTouchpadDriver_:{type:String,value:""}},driverClient_:null,initTouchpadDriver_:"",ready(){console.log("os-settings-fydeos-drivers ready");this.driverClient_=new DriverClient(this);this.checkIsSupported_();this.addListeners()},attached(){console.log("os-settings-fydeos-drivers attached");this.updateDrivers_()},async checkIsSupported_(){this.tweakWifiSupported_=await this.driverClient_.IsTweakWifiSupported();this.tweakTouchpadSupported_=await this.driverClient_.IsTweakTouchpadSupported()},currentRouteChanged(currentRoute){if(currentRoute!==routes.FYDEOS){return}this.updateDrivers_()},addListeners(){this.addEventListener(DriverClient.Events.TOUCHPAD_DRIVER_CHANGED,this.onTouchpadDriverChanged_.bind(this));this.addEventListener(DriverClient.Events.WIFI_DRIVER_CHANGED,this.onWifiDriverChanged_.bind(this))},updateDrivers_(){this.updateTouchpadDriver_();this.updateWifiDriver_()},updateTouchpadDriver_(){if(this.tweakTouchpadSupported_&&this.driverClient_){this.driverClient_.updateTouchpadDriver()}},updateWifiDriver_(){if(this.tweakWifiSupported_&&this.driverClient_){this.driverClient_.updateWifiDriver()}},onTouchpadSelectChange_(){const driver=this.$$("#touchpadDriverSelect").value;this.driverClient_.setTouchpadDriver(driver)},onTouchpadDriverChanged_(e){console.log("onTouchpadDriverChanged_",e);const{detail:{options:options}}=e;this.touchpadDriverOptions_=options},onWifiSelectChange_(){const driver=this.$$("#wifiDriverSelect").value;this.driverClient_.setWifiDriver(driver)},onWifiDriverChanged_(e){console.log("onWifiDriverChanged_",e);const{detail:{options:options}}=e;this.wifiDriverOptions_=options;this.setInitWifiDriver_(options)},setInitWifiDriver_(options){if(!this.initWifiDriver_){const selected=options.find((n=>n.selected));if(selected){this.initWifiDriver_=selected.value}}},shouldShowRestartButton_(){if(!this.initWifiDriver_)return false;const current=this.wifiDriverOptions_.find((n=>n.selected));if(!current)return false;return current.value!==this.initWifiDriver_},async onRestartTap_(){await this.driverClient_.Restart()}});Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared settings-page-styles" scope="os-settings-fydeos-more-info"></style>
    <cr-link-row class="hr" id="releaseNotesOnline" on-click="onReleaseNotesTap_" label="See what&#39;s new" external=""></cr-link-row>
    <cr-link-row class="hr" id="help" on-click="onHelpClick_" label="Get help with FydeOS" external=""></cr-link-row>
<!--_html_template_end_-->`,is:"os-settings-fydeos-more-info",properties:{},aboutBrowserProxy_:null,ready(){console.log("os-settings-fyde-more-info ready")},attached(){console.log("os-settings-fyde-more-info attached");this.aboutBrowserProxy_=AboutPageBrowserProxyImpl.getInstance();this.aboutBrowserProxy_.pageReady();this.aboutBrowserProxy_.checkInternetConnection().then((result=>{this.hasInternetConnection_=result}))},onReleaseNotesTap_(){this.aboutBrowserProxy_.launchReleaseNotes()},onHelpClick_(){this.aboutBrowserProxy_.openOsHelpPage()}});class RemoteHelperClient{constructor(element){this.shellClient_=new ShellClient(element)}static get command(){return"/usr/share/remote-help/helper.sh"}async IsSupported(){const exists=this.shellClient_.IsFileExist(RemoteHelperClient.command);return exists}static get RemoteHelperStates(){return{ENABLED:"enabled",CLOSED:"closed",REQUIRE_RESTART:"require_restart"}}static get Events(){return{REMOTE_HELPER_ENABLED:"remote_helper_enabled",REMOTE_HELPER_CLOSED:"remote_helper_closed",REMOTE_HELPER_REQUIRE_RESTART:"remote_helper_require_restart"}}async ToggleRemoteHelper(enable){let result;if(enable){result=await this.enableRemoteHelper()}else{result=await this.disableRemoteHelper()}this.UpdateRemoteHelperStatus();return result}async enableRemoteHelper(){const port=await this.shellClient_.SafeExecForResult(`${RemoteHelperClient.command} start_helper`);return port}async disableRemoteHelper(){await this.shellClient_.SafeExecForResult(`${RemoteHelperClient.command} stop_helper`);return""}async getRemoteHelperPort(){const port=await this.shellClient_.SafeExecForResult("cat /run/fydeos_remote_helper/port");return port}async UpdateRemoteHelperStatus(){const state=await this.shellClient_.SafeExecForResult(`${RemoteHelperClient.command} running_state`);if(!state){this.shellClient_.dispatchEvent(RemoteHelperClient.Events.REMOTE_HELPER_CLOSED);return}const port=await this.getRemoteHelperPort();if(!port){this.shellClient_.dispatchEvent(RemoteHelperClient.Events.REMOTE_HELPER_REQUIRE_RESTART)}else{this.shellClient_.dispatchEvent(RemoteHelperClient.Events.REMOTE_HELPER_ENABLED,{detail:{port:port}})}}}Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="iron-flex settings-shared" scope="os-settings-fydeos-remoting">paper-tooltip {
  --paper-tooltip-padding: 12px 10px;
}

paper-tooltip > div {
  line-height: 1.15em;
}

iron-icon {
  --iron-icon-fill-color: var(--cros-search-page-question-icon-color);
}

#remoteHelperMessage {
  padding: var(--cr-section-vertical-padding) 0;
}

</style>
    <cr-link-row class="hr" id="remoteDesktop" on-click="onRemoteDesktopClicked_" label="Remote desktop" external=""></cr-link-row>

    <div id="remoteHelperRow" class="cr-row" hidden="[[!remoteHelperSupported_]]">
      <div id="remoteHelperMessage" class="flex">
        <div id="remoteHelperTitle">
          Remote diagnosis service
          <iron-icon id="remoting-help-icon" icon="cr:help-outline"></iron-icon>
          <paper-tooltip id="remotingHelpTooltip" for="remoting-help-icon" position="bottom" fit-to-visible-bounds="">
            <div>[[getPaperTooltipMessage_(remoteHelperState_)]]</div>
          </paper-tooltip>
        </div>
        <div id="remoteHelperDesc" class="cr-secondary-text">
          [[getRemoteHelperMessage_(remoteHelperState_)]]
        </div>
      </div>
      <iron-icon hidden="[[!isStarting_]]" src="chrome://resources/images/throbber_small.svg">
      </iron-icon>
      <div hidden="[[!shouldShowRemoteHelperPort_(remoteHelperState_, remoteHelperPort_)]]">
        [[remoteHelperPort_]]
      </div>
      <div class="separator"></div>
      <cr-toggle id="toggleRemoteHelper" disabled="[[!canToggleRemoteHelper_()]]" role="button" checked="[[remoteHelperChecked_(remoteHelperState_)]]" on-change="onToggleRemoteHelper_">
      </cr-toggle>
    </div>
<!--_html_template_end_-->`,is:"os-settings-fydeos-remoting",behaviors:[I18nBehavior,RouteObserverBehavior],properties:{remoteHelperSupported_:{type:Boolean,value:true},remoteHelperState_:{type:String,value:RemoteHelperClient.RemoteHelperStates.CLOSED},remoteHelperPort_:{type:String,value:""},isStarting_:{type:Boolean,value:false}},remoteHelperClient_:null,ready(){console.log("os-settings-fydeos-remoting ready");this.remoteHelperClient_=new RemoteHelperClient(this);this.checkIsSupported_();this.addListeners()},attached(){console.log("os-settings-fydeos-remoting attached")},onRemoteDesktopClicked_(){const appId="ihdjkfkbpkgagdkpjpifcdeeadaippme";chrome.nativeWindows.create(appId,(()=>{chrome.nativeWindows.getAll((list=>{const created=list.find((p=>p.appId===appId));if(!created){window.open("https://rdp.fydeos.com/","_blank")}}))}))},currentRouteChanged(currentRoute){if(currentRoute!==routes.FYDEOS){return}this.updateRemoteHelperStatus_()},async checkIsSupported_(){this.remoteHelperSupported_=await this.remoteHelperClient_.IsSupported()},addListeners(){this.addEventListener(RemoteHelperClient.Events.REMOTE_HELPER_CLOSED,this.onRemoteHelperDisabled_.bind(this));this.addEventListener(RemoteHelperClient.Events.REMOTE_HELPER_ENABLED,this.onRemoteHelperEnabled_.bind(this));this.addEventListener(RemoteHelperClient.Events.REMOTE_HELPER_REQUIRE_RESTART,this.onRemoteHelperRequireRestart_.bind(this))},remoteHelperChecked_(){return this.remoteHelperState_===RemoteHelperClient.RemoteHelperStates.ENABLED||this.remoteHelperState_===RemoteHelperClient.RemoteHelperStates.REQUIRE_RESTART},async onToggleRemoteHelper_(){if(this.remoteHelperChecked_()){await this.disableRemoteHelper_()}else if(this.remoteHelperState_===RemoteHelperClient.RemoteHelperStates.CLOSED){await this.enableRemoteHelper_()}},async enableRemoteHelper_(){this.isStarting_=true;this.remoteHelperState_=RemoteHelperClient.RemoteHelperStates.ENABLED;await this.remoteHelperClient_.ToggleRemoteHelper(true);this.isStarting_=false},async disableRemoteHelper_(){this.remoteHelperPort_="";this.remoteHelperState_=RemoteHelperClient.RemoteHelperStates.CLOSED;await this.remoteHelperClient_.ToggleRemoteHelper(false)},shouldShowRemoteHelperPort_(){return this.remoteHelperState_===RemoteHelperClient.RemoteHelperStates.ENABLED&&this.remoteHelperPort_},getRemoteHelperMessage_(){if(this.remoteHelperState_===RemoteHelperClient.RemoteHelperStates.REQUIRE_RESTART){return this.i18n("fydeosSettingsRemoteHelperRequireRestartMessage")}return""},getPaperTooltipMessage_(){if(this.remoteHelperState_===RemoteHelperClient.RemoteHelperStates.ENABLED){return this.i18n("fydeosSettingsRemoteHelperEnabledMessage")}return this.i18n("fydeosSettingsRemoteHelperDesc")},updateRemoteHelperStatus_(){if(this.remoteHelperSupported_&&this.remoteHelperClient_){this.remoteHelperClient_.UpdateRemoteHelperStatus()}},onRemoteHelperEnabled_(e){const{detail:{port:port}}=e;this.remoteHelperPort_=port;this.remoteHelperState_=RemoteHelperClient.RemoteHelperStates.ENABLED},onRemoteHelperDisabled_(){this.remoteHelperPort_="";this.remoteHelperState_=RemoteHelperClient.RemoteHelperStates.CLOSED},onRemoteHelperRequireRestart_(){this.remoteHelperPort_="";this.remoteHelperState_=RemoteHelperClient.RemoteHelperStates.REQUIRE_RESTART}});Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="os-settings-fydeos-tweak-ui">.toggleTitle {
  flex: 1;
}

</style>
    <div class="settings-box two-line" hidden="[[!showToggleRebootButtonInTray]]">
      <div class="start padded">
        &quot;Restart&quot; button
        <div class="secondary">[[getShowRebootButtonMessage_(showRebootButton_)]]</div>
      </div>
      <cr-toggle id="toggleShowRebootScreenButton" role="button" checked="[[showRebootButton_]]" on-change="onToggleShowRebootButton_">
      </cr-toggle>
    </div>
    <div class="settings-box two-line" hidden="[[!showToggleRotateScreenButton]]">
      <div class="start padded">
        &quot;Rotate screen&quot; button
        <div class="secondary">[[getShowRotateScreenButtonMessage_(isInTabletPhysicalState_, showRotateScreenButton_)]]</div>
      </div>
      <cr-toggle id="toggleShowRotateScreenButton" disabled="[[!canToggleRotateScreenButton_]]" role="button" checked="[[shouldShowRotateScreenButton_(showRotateScreenButton_, canToggleRotateScreenButton_)]]" on-change="onToggleShowRotateScreenButton_">
      </cr-toggle>
    </div>
<!--_html_template_end_-->`,is:"os-settings-fydeos-tweak-ui",behaviors:[WebUIListenerBehavior,I18nBehavior],properties:{showRebootButton_:Boolean,showRotateScreenButton_:Boolean,isInTabletPhysicalState_:Boolean,canToggleRotateScreenButton_:{type:Boolean,computed:"computeCanToggleRotateScreenButton_(isInTabletPhysicalState_)"}},attached(){this.getShowRebootButtonInTray();this.getShowRotateScreenButton();this.getIsInTabletPhysicalState();this.addWebUIListener("show-reboot-button-in-tray-changed",this.onShowRebootButtonInTrayChanged_.bind(this));this.addWebUIListener("show-rotate-screen-button-changed",this.onShowRotateScreenButtonChanged_.bind(this));this.addWebUIListener("is-in-tablet-physical-state-changed",this.onIsInTabletPhysicalStateChanged_.bind(this))},getShowRotateScreenButton(){sendWithPromise("getShowRotateScreenButton").then((visible=>{this.showRotateScreenButton_=visible}))},getShowRebootButtonInTray(){sendWithPromise("getShowRebootButtonInTray").then((visible=>{this.showRebootButton_=visible}))},getIsInTabletPhysicalState(){sendWithPromise("getIsInTabletPhysicalState").then((enabled=>{this.isInTabletPhysicalState_=enabled}))},onShowRebootButtonInTrayChanged_(visible){this.showRebootButton_=visible},onShowRotateScreenButtonChanged_(visible){this.showRotateScreenButton_=visible},onIsInTabletPhysicalStateChanged_(enabled){this.isInTabletPhysicalState_=enabled},computeCanToggleRotateScreenButton_(isInTabletPhysicalState){const canToggleRotateScreenButton=isInTabletPhysicalState;return canToggleRotateScreenButton},onToggleShowRotateScreenButton_(){this.showRotateScreenButton_=!this.showRotateScreenButton_;chrome.send("setShowRotateScreenButton",[this.showRotateScreenButton_])},onToggleShowRebootButton_(){this.showRebootButton_=!this.showRebootButton_;chrome.send("setShowRebootButtonInTray",[this.showRebootButton_])},shouldShowRotateScreenButton_(){return this.showRotateScreenButton_&&this.canToggleRotateScreenButton_},getShowRebootButtonMessage_(){return this.i18nAdvanced("displayFydeOsRebootButtonInTray")},getShowRotateScreenButtonMessage_(){if(!this.isInTabletPhysicalState_){return this.i18nAdvanced("notTabletPhysicalStateDisableFydeOsRotateScreen")}return this.i18nAdvanced("displayFydeOsRotateScreenButton")}});Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="os-settings-fydeos-experiment">.restartButton {
  margin-inline-end: var(--settings-controlled-by-spacing);
}

.fydeos-setting-item-text {
  margin-inline-end: var(--settings-controlled-by-spacing);
}

</style>
    <settings-section page-title="Experimental features" section="experiment">
      <div class="settings-box two-line" hidden="[[!shouldShowTpmFallback_]]">
        <div class="start padded settings-box-text fydeos-setting-item-text">
          Bypass Trusted Platform Module(TPM) checks
          <div class="secondary">
            Some of the FydeOS features could fail due to incompatible TPM chip in your device, you can bypass TPM checks as a workaround.
            <a target="_blank" href="https://fydeos.com/help/faq#experimental-tpm-fallback">Learn more</a>
          </div>
        </div>
        <cr-button id="tpmFallbackRestartButton" class="restartButton" on-click="onRestartTap_" hidden="[[!shouldShowTpmFallbackRestartButton_]]">
          Restart
        </cr-button>
        <cr-toggle id="toggleForceTpmFallback" disabled="[[!isOwner_]]" role="button" checked="[[forceTpmFallback_]]" on-change="onToggleForceTpmFallback_">
        </cr-toggle>
      </div>
      <div class="settings-box two-line">
        <div class="start padded settings-box-text fydeos-setting-item-text">
          Support for Android Input Method Editor(IME) in desktop mode (beta)
          <div class="secondary">
            Once enabled, you will be able to select IMEs installed and configured in Android subsystem, even in desktop mode.
            <a target="_blank" href="https://fydeos.com/help/faq#experimental-android-imes-in-desktop-mode">Learn more</a>
          </div>
        </div>
        <cr-button id="arcImePrefRestartButton" class="restartButton" on-click="onRestartTap_" hidden="[[!shouldShowArcImePrefRestartButton_]]">
          Restart
        </cr-button>
        <cr-toggle id="toggleArcImeGlobally" disabled="[[!isOwner_]]" role="button" checked="[[arcImeGloballyEnabled_]]" on-change="onToggleArcImeGlobally_">
        </cr-toggle>
      </div>
    </settings-section>
<!--_html_template_end_-->`,is:"os-settings-fydeos-experiment",behaviors:[WebUIListenerBehavior,I18nBehavior],properties:{isOwner_:{type:Boolean,value:false},forceTpmFallback_:{type:Boolean,value:false},currentForceTpmFallback_:{type:Boolean,value:false},shouldShowTpmFallbackRestartButton_:{type:Boolean,computed:"computeShouldShowRestartButton(forceTpmFallback_, currentForceTpmFallback_)"},isTpmFallbackNecessary_:{type:Boolean,value:()=>loadTimeData$1.getBoolean("isTpmFallbackNecessary")},shouldShowTpmFallback_:{type:Boolean,computed:"computeShouldShowTpmFallback(isTpmFallbackNecessary_, isOwner_)"},arcImeGloballyEnabled_:{type:Boolean,value:false},currentArcImeGloballyEnabled_:{type:Boolean,value:false},shouldShowArcImePrefRestartButton_:{type:Boolean,computed:"computeShouldShowArcImePrefRestartButton(arcImeGloballyEnabled_, currentArcImeGloballyEnabled_)"}},ready(){chrome.usersPrivate.getCurrentUser((user=>{this.isOwner_=user.isOwner}))},attached(){this.getIsForceTpmFallback();this.getIsArcImeGloballyEnabled();this.addWebUIListener("force-tpm-fallback-changed",this.onForceTpmFallbackChanged_.bind(this));this.addWebUIListener("enable-arc-ime-globally-changed",this.onIsArcImeGloballyChanged_.bind(this))},getIsForceTpmFallback(){sendWithPromise("getIsForceTpmFallback").then((response=>{console.log("getIsForceTpmFallback",response);this.setForceTpmFallback(response)}))},onForceTpmFallbackChanged_(response){console.log("onForceTpmFallbackChanged_",response);this.setForceTpmFallback(response)},onToggleForceTpmFallback_(){this.forceTpmFallback_=!this.forceTpmFallback_;chrome.send("setForceTpmFallback",[this.forceTpmFallback_])},setForceTpmFallback(response){const{current:current,pref:pref}=response;this.forceTpmFallback_=pref;this.currentForceTpmFallback_=current},onRestartTap_(){LifetimeBrowserProxyImpl.getInstance().signOutAndRestart()},computeShouldShowRestartButton(forceTpmFallback,currentForceTpmFallback){return forceTpmFallback!==currentForceTpmFallback},computeShouldShowTpmFallback(isNecessary,isOwner){return isNecessary&&isOwner},getIsArcImeGloballyEnabled(){sendWithPromise("getIsArcImeGloballyEnabled").then((response=>{console.log("getIsArcImeGloballyEnabled",response);this.setArcImeGloballyEnabled_(response)}))},onIsArcImeGloballyChanged_(value){console.log("onIsArcImeGloballyChanged_",value);this.setArcImeGloballyEnabled_(value)},onToggleArcImeGlobally_(){this.arcImeGloballyEnabled_=!this.arcImeGloballyEnabled_;chrome.send("setArcImeGloballyEnabled",[this.arcImeGloballyEnabled_])},setArcImeGloballyEnabled_(response){const{current:current,pref:pref}=response;this.arcImeGloballyEnabled_=pref;this.currentArcImeGloballyEnabled_=current},computeShouldShowArcImePrefRestartButton(arcImeGloballyEnabled,currentArcImeGloballyEnabled){return arcImeGloballyEnabled!==currentArcImeGloballyEnabled}});Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style settings-shared settings-page-styles" scope="os-settings-fyde-page">:host(.showing-subpage) .fydeos-settings-section-wrapper {
  display: none
}

</style>
    <settings-section page-title="FydeOS account settings" section="fydeosAccount" hidden="[[!isFydeAccount_]]">
      <os-settings-fydeos-account>
      </os-settings-fydeos-account>
    </settings-section>
    <os-settings-fydeos-drivers class="fydeos-settings-section-wrapper"></os-settings-fydeos-drivers>
    <settings-section page-title="Remote services" section="remoteAssistance">
      <os-settings-fydeos-remoting>
      </os-settings-fydeos-remoting>
    </settings-section>
    <settings-section page-title="Miscellaneous" section="tweakUI" hidden="[[!showFydeOsTweakUi_(showToggleRebootButtonInTray, showToggleRotateScreenButton)]]">
      <os-settings-fydeos-tweak-ui show-toggle-rotate-screen-button="[[showToggleRotateScreenButton]]" show-toggle-reboot-button-in-tray="[[showToggleRebootButtonInTray]]">
      </os-settings-fydeos-tweak-ui>
    </settings-section>
    <os-settings-fydeos-experiment class="fydeos-settings-section-wrapper"></os-settings-fydeos-experiment>
    <settings-section page-title="More info" section="moreInfo">
      <os-settings-fydeos-more-info>
      </os-settings-fydeos-more-info>
    </settings-section>
    
<!--_html_template_end_-->`,is:"os-settings-fyde-page",properties:{isFydeAccount_:{type:Boolean,value(){return loadTimeData.getBoolean("isFydeProfile")&&!loadTimeData.getBoolean("isFydeLocalAccount")}},showToggleRebootButtonInTray:{type:Boolean,value(){const ret=loadTimeData.getBoolean("showToggleRebootButtonInTray");console.log("showToggleRebootButtonInTray",ret);return ret}},showToggleRotateScreenButton:{type:Boolean,value(){return loadTimeData.getBoolean("showToggleRotateScreenButton")}}},ready(){console.log("os-settings-fyde-page ready")},attached(){console.log("os-settings-fyde-page attached")},showFydeOsTweakUi_(){return this.showToggleRotateScreenButton||this.showToggleRebootButtonInTray}});// Copyright 2016 The Chromium Authors. All rights reserved.
let SearchResult;const SKIP_SEARCH_CSS_ATTRIBUTE="no-search";const IGNORED_ELEMENTS=new Set(["CONTENT","CR-ACTION-MENU","CR-DIALOG","CR-ICON-BUTTON","CR-SLIDER","DIALOG","IMG","IRON-ICON","IRON-LIST","PAPER-RIPPLE","PAPER-SPINNER-LITE","SLOT","STYLE","TEMPLATE"]);function findAndHighlightMatches_(request,root){let foundMatches=false;const highlights=[];function doSearch(node){if(node.nodeName==="DOM-IF"&&node.hasAttribute("route-path")&&!node.if&&!node["noSearch"]&&!node.hasAttribute(SKIP_SEARCH_CSS_ATTRIBUTE)){request.queue_.addRenderTask(new RenderTask(request,node));return}if(IGNORED_ELEMENTS.has(node.nodeName)){return}if(node instanceof HTMLElement){const element=node;if(element.hasAttribute(SKIP_SEARCH_CSS_ATTRIBUTE)||element.hasAttribute("hidden")||element.style.display==="none"){return}}if(node.nodeType===Node.TEXT_NODE){const textContent=node.nodeValue;if(textContent.trim().length===0){return}const strippedText=stripDiacritics(textContent);const ranges=[];for(let match;match=request.regExp.exec(strippedText);){ranges.push({start:match.index,length:match[0].length})}if(ranges.length>0){foundMatches=true;revealParentSection_(node,ranges.length,request.bubbles);if(node.parentNode.nodeName==="OPTION"){const select=node.parentNode.parentNode;assert(select.nodeName==="SELECT");const isSubpage=n=>n.nodeName==="SETTINGS-SUBPAGE";if(findAncestor(select,isSubpage,true)){return}showBubble_(select,ranges.length,request.bubbles,true)}else{request.addTextObserver(node);highlights.push(highlight(node,ranges))}}return}let child=node.firstChild;while(child!==null){const nextSibling=child.nextSibling;doSearch(child);child=nextSibling}const shadowRoot=node.shadowRoot;if(shadowRoot){doSearch(shadowRoot)}}doSearch(root);request.addHighlights(highlights);return foundMatches}function revealParentSection_(node,numResults,bubbles){let associatedControl=null;let parent=node;while(parent.nodeName!=="SETTINGS-SECTION"){parent=parent.nodeType===Node.DOCUMENT_FRAGMENT_NODE?parent.host:parent.parentNode;if(!parent){return}if(parent.nodeName==="SETTINGS-SUBPAGE"){associatedControl=assert(parent.associatedControl,"An associated control was expected for SETTINGS-SUBPAGE "+parent.pageTitle+", but was not found.")}}parent.hiddenBySearch=false;if(associatedControl){showBubble_(associatedControl,numResults,bubbles,false)}}function showBubble_(control,numResults,bubbles,horizontallyCenter){const bubble=createEmptySearchBubble(control,horizontallyCenter);const numHits=numResults+(bubbles.get(bubble)||0);bubbles.set(bubble,numHits);const msgName=numHits===1?"searchResultBubbleText":"searchResultsBubbleText";bubble.firstChild.textContent=loadTimeData$1.getStringF(msgName,numHits)}class Task{constructor(request,node){this.request=request;this.node=node}exec(){}}class RenderTask extends Task{constructor(request,node){super(request,node)}exec(){const routePath=this.node.getAttribute("route-path");const content=DomIf._contentForTemplate(this.node.firstElementChild);const subpageTemplate=content.querySelector("settings-subpage");subpageTemplate.setAttribute("route-path",routePath);assert(!this.node.if);this.node.if=true;return new Promise(((resolve,reject)=>{const parent=this.node.parentNode;parent.async((()=>{const renderedNode=parent.querySelector('[route-path="'+routePath+'"]');this.request.queue_.addSearchAndHighlightTask(new SearchAndHighlightTask(this.request,assert(renderedNode)));resolve()}))}))}}class SearchAndHighlightTask extends Task{constructor(request,node){super(request,node)}exec(){const foundMatches=findAndHighlightMatches_(this.request,this.node);this.request.updateMatches(foundMatches);return Promise.resolve()}}class TopLevelSearchTask extends Task{constructor(request,page){super(request,page)}exec(){const shouldSearch=this.request.regExp!==null;this.setSectionsVisibility_(!shouldSearch);if(shouldSearch){const foundMatches=findAndHighlightMatches_(this.request,this.node);this.request.updateMatches(foundMatches)}return Promise.resolve()}setSectionsVisibility_(visible){const sections=this.node.querySelectorAll("settings-section");for(let i=0;i<sections.length;i++){sections[i].hiddenBySearch=!visible}}}class TaskQueue{constructor(request){this.request_=request;this.queues_;this.reset();this.onEmptyCallback_=null;this.running_=false}reset(){this.queues_={high:[],middle:[],low:[]}}addTopLevelSearchTask(task){this.queues_.high.push(task);this.consumePending_()}addSearchAndHighlightTask(task){this.queues_.middle.push(task);this.consumePending_()}addRenderTask(task){this.queues_.low.push(task);this.consumePending_()}onEmpty(onEmptyCallback){this.onEmptyCallback_=onEmptyCallback}popNextTask_(){return this.queues_.high.shift()||this.queues_.middle.shift()||this.queues_.low.shift()}consumePending_(){if(this.running_){return}const task=this.popNextTask_();if(!task){this.running_=false;if(this.onEmptyCallback_){this.onEmptyCallback_()}return}this.running_=true;window.requestIdleCallback((()=>{if(!this.request_.canceled){task.exec().then((()=>{this.running_=false;this.consumePending_()}))}}))}}class SearchRequest{constructor(rawQuery,root){this.rawQuery_=rawQuery;this.root_=root;this.regExp=this.generateRegExp_();this.canceled=false;this.foundMatches_=false;this.resolver=new PromiseResolver;this.queue_=new TaskQueue(this);this.queue_.onEmpty((()=>{this.resolver.resolve(this)}));this.textObservers_=new Set;this.highlights_=[];this.bubbles=new Map}addHighlights(highlights){this.highlights_.push(...highlights)}removeAllTextObservers(){this.textObservers_.forEach((observer=>{observer.disconnect()}));this.textObservers_.clear()}removeAllHighlightsAndBubbles(){removeHighlights(this.highlights_);this.bubbles.forEach(((count,bubble)=>bubble.remove()));this.highlights_=[];this.bubbles.clear()}addTextObserver(textNode){const originalParentNode=textNode.parentNode;const observer=new MutationObserver((mutations=>{const oldValue=mutations[0].oldValue.trim();const newValue=textNode.nodeValue.trim();if(oldValue!==newValue){observer.disconnect();this.textObservers_.delete(observer);findAndRemoveHighlights(originalParentNode)}}));observer.observe(textNode,{characterData:true,characterDataOldValue:true});this.textObservers_.add(observer)}start(){this.queue_.addTopLevelSearchTask(new TopLevelSearchTask(this,this.root_))}generateRegExp_(){let regExp=null;const strippedQuery=stripDiacritics(this.rawQuery_.trim());const sanitizedQuery=strippedQuery.replace(SANITIZE_REGEX,"\\$&");if(sanitizedQuery.length>0){regExp=new RegExp(`(${sanitizedQuery})`,"ig")}return regExp}isSame(rawQuery){return this.rawQuery_===rawQuery}updateMatches(found){this.foundMatches_=this.foundMatches_||found}didFindMatches(){return this.foundMatches_}}const SANITIZE_REGEX=/[-[\]{}()*+?.,\\^$|#\s]/g;class SearchManagerImpl{constructor(){this.activeRequests_=new Set;this.completedRequests_=new Set;this.lastSearchedText_=null}search(text,page){if(text!==this.lastSearchedText_){this.activeRequests_.forEach((function(request){request.removeAllTextObservers();request.removeAllHighlightsAndBubbles();request.canceled=true;request.resolver.resolve(request)}));this.activeRequests_.clear();this.completedRequests_.forEach((request=>{request.removeAllTextObservers();request.removeAllHighlightsAndBubbles()}));this.completedRequests_.clear()}this.lastSearchedText_=text;const request=new SearchRequest(text,page);this.activeRequests_.add(request);request.start();return request.resolver.promise.then((()=>{this.activeRequests_.delete(request);this.completedRequests_.add(request);return request}))}}let instance=null;function getSearchManager(){if(instance===null){instance=new SearchManagerImpl}return instance}function setSearchManagerForTesting(searchManager){instance=searchManager}// Copyright 2020 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><slot></slot>
<!--_html_template_end_-->`,is:"settings-idle-load",properties:{url:String},child_:null,instance_:null,idleCallback_:0,attached(){this.idleCallback_=requestIdleCallback((()=>{this.get()}))},detached(){cancelIdleCallback(this.idleCallback_)},requestLazyModule_(requestFn){return new Promise(((resolve,reject)=>{requestFn().then((()=>{const template=this.getContentChildren()[0];const TemplateClass=templatize(template,this,{mutableData:false,forwardHostProp:this._forwardHostPropV2});this.instance_=new TemplateClass;assert(!this.child_);this.child_=this.instance_.root.firstElementChild;this.parentNode.insertBefore(this.instance_.root,this);resolve(this.child_);this.fire("lazy-loaded")}),reject)}))},get(){if(this.loading_){return this.loading_}const requestLazyModuleFn=ensureLazyLoaded;this.loading_=this.requestLazyModule_(requestLazyModuleFn);return this.loading_},_forwardHostPropV2(prop,value){if(this.instance_){this.instance_.forwardHostProp(prop,value)}}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-page-styles cr-hidden-style settings-shared" scope="os-settings-page">:host([is-subpage-animating]) {
  overflow: hidden;
}

.banner {
  align-items: center;
        background-color: var(--cros-bg-color);
        border: var(--cr-hairline);
        border-radius: var(--cr-card-border-radius);
        display: flex;
        margin-bottom: var(--cr-section-vertical-margin);
        margin-top: var(--cr-section-vertical-margin);
}

.eol-warning-icon {
  align-items: center;
        background: var(--google-yellow-50);
        border-radius: 50%;
        display: flex;
        height: 40px;
        justify-content: center;
        margin-inline-end: var(--cr-section-padding);
        width: 40px;
}

.eol-warning-icon iron-icon {
  margin: 0;
}

#advancedToggle {
  --ink-color: currentColor;
        align-items: center;
        background: transparent;
        border: none;
        box-shadow: none;
        color: currentColor;
        display: flex;
        font-weight: 400;
        margin-bottom: 3px;
        margin-top: 12px;  
        min-height: 32px;
        padding: 0 12px;
}

:host-context(.focus-outline-visible) #advancedToggle:focus {
  font-weight: 600;
}

#openInNewBrowserSettingsIcon {
  fill: var(--cros-link-color);
        margin-inline-start: 0;
}

#secondaryUserIcon {
  background-color : var(--cros-user-icon-color-secondary);
        background-image: url(chrome://theme/IDR_SECONDARY_USER_SETTINGS);
        background-position: center;
        background-repeat: no-repeat;
        height: 55px;
        margin: 18px;
        width: 58px;
}

#toggleContainer {
  align-items: center;
        color: var(--cros-text-color-primary);
        display: flex;
        font: inherit;
        justify-content: center;
        margin-bottom: 0;
        margin-top: 0;
        padding: 0;
}

#toggleSpacer {
  padding-top: 33px;
}

iron-icon {
  margin-inline-start: 16px;
}

</style>
    <template is="dom-if" if="[[showBasicPage_(
        currentRoute_, inSearchMode, hasExpandedSection_)]]">
      <div id="basicPage">
        <template is="dom-if" if="[[computeShowUpdateRequiredEolBanner_(
            hasExpandedSection_, showUpdateRequiredEolBanner_)]]">
          <div id="updateRequiredEolBanner" class="settings-box two-line banner">
            <div class="eol-warning-icon">
              <iron-icon icon="cr20:banner-warning"></iron-icon>
            </div>
            <settings-localized-link id="bannerText" class="start" localized-string="">
            </settings-localized-link>
            <cr-icon-button title="Close" id="closeUpdateRequiredEol" class="icon-clear" on-click="onCloseEolBannerClicked_" aria-describedby="bannerText">
            </cr-icon-button>
          </div>
        </template>
        <div id="secondaryUserBanner" class="banner" hidden="[[!showSecondaryUserBanner_]]">
          <div id="secondaryUserIcon"></div>
          <div class="flex">Some settings belonging to azzamimaf@fydeos.local are being shared with you. These settings only affect your account when using multiple sign-in.</div>
        </div>
        <settings-section page-title="Network" section="internet">
          <settings-internet-page prefs="{{prefs}}">
          </settings-internet-page>
        </settings-section>
        <settings-section page-title="Bluetooth" section="bluetooth">
          <settings-bluetooth-page prefs="{{prefs}}">
          </settings-bluetooth-page>
        </settings-section>
        <template is="dom-if" if="[[!isGuestMode_]]" restamp="">
          <settings-section page-title="Connected devices" section="multidevice">
            <settings-multidevice-page prefs="{{prefs}}">
            </settings-multidevice-page>
          </settings-section>
        </template>
        <template is="dom-if" if="[[!isGuestMode_]]" restamp="">
          <settings-section page-title="Accounts" section="osPeople">
            <os-settings-people-page prefs="{{prefs}}" page-visibility="[[pageVisibility]]">
            </os-settings-people-page>
          </settings-section>
        </template>
        <template is="dom-if" if="[[showKerberosSection]]" restamp="">
          <settings-section page-title="Kerberos" section="kerberos">
            <settings-kerberos-page></settings-kerberos-page>
          </settings-section>
        </template>
        <settings-section page-title="Device" section="device">
          <settings-device-page prefs="{{prefs}}" show-crostini="[[showCrostini]]">
          </settings-device-page>
        </settings-section>
        <template is="dom-if" if="[[!isGuestMode_]]" restamp="">
          <settings-section page-title="Personalization" section="personalization">
            <settings-personalization-page prefs="{{prefs}}">
            </settings-personalization-page>
          </settings-section>
        </template>
        <settings-section page-title="Search engine" section="osSearch">
          <os-settings-search-page prefs="{{prefs}}">
          </os-settings-search-page>
        </settings-section>
        <template is="dom-if" if="[[isAccountManagementFlowsV2Enabled_]]">
          <settings-section page-title="Security and Privacy" section="osPrivacy">
            <os-settings-privacy-page prefs="{{prefs}}">
            </os-settings-privacy-page>
          </settings-section>
        </template>
        <settings-section page-title="Apps" section="apps">
          <os-settings-apps-page prefs="{{prefs}}" android-apps-info="[[androidAppsInfo]]" have-play-store-app="[[havePlayStoreApp]]" show-android-apps="[[showAndroidApps]]" show-plugin-vm="[[showPluginVm]]" show-startup="[[showStartup]]">
          </os-settings-apps-page>
        </settings-section>
      </div>
    </template>

    <template is="dom-if" if="[[showAdvancedToggle_(
        inSearchMode, hasExpandedSection_)]]">
      <div id="toggleSpacer"></div>
      <h2 id="toggleContainer">
        <cr-button id="advancedToggle" on-click="advancedToggleClicked_" aria-expanded$="[[boolToString_(advancedToggleExpanded)]]">
          <span>Advanced</span>
          <iron-icon icon="[[getArrowIcon_(advancedToggleExpanded)]]">
          </iron-icon>
        </cr-button>
      </h2>
    </template>

    <settings-idle-load id="advancedPageTemplate" url="chromeos/lazy_load.html">
      <template>
        <div id="advancedPage" hidden$="[[!showAdvancedPage_(
            currentRoute_, inSearchMode, hasExpandedSection_,
            advancedToggleExpanded)]]">
          <settings-section page-title="Date and time" section="dateTime">
            <settings-date-time-page prefs="{{prefs}}">
            </settings-date-time-page>
          </settings-section>
          <template is="dom-if" if="[[!isAccountManagementFlowsV2Enabled_]]">
            <settings-section page-title="Security and Privacy" section="osPrivacy">
              <os-settings-privacy-page prefs="{{prefs}}">
              </os-settings-privacy-page>
            </settings-section>
          </template>
          <settings-section page-title="Languages and inputs" section="osLanguages">
            <os-settings-languages-section prefs="{{prefs}}">
            </os-settings-languages-section>
          </settings-section>
          <template is="dom-if" if="[[!isGuestMode_]]">
            <settings-section page-title="Files" section="files">
              <os-settings-files-page prefs="{{prefs}}">
              </os-settings-files-page>
            </settings-section>
          </template>
          <settings-section page-title="Print and scan" section="osPrinting">
            <os-settings-printing-page prefs="{{prefs}}">
            </os-settings-printing-page>
          </settings-section>
          <template is="dom-if" if="[[showCrostini]]" restamp="">
            <settings-section page-title="Developers" section="crostini">
              <settings-crostini-page prefs="{{prefs}}" allow-crostini="[[allowCrostini_]]">
              </settings-crostini-page>
            </settings-section>
          </template>
          <settings-section page-title="Accessibility" section="osAccessibility">
            <os-settings-a11y-page prefs="{{prefs}}">
            </os-settings-a11y-page>
          </settings-section>
          <template is="dom-if" if="[[showReset]]">
            <settings-section page-title="Reset settings" section="osReset">
              <os-settings-reset-page></os-settings-reset-page>
            </settings-section>
          </template>
        </div>
      </template>
    </settings-idle-load>
<!--_html_template_end_-->`,is:"os-settings-page",behaviors:[MainPageBehavior,RouteObserverBehavior,WebUIListenerBehavior],properties:{prefs:{type:Object,notify:true},showAndroidApps:Boolean,showCrostini:Boolean,showPluginVm:Boolean,showReset:Boolean,showStartup:Boolean,showKerberosSection:Boolean,allowCrostini_:Boolean,havePlayStoreApp:Boolean,androidAppsInfo:Object,isGuestMode_:{type:Boolean,value:loadTimeData$1.getBoolean("isGuest")},pageVisibility:{type:Object,value(){return{}}},advancedToggleExpanded:{type:Boolean,value:false,notify:true,observer:"advancedToggleExpandedChanged_"},hasExpandedSection_:{type:Boolean,value:false},showSecondaryUserBanner_:{type:Boolean,computed:"computeShowSecondaryUserBanner_(hasExpandedSection_)"},showUpdateRequiredEolBanner_:{type:Boolean,value:!!loadTimeData$1.getString("updateRequiredEolBannerText")},currentRoute_:Object,isAccountManagementFlowsV2Enabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isAccountManagementFlowsV2Enabled")},readOnly:true}},hostAttributes:{role:"main"},listeners:{"subpage-expand":"onSubpageExpanded_"},advancedTogglingInProgress_:false,attached:function(){this.currentRoute_=Router.getInstance().getCurrentRoute();this.allowCrostini_=loadTimeData$1.valueExists("allowCrostini")&&loadTimeData$1.getBoolean("allowCrostini");this.addWebUIListener("android-apps-info-update",this.androidAppsInfoUpdate_.bind(this));AndroidAppsBrowserProxyImpl.getInstance().requestAndroidAppsInfo();const that=this;const sectionsToHide=["multidevice"];setTimeout((()=>{sectionsToHide.forEach((section=>{const node=that.$$(`settings-section[section="${section}"]`);if(node){node.setAttribute("hidden",true)}}))}),0)},currentRouteChanged(newRoute,oldRoute){this.currentRoute_=newRoute;if(routes.ADVANCED&&routes.ADVANCED.contains(newRoute)){this.advancedToggleExpanded=true}if(oldRoute&&oldRoute.isSubpage()){if(!newRoute.isSubpage()||newRoute.section!==oldRoute.section){this.hasExpandedSection_=false}}else{assert(!this.hasExpandedSection_)}MainPageBehavior.currentRouteChanged.call(this,newRoute,oldRoute)},containsRoute(route){return!route||routes.BASIC.contains(route)||routes.ADVANCED.contains(route)},showPage_(visibility){return visibility!==false},searchContents(query){const whenSearchDone=[getSearchManager().search(query,assert(this.$$("#basicPage")))];whenSearchDone.push(this.$$("#advancedPageTemplate").get().then((function(advancedPage){return getSearchManager().search(query,advancedPage)})));return Promise.all(whenSearchDone).then((function(requests){return{canceled:requests.some((function(r){return r.canceled})),didFindMatches:requests.some((function(r){return r.didFindMatches()})),wasClearSearch:requests[0].isSame("")}}))},computeShowSecondaryUserBanner_(){return!this.hasExpandedSection_&&loadTimeData$1.getBoolean("isSecondaryUser")},computeShowUpdateRequiredEolBanner_(){return!this.hasExpandedSection_&&this.showUpdateRequiredEolBanner_},androidAppsInfoUpdate_(info){this.androidAppsInfo=info},onCloseEolBannerClicked_(){this.showUpdateRequiredEolBanner_=false},onSubpageExpanded_(){this.hasExpandedSection_=true},advancedToggleExpandedChanged_(){if(!this.advancedToggleExpanded){return}beforeNextRender(this,(()=>{this.$$("#advancedPageTemplate").get()}))},advancedToggleClicked_(){if(this.advancedTogglingInProgress_){return}this.advancedTogglingInProgress_=true;const toggle=this.$$("#toggleContainer");if(!this.advancedToggleExpanded){this.advancedToggleExpanded=true;this.async((()=>{this.$$("#advancedPageTemplate").get().then((()=>{this.fire("scroll-to-top",{top:toggle.offsetTop,callback:()=>{this.advancedTogglingInProgress_=false}})}))}))}else{this.fire("scroll-to-bottom",{bottom:toggle.offsetTop+toggle.offsetHeight+24,callback:()=>{this.advancedToggleExpanded=false;this.advancedTogglingInProgress_=false}})}},showAdvancedToggle_(inSearchMode,hasExpandedSection){return!inSearchMode&&!hasExpandedSection},showBasicPage_(currentRoute,inSearchMode,hasExpandedSection){return!hasExpandedSection||routes.BASIC.contains(currentRoute)},showAdvancedPage_(currentRoute,inSearchMode,hasExpandedSection,advancedToggleExpanded){return hasExpandedSection?routes.ADVANCED&&routes.ADVANCED.contains(currentRoute):advancedToggleExpanded||inSearchMode},showAdvancedSettings_(visibility){return visibility!==false},getArrowIcon_(opened){return opened?"cr:arrow-drop-up":"cr:arrow-drop-down"},boolToString_(bool){return bool.toString()}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-hidden-style settings-shared" scope="os-settings-main">#overscroll {
  margin-top: 64px;
}

.showing-subpage ~ #overscroll {
  display: none;
}

#noSearchResults {
  margin-top: 80px;
        text-align: center;
}

#noSearchResults div:first-child {
  font-size: 123%;  
        margin-bottom: 10px;
}

managed-footnote {
  border-top: none;
        
        margin-bottom: calc(-21px - 8px);
        padding-bottom: 16px;
        padding-top: 12px;
        
        position: relative;
        z-index: 1;
}

</style>
    <div id="noSearchResults" hidden$="[[!showNoResultsFound_]]">
      <div>No search results found</div>
      <div>Go to <a target="_blank" href="https://fydeos.com/help/faq">FydeOS help</a> if you can't find what you're looking for</div>
    </div>
    <template is="dom-if" if="[[showManagedHeader_(inSearchMode_, showingSubpage_,
        showPages_.about)]]">
      <managed-footnote show-device-info=""></managed-footnote>
    </template>
    <template is="dom-if" if="[[showPages_.settings]]">
      <os-settings-page class="cr-centered-card-container" prefs="{{prefs}}" page-visibility="[[pageVisibility]]" show-android-apps="[[showAndroidApps]]" show-crostini="[[showCrostini]]" show-plugin-vm="[[showPluginVm]]" show-reset="[[showReset]]" show-startup="[[showStartup]]" have-play-store-app="[[havePlayStoreApp]]" on-showing-section="onShowingSection_" on-subpage-expand="onShowingSubpage_" on-showing-main-page="onShowingMainPage_" in-search-mode="[[inSearchMode_]]" advanced-toggle-expanded="{{advancedToggleExpanded}}" show-kerberos-section="[[showKerberosSection]]">
      </os-settings-page>
    </template>
    <!-- FYDEOS BEGIN -->
    <template is="dom-if" if="[[showPages_.fydeos]]">
      <os-settings-fyde-page class="cr-centered-card-container" in-search-mode="[[inSearchMode_]]" on-subpage-expand="onShowingSubpage_" on-showing-main-page="onShowingMainPage_">
      </os-settings-fyde-page>
    </template>
    <!-- FYDEOS END -->
    <template is="dom-if" if="[[showPages_.about]]">
      <os-settings-about-page role="main" class="cr-centered-card-container" in-search-mode="[[inSearchMode_]]" on-subpage-expand="onShowingSubpage_" on-showing-main-page="onShowingMainPage_" prefs="{{prefs}}" show-crostini="[[showCrostini]]">
      </os-settings-about-page>
    </template>
    <div id="overscroll" style="padding-bottom: [[overscroll_]]px"></div>
<!--_html_template_end_-->`,is:"os-settings-main",behaviors:[RouteObserverBehavior],properties:{prefs:{type:Object,notify:true},advancedToggleExpanded:{type:Boolean,notify:true},overscroll_:{type:Number,observer:"overscrollChanged_"},showPages_:{type:Object,value(){return{about:false,settings:false,fydeos:false}}},inSearchMode_:{type:Boolean,value:false},showNoResultsFound_:{type:Boolean,value:false},showingSubpage_:Boolean,toolbarSpinnerActive:{type:Boolean,value:false,notify:true},pageVisibility:Object,showAndroidApps:Boolean,showCrostini:Boolean,showReset:Boolean,showStartup:Boolean,showKerberosSection:Boolean,havePlayStoreApp:Boolean},overscrollChanged_(){if(!this.overscroll_&&this.boundScroll_){this.offsetParent.removeEventListener("scroll",this.boundScroll_);window.removeEventListener("resize",this.boundScroll_);this.boundScroll_=null}else if(this.overscroll_&&!this.boundScroll_){this.boundScroll_=()=>{if(!this.showingSubpage_){this.setOverscroll_(0)}};this.offsetParent.addEventListener("scroll",this.boundScroll_);window.addEventListener("resize",this.boundScroll_)}},setOverscroll_(opt_minHeight){const scroller=this.offsetParent;if(!scroller){return}const overscroll=this.$.overscroll;const visibleBottom=scroller.scrollTop+scroller.clientHeight;const overscrollBottom=overscroll.offsetTop+overscroll.scrollHeight;const visibleOverscroll=overscroll.scrollHeight-(overscrollBottom-visibleBottom);this.overscroll_=Math.max(opt_minHeight||0,Math.ceil(visibleOverscroll))},currentRouteChanged(newRoute){const inAbout=routes.ABOUT.contains(Router.getInstance().getCurrentRoute());const inFydeOs=routes.FYDEOS.contains(Router.getInstance().getCurrentRoute());this.showPages_={about:inAbout,settings:!inAbout&&!inFydeOs,fydeos:inFydeOs};if(!newRoute.isSubpage()){document.title=inAbout?loadTimeData$1.getStringF("settingsAltPageTitle",loadTimeData$1.getString("aboutPageTitle")):loadTimeData$1.getString("settings")}},onShowingSubpage_(){this.showingSubpage_=true},onShowingMainPage_(){this.showingSubpage_=false},onShowingSection_(e){const section=e.detail;const sectionTop=section.offsetParent.offsetTop+section.offsetTop;const distance=this.$.overscroll.offsetTop-sectionTop;const overscroll=Math.max(0,this.offsetParent.clientHeight-distance);this.setOverscroll_(overscroll);section.scrollIntoView();section.focus()},getPage_(route){if(routes.BASIC.contains(route)||routes.ADVANCED&&routes.ADVANCED.contains(route)){return this.$$("os-settings-page")}assertNotReached$1()},searchContents(query){this.inSearchMode_=true;this.toolbarSpinnerActive=true;return new Promise(((resolve,reject)=>{setTimeout((()=>{const whenSearchDone=assert(this.getPage_(routes.BASIC)).searchContents(query);whenSearchDone.then((result=>{resolve();if(result.canceled){return}this.toolbarSpinnerActive=false;this.inSearchMode_=!result.wasClearSearch;this.showNoResultsFound_=this.inSearchMode_&&!result.didFindMatches;if(this.inSearchMode_){IronA11yAnnouncer.requestAvailability();this.fire("iron-announce",{text:this.showNoResultsFound_?loadTimeData$1.getString("searchNoResults"):loadTimeData$1.getStringF("searchResults",query)})}}))}),0)}))},showManagedHeader_(){return!this.inSearchMode_&&!this.showingSubpage_&&!this.showPages_.about}});// Copyright 2019 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="os-settings-menu">:host {
  --menu-link-color: var(--cros-icon-color-prominent);
        --menu-text-color: var(--cros-text-color-secondary);
        --menu-icon-color: var(--cros-text-color-secondary);
        
        --tap-target-padding: 3px;
        
        --focus-border-width: 1px;
        box-sizing: border-box;
        display: block;
        padding-bottom: 2px;
        padding-top: 8px;
}

:host * {
  -webkit-tap-highlight-color: transparent;
}

[selectable]:focus, [selectable] > :focus {
  background-color: transparent;
}

a {
  background: transparent;
        display: block;
        padding: var(--tap-target-padding) 0;
}

a.item {
  align-items: center;
        border-block-end-width: var(--focus-border-width);
        border-block-start-width: var(--focus-border-width);
        
        border-color: transparent;
        border-inline-end-width: var(--focus-border-width);
        
        border-inline-start-width: 0;
        border-radius: 0 20px 20px 0;
        border-style: solid;
        color: var(--menu-text-color);
        display: flex;
        font-weight: 500;
        margin-bottom: 8px;
        margin-inline-end: 2px;
        min-height: 32px;
        padding-inline-start: 20px;
}

:host-context([dir=rtl]) a.item {
  border-radius: 20px 0 0 20px;
}

a.iron-selected.item {
  background-color: var(--cros-menu-button-bg-color-active);
        color: var(--menu-link-color);
}

:host-context(.focus-outline-visible) a:focus.item {
  border-color: var(--cros-menu-button-outline-color-focused);
}

a:hover:not(.iron-selected).item {
  background-color: var(--cros-menu-button-bg-color-hover);
}

iron-icon {
  --iron-icon-fill-color: var(--menu-icon-color);
        margin-inline-end: 16px;
        pointer-events: none;
        vertical-align: top;
}

a.iron-selected.item > iron-icon {
  fill: var(--menu-link-color);
}

#advancedButton {
  --ink-color: var(--menu-text-color);
        align-items: center;
        background: none;
        border: none;
        border-radius: initial;
        box-shadow: none;
        color: var(--menu-text-color);
        display: flex;
        font-weight: 500;
        height: unset;
        margin-inline-end: 2px;
        margin-top: 8px;
        padding-inline-end: 0;
        padding-inline-start: 20px;
        text-transform: none;
}

#advancedButton:focus {
  outline: none;
}

:host-context(.focus-outline-visible) #advancedButton:focus {
  outline: auto 5px -webkit-focus-ring-color;
}

#advancedButton > span {
  flex: 1;
}

#advancedButton > iron-icon {
  height: var(--cr-icon-size);
        margin-inline-end: 14px;  
        width: var(--cr-icon-size);
}

#menuSeparator {
  border-bottom: 1px solid rgba(0, 0, 0, 0.08);
        margin-bottom: 8px;
        margin-top: 8px;
}

@media (prefers-color-scheme: dark) {
#menuSeparator {
  border-bottom: var(--cr-separator-line);
}

}

#aboutItem {
  margin-bottom: calc(
            48px - calc(var(--tap-target-padding) + var(--focus-border-width)));
}

</style>
    <iron-selector id="topMenu" attr-for-selected="href" on-iron-activate="onSelectorActivate_" selectable="a" role="navigation" on-click="onLinkClick_">
      <a href="/internet" class="item">
        <iron-icon icon="os-settings:network-wifi"></iron-icon>
        Network
      </a>
      <a href="/bluetooth" class="item">
        <iron-icon icon="cr:bluetooth"></iron-icon>
        Bluetooth
      </a>
      <a id="multidevice" href="/multidevice" class="item" hidden="[[isGuestMode_]]">
        <iron-icon icon="os-settings:multidevice-better-together-suite">
        </iron-icon>
        Connected devices
      </a>
      <a id="osPeople" href="/osPeople" hidden="[[isGuestMode_]]" class="item">
        <iron-icon icon="cr:person"></iron-icon>
        Accounts
      </a>
      <a id="kerberos" href="/kerberos" class="item" hidden="[[!showKerberosSection]]">
        <iron-icon icon="os-settings:auth-key"></iron-icon>
        Kerberos
      </a>
      <a href="/device" class="item">
        <iron-icon icon="os-settings:laptop-chromebook"></iron-icon>
        Device
      </a>
      <a id="personalization" href="/personalization" class="item" hidden="[[isGuestMode_]]">
        <iron-icon icon="os-settings:paint-brush"></iron-icon>
        Personalization
      </a>
      <a href="/osSearch" class="item">
        <iron-icon icon="cr:search"></iron-icon>
        Search engine
      </a>
      <template is="dom-if" if="[[isAccountManagementFlowsV2Enabled_]]">
        <a href="/osPrivacy" class="item">
          <iron-icon icon="cr:security"></iron-icon>
          Security and Privacy
        </a>
      </template>
      <a href="/apps" class="item">
        <iron-icon icon="os-settings:apps"></iron-icon>
        Apps
      </a>
      <cr-button id="advancedButton" aria-expanded$="[[boolToString_(advancedOpened)]]" on-click="onAdvancedButtonToggle_">
        <span>Advanced</span>
        <iron-icon icon="[[arrowState_(advancedOpened)]]">
        </iron-icon>
      </cr-button>
      <iron-collapse id="advancedSubmenu" opened="[[advancedOpened]]">
        <iron-selector id="subMenu" selectable="a" attr-for-selected="href" role="navigation" on-click="onLinkClick_">
          <a href="/dateTime" class="item">
            <iron-icon icon="os-settings:access-time"></iron-icon>
            Date and time
          </a>
          <template is="dom-if" if="[[!isAccountManagementFlowsV2Enabled_]]">
            <a href="/osPrivacy" class="item">
              <iron-icon icon="cr:security"></iron-icon>
              Security and Privacy
            </a>
          </template>
          <a href="/osLanguages" class="item">
            <iron-icon icon="os-settings:language"></iron-icon>
            Languages and inputs
          </a>
          <a href="/files" hidden="[[isGuestMode_]]" class="item">
            <iron-icon icon="os-settings:folder-outline"></iron-icon>
            Files
          </a>
          <a href="/osPrinting" class="item">
            <iron-icon icon="os-settings:print"></iron-icon>
            Print and scan
          </a>
          <a href="/crostini" hidden="[[!showCrostini]]" class="item">
            <iron-icon icon="os-settings:developer-tags"></iron-icon>
            Developers
          </a>
          <a href="/osAccessibility" class="item">
            <iron-icon icon="os-settings:accessibility"></iron-icon>
            Accessibility
          </a>
          <a id="osReset" href="/osReset" hidden="[[!showReset]]" class="item">
            <iron-icon icon="os-settings:restore"></iron-icon>
            Reset settings
          </a>
        </iron-selector>
      </iron-collapse>
      <div id="menuSeparator"></div>
      <!-- FYDEOS BEGIN -->
      <a href="/fydeos" class="item">
        FydeOS settings
      </a>
      <!-- FYDEOS END -->
      <a id="aboutItem" href="/help" class="item">
        About FydeOS
      </a>
    </iron-selector>
<!--_html_template_end_-->`,is:"os-settings-menu",behaviors:[RouteObserverBehavior],properties:{advancedOpened:{type:Boolean,value:false,notify:true},isGuestMode_:{type:Boolean,value:loadTimeData$1.getBoolean("isGuest"),readOnly:true},showCrostini:Boolean,showStartup:Boolean,showReset:Boolean,showKerberosSection:Boolean,isAccountManagementFlowsV2Enabled_:{type:Boolean,value(){return loadTimeData$1.getBoolean("isAccountManagementFlowsV2Enabled")},readOnly:true}},currentRouteChanged(newRoute){const urlSearchQuery=Router.getInstance().getQueryParameters().get("search");if(urlSearchQuery&&routes.ADVANCED&&routes.ADVANCED.contains(newRoute)){this.advancedOpened=true}const anchors=this.root.querySelectorAll("a");for(let i=0;i<anchors.length;++i){const anchorRoute=Router.getInstance().getRouteForPath(anchors[i].getAttribute("href"));if(anchorRoute&&anchorRoute.contains(newRoute)){this.setSelectedUrl_(anchors[i].href);return}}this.setSelectedUrl_("")},onAdvancedButtonToggle_(){this.advancedOpened=!this.advancedOpened},onLinkClick_(event){if(event.target.matches("a")){event.preventDefault()}},setSelectedUrl_(url){this.$.topMenu.selected=this.$.subMenu.selected=url},onSelectorActivate_(event){this.setSelectedUrl_(event.detail.selected)},arrowState_(opened){return opened?"cr:arrow-drop-up":"cr:arrow-drop-down"},isAdvancedSubmenuOpenedForTest(){const submenu=this.$.advancedSubmenu;return submenu.opened},boolToString_(bool){return bool.toString()},attached:function(){const elementsToHide=["multidevice"];const that=this;setTimeout((()=>{elementsToHide.forEach((ele=>{const node=that.$$(`a#${ele}`);if(node)node.style.display="none"}))}),0)}});// Copyright 2016 The Chromium Authors. All rights reserved.
Polymer({is:"cr-drawer",_template:html`<!--css-build:shadow--><!--_html_template_start_--><style scope="cr-drawer">:host dialog {
  --drawer-width: 256px;
        --transition-timing: 200ms ease;
        background-color: var(--cr-drawer-background-color, #fff);
        border: none;
        bottom: 0;
        left: calc(-1 * var(--drawer-width));
        margin: 0;
        max-height: initial;
        max-width: initial;
        overflow: hidden;
        padding: 0;
        position: absolute;
        top: 0;
        transition: left var(--transition-timing);
        width: var(--drawer-width);
}

@media (prefers-color-scheme: dark) {
:host dialog {
  background: var(--cr-drawer-background-color, var(--google-grey-900))
              linear-gradient(rgba(255, 255, 255, .04), rgba(255, 255, 255, .04));
}

}

:host dialog, #container {
  height: 100%;
        word-break: break-word;
}

:host([show_]) dialog {
  left: 0;
}

:host([align=rtl]) dialog {
  left: auto;
        right: calc(-1 * var(--drawer-width));
        transition: right var(--transition-timing);
}

:host([show_][align=rtl]) dialog {
  right: 0;
}

:host dialog::backdrop {
  background: rgba(0, 0, 0, 0.5);
        bottom: 0;
        left: 0;
        opacity: 0;
        position: absolute;
        right: 0;
        top: 0;
        transition: opacity var(--transition-timing);
}

:host([show_]) dialog::backdrop {
  opacity: 1;
}

.drawer-header {
  align-items: center;
        border-bottom: var(--cr-separator-line);
        color: var(--cr-drawer-header-color, inherit);
        display: flex;
        font-size: 123.08%;  
        font-weight: var(--cr-drawer-header-font-weight, inherit);
        min-height: 56px;
        padding-inline-start: var(--cr-drawer-header-padding, 24px);
}

@media (prefers-color-scheme: dark) {
.drawer-header {
  color: var(--cr-primary-text-color);
}

}

#heading {
  outline: none;
}

#iconButton {
  cursor: pointer;
        margin-inline-end: 14px;
        margin-inline-start: 0;
        outline: none;
}

:host ::slotted(.drawer-content) {
  height: calc(100% - 56px);
        overflow: auto;
}

</style>
    <dialog id="dialog" on-cancel="onDialogCancel_" on-click="onDialogTap_" on-close="onDialogClose_">
      <div id="container" on-click="onContainerTap_">
        <div class="drawer-header">
          <!-- Hidden from a11y because this icon is decorative. Clicking closes
              the dialog, but screen reader users can do this by pressing ESC,
              so aria-hidden is OK here. -->
          <iron-icon id="iconButton" icon="[[iconName]]" on-click="onIconTap_" title="[[iconTitle]]" hidden="[[!iconName]]" aria-hidden="true">
          </iron-icon>
          <div id="heading" tabindex="-1">[[heading]]</div>
        </div>
        <slot></slot>
      </div>
    </dialog>
<!--_html_template_end_-->`,properties:{heading:String,show_:{type:Boolean,reflectToAttribute:true},align:{type:String,value:"ltr",reflectToAttribute:true},iconName:{type:String,value:null},iconTitle:String},get open(){return this.$.dialog.open},set open(value){assertNotReached$1("Cannot set |open|.")},toggle(){if(this.open){this.cancel()}else{this.openDrawer()}},openDrawer(){if(this.open){return}this.$.dialog.showModal();this.show_=true;this.fire("cr-drawer-opening");listenOnce(this.$.dialog,"transitionend",(()=>{this.fire("cr-drawer-opened")}))},dismiss_(cancel){if(!this.open){return}this.show_=false;listenOnce(this.$.dialog,"transitionend",(()=>{this.$.dialog.close(cancel?"canceled":"closed")}))},cancel(){this.dismiss_(true)},close(){this.dismiss_(false)},wasCanceled(){return!this.open&&this.$.dialog.returnValue==="canceled"},onIconTap_(event){this.cancel()},onContainerTap_(event){event.stopPropagation()},onDialogTap_(){this.cancel()},onDialogCancel_(event){event.preventDefault();this.cancel()},onDialogClose_(event){this.fire("close")}});// Copyright 2021 The Chromium Authors. All rights reserved.
const template$d=document.createElement("template");template$d.innerHTML=`<dom-module id="cr-page-host-style" assetpath="chrome://resources/">\n\x3c!--_html_template_start_--\x3e\n\x3c!--\n  Common CSS properties for WebUI pages, such as an entire page or a standalone\n  dialog. The CSS here is in its own file so that the properties can be imported\n  independently and applied directly to the :host element without having to\n  import other shared CSS.\n--\x3e\n<template>\n  <style scope="cr-page-host-style">:host {\n  color: var(--cr-primary-text-color);\n      line-height: 154%; \n      overflow: hidden; \n      user-select: text;\n}\n\n</style>\n</template>\n\x3c!--_html_template_end_--\x3e\n</dom-module>\n`;document.body.appendChild(template$d.content.cloneNode(true));// Copyright 2016 The Chromium Authors. All rights reserved.
const CrToolbarSearchFieldElementBase=mixinBehaviors(CrSearchFieldBehavior,PolymerElement);class CrToolbarSearchFieldElement extends CrToolbarSearchFieldElementBase{static get is(){return"cr-toolbar-search-field"}static get template(){return html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-shared-style cr-icons" scope="cr-toolbar-search-field">:host {
  align-items: center;
        display: flex;
        height: 40px;
        transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1),
            width 150ms cubic-bezier(0.4, 0, 0.2, 1);
        width: 44px;
}

[hidden] {
  display: none !important;
}

cr-icon-button {
  --cr-icon-button-size: var(--cr-toolbar-icon-container-size, 32px);
        margin: var(--cr-toolbar-icon-margin, 6px);
}

@media (prefers-color-scheme: light) {
cr-icon-button {
  --cr-icon-button-focus-outline-color: var(
              --cr-toolbar-icon-button-focus-outline-color,
              white);
          --cr-icon-button-fill-color: var(
              --cr-toolbar-search-field-input-icon-color,
              white);
}

}

@media (prefers-color-scheme: dark) {
cr-icon-button {
  --cr-icon-button-fill-color: var(
              --cr-toolbar-search-field-input-icon-color,
              var(--google-grey-refresh-500));
}

}

#icon {
  transition: margin 150ms, opacity 200ms;
}

#prompt {
  color: var(--cr-toolbar-search-field-prompt-color, white);
        opacity: 0;
}

@media (prefers-color-scheme: dark) {
#prompt {
  --cr-toolbar-search-field-prompt-opacity: 1;
          color: var(--cr-secondary-text-color, white);
}

}

paper-spinner-lite {
  --paper-spinner-color:
            var(--cr-toolbar-search-field-input-icon-color, white);
        height: var(--cr-icon-size);
        margin: var(--cr-toolbar-search-field-paper-spinner-margin, 0 6px);
        opacity: 0;
        padding: 6px;
        position: absolute;
        width: var(--cr-icon-size);
}

paper-spinner-lite[active] {
  opacity: 1;
}

#prompt, paper-spinner-lite {
  transition: opacity 200ms;
}

#searchTerm {
  -webkit-font-smoothing: antialiased;
        flex: 1;
        line-height: 185%;
        margin: var(--cr-toolbar-search-field-term-margin, 0 2px);
        position: relative;
}

label {
  bottom: 0;
        cursor: var(--cr-toolbar-search-field-cursor, text);
        left: 0;
        overflow: hidden;
        position: absolute;
        right: 0;
        top: 0;
        white-space: nowrap;
}

:host([has-search-text]) label {
  visibility: hidden;
}

input {
  -webkit-appearance: none;
        background: transparent;
        border: none;
        color: var(--cr-toolbar-search-field-input-text-color, white);
        cursor: var(--cr-toolbar-search-field-cursor, text);
        font: inherit;
        outline: none;
        padding: 0;
        position: relative;
        width: 100%;
}

input[type='search']::-webkit-search-cancel-button {
  display: none;
}

:host([narrow]) {
  border-radius:
            var(--cr-toolbar-search-field-border-radius, 0);
}

:host(:not([narrow])) {
  background:
            var(--cr-toolbar-search-field-background, rgba(0, 0, 0, 0.22));
        border-radius:
            var(--cr-toolbar-search-field-border-radius, 2px);
        cursor: var(--cr-toolbar-search-field-cursor, text);
        padding-inline-end: 0;
        width: var(--cr-toolbar-field-width, 680px);
}

:host(:not([narrow]):not([showing-search])) #icon {
  opacity: var(--cr-toolbar-search-field-icon-opacity, .7);
}

:host(:not([narrow])) #prompt {
  opacity: var(--cr-toolbar-search-field-prompt-opacity, .7);
}

:host([narrow]) #prompt {
  opacity: var(--cr-toolbar-search-field-narrow-mode-prompt-opacity, 0);
}

:host([narrow]:not([showing-search])) #searchTerm {
  display: none;
}

:host([showing-search][spinner-active]) #icon {
  opacity: 0;
}

:host([narrow][showing-search]) {
  width: 100%;
}

:host([narrow][showing-search]) #icon, :host([narrow][showing-search]) paper-spinner-lite {
  margin-inline-start:
            var(--cr-toolbar-search-icon-margin-inline-start, 18px);
}

</style>
    <template is="dom-if" id="spinnerTemplate">
      <paper-spinner-lite active="[[isSpinnerShown_]]">
      </paper-spinner-lite>
    </template>
    <cr-icon-button id="icon" iron-icon="cr:search" title="[[label]]" dir="ltr" tabindex$="[[computeIconTabIndex_(narrow, hasSearchText)]]" aria-hidden$="[[computeIconAriaHidden_(narrow, hasSearchText)]]" on-click="onSearchIconClicked_">
    </cr-icon-button>
    <div id="searchTerm">
      <label id="prompt" for="searchInput" aria-hidden="true">[[label]]</label>
      <input id="searchInput" aria-labelledby="prompt" autocapitalize="off" autocomplete="off" type="search" on-input="onSearchTermInput" on-search="onSearchTermSearch" on-keydown="onSearchTermKeydown_" on-focus="onInputFocus_" on-blur="onInputBlur_" autofocus$="[[autofocus]]" spellcheck="false">
    </div>
    <template is="dom-if" if="[[hasSearchText]]">
      <cr-icon-button id="clearSearch" iron-icon="cr:cancel" title="[[clearLabel]]" on-click="clearSearch_"></cr-icon-button>
    </template>
<!--_html_template_end_-->`}static get properties(){return{narrow:{type:Boolean,reflectToAttribute:true},showingSearch:{type:Boolean,value:false,notify:true,observer:"showingSearchChanged_",reflectToAttribute:true},autofocus:{type:Boolean,value:false,reflectToAttribute:true},label:String,clearLabel:String,spinnerActive:{type:Boolean,reflectToAttribute:true},isSpinnerShown_:{type:Boolean,computed:"computeIsSpinnerShown_(spinnerActive, showingSearch)"},searchFocused_:{type:Boolean,value:false}}}ready(){super.ready();this.addEventListener("click",(e=>this.showSearch_(e)))}getSearchInput(){return this.$.searchInput}isSearchFocused(){return this.searchFocused_}showAndFocus(){this.showingSearch=true;this.focus_()}onSearchTermInput(){CrSearchFieldBehavior.onSearchTermInput.call(this);this.showingSearch=this.hasSearchText||this.isSearchFocused()}onSearchIconClicked_(){this.dispatchEvent(new CustomEvent("search-icon-clicked",{bubbles:true,composed:true}))}focus_(){this.getSearchInput().focus()}computeIconTabIndex_(narrow){return narrow&&!this.hasSearchText?0:-1}computeIconAriaHidden_(narrow){return Boolean(!narrow||this.hasSearchText).toString()}computeIsSpinnerShown_(){const showSpinner=this.spinnerActive&&this.showingSearch;if(showSpinner){this.$.spinnerTemplate.if=true}return showSpinner}onInputFocus_(){this.searchFocused_=true}onInputBlur_(){this.searchFocused_=false;if(!this.hasSearchText){this.showingSearch=false}}onSearchTermKeydown_(e){if(e.key==="Escape"){this.showingSearch=false}}showSearch_(e){if(e.target!==this.$.clearSearch){this.showingSearch=true}}clearSearch_(e){this.setValue("");this.focus_();this.spinnerActive=false}showingSearchChanged_(current,previous){if(previous===undefined){return}if(this.showingSearch){this.focus_();return}this.setValue("");this.getSearchInput().blur()}}customElements.define(CrToolbarSearchFieldElement.is,CrToolbarSearchFieldElement);
/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/Polymer({is:"iron-media-query",properties:{queryMatches:{type:Boolean,value:false,readOnly:true,notify:true},query:{type:String,observer:"queryChanged"},full:{type:Boolean,value:false},_boundMQHandler:{value:function(){return this.queryHandler.bind(this)}},_mq:{value:null}},attached:function(){this.style.display="none";this.queryChanged()},detached:function(){this._remove()},_add:function(){if(this._mq){this._mq.addListener(this._boundMQHandler)}},_remove:function(){if(this._mq){this._mq.removeListener(this._boundMQHandler)}this._mq=null},queryChanged:function(){this._remove();var query=this.query;if(!query){return}if(!this.full&&query[0]!=="("){query="("+query+")"}this._mq=window.matchMedia(query);this._add();this.queryHandler(this._mq)},queryHandler:function(mq){this._setQueryMatches(mq.matches)}});mojo.internal.exportModule("chromeos.settings.mojom");chromeos.settings.mojom.SearchResultIconSpec={$:mojo.internal.Enum()};chromeos.settings.mojom.SearchResultIcon={kA11y:0,kAndroid:1,kAppsGrid:2,kAssistant:3,kAuthKey:4,kAvatar:5,kBluetooth:6,kCellular:7,kChrome:8,kClock:9,kDeveloperTags:10,kDisplay:11,kDrive:12,kEthernet:13,kFingerprint:14,kFolder:15,kGlobe:16,kGooglePlay:17,kHardDrive:18,kInstantTethering:19,kKeyboard:20,kLaptop:21,kLock:22,kMagnifyingGlass:23,kMessages:24,kMouse:25,kNearbyShare:26,kPaintbrush:27,kPenguin:28,kPhone:29,kPluginVm:30,kPower:31,kPrinter:32,kReset:33,kShield:34,kStartup:35,kStylus:36,kSync:37,kWallpaper:38,kWifi:39,MIN_VALUE:0,MAX_VALUE:39};mojo.internal.exportModule("chromeos.settings.mojom");chromeos.settings.mojom.SearchResultTypeSpec={$:mojo.internal.Enum()};chromeos.settings.mojom.SearchResultType={kSection:0,kSubpage:1,kSetting:2,MIN_VALUE:0,MAX_VALUE:2};chromeos.settings.mojom.SearchResultDefaultRankSpec={$:mojo.internal.Enum()};chromeos.settings.mojom.SearchResultDefaultRank={kHigh:0,kMedium:1,kLow:2,MIN_VALUE:0,MAX_VALUE:2};chromeos.settings.mojom.ParentResultBehaviorSpec={$:mojo.internal.Enum()};chromeos.settings.mojom.ParentResultBehavior={kAllowParentResults:0,kDoNotIncludeParentResults:1,MIN_VALUE:0,MAX_VALUE:1};chromeos.settings.mojom.SearchResultsObserverPendingReceiver=class{constructor(handle){this.handle=mojo.internal.interfaceSupport.getEndpointForReceiver(handle)}bindInBrowser(scope="context"){mojo.internal.interfaceSupport.bind(this.handle,chromeos.settings.mojom.SearchResultsObserver.$interfaceName,scope)}};chromeos.settings.mojom.SearchResultsObserverRemote=class{constructor(handle=undefined){this.proxy=new mojo.internal.interfaceSupport.InterfaceRemoteBase(chromeos.settings.mojom.SearchResultsObserverPendingReceiver,handle);this.$=new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);this.onConnectionError=this.proxy.getConnectionErrorEventRouter()}onSearchResultAvailabilityChanged(){this.proxy.sendMessage(0,chromeos.settings.mojom.SearchResultsObserver_OnSearchResultAvailabilityChanged_ParamsSpec.$,null,[])}};chromeos.settings.mojom.SearchResultsObserverReceiver=class{constructor(impl){this.helper_internal_=new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(chromeos.settings.mojom.SearchResultsObserverRemote);this.$=new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);this.helper_internal_.registerHandler(0,chromeos.settings.mojom.SearchResultsObserver_OnSearchResultAvailabilityChanged_ParamsSpec.$,null,impl.onSearchResultAvailabilityChanged.bind(impl));this.onConnectionError=this.helper_internal_.getConnectionErrorEventRouter()}};chromeos.settings.mojom.SearchResultsObserver=class{static get $interfaceName(){return"chromeos.settings.mojom.SearchResultsObserver"}static getRemote(){let remote=new chromeos.settings.mojom.SearchResultsObserverRemote;remote.$.bindNewPipeAndPassReceiver().bindInBrowser();return remote}};chromeos.settings.mojom.SearchResultsObserverCallbackRouter=class{constructor(){this.helper_internal_=new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(chromeos.settings.mojom.SearchResultsObserverRemote);this.$=new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);this.router_=new mojo.internal.interfaceSupport.CallbackRouter;this.onSearchResultAvailabilityChanged=new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);this.helper_internal_.registerHandler(0,chromeos.settings.mojom.SearchResultsObserver_OnSearchResultAvailabilityChanged_ParamsSpec.$,null,this.onSearchResultAvailabilityChanged.createReceiverHandler(false));this.onConnectionError=this.helper_internal_.getConnectionErrorEventRouter()}removeListener(id){return this.router_.removeListener(id)}};chromeos.settings.mojom.SearchHandlerPendingReceiver=class{constructor(handle){this.handle=mojo.internal.interfaceSupport.getEndpointForReceiver(handle)}bindInBrowser(scope="context"){mojo.internal.interfaceSupport.bind(this.handle,chromeos.settings.mojom.SearchHandler.$interfaceName,scope)}};chromeos.settings.mojom.SearchHandlerRemote=class{constructor(handle=undefined){this.proxy=new mojo.internal.interfaceSupport.InterfaceRemoteBase(chromeos.settings.mojom.SearchHandlerPendingReceiver,handle);this.$=new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);this.onConnectionError=this.proxy.getConnectionErrorEventRouter()}search(query,maxNumResults,parentResultBehavior){return this.proxy.sendMessage(0,chromeos.settings.mojom.SearchHandler_Search_ParamsSpec.$,chromeos.settings.mojom.SearchHandler_Search_ResponseParamsSpec.$,[query,maxNumResults,parentResultBehavior])}observe(observer){this.proxy.sendMessage(1,chromeos.settings.mojom.SearchHandler_Observe_ParamsSpec.$,null,[observer])}};chromeos.settings.mojom.SearchHandlerReceiver=class{constructor(impl){this.helper_internal_=new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(chromeos.settings.mojom.SearchHandlerRemote);this.$=new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);this.helper_internal_.registerHandler(0,chromeos.settings.mojom.SearchHandler_Search_ParamsSpec.$,chromeos.settings.mojom.SearchHandler_Search_ResponseParamsSpec.$,impl.search.bind(impl));this.helper_internal_.registerHandler(1,chromeos.settings.mojom.SearchHandler_Observe_ParamsSpec.$,null,impl.observe.bind(impl));this.onConnectionError=this.helper_internal_.getConnectionErrorEventRouter()}};chromeos.settings.mojom.SearchHandler=class{static get $interfaceName(){return"chromeos.settings.mojom.SearchHandler"}static getRemote(){let remote=new chromeos.settings.mojom.SearchHandlerRemote;remote.$.bindNewPipeAndPassReceiver().bindInBrowser();return remote}};chromeos.settings.mojom.SearchHandlerCallbackRouter=class{constructor(){this.helper_internal_=new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(chromeos.settings.mojom.SearchHandlerRemote);this.$=new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);this.router_=new mojo.internal.interfaceSupport.CallbackRouter;this.search=new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);this.helper_internal_.registerHandler(0,chromeos.settings.mojom.SearchHandler_Search_ParamsSpec.$,chromeos.settings.mojom.SearchHandler_Search_ResponseParamsSpec.$,this.search.createReceiverHandler(true));this.observe=new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);this.helper_internal_.registerHandler(1,chromeos.settings.mojom.SearchHandler_Observe_ParamsSpec.$,null,this.observe.createReceiverHandler(false));this.onConnectionError=this.helper_internal_.getConnectionErrorEventRouter()}removeListener(id){return this.router_.removeListener(id)}};chromeos.settings.mojom.SearchResultSpec={$:{}};chromeos.settings.mojom.SearchResultsObserver_OnSearchResultAvailabilityChanged_ParamsSpec={$:{}};chromeos.settings.mojom.SearchHandler_Search_ParamsSpec={$:{}};chromeos.settings.mojom.SearchHandler_Search_ResponseParamsSpec={$:{}};chromeos.settings.mojom.SearchHandler_Observe_ParamsSpec={$:{}};chromeos.settings.mojom.SearchResultIdentifierSpec={$:{}};mojo.internal.Struct(chromeos.settings.mojom.SearchResultSpec.$,"SearchResult",[mojo.internal.StructField("resultText",0,0,mojoBase.mojom.String16Spec.$,null,false),mojo.internal.StructField("canonicalResultText",8,0,mojoBase.mojom.String16Spec.$,null,false),mojo.internal.StructField("urlPathWithParameters",16,0,mojo.internal.String,null,false),mojo.internal.StructField("icon",24,0,chromeos.settings.mojom.SearchResultIconSpec.$,0,false),mojo.internal.StructField("relevanceScore",32,0,mojo.internal.Double,0,false),mojo.internal.StructField("settingsPageHierarchy",40,0,mojo.internal.Array(mojoBase.mojom.String16Spec.$,false),null,false),mojo.internal.StructField("defaultRank",28,0,chromeos.settings.mojom.SearchResultDefaultRankSpec.$,0,false),mojo.internal.StructField("wasGeneratedFromTextMatch",48,0,mojo.internal.Bool,false,false),mojo.internal.StructField("type",52,0,chromeos.settings.mojom.SearchResultTypeSpec.$,0,false),mojo.internal.StructField("id",56,0,chromeos.settings.mojom.SearchResultIdentifierSpec.$,null,false)],[[0,80]]);chromeos.settings.mojom.SearchResult=class{constructor(){this.resultText;this.canonicalResultText;this.urlPathWithParameters;this.icon;this.defaultRank;this.relevanceScore;this.settingsPageHierarchy;this.wasGeneratedFromTextMatch;this.type;this.id}};mojo.internal.Struct(chromeos.settings.mojom.SearchResultsObserver_OnSearchResultAvailabilityChanged_ParamsSpec.$,"SearchResultsObserver_OnSearchResultAvailabilityChanged_Params",[],[[0,8]]);chromeos.settings.mojom.SearchResultsObserver_OnSearchResultAvailabilityChanged_Params=class{constructor(){}};mojo.internal.Struct(chromeos.settings.mojom.SearchHandler_Search_ParamsSpec.$,"SearchHandler_Search_Params",[mojo.internal.StructField("query",0,0,mojoBase.mojom.String16Spec.$,null,false),mojo.internal.StructField("maxNumResults",8,0,mojo.internal.Uint32,0,false),mojo.internal.StructField("parentResultBehavior",12,0,chromeos.settings.mojom.ParentResultBehaviorSpec.$,0,false)],[[0,24]]);chromeos.settings.mojom.SearchHandler_Search_Params=class{constructor(){this.query;this.maxNumResults;this.parentResultBehavior}};mojo.internal.Struct(chromeos.settings.mojom.SearchHandler_Search_ResponseParamsSpec.$,"SearchHandler_Search_ResponseParams",[mojo.internal.StructField("results",0,0,mojo.internal.Array(chromeos.settings.mojom.SearchResultSpec.$,false),null,false)],[[0,16]]);chromeos.settings.mojom.SearchHandler_Search_ResponseParams=class{constructor(){this.results}};mojo.internal.Struct(chromeos.settings.mojom.SearchHandler_Observe_ParamsSpec.$,"SearchHandler_Observe_Params",[mojo.internal.StructField("observer",0,0,mojo.internal.InterfaceProxy(chromeos.settings.mojom.SearchResultsObserverRemote),null,false)],[[0,16]]);chromeos.settings.mojom.SearchHandler_Observe_Params=class{constructor(){this.observer}};mojo.internal.Union(chromeos.settings.mojom.SearchResultIdentifierSpec.$,"SearchResultIdentifier",{section:{ordinal:0,type:chromeos.settings.mojom.SectionSpec.$},subpage:{ordinal:1,type:chromeos.settings.mojom.SubpageSpec.$},setting:{ordinal:2,type:chromeos.settings.mojom.SettingSpec.$}});chromeos.settings.mojom.SearchResultIdentifier;// Copyright 2020 The Chromium Authors. All rights reserved.
let settingsSearchHandler=null;function setSearchHandlerForTesting(testSearchHandler){settingsSearchHandler=testSearchHandler}function getSearchHandler(){if(settingsSearchHandler){return settingsSearchHandler}settingsSearchHandler=chromeos.settings.mojom.SearchHandler.getRemote();return settingsSearchHandler}// Copyright 2020 The Chromium Authors. All rights reserved.
function longestCommonSubstrings(string1,string2){let maxLength=0;let string1StartingIndices=[];const dp=Array(string1.length+1).fill([]).map((()=>Array(string2.length+1).fill(0)));for(let i=string1.length-1;i>=0;i--){for(let j=string2.length-1;j>=0;j--){if(string1[i]!==string2[j]){continue}dp[i][j]=dp[i+1][j+1]+1;if(maxLength===dp[i][j]){string1StartingIndices.unshift(i)}if(maxLength<dp[i][j]){maxLength=dp[i][j];string1StartingIndices=[i]}}}return string1StartingIndices.map((idx=>string1.substr(idx,maxLength)))}const DELOCALIZED_HYPHEN="-";const HYPHENS=["-","~","ÖŠ","Ö¾","á †","â€","â€‘","â€’","â€“","â€”","â€•","â“","â»","â‚‹","âˆ’","â¸º","â¸»","ã€œ","ã€°","ã‚ ","ï¹˜","ï¹£","ï¼"];const HYPHENS_REGEX_STR=`[${HYPHENS.join("")}]`;const HYPHENS_REGEX=new RegExp(HYPHENS_REGEX_STR,"g");function removeAccents(sourceString){return sourceString.toLocaleLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g,"")}function normalizeString(sourceString){return removeAccents(sourceString).replace(HYPHENS_REGEX,"")}function boldSubStrings(sourceString,substringsToBold){if(!substringsToBold||!substringsToBold.length){return sourceString}const subStrRegex=new RegExp("()("+substringsToBold.join("|")+")()","ig");return sourceString.replace(subStrRegex,(match=>match.bold()))}Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="os-search-result-row">:host {
  width: 100%;
}

:host([selected]) [focus-row-container] {
  background-color: var(--cros-menu-button-bg-color-active);
}

:host(:not([selected])) [focus-row-container]:hover {
  background-color: var(--cros-menu-button-bg-color-hover);
}

:host-context([dir=rtl]) #actionTypeIcon {
  transform: scaleX(-1);
}

[focus-row-container] {
  width: inherit;
}

#searchResultContainer {
  align-items: center;
        display: flex;
        height: 40px;
        justify-content: center;
}

#resultText {
  flex-grow: 1;
        margin: var(--cr-toolbar-search-field-term-margin);
}

iron-icon {
  margin: var(--cr-toolbar-icon-margin);
        width: var(--cr-toolbar-icon-container-size);
}

b {
  color: var(--cr-primary-text-color);
}

</style>
    <div focus-row-container="">
      <!-- The focus-row-control is aria-disabled because the aria-label of
           this element (:host) will include instructions on how to navigate
           to a selection.-->
      <div focus-row-control="" focus-type="rowWrapper" id="searchResultContainer" on-click="navigateToSearchResultRoute" on-keypress="onKeyPress_" aria-disabled="true" selectable="">
        <iron-icon id="resultIcon" icon="[[getResultIcon_(searchResult)]]">
        </iron-icon>
        <div id="resultText" aria-hidden="true" inner-h-t-m-l="[[getResultInnerHtml_(searchResult)]]">
        </div>
        <iron-icon id="actionTypeIcon" icon="cr:arrow-forward">
        </iron-icon>
      </div>
    </div>
<!--_html_template_end_-->`,is:"os-search-result-row",behaviors:[I18nBehavior,FocusRowBehavior],properties:{selected:{type:Boolean,reflectToAttribute:true,observer:"makeA11yAnnouncementIfSelectedAndUnfocused_"},ariaLabel:{type:String,computed:"computeAriaLabel_(searchResult)",reflectToAttribute:true},searchQuery:String,searchResult:Object,listLength:Number,resultText_:{type:String,computed:"computeResultText_(searchResult)"}},attached(){IronA11yAnnouncer.requestAvailability()},makeA11yAnnouncementIfSelectedAndUnfocused_(){if(!this.selected||this.lastFocused){return}this.fire("iron-announce",{text:this.ariaLabel})},computeResultText_(){return String.fromCharCode.apply(null,this.searchResult.resultText.data)},getMatchingIndividualCharsBolded_(){return boldSubStrings(this.resultText_,this.searchQuery.split(""))},getModifiedInnerHtmlToken_(innerHtmlToken,normalizedQuery,queryTokens){const normalizedToken=normalizeString(innerHtmlToken);if(normalizedQuery.includes(normalizedToken)){return normalizedToken?innerHtmlToken.bold():innerHtmlToken}const queryTokenFilter=queryToken=>!!queryToken&&normalizedToken.includes(queryToken);const queryTokenToSegment=queryToken=>{const regExpStr=queryToken.split("").join(`${HYPHENS_REGEX_STR}*`);const innerHtmlTokenNoAccents=removeAccents(innerHtmlToken);const matchesNoAccents=innerHtmlTokenNoAccents.match(new RegExp(regExpStr,"g"));return matchesNoAccents.map((match=>innerHtmlToken.toLocaleLowerCase().substr(innerHtmlTokenNoAccents.indexOf(match),match.length)))};const matches=queryTokens.filter(queryTokenFilter).map(queryTokenToSegment).flat();if(!matches.length){return innerHtmlToken}const maxStrLen=matches.reduce(((a,b)=>a.length>b.length?a:b)).length;const bolded=matches.filter((sourceString=>sourceString.length===maxStrLen));return boldSubStrings(innerHtmlToken,bolded)},generateQueryTokens_(normalizedQuery){const normalizedResultText=normalizeString(this.resultText_);const segmentToTokenMap=new Map;normalizedQuery.split(/\s/).forEach((querySegment=>{const queryTokens=longestCommonSubstrings(querySegment,normalizedResultText);if(segmentToTokenMap.has(querySegment)){const segmentTokens=segmentToTokenMap.get(querySegment).concat(queryTokens);segmentToTokenMap.set(querySegment,segmentTokens);return}segmentToTokenMap.set(querySegment,queryTokens)}));const getLongestTokensPerSegment=([querySegment,queryTokens])=>{if(!queryTokens.length){return[]}const maxLengthQueryToken=Math.max(...queryTokens.map((queryToken=>queryToken.length)));if(maxLengthQueryToken===1&&querySegment.length>1){return[]}return queryTokens.filter((queryToken=>queryToken.length===maxLengthQueryToken))};const inOrderTokenGroups=Array.from(segmentToTokenMap).map(getLongestTokensPerSegment);const inOrderTokens=[...new Set(inOrderTokenGroups.flat())];return this.mergeValidTokensToCompounded_(inOrderTokens)},mergeValidTokensToCompounded_(inOrderQueryTokens){const longestCompoundWordTokens=[];const hyphenatedResultText=removeAccents(this.resultText_).replace(HYPHENS_REGEX,DELOCALIZED_HYPHEN);let i=0;while(i<inOrderQueryTokens.length){let prefixToken=inOrderQueryTokens[i];i++;while(i<inOrderQueryTokens.length){const compoundToken=prefixToken+DELOCALIZED_HYPHEN+inOrderQueryTokens[i];if(!hyphenatedResultText.includes(compoundToken)){break}prefixToken=compoundToken;i++}longestCompoundWordTokens.push(prefixToken)}return longestCompoundWordTokens.map((token=>normalizeString(token)))},getTokenizeMatchedBoldTagged_(){const normalizedQuery=normalizeString(this.searchQuery);const queryTokens=this.generateQueryTokens_(normalizedQuery);const innerHtmlTokensWithBoldTags=this.resultText_.split(/\s/).map((innerHtmlToken=>this.getModifiedInnerHtmlToken_(innerHtmlToken,normalizedQuery,queryTokens)));const blankspaces=this.resultText_.match(/\s/g);if(!blankspaces){return innerHtmlTokensWithBoldTags.join("")}return innerHtmlTokensWithBoldTags.map(((token,idx)=>idx!==blankspaces.length?token+blankspaces[idx]:token)).join("")},getResultInnerHtml_(){if(!this.searchResult.wasGeneratedFromTextMatch){return this.resultText_}if(this.resultText_.match(/\s/)||this.resultText_.toLocaleLowerCase()!==this.resultText_.toLocaleUpperCase()){return this.getTokenizeMatchedBoldTagged_()}return this.getMatchingIndividualCharsBolded_()},computeAriaLabel_(){return this.i18n("searchResultSelected",this.focusRowIndex+1,this.listLength,this.computeResultText_())},onKeyPress_(e){if(e.key==="Enter"){e.stopPropagation();this.navigateToSearchResultRoute()}},recordSearchResultMetrics_(){const SearchResultType=chromeos.settings.mojom.SearchResultType;chrome.metricsPrivate.recordEnumerationValue("ChromeOS.Settings.SearchResultTypeSelected",this.searchResult.type,SearchResultType.MAX_VALUE);const metricArgs=(type,id)=>{switch(type){case SearchResultType.kSection:return{metricName:"ChromeOS.Settings.SearchResultSectionSelected",value:id.section};case SearchResultType.kSubpage:return{metricName:"ChromeOS.Settings.SearchResultSubpageSelected",value:id.subpage};case SearchResultType.kSetting:return{metricName:"ChromeOS.Settings.SearchResultSettingSelected",value:id.setting};default:assertNotReached$1("Search Result Type not specified.");return null}};const args=metricArgs(this.searchResult.type,this.searchResult.id);chrome.metricsPrivate.recordSparseValue(args.metricName,args.value)},navigateToSearchResultRoute(){assert(this.searchResult.urlPathWithParameters,"Url path is empty.");this.recordSearchResultMetrics_();const pathAndOptParams=this.searchResult.urlPathWithParameters.split("?");assert(pathAndOptParams.length<=2,"Path and params format error.");const route=assert(Router.getInstance().getRouteForPath("/"+pathAndOptParams[0]),"Supplied path does not map to an existing route.");const paramsString=`search=${encodeURIComponent(this.searchQuery)}`+(pathAndOptParams.length===2?`&${pathAndOptParams[1]}`:``);const params=new URLSearchParams(paramsString);Router.getInstance().navigateTo(route,params);this.fire("navigated-to-result-route")},getResultIcon_(){const Icon=chromeos.settings.mojom.SearchResultIcon;switch(this.searchResult.icon){case Icon.kA11y:return"os-settings:accessibility";case Icon.kAndroid:return"os-settings:android";case Icon.kAppsGrid:return"os-settings:apps";case Icon.kAssistant:return"os-settings:assistant";case Icon.kAuthKey:return"os-settings:auth-key";case Icon.kAvatar:return"cr:person";case Icon.kBluetooth:return"cr:bluetooth";case Icon.kCellular:return"os-settings:cellular";case Icon.kChrome:return"os-settings:chrome";case Icon.kClock:return"os-settings:access-time";case Icon.kDeveloperTags:return"os-settings:developer-tags";case Icon.kDisplay:return"os-settings:display";case Icon.kDrive:return"os-settings:google-drive";case Icon.kEthernet:return"os-settings:settings-ethernet";case Icon.kFingerprint:return"os-settings:fingerprint";case Icon.kFolder:return"os-settings:folder-outline";case Icon.kGlobe:return"os-settings:language";case Icon.kGooglePlay:return"os-settings:google-play";case Icon.kHardDrive:return"os-settings:hard-drive";case Icon.kInstantTethering:return"os-settings:magic-tethering";case Icon.kKeyboard:return"os-settings:keyboard";case Icon.kLaptop:return"os-settings:laptop-chromebook";case Icon.kLock:return"os-settings:lock";case Icon.kMagnifyingGlass:return"cr:search";case Icon.kMessages:return"os-settings:multidevice-messages";case Icon.kMouse:return"os-settings:mouse";case Icon.kNearbyShare:return"os-settings:nearby-share";case Icon.kPaintbrush:return"os-settings:paint-brush";case Icon.kPenguin:return"os-settings:crostini-mascot";case Icon.kPhone:return"os-settings:multidevice-better-together-suite";case Icon.kPluginVm:return"os-settings:plugin-vm";case Icon.kPower:return"os-settings:power";case Icon.kPrinter:return"os-settings:print";case Icon.kReset:return"os-settings:restore";case Icon.kShield:return"cr:security";case Icon.kStartup:return"os-settings:startup";case Icon.kStylus:return"os-settings:stylus";case Icon.kSync:return"os-settings:sync";case Icon.kWallpaper:return"os-settings:wallpaper";case Icon.kWifi:return"os-settings:network-wifi";default:return"os-settings:settings-general"}}});// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
const MAX_NUM_SEARCH_RESULTS=5;const SEARCH_REQUEST_METRIC_NAME="ChromeOS.Settings.SearchRequests";const USER_ACTION_ON_SEARCH_RESULTS_SHOWN_METRIC_NAME="ChromeOS.Settings.UserActionOnSearchResultsShown";const OsSettingSearchRequestTypes={ANY_SEARCH_REQUEST:0,DISCARED_RESULTS_SEARCH_REQUEST:1,SHOWN_RESULTS_SEARCH_REQUEST:2};const OsSettingSearchBoxUserAction={SEARCH_RESULT_CLICKED:0,CLICKED_OUT_OF_SEARCH_BOX:1};Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="settings-shared" scope="os-settings-search-box">:host {
  --cr-toolbar-focused-min-height: 40px;
        --cr-toolbar-icon-container-size: 32px;
        --cr-toolbar-icon-margin: 8px 16px;
        --cr-toolbar-search-field-icon-opacity: 1;
        --cr-toolbar-search-field-narrow-mode-prompt-opacity: 1;
        --cr-toolbar-search-field-prompt-opacity: 1;
        --cr-toolbar-search-icon-margin-inline-start: 16px;
        --cr-toolbar-query-exists-min-height:
            var(--cr-toolbar-focused-min-height);
        --separator-height: 8px;
        -webkit-tap-highlight-color: transparent;
        display: flex;
        flex-basis: var(--cr-toolbar-field-width);
        transition: width 150ms cubic-bezier(0.4, 0, 0.2, 1);
        width: var(--cr-toolbar-field-width);
}

@media (prefers-color-scheme: dark) {
:host {
  --cr-toolbar-search-field-narrow-mode-prompt-opacity: 1;
}

}

:host([narrow]:not([showing-search])) {
  flex-direction: row;
        justify-content: flex-end;
}

:host([narrow][showing-search]) {
  justify-content: center;
}

cr-toolbar-search-field {
  --cr-toolbar-search-field-term-margin: 0;
        --cr-toolbar-search-field-border-radius: 20px;
        --cr-toolbar-search-field-paper-spinner-margin: 0 12px;
        --cr-toolbar-search-field-input-icon-color:
            var(--cr-form-field-label-color);
        --cr-toolbar-search-field-input-text-color:
            var(--cr-primary-text-color);
        --cr-toolbar-icon-button-focus-outline-color:
            var(--cr-focus-outline-color);
        font-size: 13px;
}

:host([showing-search]) cr-toolbar-search-field {
  background:
            var(--cr-toolbar-search-field-background, rgba(0, 0, 0, 0.22));
}

:host([narrow]:not([showing-search])) cr-toolbar-search-field {
  padding-inline-end: 10px;
}

:host(:focus-within[showing-search]) cr-toolbar-search-field {
  --cr-toolbar-search-field-background: var(--cr-card-background-color);
        box-shadow: var(--cr-elevation-1);
        min-height: var(--cr-toolbar-focused-min-height);
}

:host([has-search-query]) cr-toolbar-search-field {
  min-height: var(--cr-toolbar-query-exists-min-height);
}

:host(:not(:focus-within)) cr-toolbar-search-field {
  --cr-toolbar-search-field-cursor: pointer;
}

:host(:focus-within[should-show-dropdown_]) cr-toolbar-search-field {
  --cr-toolbar-search-field-border-radius: 20px 20px 0 0;
        box-shadow: var(--cr-elevation-3);
        height: 56px;
        margin-top: var(--separator-height);
        padding-bottom: var(--separator-height);
}

iron-dropdown {
  margin-top: 74px;
}

iron-dropdown [slot='dropdown-content'] {
  background-color: var(--cr-menu-background-color);
        border-radius: 0 0 20px 20px;
        box-shadow: var(--cr-elevation-3);
        display: table;
        padding-bottom: 16px;
        width: var(--cr-toolbar-field-width);
}

iron-list {
  max-height: 50vh;
}

#noSearchResultsContainer {
  height: 24px;
        margin-inline-start: 64px;
        margin-top: var(--separator-height);
}

.separator {
  background-color: var(--cr-menu-background-color);
        border-bottom: none;
        border-inline-end: none;
        border-inline-start: none;
        border-top: 2px solid var(--cr-separator-color);
        height: var(--separator-height);
        margin-inline-end: 0;
        margin-inline-start: 0;
        margin-top: -10px;
}

</style>
    <cr-toolbar-search-field id="search" narrow="[[narrow]]" on-search-icon-clicked="onSearchIconClicked_" label="Search settings" clear-label="Clear search" showing-search="{{showingSearch}}" spinner-active="[[spinnerActive]]">
    </cr-toolbar-search-field>
    <iron-dropdown id="searchResults" opened="[[shouldShowDropdown_]]" allow-outside-scroll="" no-cancel-on-outside-click="">
      <!--  As part of iron-dropdown's behavior, the slot 'dropdown-content' is
            hidden until iron-dropdown's opened attribute is set true, or when
            iron-dropdown's open() is called on the JS side. -->
      <div slot="dropdown-content">
        <div class="separator"></div>
        <iron-list id="searchResultList" selection-enabled="" risk-selection="" items="[[searchResults_]]" selected-item="{{selectedItem_}}" on-selected-item-changed="onSelectedItemChanged_">
          <template>
            <os-search-result-row actionable="" search-result="[[item]]" search-query="[[getCurrentQuery_(searchResults_)]]" selected="[[isItemSelected_(item, selectedItem_)]]" tabindex$="[[getRowTabIndex_(item, selectedItem_,
                    shouldShowDropdown_)]]" iron-list-tab-index$="[[getRowTabIndex_(item, selectedItem_,
                    shouldShowDropdown_)]]" on-navigated-to-result-route="onNavigatedToResultRowRoute_" last-focused="{{lastFocused_}}" list-blurred="{{listBlurred_}}" list-length="[[getListLength_(searchResults_)]]" focus-row-index="[[index]]" first$="[[!index]]">
            </os-search-result-row>
          </template>
        </iron-list>
        <div id="noSearchResultsContainer" hidden="[[searchResultsExist_]]">
          No search results found
        </div>
      </div>
    </iron-dropdown>
<!--_html_template_end_-->`,is:"os-settings-search-box",behaviors:[I18nBehavior],searchResultObserverReceiver_:null,properties:{narrow:{type:Boolean,reflectToAttribute:true},showingSearch:{type:Boolean,value:false,notify:true,reflectToAttribute:true},hasSearchQuery:{type:Boolean,value:false,reflectToAttribute:true},spinnerActive:Boolean,selectedItem_:{type:Object},lastSelectedItem_:{type:Object},searchResults_:{type:Array,value:[],observer:"onSearchResultsChanged_"},shouldShowDropdown_:{type:Boolean,value:false,reflectToAttribute:true},searchResultsExist_:{type:Boolean,value:false,computed:"computeSearchResultsExist_(searchResults_)"},lastFocused_:Object,listBlurred_:Boolean,searchRequestCount_:{type:Number,value:0}},listeners:{blur:"onBlur_",keydown:"onKeyDown_","search-changed":"onSearchChanged_"},attached(){const toolbarSearchField=this.$.search;const searchInput=toolbarSearchField.getSearchInput();if(Router.getInstance().currentRoute===routes.BASIC){toolbarSearchField.showAndFocus()}searchInput.addEventListener("focus",this.onSearchInputFocused_.bind(this));searchInput.addEventListener("mousedown",this.onSearchInputMousedown_.bind(this));const urlSearchQuery=Router.getInstance().getQueryParameters().get("search")||"";toolbarSearchField.setValue(urlSearchQuery,true);IronA11yAnnouncer.requestAvailability();window.addEventListener("beforeunload",(()=>{chrome.metricsPrivate.recordSparseValue("ChromeOS.Settings.SearchRequestsPerSession",this.searchRequestCount_)}));this.searchResultObserverReceiver_=new chromeos.settings.mojom.SearchResultsObserverReceiver(this);getSearchHandler().observe(this.searchResultObserverReceiver_.$.bindNewPipeAndPassRemote())},detached(){this.searchResultObserverReceiver_.$.close()},onSearchResultAvailabilityChanged(){this.fetchSearchResults_()},getSelectedOsSearchResultRow_(){return assert(this.$.searchResultList.querySelector("os-search-result-row[selected]"),"No OsSearchResultRow is selected.")},getCurrentQuery_(){return this.$.search.getSearchInput().value},computeSearchResultsExist_(){return this.searchResults_.length!==0},onSearchChanged_(){this.hasSearchQuery=!!this.getCurrentQuery_();this.fetchSearchResults_()},fetchSearchResults_(){const query=this.getCurrentQuery_();if(query===""){this.searchResults_=[];return}this.spinnerActive=true;const queryMojoString16={data:Array.from(query,(c=>c.charCodeAt()))};const timeOfSearchRequest=Date.now();getSearchHandler().search(queryMojoString16,MAX_NUM_SEARCH_RESULTS,chromeos.settings.mojom.ParentResultBehavior.kAllowParentResults).then((response=>{const latencyMs=Date.now()-timeOfSearchRequest;chrome.metricsPrivate.recordTime("ChromeOS.Settings.SearchLatency",latencyMs);this.onSearchResultsReceived_(query,response.results);this.fire("search-results-fetched")}));++this.searchRequestCount_;chrome.metricsPrivate.recordEnumerationValue(SEARCH_REQUEST_METRIC_NAME,OsSettingSearchRequestTypes.ANY_SEARCH_REQUEST,Object.keys(OsSettingSearchRequestTypes).length);chrome.metricsPrivate.recordSparseValue("ChromeOS.Settings.NumCharsOfQueries",query.length)},onSearchResultsReceived_(query,results){chrome.metricsPrivate.recordSparseValue("ChromeOS.Settings.NumSearchResultsFetched",results.length);const shouldDiscardResults=query!==this.getCurrentQuery_();chrome.metricsPrivate.recordEnumerationValue(SEARCH_REQUEST_METRIC_NAME,shouldDiscardResults?OsSettingSearchRequestTypes.DISCARED_RESULTS_SEARCH_REQUEST:OsSettingSearchRequestTypes.SHOWN_RESULTS_SEARCH_REQUEST,Object.keys(OsSettingSearchRequestTypes).length);if(shouldDiscardResults){return}this.spinnerActive=false;this.lastFocused_=null;this.searchResults_=results;recordSearch()},onNavigatedToResultRowRoute_(){this.$.search.blur();this.shouldShowDropdown_=false;chrome.metricsPrivate.recordEnumerationValue(USER_ACTION_ON_SEARCH_RESULTS_SHOWN_METRIC_NAME,OsSettingSearchBoxUserAction.SEARCH_RESULT_CLICKED,Object.keys(OsSettingSearchBoxUserAction).length)},onBlur_(e){e.stopPropagation();if(e.sourceCapabilities&&this.searchResultsExist_){chrome.metricsPrivate.recordEnumerationValue(USER_ACTION_ON_SEARCH_RESULTS_SHOWN_METRIC_NAME,OsSettingSearchBoxUserAction.CLICKED_OUT_OF_SEARCH_BOX,Object.keys(OsSettingSearchBoxUserAction).length)}this.shouldShowDropdown_=false},onSearchInputFocused_(){this.lastFocused_=null;if(this.searchResultsExist_){this.shouldShowDropdown_=true;return}this.fetchSearchResults_()},onSearchInputMousedown_(){if(!this.shouldShowDropdown_){const searchInput=this.$.search.getSearchInput();afterNextRender(this,(()=>searchInput.select()))}},isItemSelected_(item){return this.searchResults_.indexOf(item)===this.searchResults_.indexOf(this.selectedItem_)},getListLength_(){return this.searchResults_.length},getRowTabIndex_(item){return this.isItemSelected_(item)&&this.shouldShowDropdown_?0:-1},onSearchResultsChanged_(){if(this.searchResultsExist_){this.selectedItem_=this.searchResults_[0]}this.shouldShowDropdown_=this.$.search.isSearchFocused()&&!!this.getCurrentQuery_();if(!this.shouldShowDropdown_){return}if(!this.searchResultsExist_){this.fire("iron-announce",{text:this.i18n("searchNoResults")});return}},onSelectedItemChanged_(){if(!this.$.searchResultList.selectedItem&&this.lastSelectedItem_){this.$.searchResultList.selectItem(this.lastSelectedItem_)}this.lastSelectedItem_=this.$.searchResultList.selectedItem},selectRowViaKeys_(key){assert(key==="ArrowDown"||key==="ArrowUp","Only arrow keys.");assert(!!this.selectedItem_,"There should be a selected item already.");const selectedRowIndex=this.searchResults_.indexOf(this.selectedItem_);const numRows=this.searchResults_.length;const delta=key==="ArrowUp"?-1:1;const indexOfNewRow=(numRows+selectedRowIndex+delta)%numRows;this.selectedItem_=this.searchResults_[indexOfNewRow];if(this.lastFocused_){this.getSelectedOsSearchResultRow_().focus()}this.getSelectedOsSearchResultRow_().scrollIntoViewIfNeeded()},onKeyDown_(e){if(!this.searchResultsExist_||!this.$.search.isSearchFocused()&&!this.lastFocused_){return}if(e.key==="Enter"){this.getSelectedOsSearchResultRow_().navigateToSearchResultRoute();return}if(e.key==="ArrowUp"||e.key==="ArrowDown"){e.preventDefault();this.selectRowViaKeys_(e.key);return}},onSearchIconClicked_(){this.$.search.getSearchInput().select();if(this.getCurrentQuery_()){this.shouldShowDropdown_=true}}});// Copyright 2016 The Chromium Authors. All rights reserved.
Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-icons cr-hidden-style" scope="os-toolbar">:host {
  --cr-toolbar-search-field-background:
            var(--cros-toolbar-search-bg-color);
        --cr-toolbar-search-field-border-radius: 4px;
        --cr-toolbar-search-field-input-text-color:
            var(--cros-text-color-secondary);
        --cr-toolbar-search-field-input-icon-color: var(--google-grey-600);
        --cr-toolbar-search-field-input-bg-color:
            var(--cros-toolbar-bg-color);
         --cr-toolbar-search-field-prompt-color: var(--google-grey-600);
        align-items: center;
        background-color: var(--cros-toolbar-bg-color);
        color: var(--cros-text-color-secondary);
        display: flex;
        height: var(--cr-toolbar-height);
        padding-top: 8px;
}

:host(:not([narrow])) {
  --cr-toolbar-search-field-border-radius: 4px;
}

h1 {
  flex: 1;
        font-size: 123%;
        font-weight: 500;
        letter-spacing: .25px;
        line-height: normal;
        margin-inline-start: 8px;
        padding-inline-end: 12px;
}

#leftContent {
  position: relative;
        transition: opacity 100ms;
}

#leftSpacer {
  align-items: center;
        box-sizing: border-box;
        display: flex;
        
        padding-inline-start: 14px;
        width: var(--settings-menu-width);
}

:host([narrow]) #leftSpacer {
  width: 20px;
}

cr-icon-button {
  --cr-icon-button-fill-color: currentColor;
        --cr-icon-button-size: 32px;
        min-width: 32px;
}

#centeredContent {
  display: flex;
        flex: 1 1 0;
        justify-content: center;
}

#rightSpacer {
  padding-inline-end: 8px;
}

:host([narrow]) #centeredContent {
  position: absolute;
        width: 100%;
        
        z-index: -1;
}

:host([narrow]:not([showing-search_])) #centeredContent {
  justify-content: flex-end;
}

:host([has-overlay]) {
  transition: visibility var(--cr-toolbar-overlay-animation-duration);
        visibility: hidden;
}

:host([narrow][showing-search_]) #settingsTitle {
  display: none;
}

:host([showing-search_][is-search-box-cutoff_]) os-settings-search-box {
  --cr-toolbar-field-width: 80vw; 
        margin-inline-start: 48px;
}

:host([showing-search_][narrow]:not([is-search-box-cutoff_])) os-settings-search-box {
  --cr-toolbar-field-width: 680px;
}

:host(:not([narrow]):not([is-search-box-cutoff_])) os-settings-search-box {
  --cr-toolbar-field-width: 480px;
}

:host(:not([narrow])) #leftContent {
  flex: 1 1 0;
}

:host(:not([narrow])) #centeredContent {
  flex-basis: var(--settings-main-basis);
}

:host([narrow][showing-search_]) #rightContent {
  display: none;
}

:host(:not([narrow])) #rightContent {
  flex: 1 1 0;
        text-align: end;
}

</style>
    <iron-media-query query="(max-width: 780px)" query-matches="{{isSearchBoxCutoff_}}">
    </iron-media-query>
    <div id="leftContent">
      <div id="leftSpacer">
        <template is="dom-if" if="[[showMenu]]">
          <cr-icon-button id="menuButton" class="no-overlap" iron-icon="cr20:menu" on-click="onMenuTap_" aria-label="Main menu" title="Main menu">
          </cr-icon-button>
        </template>
        <h1 id="settingsTitle">Settings</h1>
      </div>
    </div>

    <div id="centeredContent" hidden$="[[!showSearch]]">
      <template is="dom-if" if="[[!newOsSettingsSearch_]]">
        <cr-toolbar-search-field id="search" narrow="[[narrow]]" label="Search settings" clear-label="Clear search" spinner-active="[[spinnerActive]]" showing-search="{{showingSearch_}}">
        </cr-toolbar-search-field>
      </template>
      <template is="dom-if" if="[[newOsSettingsSearch_]]">
        <os-settings-search-box id="searchBox" narrow="[[narrow]]" showing-search="{{showingSearch_}}">
        </os-settings-search-box>
      </template>
    </div>

    <div id="rightContent">
      <div id="rightSpacer">
        <slot></slot>
      </div>
    </div>
<!--_html_template_end_-->`,is:"os-toolbar",properties:{spinnerActive:Boolean,showMenu:{type:Boolean,value:false},showSearch:{type:Boolean,value:true},narrow:{type:Boolean,value:false,reflectToAttribute:true},isSearchBoxCutoff_:{type:Boolean,reflectToAttribute:true},showingSearch_:{type:Boolean,reflectToAttribute:true},newOsSettingsSearch_:{type:Boolean,value(){return loadTimeData$1.getBoolean("newOsSettingsSearch")},readOnly:true}},getSearchField(){if(this.newOsSettingsSearch_){return this.shadowRoot.querySelector("os-settings-search-box").$$("cr-toolbar-search-field")}return this.$$("cr-toolbar-search-field")},onMenuTap_(){this.fire("os-toolbar-menu-tap")}});
/* Copyright 2020 The Chromium Authors. All rights reserved.
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file. */class PrefToSettingMetricConverter{convertPrefToSettingMetric(prefKey,prefValue){switch(prefKey){case"settings.language.send_function_keys":return{setting:chromeos.settings.mojom.Setting.kKeyboardFunctionKeys,value:{boolValue:prefValue}};case"settings.touchpad.sensitivity2":console.log(prefValue);return{setting:chromeos.settings.mojom.Setting.kTouchpadSpeed,value:{intValue:prefValue}};case"cros.device.peripheral_data_access_enabled":return{setting:chromeos.settings.mojom.Setting.kPeripheralDataAccessProtection,value:{boolValue:prefValue}};default:return null}}}// Copyright 2019 The Chromium Authors. All rights reserved.
let defaultResourceLoaded=true;assert(!window.settings||!defaultResourceLoaded,"settings_ui.js run twice. You probably have an invalid import.");Polymer({_template:html`<!--css-build:shadow--><!--_html_template_start_--><style include="cr-page-host-style settings-shared" scope="os-settings-ui">:host {
  display: flex;
        flex-direction: column;
        height: 100%;
        --settings-menu-width: 250px;
        
        --settings-main-basis: calc(var(--cr-centered-card-max-width) /
            var(--cr-centered-card-width-percentage));
}

os-toolbar {
  min-height: 56px;
        
        z-index: 3;
}

cr-drawer {
  --cr-separator-line: none;
        --cr-drawer-header-color: var(--cros-text-color-secondary);
        --cr-drawer-header-font-weight: 500;
        --cr-drawer-header-padding: 20px;
}

#cr-container-shadow-top {
  z-index: 2;
}

#container {
  align-items: flex-start;
        display: flex;
        flex: 1;
        overflow: overlay;
        position: relative;
}

#left, #main, #right {
  flex: 1 1 0;
}

#left {
  height: 100%;
        position: sticky;
        top: 0;
}

#left os-settings-menu {
  max-height: 100%;
        overflow: auto;
        overscroll-behavior: contain;
        width: var(--settings-menu-width);
}

#main {
  flex-basis: var(--settings-main-basis);
}

@media (max-width: 980px) {
#left, #right {
  display: none;
}

#main {
  min-width: auto;
          
          padding: 0 3px;
}

}

</style>
    <settings-prefs id="prefs" prefs="{{prefs}}"></settings-prefs>
    <iron-media-query query="(max-width: [[narrowThreshold_]]px)" query-matches="{{isNarrow}}">
    </iron-media-query>
    <template is="dom-if" if="[[showToolbar_]]">
      <os-toolbar on-os-toolbar-menu-tap="onMenuButtonTap_" spinner-active="[[toolbarSpinnerActive_]]" on-search-changed="onSearchChanged_" role="banner" narrow="[[isNarrow]]" narrow-threshold="980" show-menu="[[isNarrow]]">
      </os-toolbar>
    </template>
    <template is="dom-if" if="[[showNavMenu_]]">
      <cr-drawer id="drawer" on-close="onMenuClose_" heading="Settings" align="ltr" icon-name="cr20:menu" icon-title="Close">
        <div class="drawer-content">
          <template is="dom-if" id="drawerTemplate">
            <os-settings-menu show-apps="[[showApps_]]" show-crostini="[[showCrostini_]]" show-plugin-vm="[[showPluginVm_]]" show-reset="[[showReset_]]" show-startup="[[showStartup_]]" have-play-store-app="[[havePlayStoreApp_]]" on-iron-activate="onIronActivate_" advanced-opened="{{advancedOpenedInMenu_}}" show-kerberos-section="[[showKerberosSection_]]">
            </os-settings-menu>
          </template>
        </div>
      </cr-drawer>
    </template>
    <div id="container" class="no-outline">
      <div id="left">
        <template is="dom-if" if="[[showNavMenu_]]">
          <os-settings-menu page-visibility="[[pageVisibility_]]" show-crostini="[[showCrostini_]]" show-reset="[[showReset_]]" show-startup="[[showStartup_]]" have-play-store-app="[[havePlayStoreApp_]]" on-iron-activate="onIronActivate_" advanced-opened="{{advancedOpenedInMenu_}}" show-kerberos-section="[[showKerberosSection_]]">
          </os-settings-menu>
        </template>
      </div>
      <os-settings-main id="main" prefs="{{prefs}}" toolbar-spinner-active="{{toolbarSpinnerActive_}}" page-visibility="[[pageVisibility_]]" show-android-apps="[[showAndroidApps_]]" show-crostini="[[showCrostini_]]" show-plugin-vm="[[showPluginVm_]]" show-reset="[[showReset_]]" show-startup="[[showStartup_]]" have-play-store-app="[[havePlayStoreApp_]]" advanced-toggle-expanded="{{advancedOpenedInMain_}}" show-kerberos-section="[[showKerberosSection_]]">
      </os-settings-main>
      <!-- An additional child of the flex #container to take up space,
           aligned with the right-hand child of the flex toolbar. -->
      <div id="right"></div>
    </div>
<!--_html_template_end_-->`,is:"os-settings-ui",behaviors:[CrContainerShadowBehavior,FindShortcutBehavior,RouteObserverBehavior],properties:{prefs:Object,advancedOpenedInMain_:{type:Boolean,value:false,notify:true,observer:"onAdvancedOpenedInMainChanged_"},advancedOpenedInMenu_:{type:Boolean,value:false,notify:true,observer:"onAdvancedOpenedInMenuChanged_"},toolbarSpinnerActive_:{type:Boolean,value:false},isNarrow:{type:Boolean,value:false,readonly:true,notify:true,observer:"onNarrowChanged_"},pageVisibility_:{type:Object,value:osPageVisibility},havePlayStoreApp_:Boolean,showAndroidApps_:Boolean,showCrostini_:Boolean,showToolbar_:Boolean,showNavMenu_:Boolean,showPluginVm_:Boolean,showReset_:Boolean,showStartup_:Boolean,showKerberosSection_:Boolean,lastSearchQuery_:{type:String,value:""},narrowThreshold_:{type:Number,value:980}},listeners:{"refresh-pref":"onRefreshPref_","user-action-setting-change":"onSettingChange_"},activeRoute_:null,prefToSettingMetricConverter_:null,created(){Router.getInstance().initializeRouteFromUrl();this.prefToSettingMetricConverter_=new PrefToSettingMetricConverter},ready(){window.CrPolicyStrings={controlledSettingExtension:loadTimeData$1.getString("controlledSettingExtension"),controlledSettingExtensionWithoutName:loadTimeData$1.getString("controlledSettingExtensionWithoutName"),controlledSettingPolicy:loadTimeData$1.getString("controlledSettingPolicy"),controlledSettingRecommendedMatches:loadTimeData$1.getString("controlledSettingRecommendedMatches"),controlledSettingRecommendedDiffers:loadTimeData$1.getString("controlledSettingRecommendedDiffers"),controlledSettingShared:loadTimeData$1.getString("controlledSettingShared"),controlledSettingWithOwner:loadTimeData$1.getString("controlledSettingWithOwner"),controlledSettingNoOwner:loadTimeData$1.getString("controlledSettingNoOwner"),controlledSettingParent:loadTimeData$1.getString("controlledSettingParent"),controlledSettingChildRestriction:loadTimeData$1.getString("controlledSettingChildRestriction")};this.havePlayStoreApp_=loadTimeData$1.getBoolean("havePlayStoreApp");this.showAndroidApps_=loadTimeData$1.getBoolean("androidAppsVisible");this.showCrostini_=loadTimeData$1.getBoolean("showCrostini");this.showPluginVm_=loadTimeData$1.getBoolean("showPluginVm");this.showNavMenu_=!loadTimeData$1.getBoolean("isKioskModeActive");this.showToolbar_=!loadTimeData$1.getBoolean("isKioskModeActive");this.showReset_=loadTimeData$1.getBoolean("allowPowerwash");this.showStartup_=loadTimeData$1.getBoolean("showStartup");this.showKerberosSection_=loadTimeData$1.valueExists("isKerberosEnabled")&&loadTimeData$1.getBoolean("isKerberosEnabled")&&loadTimeData$1.valueExists("isKerberosSettingsSectionEnabled")&&loadTimeData$1.getBoolean("isKerberosSettingsSectionEnabled");this.addEventListener("show-container",(()=>{this.$.container.style.visibility="visible"}));this.addEventListener("hide-container",(()=>{this.$.container.style.visibility="hidden"}));if(!this.showNavMenu_){return}this.async((()=>{const drawer=this.$$("#drawer");assert(drawer);listenOnce(drawer,"cr-drawer-opening",(()=>{this.$$("#drawerTemplate").if=true}));window.addEventListener("popstate",(e=>{drawer.cancel()}))}))},attached(){document.documentElement.classList.remove("loading");setTimeout((function(){chrome.send("metricsHandler:recordTime",["Settings.TimeUntilInteractive",window.performance.now()])}));document.fonts.load("bold 12px Roboto");setGlobalScrollTarget(this.$.container);const scrollToTop=top=>new Promise((resolve=>{if(this.$.container.scrollTop===top){resolve();return}this.$.container.scrollTo({top:top,behavior:"auto"});const onScroll=()=>{this.debounce("scrollEnd",(()=>{this.$.container.removeEventListener("scroll",onScroll);resolve()}),75)};this.$.container.addEventListener("scroll",onScroll)}));this.addEventListener("scroll-to-top",(e=>{scrollToTop(e.detail.top).then(e.detail.callback)}));this.addEventListener("scroll-to-bottom",(e=>{scrollToTop(e.detail.bottom-this.$.container.clientHeight).then(e.detail.callback)}));if(document.hasFocus()){recordPageFocus()}window.addEventListener("focus",recordPageFocus);window.addEventListener("blur",recordPageBlur);window.addEventListener("click",recordClick,true)},detached(){window.removeEventListener("focus",recordPageFocus);window.removeEventListener("blur",recordPageBlur);window.removeEventListener("click",recordClick);Router.getInstance().resetRouteForTesting()},currentRouteChanged(newRoute,oldRoute){if(oldRoute&&newRoute!==oldRoute){recordNavigation()}if(newRoute.depth<=1){this.enableShadowBehavior(true)}else{this.enableShadowBehavior(false);this.showDropShadows()}if(loadTimeData$1.getBoolean("newOsSettingsSearch")){return}const urlSearchQuery=Router.getInstance().getQueryParameters().get("search")||"";if(urlSearchQuery===this.lastSearchQuery_){return}this.lastSearchQuery_=urlSearchQuery;if(!this.showToolbar_){return}const toolbar=this.$$("os-toolbar");const searchField=toolbar.getSearchField();if(!searchField){return}if(urlSearchQuery!==searchField.getValue()){searchField.setValue(urlSearchQuery,true)}recordSearch();this.$.main.searchContents(urlSearchQuery)},handleFindShortcut(modalContextOpen){if(modalContextOpen||!this.showToolbar_){return false}this.$$("os-toolbar").getSearchField().showAndFocus();this.$$("os-toolbar").getSearchField().getSearchInput().select();return true},searchInputHasFocus(){if(!this.showToolbar_){return}return this.$$("os-toolbar").getSearchField().isSearchFocused()},onRefreshPref_(e){return this.$.prefs.refresh(e.detail)},onSettingChange_(e){const{prefKey:prefKey,prefValue:prefValue}=e.detail;const settingMetric=this.prefToSettingMetricConverter_.convertPrefToSettingMetric(prefKey,prefValue);if(!settingMetric){recordSettingChange();return}const setting=settingMetric.setting;const value=settingMetric.value;recordSettingChange(setting,value)},onSearchChanged_(e){if(loadTimeData$1.getBoolean("newOsSettingsSearch")){return}const query=e.detail;Router.getInstance().navigateTo(routes.BASIC,query.length>0?new URLSearchParams("search="+encodeURIComponent(query)):undefined,true)},onIronActivate_(e){assert(this.showNavMenu_);const section=e.detail.selected;const path=new URL(section).pathname;const route=Router.getInstance().getRouteForPath(path);assert(route,"os-settings-menu has an entry with an invalid route.");this.activeRoute_=route;if(this.isNarrow){this.$$("#drawer").close();return}this.navigateToActiveRoute_()},onMenuButtonTap_(){if(!this.showNavMenu_){return}this.$$("#drawer").toggle()},navigateToActiveRoute_(){if(this.activeRoute_){Router.getInstance().navigateTo(this.activeRoute_,null,true);this.activeRoute_=null}},onMenuClose_(){if(!this.$$("#drawer").wasCanceled()){this.navigateToActiveRoute_();return}this.$.container.setAttribute("tabindex","-1");this.$.container.focus();listenOnce(this.$.container,["blur","pointerdown"],(()=>{this.$.container.removeAttribute("tabindex")}))},onAdvancedOpenedInMainChanged_(){if(this.advancedOpenedInMain_){this.advancedOpenedInMenu_=true}},onAdvancedOpenedInMenuChanged_(){if(this.advancedOpenedInMenu_){this.advancedOpenedInMain_=true}},onNarrowChanged_(){if(this.showNavMenu_&&this.$$("#drawer").open&&!this.isNarrow){this.$$("#drawer").close()}}});// Copyright 2016 The Chromium Authors. All rights reserved.
let pageVisibility;if(loadTimeData$1.getBoolean("isGuest")){pageVisibility={autofill:false,people:false,onStartup:false,reset:false,safetyCheck:false,appearance:{setTheme:false,homeButton:false,bookmarksBar:false,pageZoom:false},advancedSettings:true,privacy:{searchPrediction:false,networkPrediction:false},downloads:true,a11y:true,extensions:false,languages:true}}else{pageVisibility={autofill:true,people:true,onStartup:true,reset:true,safetyCheck:true,appearance:{setTheme:true,homeButton:true,bookmarksBar:true,pageZoom:true},advancedSettings:true,privacy:{searchPrediction:true,networkPrediction:true},downloads:true,a11y:true,extensions:true,languages:true}}export{Account,AccountManagerBrowserProxy,AccountManagerBrowserProxyImpl,AmbientModeBrowserProxyImpl,AmbientModeTemperatureUnit,AmbientModeTopicSource,AndroidAppsBrowserProxyImpl,AppManagementStore,AppState,ArcPermissionType,Bool,BrowserProxy,ChangePictureBrowserProxy,ChangePictureBrowserProxyImpl,ConsentStatus,DeviceNameBrowserProxy,DeviceNameBrowserProxyImpl,DspHotwordState,FakePageHandler,FingerprintLocation,FingerprintSetupStep,GoogleAssistantBrowserProxyImpl,InternetPageBrowserProxy,InternetPageBrowserProxyImpl,KerberosAccountsBrowserProxyImpl,KerberosConfigErrorCode,KerberosErrorType,MultiDeviceBrowserProxy,MultiDeviceBrowserProxyImpl,MultiDeviceFeature,MultiDeviceFeatureState,MultiDevicePageContentData,MultiDeviceSettingsMode,NearbyAccountManagerBrowserProxy,NearbyAccountManagerBrowserProxyImpl,NearbySettings,NearbyShareDataUsage,NearbyShareSettingsBehavior,NotificationAccessSetupOperationStatus,OsSyncBrowserProxyImpl,PageStatus,PageType,ParentalControlsBrowserProxy,ParentalControlsBrowserProxyImpl,PermissionValueType,PhoneHubNotificationAccessStatus,PluginVmBrowserProxyImpl,PluginVmPermissionType,ProfileInfoBrowserProxy,ProfileInfoBrowserProxyImpl,PwaPermissionType,SearchEngine,SearchEnginesBrowserProxy,SearchEnginesBrowserProxyImpl,SearchEnginesInfo,SearchRequest,SearchResult,ShellClient,SmartLockSignInEnabledState,StatusAction,StoredAccount,SyncBrowserProxy,SyncBrowserProxyImpl,SyncStatus,TriState,WallpaperBrowserProxyImpl,addApp,bluetoothApis,changeApp,convertOptionalBoolToBool,createEmptyState,createInitialState,createPermission,dataUsageStringToEnum,getContactManager,getNearbyShareSettings,getPermissionValueBool,getReceiveManager,getSearchHandler,getSearchManager,observeContactManager,observeNearbyShareSettings,observeReceiveManager,pageVisibility,reduceAction,removeApp,setContactManagerForTesting,setNearbyShareSettingsForTesting,setReceiveManagerForTesting,setSearchHandlerForTesting,setSearchManagerForTesting,updateSelectedAppId};
